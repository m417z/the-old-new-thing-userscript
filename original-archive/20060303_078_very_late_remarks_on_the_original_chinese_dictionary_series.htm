<html>
<head>
<title>Very late remarks on the original Chinese dictionary series</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Very late remarks on the original Chinese dictionary series</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 3, 2006 / year-entry #79</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060303-13/?p=32073</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">I have not forgotten about the Chinese/English dictionary series, but I simply haven't had the motivation to sit down and write up descriptions and discussion for the code that I wrote along the way, so instead of adding to the program, I'm going to answer some questions that were asked back when I started the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>I have not forgotten about the Chinese/English dictionary series, but I simply haven't had the motivation to sit down and write up descriptions and discussion for the code that I wrote along the way, so instead of adding to the program, I'm going to answer some questions that were asked back when I started the series but which I didn't respond to at the time since I was out of town.</p>
<p> More than one commenter <a href="http://blogs.msdn.com/oldnewthing/archive/2005/05/16/417865.aspx#418302"> suggested using <code>v.reserve()</code> to pre-allocate the vector memory</a>. First of all, the cost of vector reallocation really didn't factor into the performance after the first few rounds of optimization, so adding a reservation step ended up being unnecessary. Furthermore, getting the correct value to pass to <code>v.reserve()</code> would mean making two passes over the dictionary, one to get the number of entries in the dictionary and set the vector reservation size, and another to fill the dictionary itself. The alternative would have been to make a guess as to the number of entries in the dictionary based on the total file size and the average length of each entry. Fortunately, it never came to that. </p>
<p> Another commenter <a href="http://blogs.msdn.com/oldnewthing/archive/2005/05/16/417865.aspx#418606"> suggested preprocessing the file</a>. That is also a valid technique, but I intentionally avoided it partly for expository purposes (it would have removed much of the challenge), and partly because I wanted to be able to update the dictionary by merely replacing the <code>dict.b5</code> file. </p>
<p> Commenter CornedBee <a href="http://blogs.msdn.com/oldnewthing/archive/2005/05/18/419130.aspx#419199"> suggested using the wcsrchr function as an alternative to the missing std::rfind method</a>. Note, however, that the <code>DirctionaryEntry::Parse</code> method takes a string in the form of a start and end; it is not a null-terminated string. Passing this to <code>wcsrchr</code> would have resulted in quite undesirable behavior. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-351533">
				<div id="div-comment-351533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spaces.msn.com/cornbreadshome/' rel='external nofollow' class='url'>Andy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060303-13/?p=32073#comment-351533">
			March 3, 2006 at 11:53 am</a>		</div>

		<p>So far this has been one of my all time favorites of your post themes. I eargly await every installment in this series.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-351553">
				<div id="div-comment-351553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frank</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060303-13/?p=32073#comment-351553">
			March 3, 2006 at 1:10 pm</a>		</div>

		<p>Andy: I second that.</p>
<p>The series was interesting to me in three ways: it had to deal with character encodings that I have somehow mercifully managed to avoid in my work, dealt with performance optimizations, and it dealt with nice Win32 GUI tricks to create serve the user better.</p>
<p>I would love to see more!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-351573">
				<div id="div-comment-351573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060303-13/?p=32073#comment-351573">
			March 3, 2006 at 5:30 pm</a>		</div>

		<p>You can still preprocess the file and make the upgrade seamless: all you have to do is come up with a new extesion, say .b5-chewed and process the .b5 file into .b5-chewed every time it&#8217;s newer than the .b5-chewed file.</p>
<p>Of course, this will increase startup time once in a while. You can make that a win by telling the user that you noticed the new file and are chewing on it. After all, they just stuck the new file in there, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-351583">
				<div id="div-comment-351583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060303-13/?p=32073#comment-351583">
			March 3, 2006 at 5:40 pm</a>		</div>

		<p>This assumes of course that you have write permission into the directory that contains the raw data. If the administrator updates the b5 file, the user won&#8217;t be able to save out the &quot;chewed&quot; file.</p>
<p>(If you respond that the chewed file should go into a separate directory, then you have the problem of what to do when there are multiple b5 files in the system.)</p>
<p>But the real reason was simply that I didn&#8217;t want to create another file and have to manage it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-351673">
				<div id="div-comment-351673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060303-13/?p=32073#comment-351673">
			March 6, 2006 at 12:11 am</a>		</div>

		<p>&quot;Commenter CornedBee suggested using the wcsrchr function as an alternative to the missing std::rfind method.&quot;</p>
<p>But, like Anders Dalvander pointed out, you don&#8217;t need std::rfind &#8212; just use a std::find and std::reverse_iterator combo.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

