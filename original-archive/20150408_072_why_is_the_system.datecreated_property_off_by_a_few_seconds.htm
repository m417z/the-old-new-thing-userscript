<html>
<head>
<title>Why is the System.DateCreated property off by a few seconds?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is the System.DateCreated property off by a few seconds?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 8, 2015 / year-entry #73</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>38</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you ask for the System.Date­Created property of a shell item, the timestamp that comes back is up to two seconds different from the file's actual timestamp. (Similarly for System.Date­Modified and System.Date­Accessed.) Why is that? This is an artifact of a decision taken in 1993. In general, shell namespace providers cache information in the ID...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>If you ask for the <code>System.<wbr>Date&shy;Created</wbr></code> property of a shell item, the timestamp that comes back is up to two seconds different from the file's actual timestamp. (Similarly for <code>System.<wbr>Date&shy;Modified</wbr></code> and <code>System.<wbr>Date&shy;Accessed</wbr></code>.) Why is that?</p>
<p> This is an artifact of a decision taken in 1993. </p>
<p> In general, shell namespace providers cache information in the ID list at the time the ID list is created so that querying basic properties from an item can be done without accessing the underlying medium. </p>
<p> In 1993, <a href="http://blogs.msdn.com/oldnewthing/archive/2003/10/10/55256.aspx"> saving 4KB of memory had a measurable impact on system performance</a>. Therefore, bytes were scrimped and saved, and one place where <i>four whole bytes</i> were squeezed out was in the encoding of file timestamps in ID lists. Instead of using the 8-byte <code>FILE&shy;TIME</code> structure, the shell used the <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms724247(v=vs.85).aspx"> 4-byte DOS date-time format</a>. Since the shell created thousands of ID lists, a four-byte savings multiplied over thousands of items comes out to several <a href="http://blogs.msdn.com/b/oldnewthing/archive/2009/06/11/9725386.aspx"> kilobytes</a> of data. </p>
<p> But one of the limitations of the DOS date-time format is that it records time in two-second increments, so any timestamp recorded in DOS date-time format can be up to two seconds away from its actual value. (The value is always truncated rather than rounded in order to avoid problems with timestamps from the future.) Since Windows&nbsp;95 used FAT as its native file system, and FAT uses the DOS date-time format, this rounding never created any problems in practice, since all the file timestamps were already pre-truncated to 2-second intervals. </p>
<p> Of course, Windows&nbsp;NT uses NTFS as the native file system, and NTFS records file times to 100-nanosecond <a href="http://blogs.msdn.com/b/oldnewthing/archive/2005/09/02/459952.aspx"> precision</a>. (Though the accuracy is significantly less.) But too late. The ID list format has already been decided, and since ID lists can be saved to a file and transported to another computer (<i>e.g.</i> in the form of a shortcut file), the binary format cannot be tampered with. Hooray for compatibility. </p>
<p> <b>Bonus chatter</b>: In theory, the ID list format could be extended in a backward-compatible way, so that every ID list contained two timestamps, a compatible version (2-second precision) and a new version (100-nanosecond precision). So far, there has not been significant demand for more accurate timestamps inside of ID lists. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (38)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-fjeldse even thread-even depth-1" id="comment-1183703">
				<div id="div-comment-1183703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183703">
			April 8, 2015 at 8:17 am</a>		</div>

		<p>You&#39;ll have revamp the date structure in a few years anyways when 2107 rolls around. By that time, people will probably be complaining about the headaches caused by porting their Win256 apps to Win512 and wishing for the good old days of Win128 programming!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183713">
				<div id="div-comment-1183713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andre</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183713">
			April 8, 2015 at 8:48 am</a>		</div>

		<p>&gt;wishing for the good old days of Win128 programming!</p>
<p>Win64 ought to be enough for anybody.</p>
<p>No, seriously.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1183733">
				<div id="div-comment-1183733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183733">
			April 8, 2015 at 10:40 am</a>		</div>

		<p>&quot;the binary format cannot be tampered with&quot; There are already multiple versions of the ID list format used by the default FS IShellFolder. IIRC there are even some undocumented ID list functions that stuff hidden data into the ID list.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183743">
				<div id="div-comment-1183743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183743">
			April 8, 2015 at 10:54 am</a>		</div>

		<p>@ Andre, read &quot;Inside the AS/400&quot; by Frank Soltis. &nbsp;You will understand why 128bit is very important.</p>
<p>@ Raymond, thanks for this. &nbsp;I enjoy reading about how we got from Point A to Point B.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1183763">
				<div id="div-comment-1183763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183763">
			April 8, 2015 at 12:55 pm</a>		</div>

		<p>Is there any documentation on the Shell&#39;s ID format for files? I&#39;ve always wondered ever since I first dumped a PIDL&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183773">
				<div id="div-comment-1183773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183773">
			April 8, 2015 at 1:13 pm</a>		</div>

		<p>In practice of course the precision, as Mr Chen hints, is illusory. Most computers synchronise clocks only weekly, and most computer clocks can easily drift by two seconds or more within a week.</p>
<p>There is no such thing as &quot;equality&quot; for time or any other Real quantity. There is only &quot;near enough&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183783">
				<div id="div-comment-1183783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183783">
			April 8, 2015 at 1:14 pm</a>		</div>

		<p>@12BitSlab haven&#39;t read that book, but that seems incredibly farfetched. There&#39;s just no reason even accounting for extra security for ASLR to need more than 2^64 bytes of addressable memory space in the foreseeable future.</p>
<p>Now having larger arithmetic units is something else, but there we&#39;re already far over 128bit anyhow and nobody uses that to address the bitness of systems.</p>
<p>What&#39;s the use case you see for 128 bit address space? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183793">
				<div id="div-comment-1183793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183793">
			April 8, 2015 at 1:40 pm</a>		</div>

		<p>@voo, More&#39;s law suggests an exponential expansion of computational power, whether measured by instructions per second or storage capacity &#8211; specifically a doubling every 18 months.</p>
<p>Since (if) that&#39;s true (and I think it is) one bit will have to be added on average every 18 months &#8211; or eight bits per twelve years. That being the supposition, the journey from 64 bits to 128 might take at most 100 years or so (and much less, maybe a quarter, for high-performance systems) but we will eventually arrive.</p>
<p>And even then, some systems will still be running COBOL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183803">
				<div id="div-comment-1183803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deanna </cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183803">
			April 8, 2015 at 1:46 pm</a>		</div>

		<p>I&#39;ve clearly been reading this blog too long. As soon as you said &quot;two seconds&quot; I knew what the issue is! </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183813">
				<div id="div-comment-1183813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183813">
			April 8, 2015 at 1:46 pm</a>		</div>

		<p>@ voo,</p>
<p>The AS/400 was the successor of the S/38. &nbsp;It uses a concept of single level store. &nbsp;The OS views the world as a flat 128 bit memory space. &nbsp;It doesn&#39;t even know that disk drives are attached (except the WRKDSKSTS command). &nbsp;The hardware takes care of paging stuff to/from memory. &nbsp;A consequence of this is that there is no difference between a page fault for code and a page fault for data. &nbsp;They are, in fact, one in the same. &nbsp;There are no more records, files, etc. from an MI view (MI is roughly the equivalent of Assembler on a 400). &nbsp;There are only spaces. &nbsp;Cleanest architecture I have ever worked with in my career.</p>
<p>When the S/38 first shipped in 1981, it was at least 4-5 decades ahead of everything else &#8212; from an architectural view.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183833">
				<div id="div-comment-1183833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183833">
			April 8, 2015 at 2:52 pm</a>		</div>

		<p>@12BitSlab Interesting concept, but even then: The total space of the www in 2013 according to Wikipedia was 4*10^21 byte so around 2^70 byte. </p>
<p>And just like we can access files with 64 bit offsets on 32 bit machines, the sane skulls work here too, although I can certainly see the elegance in the basic approach. But even then I wager we should be fine for another decade or three ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1183823">
				<div id="div-comment-1183823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183823">
			April 8, 2015 at 2:03 pm</a>		</div>

		<p>In WinDbg with symbols for shell32 type SHELL32!IL*Hidden* and press tab =) and this is in addition to the various versions of the normal FS PIDLs that I believe exists. Too bad MS cannot even document the layout of the PIDL created by SHSimpleIDListFromPath because these are actually passed across component boundaries, including 3rd-party components&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari even thread-even depth-1" id="comment-1183843">
				<div id="div-comment-1183843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183843">
			April 8, 2015 at 10:36 pm</a>		</div>

		<p>Some people probably wouldn&#39;t be happy unless Windows&#39;s precision was Planck time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183853">
				<div id="div-comment-1183853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183853">
			April 9, 2015 at 12:42 am</a>		</div>

		<p>This post is (un?)surprisingly free of reactive snarky commments.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183863">
				<div id="div-comment-1183863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RRR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183863">
			April 9, 2015 at 1:17 am</a>		</div>

		<p>@Deanna: I thought I was having a deja-vu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183873">
				<div id="div-comment-1183873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183873">
			April 9, 2015 at 1:48 am</a>		</div>

		<p>@12BitSlab</p>
<p>There were excellent features in the AS/400 architecture. Sadly, almost all the programs I encountered were written in RPG. I need mind bleach now just to forget about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183883">
				<div id="div-comment-1183883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DaveL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183883">
			April 9, 2015 at 3:29 am</a>		</div>

		<p>&gt;So far, there has not been significant demand for more accurate timestamps inside of ID lists. </p>
<p>How much demand do you need, and how do we demand it? There&#39;s no easy way to get in touch with Windows development.</p>
<p>This design decision also gives rise to the annoyance that Explorer details view doesn&#39;t show timestamps before 1/1/1970 &#8211; and yes, such timestamps are used by people doing photo archival for example. However, MS don&#39;t seem to think that anyone has any such files based on the response to an outstanding bug (still) in the MFC framework that prevents an application loading a file with a timestamp earlier than 1/1/1970.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183893">
				<div id="div-comment-1183893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183893">
			April 9, 2015 at 3:54 am</a>		</div>

		<p>DaveL: a photo _file_ created, modified or accessed earlier than 1/1/1970?</p>
<p>Surely that&#39;s a total misuse of the file property in question; you&#39;d need something more custom than that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183903">
				<div id="div-comment-1183903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DaveL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183903">
			April 9, 2015 at 4:12 am</a>		</div>

		<p>@Boris. If the photo was shot in 1960, surely it&#39;s perfectly valid for someone to expect its created timestamp to say 1960? There are metadata properties for photo (and other media file types) timestamps, but if you investigate you&#39;ll find that most every mainstream application currently does it differently, so the file system timestamp is something that works (and it&#39;s what Explorer shows). Besides, if the file system supports the timestamp, the OS UI should show it correctly IMO). :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183913">
				<div id="div-comment-1183913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183913">
			April 9, 2015 at 4:16 am</a>		</div>

		<p>PS. I just rewrote &quot;Date taken&quot; an iPhone photo to 1954. I also customized the Explorer folder view to show this property in one of the columns. If there is a problem, it hasn&#39;t been stated clearly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183923">
				<div id="div-comment-1183923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183923">
			April 9, 2015 at 4:24 am</a>		</div>

		<p>PPS. I posted my second comment before I saw yours.</p>
<p>It&#39;s not valid because Explorer deals in files, and users understand the concept of a file. Explorer is obviously doing it correctly because it&#39;s using a custom property. So if there is a problem, it&#39;s in the applications that assume Date taken == File created. They should learn to work with special properties.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183943">
				<div id="div-comment-1183943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DaveL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183943">
			April 9, 2015 at 4:44 am</a>		</div>

		<p>@Boris. As to getting applications to work (consistently), yes, I agree they should, but if you investigate you&#39;ll find they agree to disagree about the best way to do media metadata :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183953">
				<div id="div-comment-1183953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183953">
			April 9, 2015 at 5:07 am</a>		</div>

		<p>@ Rob G</p>
<p>I agree with you re: RPG III. &nbsp;That stuff will rot your brain.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183983">
				<div id="div-comment-1183983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183983">
			April 9, 2015 at 7:34 am</a>		</div>

		<p>@DaveL: I switched my Photos folder to Details, right-clicked on column headers and checked &quot;Date taken&quot; from the right-click menu which appeared. The column appeared and now I can sort by it or whatever.</p>
<p>Do you have specific examples of which applications are causing problems? I&#39;ve never really tried scanning old photos, editing their properties and exchanging them between say, iOS, Mac OS X and Windows 7, but the date taken is part of EXIF metadata and the major vendors need to support reading and editing of such metadata. I can&#39;t be sure, of course, but I get the feeling you&#39;re not talking about current, standardized applications from major vendors (Apple, Microsoft, etc.), but perhaps something freeware or years out of date.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183993">
				<div id="div-comment-1183993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183993">
			April 9, 2015 at 7:50 am</a>		</div>

		<p>@Anon: According to Wikipedia, DecTape[0] supports file creation timestamps[1], so it&#39;s possible that someone somewhere has a &quot;hello world&quot; program in PDP-10 assembly language created in the mid-late &#39;60s, that they&#39;d like to transfer/restore to a more modern system with full fidelity.</p>
<p>How they achieve such a transfer is, of course, an exercise for the reader :-)</p>
<p>[0] <a rel="nofollow" target="_new" href="https://en.wikipedia.org/wiki/DECtape">en.wikipedia.org/&#8230;/DECtape</a></p>
<p>[1] <a rel="nofollow" target="_new" href="https://en.wikipedia.org/wiki/Comparison_of_file_systems#Metadata">en.wikipedia.org/&#8230;/Comparison_of_file_systems</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184003">
				<div id="div-comment-1184003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184003">
			April 9, 2015 at 8:06 am</a>		</div>

		<p>@Anon: Ohmygod. I just checked the &quot;supporting operating systems&quot; part of that Wikipedia comparison page, and just learned about AncientFS[0]</p>
<p>From the DecTape comments: &quot;The tap(1) command in ancient Unix (Editions First through Third) was used to save and restore selected portions of the file system hierarchy on DECtape. Even though the on-tape format was the same across these editions, you need to specify a Unix edition because the epoch changed. (The epoch was not 00:00 GMT Jan 1 1970 until Fourth Edition Unix.)&quot; That epoch fact is a neat bit of Unix trivia I didn&#39;t know before!</p>
<p>So, using Linux, one could legitimately conceivably try to copy a pre-1970 file from a Ver 1 Unix tape image, to an NTFS partition, while preserving the file-creation timestamp. If the filesystem supports it, I don&#39;t think it&#39;s unreasonable to expect the OS to display it!</p>
<p>[0] <a rel="nofollow" target="_new" href="http://osxbook.com/software/ancientfs/">osxbook.com/&#8230;/ancientfs</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184043">
				<div id="div-comment-1184043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184043">
			April 9, 2015 at 8:52 am</a>		</div>

		<p>&gt; There&#39;s just no reason even accounting for extra security for ASLR to need more than 2^64 bytes of addressable memory space in the foreseeable future.</p>
<p>That assumes conventional addressing and memory structures.</p>
<p>In the past, I have worked on the design of a system that needed 128-bit virtual addresses.</p>
<p>One reason you might need it, and I think this is the AS/400 case too, is that objects have unique addresses. Once an object is deleted, no future object will ever reuse that same virtual address.</p>
<p>(This does not apply to Win128 of course, it&#39;s the general case I am talking about)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184053">
				<div id="div-comment-1184053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184053">
			April 9, 2015 at 9:10 am</a>		</div>

		<p>&gt;Even OUTSIDE the Windows world, it is statistically a near-impossibility to have any file created prior to 1970, as only three filesystems existed then, </p>
<p>Maybe I&#39;m lacking context for your remark, but I&#39;ve stored files on four of those three file systems; here named by the OS:</p>
<p>George 3</p>
<p>Eldon 2</p>
<p>TOPS 10</p>
<p>E4 (CTL Modular One OS)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184073">
				<div id="div-comment-1184073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Quadko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184073">
			April 9, 2015 at 9:30 am</a>		</div>

		<p>&gt;What&#39;s the use case you see for 128 bit address space?</p>
<p>High resolution 3D printing. Just as program code still fits in small spaces but data &#8211; images and videos especially &#8211; require more memory (and more addressable memory), the higher the resolution of 3d printers, the more memory we&#39;ll need. I haven&#39;t done the math, but atomic scale printing of houses is just &quot;a few&quot; technical issues away from being a reality, I (optimistically) expect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183933">
				<div id="div-comment-1183933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DaveL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183933">
			April 9, 2015 at 4:41 am</a>		</div>

		<p>@Boris. &quot;Date Taken&quot; is a metadata property (System.Photo.DateTaken), and you&#39;re right, some views of Explorer do show that metadata property correctly, but the (widely used) details doesn&#39;t do that, and its view does not show file system dates prior to 1/1/1970. It&#39;s perfectly valid for *any* file on a Windows system to have any of its 3 timestamp values be a date prior to 1/1/1970.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184143">
				<div id="div-comment-1184143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184143">
			April 9, 2015 at 1:58 pm</a>		</div>

		<p>@Quadko: You&#39;re either completely overestimating the size of whatever image or video (3d, 5d, no matter) or underestimating how enormous 2^64 a number is. To give an example: You can store 1/64th of the total WWW in that memory space if wikipedia is to be believed (or the total WWW around 2010).</p>
<p>Now the reasons that 12bitslab and dave brought up are more realistic &#8211; I mean it&#39;s still not going to be a problem for the next few decades, but I could see us running into such limitations for large clusters at the end of this century.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183973">
				<div id="div-comment-1183973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1183973">
			April 9, 2015 at 7:07 am</a>		</div>

		<p>@DaveL</p>
<p>It isn&#39;t valid for any natively-supported Windows filesystem to display a *FILESYSTEM* date prior to 1/1/1970, because it is impossible for that file to have existed on the filesystem prior to 1970. There was no FAT until 1977, and FAT is the oldest natively-supported Windows filesystem.</p>
<p>*NON*-filesystem dates (such as &quot;When the picture was taken&quot;) have no relationship with filesystem dates.</p>
<p>Even OUTSIDE the Windows world, it is statistically a near-impossibility to have any file created prior to 1970, as only three filesystems existed then, none of which are actually supported today in any meaningful way.</p>
<p>(To be more pedantic, and someone else will have to verify, I believe Creation Time wasn&#39;t supported until the 90s, so it would be technically impossible to have a file with a Creation Date prior to 199X on a FAT* or NTFS filesystem.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184193">
				<div id="div-comment-1184193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184193">
			April 9, 2015 at 6:34 pm</a>		</div>

		<p>@voo: Memory-mapping the entire Internet.</p>
<p>(And if you say that&#39;s impossible, or a silly idea&#8230; consider that people probably said that about memory-mapped files back when they only had 16 address bits)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184203">
				<div id="div-comment-1184203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184203">
			April 9, 2015 at 6:38 pm</a>		</div>

		<p>@Quadko</p>
<p>You&#39;re talking about what more than 2^64 bytes of *memory* could be used for, not what more than 2^64 bytes of *address space* could be used for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184283">
				<div id="div-comment-1184283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184283">
			April 10, 2015 at 8:37 am</a>		</div>

		<p>@dave</p>
<p>I didn&#39;t know the CTL had a file system. It isn&#39;t generally listed. </p>
<p>Also, did it support file timestamps? (Context is that the file system must support a creation timestamp.)</p>
<p>@Karellen</p>
<p>When were Creation timestamps implemented in DECTape? &nbsp;I thought they were a feature of DECTape II.</p>
<p>v1 Unix sprang into existence in 1969; While it is conceivable that there are files stored from that year, I can&#39;t find evidence that it was in &#39;use&#39; until the 70s. I also don&#39;t see any documentation of the v1 FS capabilities.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184473">
				<div id="div-comment-1184473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Axel Rietschin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184473">
			April 10, 2015 at 4:02 pm</a>		</div>

		<p>The original &quot;decision&quot; was actually taken in 1973 by Gary Kildall, along with a few other things, like 8.3 :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184573">
				<div id="div-comment-1184573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184573">
			April 12, 2015 at 4:57 am</a>		</div>

		<p>Axel: CP/M didn&#39;t even have file sizes down to the byte. When it had timestamps, they were down to the minute. About the only thing the MS-DOS FAT filesystem format inherited from CP/M is the filename conventions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184613">
				<div id="div-comment-1184613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150408-00/?p=44283#comment-1184613">
			April 13, 2015 at 7:18 am</a>		</div>

		<p>@Anon &#8211; I was just going off the &quot;Metadata&quot; table on Wikipedia&#39;s &quot;Comparison of File Systems&quot; page (which I linked to) which has an unqualified &quot;Yes&quot; in the DECtape/Creation timestamps box. I&#39;d be happy[0] to be corrected if you (or anyone else) has a citation or personal recollection which asserts otherwise.</p>
<p>[0] But also disappointed, because then my &quot;moving a pre-1970 file from a DECtape image to an NTFS partition&quot; thought experiment would no longer be viable.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

