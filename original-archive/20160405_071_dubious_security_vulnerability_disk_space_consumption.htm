<html>
<head>
<title>Dubious security vulnerability: Disk space consumption</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Dubious security vulnerability: Disk space consumption</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 5, 2016 / year-entry #72</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You have permission to use all the disk space you can.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's dubious security vulnerability goes like this:
</p>
<blockquote CLASS="q"><p>
The $RECYCLE.BIN directory can be used to launch a denial of
service attack that is not detected by any
current anti-malware software.
An attacker can create a file in a user's Recycle Bin directory
and write to it,
making it larger than the configured Recycle Bin maximum size,
and eventually consume all the space on the hard drive,
rendering the drive unusable.
</p>
</blockquote>
<p>
Um, yeah, but so?
</p>
<p>
The default security on each user's Recycle Bin folder grants access
only to Administrators, System, and the owner of the Recycle Bin.
Therefore, if you are a regular user,
you cannot attack other users' Recycle Bins.
All you can do is attack yourself.
</p>
<p>
Why pick on the Recycle Bin directory?
You can "attack" the system in the exact same way by
creating a file in any directory you like, and writing to it
until you run out of disk quota.
And if your disk quota is unlimited,
then you can fill the hard drive.
</p>
<p>
In other words, a user who has permission to fill the hard drive
can attack the system by filling the hard drive.
If you don't like that,
then don't give the user permission to fill the hard drive!
</p>
<p>
<b>Bonus chatter</b>:
There would be an issue if creating files in the Recycle Bin
allowed you to circumvent security or exceed your quota,
but that doesn't appear to be what the reporter is concerned about.
Disk space occupied by the Recycle Bin is still charged against
your quota.
</p>
<p>
That reminds me back in my school days that one way to
deal with being over quota is to mail files to yourself.
The space occupied by your mailbox
(or as we called it your "virtual card reader")
had a separate quota from disk space,
so you could use both your mailbox and your regular disk space
(or as we called it, your "DASD")
to store files.
Of course, you didn't want to keep files in your mailbox for long,
because once that went over mail quota, messages would start
getting deleted automatically, oldest first.
But it would buy you some time until you could get things
under control.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-1232384">
				<div id="div-comment-1232384" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232384">
			April 5, 2016 at 8:48 am</a>		</div>

		<p>I remember a similar kind of thing, way back on a mainframe system, where users could create files and then attach user permissions to them.  The user permissions were in the form of arrays, one record per target user, which you attached to the files.</p>
<p>The space taken by the permission arrays (which was normally small) was not charged against the file owner.  You could encode any arbitrary data in the permission arrays, and therefore store lots of stuff without being charged (real money) for the space.  However, it would have been very unwieldy&#8230; A friend and I figured all of this out and decided it wasn&#8217;t worth the effort.  </p>
<p>We discussed this with the IT supervisors and they said &#8220;yes, we know that this is a theoretical way to bypass space quotas.  We are not worried&#8221;.  I don&#8217;t know that anyone ever exploited this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1 parent" id="comment-1232394">
				<div id="div-comment-1232394" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232394">
			April 5, 2016 at 9:48 am</a>		</div>

		<p>Does the vulnerability still exist when any unprivileged user can open a system file without FILE_SHARE_READ/FILE_SHARE_WRITE, and then legit system services will not be able to open the file (like an executable) for execute/read?</p>
<p>It would make more sense if exclusive mode was ignored if an used doesn&#8217;t have write privileges to a file.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-ranta even depth-2" id="comment-1232471">
				<div id="div-comment-1232471" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ranta' rel='external nofollow' class='url'>ranta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232471">
			April 6, 2016 at 6:39 am</a>		</div>

		<p>That was fixed in Windows 8 for Windows Store apps. They have to use CreateFile2, which fails if dwShareMode does not contain FILE_SHARE_READ and the security descriptor of the file does not grant FILE_GENERIC_WRITE access to the caller. FILE_DISALLOW_EXCLUSIVE activates this restriction in the kernel. That flag is not documented in NtCreateFile or ZwCreateFile, but it is in [MS-FSA].</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1232403">
				<div id="div-comment-1232403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232403">
			April 5, 2016 at 9:48 am</a>		</div>

		<p>I remember back at uni there was a time when there were no regular jobs running to clean the local tmp directory on each machine. We used it to install various games and with a pretty big probability the games would still be there the next time we came around. Then one day the admins decided to have a job clean the local tmp directories each night and the good times were over&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-odd thread-alt depth-1" id="comment-1232413">
				<div id="div-comment-1232413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232413">
			April 5, 2016 at 9:54 am</a>		</div>

		<p>Oh, and there was another old, but still unfixed memory quota-related vulnerability of serial.sys. An user could post unlimited number of increased size SET_QUEUE_SIZE IOCTLS behind a pending READ, without charging memory quota, thus exhausting the nonpaged pool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-even depth-1" id="comment-1232423">
				<div id="div-comment-1232423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232423">
			April 5, 2016 at 8:17 pm</a>		</div>

		<p>Will it still be a problem if the coparate IT policy requires the administrators to set &#8220;Users&#8221; to D drive and therefore the only places that the user should have write access ought to be temp\Desktop\Documents folders in D drive only?</p>
<p>I think those policies need to check for rules to disable &#8220;Recycle Bin&#8221; for C drive as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ietest even thread-odd thread-alt depth-1 parent" id="comment-1232433">
				<div id="div-comment-1232433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/crack+tracker' rel='external nofollow' class='url'>crack tracker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232433">
			April 5, 2016 at 10:47 pm</a>		</div>

		<p>Raymond&#8217;s usual dismissal of such type of &#8220;vulnerabilities&#8221; (which I used to agree with), is that if something is already running on a system with admin rights, it can do whatever it wants, so there&#8217;s no point focusing to recycle bin or any other particulars. However I recently came across evidence that &#8220;things&#8221; can penetrate your system through a back door and automatically elevated themselves to fully admin exploiting loopholes in windows e,g, see<br />
<a href="http://blog.cobaltstrike.com/2014/03/20/user-account-control-what-penetration-testers-should-know/" rel="nofollow">http://blog.cobaltstrike.com/2014/03/20/user-account-control-what-penetration-testers-should-know/</a><br />
so it isn&#8217;t always the users fault :)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-2 parent" id="comment-1232441">
				<div id="div-comment-1232441" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232441">
			April 5, 2016 at 10:58 pm</a>		</div>

		<p>&#8220;One important thing to know is that UAC is not a security boundary.&#8221;</p>
<p>Quote: <a href="https://blogs.msdn.microsoft.com/e7/2009/02/05/update-on-uac/" rel="nofollow">https://blogs.msdn.microsoft.com/e7/2009/02/05/update-on-uac/</a></p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fredericmagnyf even depth-3 parent" id="comment-1232443">
				<div id="div-comment-1232443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232443">
			April 6, 2016 at 4:15 am</a>		</div>

		<p>Wait, is &#8220;always notify&#8221; still safe, or are there elevation attacks that bypass even it?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1232453">
				<div id="div-comment-1232453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pally Sandher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232453">
			April 6, 2016 at 4:27 am</a>		</div>

		<p>Always notify is still safe and also that &#8216;blog&#8217; the OP linked is more than 2 years old. I&#8217;d test it&#8217;s claims are still relevant before you commence panicking.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-5" id="comment-1232551">
				<div id="div-comment-1232551" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232551">
			April 6, 2016 at 7:59 pm</a>		</div>

		<p>Even though the linked post is two years old, the actual issue is 6. It has also been known about, and even posted about, since the Windows 7 pre-release days. Every now and again someone rediscovers it, but I wouldn&#8217;t be surprised if it&#8217;s still in 10.<br />
So if UAC hasn&#8217;t changed in 6 years, then why haven&#8217;t we had much more abuse of UAC?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt depth-5" id="comment-1232573">
				<div id="div-comment-1232573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232573">
			April 6, 2016 at 11:47 pm</a>		</div>

		<p>It should still be relevent. Try search for &#8220;UAC task scheduler&#8221; to find out how many technical articles/blogs use/abuse it to work around UAC in different scenario without need to turn UAC off. &#8220;Fixing&#8221; that would be breaking change for those people.</p>
<p>IMO the only way to &#8220;fix&#8221; without breaking it would be to spawn elevation prompt whenever &#8220;run with highest privileges&#8221; is checked and the use if &#8220;administrative group&#8221; member, but that would require user to fill in all the task&#8217;s detail again, and still won&#8217;t fix the problem to add those tasks with &#8220;schtasks /rl highest&#8221; command (Command utilities could be run by scripts. If it&#8217;ll generate consent only on some combination of windows build number + switches, it&#8217;d be likely to break those scripts using it).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-p_christidis even depth-2" id="comment-1232463">
				<div id="div-comment-1232463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/__klg' rel='external nofollow' class='url'>__klg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232463">
			April 6, 2016 at 6:23 am</a>		</div>

		<p>Not sure what you mean. If they elevate to &#8220;themselves to fully admin&#8221; (which is what the whole hatchway point is about), then what are we discussing here?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip odd alt depth-2" id="comment-1232473">
				<div id="div-comment-1232473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232473">
			April 6, 2016 at 9:31 am</a>		</div>

		<p>Actually, that is a side effect of the process white listing, and is the user&#8217;s fault.<br />
The article itself does make reference to the fact that it only works on the default UAC settings, and if you set UAC to &#8220;Always notify&#8221;, which turns off process white listing, then this attack cannot work.<br />
In fact, if you look at the UAC settings themselves, there is the information tip that clearly mentions the recommended use case. For the default settings, it says &#8220;Recommended if you use familiar applications and visit familiar websites&#8221; where always notify states &#8220;Recommended if you routinely install new software and visit unfamiliar websites&#8221;.<br />
From those, it is easy enough to see that the default UAC settings are tailored to &#8220;everyday use&#8221;, where you just run applications that you normally run, and visit websites that you normally visit. If you start using Windows to run untrusted software or visit untrusted websites, then you just can&#8217;t keep the UAC settings at default. In fact, in those situations, I normally go one step further and have that instance of Windows installed in a VM so it is isolated and can&#8217;t touch the system.<br />
To be honest, these days, I wouldn&#8217;t be surprised if UAC could be switched to always notify and have very little impact.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1232481">
				<div id="div-comment-1232481" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Max</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232481">
			April 6, 2016 at 9:35 am</a>		</div>

		<p>If something can elevate itself to admin rights without admin permission or admin rights, then THAT is the security vulnerability, not whatever nefarious deed is done when admin rights are attained. Any vulnerability that starts with &#8220;first, an admin user needs to run this piece of code I have provided&#8221;, like the one you linked does, isn&#8217;t much of a vulnerability &#8211; that &#8220;bypass UAC&#8221; code doesn&#8217;t work unless it&#8217;s already on the other side of the airtight hatchway.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1232533">
				<div id="div-comment-1232533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">not important</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232533">
			April 6, 2016 at 2:05 pm</a>		</div>

		<p>Some of my college colleagues used newsgroups as an additional folder. They would post their PGP-encrypted files to Internet newsgroups. I am not sure if they did it for bragging rights, or because they really needed the additional hard disk space. Back in the day an external CDROM Writer would cost about $600, a writable CD $1; 1GB external SCSI drive would cost about $1,000.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1232633">
				<div id="div-comment-1232633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ancient_Hacker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1232633">
			April 7, 2016 at 7:55 am</a>		</div>

		<p>Long ago, back when my files were stored on washing-machine sized skinny things, some smart guy figured out you could attach any number of specific user permissions to a file.  So you could encode a file into A-Z0_9, the legal username characters, and hide it as permissions on some random file.   We sure had a lot of free time in those olden days!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1233063">
				<div id="div-comment-1233063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stan Thomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160405-00/?p=93263#comment-1233063">
			April 12, 2016 at 2:31 pm</a>		</div>

		<p>Direct Access Storage Device. Now there&#8217;s an acronym I haven&#8217;t heard for a while. Along with ABEND, EBCDIC and JCL.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

