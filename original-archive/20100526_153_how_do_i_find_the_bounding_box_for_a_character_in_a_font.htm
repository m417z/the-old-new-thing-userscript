<html>
<head>
<title>How do I find the bounding box for a character in a font?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I find the bounding box for a character in a font?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 26, 2010 / year-entry #154</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>16</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer had the following question: I'm looking for a way to get the height of text which consists entirely of digits, for example "123", as these characters do not have any descent or internal leading. I expected functions like Get­Text­Extent to return the character's ascent minus the internal leading, but in fact it returns...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had the following question:
</p>
<blockquote CLASS=q><p>
I'm looking for a way to get the height of text which consists
entirely of digits, for example <code>"123"</code>,
as these characters do not have any descent or internal leading.
I expected functions like
<a HREF="http://msdn.microsoft.com/en-us/library/dd144937(VS.85).aspx">
<code>Get&shy;Text&shy;Extent</code></a>
to return the character's ascent minus the internal leading, but
in fact it returns the ascent plus the descent plus the internal leading.
I considered getting the font metrics and taking the
<code>TEXT&shy;METRICS.tmAscent</code>, but I'm worried that
numbers in other languages might have a nonzero descent and internal
leading.
Is there a function I can call to return the "real" height of the
text?
</p>
</blockquote>
<p>
Well, first of all, this question makes an assumption about digits
that isn't even true in English.
Fonts developed in recent years
tend to keep all digits the same height (and often
the same width), but fonts
designed before the advent of computers
(or computer fonts which were inspired by old-timey fonts)
will often vary the height, and sometimes even have digits
with descenders.
Here's an example from the font Georgia:
</p>
<table CELLPADDING=0 CELLSPACING=0>
<tbody>
<tr STYLE="height: 1ex">
<td BGCOLOR=white COLSPAN=15 STYLE="width: 15ex"></td>
<td BGCOLOR=black COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=white STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=white COLSPAN=14 STYLE="width: 14ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=white COLSPAN=9 STYLE="width: 9ex"></td>
<td BGCOLOR=black COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=white STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=white STYLE="width: 1ex"></td>
<td BGCOLOR=black COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=white COLSPAN=3 STYLE="width: 3ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=5 STYLE="width: 5ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=2 STYLE="width: 2ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=6 STYLE="width: 6ex"></td>
<td BGCOLOR=black COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=white STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=2 STYLE="width: 2ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=5 STYLE="width: 5ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=2 STYLE="width: 2ex"></td>
<td BGCOLOR=black COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=white COLSPAN=2 STYLE="width: 2ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=6 STYLE="width: 6ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=white STYLE="width: 1ex"></td>
<td BGCOLOR=black COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=white COLSPAN=7 STYLE="width: 7ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=2 STYLE="width: 2ex"></td>
<td BGCOLOR=black COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=white STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: .75pt">
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=white COLSPAN=7 STYLE="width: 7ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=black STYLE="width: 1ex"></td>
<td BGCOLOR=white COLSPAN=7 STYLE="width: 7ex"></td>
</tr>
<tr STYLE="height: 1ex">
<td BGCOLOR=white COLSPAN=8 STYLE="width: 8ex"></td>
<td BGCOLOR=black COLSPAN=4 STYLE="width: 4ex"></td>
<td BGCOLOR=white COLSPAN=8 STYLE="width: 8ex"></td>
</tr>
</tbody>
</table>
<caption ALIGN=bottom><font FACE="Georgia">058</font></caption>
<p>
Observe that the number zero is six pixels tall, whereas
the number eight is nine pixels tall,
and the number five has a two-pixel descender!
</p>
<p>
Okay, so you're going to have to take the descent into account
for all languages, including English.
Internal leading is the space above a character to separate it
from elements above it.
For example, you need some space above a capital&nbsp;T so that
the horizontal bar remains readable.
Again, the assumption that English doesn't need internal leading
is false.
</p>
<p>
Okay, but what about the original question?
Well, when I heard this question, my first thoughts went back
to the early days of Win32 when the coolest new GDI feature
was paths, and everybody was showing off
<a HREF="http://msdn.microsoft.com/en-us/library/dd183441(VS.85).aspx">
the fancy text effects
you could pull off with the aid of paths</a>.
My initial instinct was therefore to use the
<a HREF="http://www.microsoft.com/mspress/books/sampchap/2344c.aspx">
same technique</a>
as those cool demos by combining
<code>Begin&shy;Path</code>,
<code>Text&shy;Out</code>,
and <code>End&shy;Path</code>.
Once I had a path, I could get its dimensions by using
<code>Path&shy;To&shy;Region</code> and <code>Get&shy;Rgn&shy;Box</code>.
</p>
<p>
Fortunately, it turns out that there's an easier way.
The
<a HREF="http://msdn.microsoft.com/en-us/library/dd144891(VS.85).aspx">
<code>Get&shy;Glyph&shy;Outline</code></a> function
returns the glyph metrics, which describe the bounding box of the
pixels of a character.
</p>
<pre>
// Create an identity matrix
static const MAT2 c_mat2Identity = {
    { 0, 1 }, /* eM11 = 1.0 */
    { 0, 0 }, /* eM12 = 0.0 */
    { 0, 0 }, /* eM21 = 0.0 */
    { 0, 1 }, /* eM22 = 1.0 */
 };
GetGlyphOutline(hdc, L'0', GGO_METRICS, &amp;gm, 0, NULL, &amp;c_mat2Identity);
</pre>
<p>
The dimensions of the character are returned in the
<code>GLYPH&shy;METRICS</code> structure, and in particular,
you can derive the bounding box from the
<code>gmptGlyph&shy;Origin</code>,
<code>gmBlack&shy;BoxX</code>, and
<code>gmBlack&shy;BoxY</code> members.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-835033">
				<div id="div-comment-835033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835033">
			May 26, 2010 at 9:33 am</a>		</div>

		<p>Before using techniques like these, first ask yourself if you really need it. For example, if the numbers are likely to change, the misuse of this method can lead to jumping baselines and other visual instabilities.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835043">
				<div id="div-comment-835043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835043">
			May 26, 2010 at 9:58 am</a>		</div>

		<p>I know you&#39;re not a .net expert, but is this what the .Net MeasureString function does? (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/system.drawing.graphics.measurestring.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/system.drawing.graphics.measurestring.aspx</a>)</p>
<p>I found it to be slightly wrong a lot of times, being either a few (3-10) pixels too narrow or too wide.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835073">
				<div id="div-comment-835073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gwyn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835073">
			May 26, 2010 at 2:24 pm</a>		</div>

		<p>Another possibility which I have used is DrawText specifying the DT_CALCRECT format.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835053">
				<div id="div-comment-835053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.rjcox.co.uk' rel='external nofollow' class='url'>Richard</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835053">
			May 26, 2010 at 10:25 am</a>		</div>

		<p>&quot;Text&quot; figures, while also know as &quot;old style&quot; (including in Word, which finally in 2010, supports Open Type selection of digit style) are *designed* for use mixed in with text and work better in blocks of text.</p>
<p>&quot;Lining&quot; (or &quot;Titling&quot;), with the same height, baseline and width are designed for titles or with lots of other numbers (e.g. a table).</p>
<p>Support is included in some modern fonts for instance the Office2007/Vista fonts Constantia, Corbel and Cambria all include both lining and text figure glyphs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835163">
				<div id="div-comment-835163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835163">
			May 26, 2010 at 10:47 pm</a>		</div>

		<p>Ah, this might come in handy at some point!</p>
<p>By the way, well done on the &#39;Leave a comment&#39;-at-the-bottom issue and all-replies-on-one-page issue Raymond. </p>
<p>In the &quot;Why doesn&#39;t the Windows Vista copy progress dialog show the names of the files being copied?&quot; post it looks like your replies don&#39;t have a yellow block around them anymore, is this intentional?</p>
<div class="post">[<i>The yellow block is back! Thanks for pointing it out. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835173">
				<div id="div-comment-835173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stubie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835173">
			May 27, 2010 at 12:48 am</a>		</div>

		<p>Here&#39;s a related question:</p>
<p>How can I find out how far (or if) text extends to the left (or right) of the text extent, or even the calculated rectangle (using DrawText() with DT_CALCRECT) with ClearType? For example, using a font like Tahoma, with a font height of -11, the numbers 4, 6, 8 and 9 extend a pixel to the left of the specified rectangle if using DrawText() with DT_NOCLIP. If I want to erase the text, and draw new text, I have to know that it previously had extended an extra pixel to the left, otherwise I&#39;ll leave behind traces of the previous text. Something like GetCharABCWidthsFloat() gives no indication that it&#39;ll extend a bit extra to the left.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-835223">
				<div id="div-comment-835223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835223">
			May 27, 2010 at 2:36 am</a>		</div>

		<p>@configurator: quite likely you&#39;re measuring with GDI+ and rendering with GDI. GDI is the older technology designed for best readability at the exact size given, which means that the relative character widths and spacing change when the graphics are scaled, while GDI+ text rendering is designed to scale more consistently for zoom and changed DPI.</p>
<p>Controls that simply wrap a Windows control such as, well, almost all of them including Label, Button, TextBox use GDI rendering &#8211; but System.Drawing.Graphics.DrawString uses GDI+. Your window will often look inconsistent if you have a mix. Use System.Windows.Forms.TextRenderer to measure and draw strings with GDI (added in .NET 2.0 for this exact reason).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835123">
				<div id="div-comment-835123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835123">
			May 26, 2010 at 8:45 pm</a>		</div>

		<p>Actually &#8211; lining figures merely all have the same height &#8211; the same-width thing is a separate distinction &#8211; &#39;tabular&#39; vs proportional. On my system a couple dozen fonts* have proportional lining figures as their default stle. Tabular text figures seem to be rare, but Cooper Black has them, and Papyrus seems to aim for them and miss [the digit 4 is 3.6% wider]</p>
<p>Lining/titling figures are meant to appear in headlines [where height uniformity is important &#8211; all letters will be in uppercase in such contexts, leading to the alternate name &quot;uppercase numerals&quot;, or more commonly &#39;lowercase&#39; for text figures], whereas tabular figures [whose widths match not only one another, but often also the currency symbols and plus/minus, and the &#39;figure space&#39; and &#39;figure dash&#39; characters] are meant to appear in tables.</p>
<p>*Falling mostly into the two categories of &quot;Display fonts&quot; [the clearest illustration of this principle is that Gill Sans MT Ext Condensed Bold has them whereas other Gill Sans varieties have tabular figures] and &quot;Handwriting imitation&quot; [though a surprising number of these had tabular figures] &#8211; Berlin Sans was the only example of a normal text font with proportional lining figures, though several (Most prominently Georgia and three of the C family) had proportional text figures.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835263">
				<div id="div-comment-835263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835263">
			May 27, 2010 at 5:12 am</a>		</div>

		<p>@Mike:</p>
<p>Thanks for that piece of info.. Now where do I store it so that next time I&#39;m using GDI to draw a string I can still find it.. (Damn my memory, it&#39;s so full of holes)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835393">
				<div id="div-comment-835393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835393">
			May 27, 2010 at 9:23 am</a>		</div>

		<p>Slightly (but not much) off-topic, I really, really don&#39;t like reading text where the numbers are all &quot;misaligned&quot; vertically. &nbsp;It looks like something is wrong! &nbsp;I know that things were done this way historically, but it just takes me out of the flow of reading to see numbers jumping up and down. &nbsp;(Of course, when letters do that, it doesn&#39;t bother me. &nbsp;Hmm&#8230;..)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835403">
				<div id="div-comment-835403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835403">
			May 27, 2010 at 9:26 am</a>		</div>

		<p>No mention of kerning pairs here, but that is letter-pair-specific (I don&#39;t mean two or three-letter glyphs, but true kerning pairs).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835413">
				<div id="div-comment-835413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabest</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835413">
			May 27, 2010 at 11:39 am</a>		</div>

		<p>Not just simple kerning, there are languages that change the shape of the characters depending on which two are paired up, arabic and other crazy middle-east/asian languages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835443">
				<div id="div-comment-835443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hans Passant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835443">
			May 27, 2010 at 5:28 pm</a>		</div>

		<p>So does True-Type hinting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835563">
				<div id="div-comment-835563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835563">
			May 28, 2010 at 12:50 pm</a>		</div>

		<p>@Stubie</p>
<p>I think SetBoundsRect/GetBoundsRect is what you are looking for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835543">
				<div id="div-comment-835543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mg.to/' rel='external nofollow' class='url'>Michael Geary</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-835543">
			May 28, 2010 at 12:25 pm</a>		</div>

		<p>Georgia is an interesting font. Not only do the digits have different heights, but they have different *widths* as well. Most other proportional computer fonts I&#39;ve seen have monospaced digits, and it&#39;s not uncommon for code that assumes digits are monospaced even in a proportional font.</p>
<p>As soon as someone selects Georgia, that assumption breaks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-836403">
				<div id="div-comment-836403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100526-00/?p=13913#comment-836403">
			June 1, 2010 at 1:24 pm</a>		</div>

		<p>This will work for digits, it is definitely a bad idea to use it for general text.</p>
<p>For complex scripts even the concept of &quot;bounding box for a character&quot; is broken, because characters might change shape based on context.</p>
<p>Heck, there are examples even in the Latin script. Take the &#39;fi&#39; ligature, (or fl, or ffi/ffl in some advanced fonts).</p>
<p>The width (and the height for some fonts) of &#39;fi&#39; is different than the one for &#39;if&#39;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

