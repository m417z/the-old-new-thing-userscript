<html>
<head>
<title>How can I prevent a WebView control from opening a browser window?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I prevent a WebView control from opening a browser window?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 2, 2019 / year-entry #1</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It will check with you first, but you have to be listening.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had an application that used a UWP
<a HREF="https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.webview">WebView</a>
control.
Some Web sites
open links in a new window by using techniques like
<code>TARGET=_blank</code>.
When the user clicks on such a link, it opens in a Web browser.
The customer wanted to know how to prevent this.
</p>
<p>
To do this, you can handle the
<a HREF="https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.webview.newwindowrequested">
New&shy;Window&shy;Requested</a> event.
You can mark the event as <code>Handled</code>,
in which case the system will consider the action complete
and will not send the request to the user's default Web browser.
</p>
</p>
<pre>
&lt;!-- XAML --&gt;
&lt;WebView NewWindowRequested="OnNewWindowRequested" /&gt;

// C# code-behind
void OnNewWindowRequested(WebView sender, WebViewNewWindowRequestedEventArgs e) 
{ 
    // Block all requests to open a new window
    e.Handled = true; 
} 
</pre>
<p>
You can inspect the <code>Referrer</code> and <code>Uri</code>
properties to learn more about what triggered the new window.
</p>
<ul>
<li><code>Referrer</code> is the page that wants to open the window.</li>
<li><code>Uri</code> is the page that it wants to open.</li>
</ul>
<p>
If your handler is a coroutine,
then you must set <code>Handled = true</code>
before performing any <code>await</code> operations,
because the handler returns to its caller
as soon as you perform an <code>await</code>,
and the rest of the handler runs as an asynchronous task.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20190102-00/?p=100615#respond" style="display:none;">Cancel reply</a></small></h3><p class="must-log-in">You must be <a href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">logged in</a> to post a comment.</p>	</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-aybe-one even thread-even depth-1 parent" id="comment-1374995">
				<div id="div-comment-1374995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aybe+One' rel='external nofollow' class='url'>Aybe One</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1374995">
			January 2, 2019 at 1:07 pm</a>		</div>

		<p>Holy cow, Visual Studio 2019 Preview is still using IE11 for &#8216;Web Browser&#8217; window !</p>
<p>@Raymond</p>
<p>I couldn&#8217;t post this comment from my Samsung Galaxy, when pressed, the &#8216;Post Comment&#8217; button does absolutely nothing (using the stock browser on the phone).</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-geelaw odd alt depth-2 parent" id="comment-1375025">
				<div id="div-comment-1375025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Gee+Law' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375025">
			January 2, 2019 at 4:34 pm</a>		</div>

		<p>IE11 is pretty much the only choice — the last time I saw EdgeHTML WebView for Win32 Desktop, it was still in a very early stage of preview. Of course an app could implement its own WebView, but that’s not worth it for VS. (It’s worth it for browsers.)</p>
<p>On Safari on iPhone, the Post Comment button doesn’t always work. Haven’t found out what the controlling factors are.</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-3" id="comment-1375035">
				<div id="div-comment-1375035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375035">
			January 2, 2019 at 5:14 pm</a>		</div>

		<p>Agreed.</p>
<p>Even if you&#8217;re not limiting it to UWP, although there are equivalent on Firefox(GeckoFX) and Chrome(CEF actually), you don&#8217;t actually want use it because often sites requires you to use maybe latest 3 versions of them, and their version number sky-rockets rapidly. This mean your application will have much shorter release cycle than you probably want if you need to host maybe embedded Google Map in it.</p>
<p>And given it&#8217;s UWP, you don&#8217;t want to require people to download and install extra browser package in order to use it (even if it&#8217;s do-able), and it probably won&#8217;t work on Win10S.</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com0003bffd91b6a76e odd alt thread-odd thread-alt depth-1" id="comment-1375005">
				<div id="div-comment-1375005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanYates+%5BMed+IT%5D' rel='external nofollow' class='url'>IanYates [Med IT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375005">
			January 2, 2019 at 2:23 pm</a>		</div>

		<p>The word coroutine caught me for a second. Not because I don&#8217;t know what it is (I do) but because it reminded me of the &#8220;kernel coloured glasses&#8221; comment often found in this blog (excellent term BTW)<br />
In this case, I&#8217;d have usually seen this referred to as an async void method, since coroutine is not often used in the c# world but would be quite at home, and the common term, in other languages / ecosystems.<br />
Just stood out, that&#8217;s all. I actually think coroutine is a pretty nice term for it.</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1375045">
				<div id="div-comment-1375045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375045">
			January 2, 2019 at 5:37 pm</a>		</div>

		<p>I&#8217;ve written a website scraping application (a WinForm one) about a year before, handled the NewWindowRequested event, set ScriptErrorsSuppressed to true, yet when allow it to run overnight over a web-archive + AJAX site, there&#8217;s about 3 to a dozen new browser window opened by it.</p>
<p>Not sure what is the reason, but I remember that if I waited that page to fully loaded (not just onload) then issue the next navigate command (and there&#8217;s one other fix that I can&#8217;t remember), no new window is opened this time.</p>
<p>Still can&#8217;t figure out what the problem is, but as long as it can run, it&#8217;s fine to me.</p>
<p>Btw, the biggest challenge we faced is string interning. After the whole night of web scraping, the memory consumption grows so high that, I decided to let it restart itself after job is done. Currently you cannot free the internal table for string interning unless you unload the application domain, but I really hope they CLR folks can create something like interning table version of GC.Collect() for cases like this, where you&#8217;re sure the table holded very long strings that you&#8217;ll never use again (actually I think it applies to literally all text processing applications as well. even if you use StringBuilder you&#8217;ll unevitably use string from time to time).</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wessel odd alt thread-odd thread-alt depth-1 parent" id="comment-1375055">
				<div id="div-comment-1375055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Andomar_' rel='external nofollow' class='url'>Andomar_</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375055">
			January 3, 2019 at 12:05 am</a>		</div>

		<p>The bit about returning “as soon as you perform an await” surprises me. I’d expect the handler to wait. Where can I find out more about this? Is the fact that Raymond mentions “coroutine” relevant for this behavior?</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1375115">
				<div id="div-comment-1375115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375115">
			January 3, 2019 at 10:55 am</a>		</div>

		<p>The handler is waiting asynchronously for the &#8220;await&#8221; to complete. It does this by <a href="https://blogs.msdn.microsoft.com/oldnewthing/20170720-00/?p=96655">scheduling additional work to take place when the await completes, and then returning to its caller</a>. The caller sees that the handler has returned and checks the <code>Handled</code> property.</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wessel odd alt depth-3 parent" id="comment-1375235">
				<div id="div-comment-1375235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Andomar_' rel='external nofollow' class='url'>Andomar_</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375235">
			January 4, 2019 at 11:30 am</a>		</div>

		<p>Thanks for your reply! I’ve read the linked article and discussed it with a colleague, but we still don’t understand. How can the function calling the handler know when the handler enters an await? What happens if you set the handled output parameter, then use an await, and then set the handled parameter to another value?</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-4 parent" id="comment-1375245">
				<div id="div-comment-1375245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375245">
			January 4, 2019 at 11:32 am</a>		</div>

		<p>The caller doesn&#8217;t know that the handler entered an await. All the caller sees is that the handler returned. That&#8217;s why you need to set Handled before awaiting. Because as far as the caller is concerned, you&#8217;ve returned.</p>

		<div class="reply"><a rel="nofollow" class="comment-reply-login" href="https://blogs.msdn.microsoft.com/oldnewthing/wp-login.php?redirect_to=https%3A%2F%2Fblogs.msdn.microsoft.com%2Foldnewthing%2F20190102-00%2F%3Fp%3D100615">Log in to Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wessel odd alt depth-5" id="comment-1375305">
				<div id="div-comment-1375305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Andomar_' rel='external nofollow' class='url'>Andomar_</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20190102-00/?p=100615#comment-1375305">
			January 5, 2019 at 4:45 am</a>		</div>

		<p>Thanks, very interesting. I wonder how I could store the result of an async method in Handled. One idea is to construct a Task with the async function as Action and then call Task.RunSynchronously(). This would hopefully keep the thread blocked and prevent the handler from returning. What would you think of this approach?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

