<html>
<head>
<title>Dragging a shell object, part 3: Detecting an optimized move</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Dragging a shell object, part 3: Detecting an optimized move</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 8, 2004 / year-entry #413</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20041208-00/?p=37093</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">We were considering how to detect that the drag/drop operation resulted in a conceptual Move even if the DROPEFFECT_MOVE was optimized away. If the drop target is the shell, you can query the data object for CFSTR_PERFORMEDDROPEFFECT to see what the performed effect was. void OnLButtonDown(HWND hwnd, BOOL fDoubleClick, int x, int y, UINT keyFlags)...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
We were considering how to detect that the drag/drop operation
resulted in a conceptual Move even if the <code>DROPEFFECT_MOVE</code>
was optimized away.
</p>
<p>
If the drop target is the shell, you can query the
data object for <code>CFSTR_PERFORMEDDROPEFFECT</code>
to see what the performed effect was.
</p>
<pre>
void OnLButtonDown(HWND hwnd, BOOL fDoubleClick,
                   int x, int y, UINT keyFlags)
{
  ...
        if (dwEffect &amp; DROPEFFECT_MOVE) {
          DeleteFileW(wszPath);
        }
        <font COLOR=blue>CheckPerformedEffect(hwnd, pdto);</font>
  ...
}
</pre>
<p>
Of course, we need that <code>CheckPerformedEffect</code>
function too.
</p>
<pre>
void CheckPerformedEffect(HWND hwnd, IDataObject *pdto)
{
  FORMATETC fe = {
     (CLIPFORMAT)RegisterClipboardFormat(CFSTR_PERFORMEDDROPEFFECT),
     NULL, DVASPECT_CONTENT, -1, TYMED_HGLOBAL };
  STGMEDIUM stgm;
  if (SUCCEEDED(pdto-&gt;GetData(&amp;fe, &amp;stgm))) {
    if ((stgm.tymed &amp; TYMED_HGLOBAL) &amp;&amp;
        GlobalSize(stgm.hGlobal) &gt;= sizeof(DWORD)) {
       DWORD *pdw = (DWORD*)GlobalLock(stgm.hGlobal);
       if (pdw) {
         if (*pdw == DROPEFFECT_MOVE) {
            MessageBox(hwnd, TEXT("Moved"), TEXT("Scratch"), MB_OK);
         }
         GlobalUnlock(stgm.hGlobal);
       }
    }
    ReleaseStgMedium(&amp;stgm);
  }
}
</pre>
<p>
If the item is dropped on a shell window, the drop target
will set data into the data object under the clipboard format name
<code>CFSTR_PERFORMEDDROPEFFECT</code>.
The data takes the form of a <code>DWORD</code> in an
<code>HGLOBAL</code>, and the value is the actual drop effect
before any optimizations kicked in.
</p>
<p>
Here, we check whether it was a <code>DROPEFFECT_MOVE</code> and
display a special message if so.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-233413">
				<div id="div-comment-233413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.loadngo.biz/content.aspx' rel='external nofollow' class='url'>Jay Lauffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041208-00/?p=37093#comment-233413">
			December 8, 2004 at 8:27 am</a>		</div>

		<p>Ahh now this is a gem.</p>
<p>However after doing some additional reading I find myself confused by MSDN documentation (and no this isn&#8217;t the first time).</p>
<p><a target="_new" href="http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/programmersguide/shell_basics/shell_basics_programming/transferring/clipboard.asp?frame=true" rel="nofollow">http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/programmersguide/shell_basics/shell_basics_programming/transferring/clipboard.asp?frame=true</a></p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</p>
<p>The CFSTR_PERFORMEDDROPEFFECT format identifier was intended to allow the target to indicate to the data object what operation actually took place. However, the Shell uses optimized moves for file system objects whenever possible. In that case, the Shell normally sets the CFSTR_PERFORMEDDROPEFFECT value to DROPEFFECT_NONE, to indicate to the data object that the original data has been deleted. Thus, the source cannot use the CFSTR_PERFORMEDDROPEFFECT value to determine which operation has taken place. While most sources do not need this information, there are some exceptions. For instance, even though optimized moves eliminate the need for a source to delete any data, the source might still need to update a related database to indicate that the files have been moved or copied. </p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<p>Of course that claims to be for Version 5..</p>
<p>a little below we then get some more documentation which fails to clarify anything</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p>CFSTR_PERFORMEDDROPEFFECT</p>
<p>This format identifier is used by the target to inform the data object through its IDataObject::SetData method of the outcome of a data transfer. The data is an STGMEDIUM structure that contains a global memory object. The structure&#8217;s hGlobal member points to a DWORD set to the appropriate DROPEFFECT value, normally DROPEFFECT_MOVE or DROPEFFECT_COPY. </p>
<p>This format is normally used when the outcome of an operation can be either move or copy, such as in anoptimized move or delete-on-paste operation. It provides a reliable way for the target to tell the data object what actually happened. It was introduced because the value of pdwEffect returned by DoDragDrop did not reliably indicate which operation had taken place. The CFSTR_PERFORMEDDROPEFFECT format is the reliable way to indicate that an unoptimized move has taken place. </p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p>So should I use CFSTR_LOGICALPERFORMEDDROPEFFECT or CFSTR_PERFORMEDDROPEFFECT ?  After all I think it&#8217;s pretty safe to assume that people all have IE 5?  Or maybe not (maybe assumptions are never safe, like assuming people will have enough sense to recognize bad coding practices as simple conveniences for demonstrative purposes)?  Perhaps I should be doing DllGetVersion on the Shell dll?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-233433">
				<div id="div-comment-233433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jemnery</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041208-00/?p=37093#comment-233433">
			December 8, 2004 at 8:49 am</a>		</div>

		<p>I can&#8217;t believe you hard-coded the strings in the MessageBox() call. This example needs a full local-language independant implementation.</p>
<p>;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-233443">
				<div id="div-comment-233443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nikos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041208-00/?p=37093#comment-233443">
			December 8, 2004 at 8:57 am</a>		</div>

		<p>i hope there&#8217;s a series #4 in drag-drop lectures that explains what happens when IAsyncOperation gets into the picture<br />
<br />thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-233563">
				<div id="div-comment-233563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J&#246;rgen Sigvardsson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041208-00/?p=37093#comment-233563">
			December 8, 2004 at 3:43 pm</a>		</div>

		<blockquote><p>
  I can&#8217;t believe you hard-coded the strings in the MessageBox() call. This example needs a full local-language independant implementation.</p>
<p>At least the grumpiest of them all won&#8217;t be able to complain about unicode correctness. ;)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

