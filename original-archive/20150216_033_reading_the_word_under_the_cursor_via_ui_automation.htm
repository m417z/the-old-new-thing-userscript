<html>
<head>
<title>Reading the word under the cursor via UI Automation</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Reading the word under the cursor via UI Automation</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 16, 2015 / year-entry #34</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A while back, I showed how to use UI Automation to extract the text under the mouse cursor. Let's refine the program so it can extract the word under the cursor. The ability to extract subunits of text is provided by the Text­Pattern class. You can ask for the text around a specific point by...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A while back,
I showed how to use
UI Automation to
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/04/08/10409196.aspx">
extract the text under the mouse cursor</a>.
Let's refine the program so it can extract the <i>word</i> under
the cursor.
</p>
<p>
The ability to extract subunits of text is provided by
<a HREF="http://msdn.microsoft.com/library/system.windows.automation.textpattern.aspx">
the
<code>Text&shy;Pattern</code> class</a>.
You can ask for the text around a specific point by asking
<code>Range&shy;From&shy;Point</code> to create a zero-length
range directly under the cursor,
and then adjust the range to grab the text you want.
</p>
<p>
Start with
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/04/08/10409196.aspx">
the first Little Program</a>
and make these changes:
</p>
<pre>
using System;
using System.Windows;
using System.Windows.Forms;
using System.Windows.Automation;
<font COLOR=blue>using System.Windows.Automation.Text;</font>

class Program
{
 static Point MousePos {
  get { var pos = Control.MousePosition;
        return new Point(pos.X, pos.Y); }
 }

 public static void Main()
 {
  for (;;) {
   AutomationElement e = AutomationElement.FromPoint(MousePos);
   if (e != null) {
    <font COLOR=blue>object o;
    if (e.TryGetCurrentPattern(TextPattern.Pattern, out o)) {
     var textPattern = (TextPattern)o;
     var range = textPattern.RangeFromPoint(MousePos);
     range.ExpandToEnclosingUnit(TextUnit.Word);
     Console.WriteLine(range.GetText(-1));
    }</font>
   }
   System.Threading.Thread.Sleep(1000);
  }
 }
}
</pre>
<p>
We grab the element under the mouse and see if it supports
<code>Text&shy;Pattern</code>.
If so, we ask the text pattern for a
<code>Text&shy;Pattern&shy;Range</code>
that corresponds to the position of the cursor.
It's where the insertion point would go if you clicked there.
Since the insertion point always goes between characters,
the initial range has zero length.
We expand it to the word enclosing the imaginary insertion point,
then extract the text,
then print it.
</p>
<p>
Note that the Text pattern is typically supported only by
editable text controls,
so you will need to practice with Notepad or some other text
editor.
</p>
<p>
Just to show how annoying you can push things,
let's secretly select the text under the cursor.
</p>
<pre>
using System;
using System.Windows;
using System.Windows.Forms;
using System.Windows.Automation;
using System.Windows.Automation.Text;

class Program
{
 static Point MousePos {
  get { var pos = Control.MousePosition;
        return new Point(pos.X, pos.Y); }
 }

 public static void Main()
 {
  for (;;) {
   AutomationElement e = AutomationElement.FromPoint(MousePos);
   if (e != null) {
    object o;
    if (e.TryGetCurrentPattern(TextPattern.Pattern, out o)) {
     var textPattern = (TextPattern)o;
     var range = textPattern.RangeFromPoint(MousePos);
     range.ExpandToEnclosingUnit(TextUnit.Word);
     <font COLOR=red>// <strike>Console.WriteLine(range.GetText(-1));</strike></font>
     <font COLOR=blue>range.Select();</font>
    }
   }
   System.Threading.Thread.Sleep(1000);
  }
 }
}
</pre>
<p>
Once a second, the program autoselects the word under the cursor.
This gets really annoying fast,
but it's just a demonstration.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-tom-lambert-13live-com even thread-even depth-1" id="comment-1176003">
				<div id="div-comment-1176003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Tom+Lambert+%28Koopakiller%29' rel='external nofollow' class='url'>Tom Lambert (Koopakiller)</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176003">
			February 16, 2015 at 7:43 am</a>		</div>

		<p>Wow&#8230;I find all kinds of automation quite interesting, but I did not know that this is possible. Thanks for that!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176043">
				<div id="div-comment-1176043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">0xDEADC0DE</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176043">
			February 16, 2015 at 12:11 pm</a>		</div>

		<p>I&#39;ve tried all your examples and I like them. Very useful. There is so much you can do with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176053">
				<div id="div-comment-1176053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lurker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176053">
			February 16, 2015 at 12:53 pm</a>		</div>

		<p>Why are you using C# and not C++ for these kinds of examples?</p>
<div class="post">[<em>Because C# lets me focus on demonstrating the technique. C++ would get all bogged down in unimportant details. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176063">
				<div id="div-comment-1176063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@lurker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176063">
			February 16, 2015 at 1:02 pm</a>		</div>

		<p>Because C# is so much better than C++. And the automation framework is very easy to use in C#.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176073">
				<div id="div-comment-1176073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176073">
			February 16, 2015 at 1:13 pm</a>		</div>

		<p>@lurker: That&#39;s like asking why he used JavaScript for the set enumerations: because he wanted to. Little program.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176083">
				<div id="div-comment-1176083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176083">
			February 16, 2015 at 1:14 pm</a>		</div>

		<p>@lurker</p>
<p>Why reinvent the world when someone else has done nearly all the work for you?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176103">
				<div id="div-comment-1176103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vaibhav</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176103">
			February 16, 2015 at 9:03 pm</a>		</div>

		<p>I encounter the following error on running this code:</p>
<p>The type or namespace name &#39;Point&#39; could not be found (are you missing a using directive or an assembly reference?)</p>
<p>What is missing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176123">
				<div id="div-comment-1176123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176123">
			February 16, 2015 at 10:08 pm</a>		</div>

		<p>@Vaibhav: Possible a reference and a using of &#39;System.Drawing&#39;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176133">
				<div id="div-comment-1176133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176133">
			February 16, 2015 at 10:50 pm</a>		</div>

		<p>Hey, there are some subtle differences with this: <a href="http://stackoverflow.com/questions/4665045/how-to-get-the-word-under-the-cursor-in-windows/4734275" rel="nofollow" target="_new">stackoverflow.com/&#8230;/4734275</a> can you explain them?</p>
<div class="post">[<em>How about you identify the subtle differences for me. This is like saying &quot;I found some subtle differences between these two translations of <span style="text-decoration:underline;">Anna Karenina</span>. <a href="http://www.slate.com/articles/podcasts/lexicon_valley/2015/01/lexicon_valley_masha_gessen_on_the_many_translations_of_leo_tolstoy_s_anna.html">Can you explain them</a>?&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176163">
				<div id="div-comment-1176163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176163">
			February 17, 2015 at 7:30 am</a>		</div>

		<p>@Vaibhav: You&#39;re probably targeting the wrong framework or missing some references. The code listed has a using that will bring in System.Windows.Point. <a rel="nofollow" target="_new" href="https://msdn.microsoft.com/en-us/library/system.windows.point(v=vs.110).aspx">msdn.microsoft.com/&#8230;/system.windows.point(v=vs.110).aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176533">
				<div id="div-comment-1176533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MuiBienCarlota</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176533">
			February 19, 2015 at 6:11 am</a>		</div>

		<p>It works with notepad but there is a swift in visual studio editor. Just like if we need to ScreenToClient the Control.MousePosition.</p>
<p>But according to documentation, point (in Control.MousePosition and in AutomationElement.FromPoint) are supposed to be desktop coordinate.</p>
<p>Strange.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176613">
				<div id="div-comment-1176613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lexicon Valley Fan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150216-00/?p=44673#comment-1176613">
			February 19, 2015 at 8:31 am</a>		</div>

		<p>I can&#39;t let the Anna Karenina reference go uncommented-upon: That was an awesome podcast.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

