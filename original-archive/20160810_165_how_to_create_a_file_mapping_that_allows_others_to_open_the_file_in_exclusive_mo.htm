<html>
<head>
<title>How to create a file mapping that allows others to open the file in exclusive mode?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How to create a file mapping that allows others to open the file in exclusive mode?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 10, 2016 / year-entry #166</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">This is a job for opportunistic locks.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had a tool that opens
files like DLLs and TLBs
in order to extract information from them.
</p>
<blockquote CLASS=q>
<p>
We currently use
<code>Create&shy;File</code>,
<code>Create&shy;File&shy;Mapping</code>,
and
<code>Map&shy;View&shy;Of&shy;File</code>
to access the file.
The problem is that the
<code>Create&shy;File&shy;Mapping</code>
prevents the file from being renamed or deleted,
even if the
<code>Create&shy;File</code>
opened the file with a sharing mode that permits
those operations.
It is our understanding that this is expected behavior.
</p>
<p>
Since DLLs and TLBs under active development
are frequently deleted or overwritten,
our use of
<code>Create&shy;File&shy;Mapping</code>
interferes with developer workflow
because the user's build will fail with a
sharing violation.
We were wondering if there is an alternative to
<code>Create&shy;File&shy;Mapping</code>
that would allow the file to be renamed,
deleted, or written to.
We know that we could slurp the entire file
into memory and operate on the in-memory copy,
but we were hoping for something less drastic.
</p>
</blockquote>
<p>
Yes, there is something less drastic.
In fact, this is the type of scenarios for
which opportunistic locks were created:
You want to access a file, but you don't want
your access to interfere with anybody else
who wants to access the file after you get access.
</p>
<p>
For a code sample,
I defer to
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20130415-00/?p=4663">
my earlier discussion of opportunistic locks</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1259705">
				<div id="div-comment-1259705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1259705">
			August 10, 2016 at 10:50 am</a>		</div>

		<p>But Create­File­Mapping doesn&#8217;t prevent file from being renamed.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1259965">
				<div id="div-comment-1259965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1259965">
			August 12, 2016 at 7:36 am</a>		</div>

		<p>Indeed, and I take full advantage of this to overwrite running DLLs. Now if I could only figure out how to delay a delete w/o admin rights &#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1259985">
				<div id="div-comment-1259985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1259985">
			August 12, 2016 at 9:59 am</a>		</div>

		<p>I had a code that does this.. But Raymond will not allow to share it, cuz that code is a whole hack:)<br />
But I may try to share the idea. The idea is to enumerate&amp;remember all pages belonging to dll&#8217;s view, then unmap that view with UnmapViewOfFile, then immediately allocate memory (or better map pagefile-backed view) in same place and fill it with remembered content, reverting pages protection. Of course no one thread should be executing dll&#8217;s code at that time and code that doing all that should be somewhere out of it&#8230; And even then this may cause problems, for example if somebody will try to use GetMappedFileName on address beloning to dll&#8217;s view.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-1259725">
				<div id="div-comment-1259725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1259725">
			August 10, 2016 at 11:57 am</a>		</div>

		<p>They are going to extract information from files that might be in the process of being overwritten&#8230;  Hmm&#8230;.  Well, nothing in the world is ever static for long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1259745">
				<div id="div-comment-1259745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1259745">
			August 10, 2016 at 9:45 pm</a>		</div>

		<p>Just a few days ago I was investigating a problem.</p>
<p>As you may have heard, previous Windows version loaded the driver images to the page file and didn&#8217;t keep the image file open. Pageable sections were read from the page file.<br />
Windows 10 (Server 2016) now uses the original image file to back the pageable sections. Obviously, a thought of wasting 5 MB (5 minutes of MP3 or a couple of photos) of page file was bothering someone too much. Or that someone wanted a promotion.</p>
<p>Now the fun part. File mapping objects created with SEC_IMAGE flag allow to delete or modify the file after the original file handle is closed. This is the flag used to create objects for loadable images. Even though the file mapping exists, if the file is deleted, the page-in will only bring zeros. If the file is overwritten, the page-in will bring new code (or some data as code).</p>
<p>For drivers, the file handle seems to be closed when an attempt is made to unload the driver. NOT when the driver can be unloaded. For example, even though there are references to the device and driver objects, the file handle will still be closed.</p>
<p>You can now delete or overwrite the driver file, not knowing that the file is still mapped. New data or zeros will be brought in when a pageable code will need to be paged in. BUGCHECK!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1 parent" id="comment-1259766">
				<div id="div-comment-1259766" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1259766">
			August 10, 2016 at 11:13 pm</a>		</div>

		<p>Talking about filesystem, I just know that starting in Windows 10, version 1607, you can opt-in to remove the MAX_PATH limitation via a registry key change or App.manifest setting. </p>
<p><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85)</a>.aspx</p>
<p>I wonder when this will be applied to the server SKUs, and which server version will get it.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1259845">
				<div id="div-comment-1259845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://pixelcat@hotmail.com' rel='external nofollow' class='url'>Rick C</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1259845">
			August 11, 2016 at 9:30 am</a>		</div>

		<p>Group Policy editor says &#8220;at least Windows Server 2016&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-3" id="comment-1259925">
				<div id="div-comment-1259925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1259925">
			August 11, 2016 at 6:24 pm</a>		</div>

		<p>Nice. Thanks.</p>
<p>So some legacy software that has directory structure levels grew ridiculously deep could be benefited from an upgrade.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1260005">
				<div id="div-comment-1260005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160810-00/?p=94055#comment-1260005">
			August 12, 2016 at 11:21 am</a>		</div>

		<p>Nice!  I hope File Explorer opts in to the new behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

