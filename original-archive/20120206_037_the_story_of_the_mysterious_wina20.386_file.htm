<html>
<head>
<title>The story of the mysterious WINA20.386 file</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The story of the mysterious WINA20.386 file</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 6, 2012 / year-entry #38</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>35</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">matushorvath was curious about the WINA20.386 file that came with some versions of MS-DOS. The WINA20.386 file predates my involvement, but I was able to find some information on the Internet that explained what it was for. And it's right there in KB article Q68655: Windows 3.0 Enhanced Mode Requires WINA20.386: Windows 3.0 Enhanced Mode...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
matushorvath
was curious about
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/20/10040074.aspx#10040368">
the WINA20.386 file that came with some versions of MS-DOS</a>.
</p>
<p>
The WINA20.386 file predates my involvement, but I was able to
find some information on the Internet that explained what it was for.
And it's right there in KB article
<a HREF="http://support.microsoft.com/kb/68655">Q68655:
Windows 3.0 Enhanced Mode Requires WINA20.386</a>:
</p>
<blockquote CLASS=q>
<p>
<b>Windows 3.0 Enhanced Mode Requires WINA20.386</b>
</p>
<p>
Windows 3.0 enhanced mode uses a modular architecture
based on what are called virtual device drivers, or VxDs.
VxDs allow pieces of Windows to be replaced to add additional functionality.
WINA20.386 is such a VxD.
(VxDs could be called "structured" patches for Windows.) 
</p>
<p>
Windows 3.0 enhanced mode considers the state of the A20 line
to be the same in all MS-DOS virtual machines (VMs).
When MS-DOS is loaded in the high memory area (HMA),
this can cause the machine to stop responding (hang)
because of MS-DOS controlling the A20 line.
If one VM is running inside the MS-DOS kernel (in the HMA)
and Windows task switches to another VM in which MS-DOS turns off A20,
the machine hangs when switching back to the VM
that is currently attempting to execute code in the HMA. 
</p>
<p>
WINA20.386 changes the way Windows 3.0 enhanced mode
handles the A20 line so that Windows treats the A20 status
as local to each VM, instead of global to all VMs.
This corrects the problem. 
</p>
</blockquote>
<p>
(At the time I wrote this,
a certain popular Web search engine kicks up as the top hit
for the exact phrase
"Windows 3.0 Enhanced Mode Requires WINA20.386"
a spam site that copies KB articles in order to drive traffic.
Meanwhile, the actual KB article doesn't show up in the search results.
Fortunately,
<a HREF="http://www.bing.com/search?q=windows+3.0+enhanced+mode+requires+wina20.386">
Bing got it right</a>.)
</p>
<p>
That explanation is clearly written for a technical audience with
deep knowledge of MS-DOS, Windows, and the High Memory Area.
matushorvath suggested that
"a more detailed explanation could be interesting."
I don't know if it's interesting; to me, it's actually quite boring.
But here goes.
</p>
<p>
The A20 line is a signal on the address bus that specifies
the contents of bit 20 of the linear address of memory being accessed.
If you aren't familiar with the significance of the A20 line,
<a HREF="http://en.wikipedia.org/wiki/A20_line">
this Wikipedia article provides the necessary background</a>.
</p>
<p>
The High Memory Area is a 64KB-sized block of memory
(really, 64KB minus 16 bytes) that becomes accessible when
the CPU is in 8086 mode but the A20 line is enabled.
To free up conventional memory, large portions of MS-DOS
relocate themselves into the HMA.
When a program calls into MS-DOS, it really calls into a stub
which enables the A20 line, calls the real function in the HMA, and then
disables the A20 line before returning to the program.
(The value of the HMA was discovered by my colleague
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/12/15/313250.aspx">
who also discovered the fastest way to get out of virtual-8086 mode</a>.)
</p>
<p>
The issue is that by default, Windows treats all MS-DOS device drivers
and MS-DOS itself as global.
A change in one virtual machine affects all virtual machines.
This is done for compatibility reasons;
after all, those old 16-bit device drivers assume that they
are running on a single-tasking operating system.
If you were to run a separate copy of each driver in each virtual machine,
each copy would try to talk to the same physical device,
and bad things would happen because each copy assumed it was the
only code that communicated with that device.
</p>
<p>
Suppose MS-DOS device drivers were treated as local to each
virtual machine.
Suppose you had a device driver that controlled a
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/11/10/491300.aspx">
traffic signal</a>,
and as we all know,
one of the cardinal rules of traffic signals is that you never show
green in both directions.
The device driver has two variables: NorthSouthColor and EastWestColor,
and initially both are set to Red.
The copy of the device driver running in the first virtual machine decides
to let traffic flow in the north/south direction,
and it executes code like this:
</p>
<pre>
if (EastWestColor != Red) {
 SetEastWestColor(Red);
}
SetNorthSouthColor(Green);
</pre>
<p>
Since both variables are initially set to Red, this code sets
the north/south lights to green.
</p>
<p>
Meanwhile, the copy of the device driver in the second virtual machine
wants to let traffic flow in the east/west direction:
</p>
<pre>
if (NorthSouthColor != Red) {
 SetNorthSouthColor(Red);
}
SetEastWestColor(Green);
</pre>
<p>
Since we have a separate copy of the device driver in each virtual machine,
the changes made in the first virtual machine do not affect the values
in the second virtual machine.
The second virtual machine sees that both variables are set to Red,
so it merely sets the east/west color to green.
</p>
<p>
On the other hand, both of these device drivers are unwittingly
controlling the same physical traffic light,
and it just got told to set the lights in both directions to Green.
</p>
<p>
Oops.
</p>
<p>
Okay, so Windows defaults drivers to global.
That way, you don't run into the double-bookkeeping problem.
But this causes problems for the code which manages the A20 line:
</p>
<p>
Consider a system with two virtual machines.
The first one calls into MS-DOS.
The MS-DOS dispatcher enables the A20 line and calls the real function,
but before the function returns, the virtual machine gets pre-empted.
The second virtual machine now runs, and it too calls into MS-DOS.
The MS-DOS dispatcher in the second virtual machine enables the A20 line
and calls into the real function, and after the function returns,
the second virtual machine disables the A20 line and returns to its caller.
The second virtual machine now gets pre-empted, and the
first virtual machine resumes execution.
Oops: It tries to resume execution in the HMA, but the HMA is no longer
there because the second virtual machine disabled the A20 line!
</p>
<p>
The WINA20.386 driver teaches Windows that the state of the A20
should be treated as a per-virtual-machine state rather than
a global state.
With this new information, the above scenario does not run into a problem
because the changes to the A20 line made by one virtual machine have no
effect on the A20 line in another virtual machine.
</p>
<p>
matushorvath goes on to add,
"<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/20/10040074.aspx#10040870"
>I would be very interested in how Windows 3.0 found and loaded this file</a>.
It seems to me there must have been some magic happening,
e.g. DOS somehow forcing the driver to be loaded by Windows."
</p>
<p>
Yup, that's what happened,
and there's nothing secret about it.
When Windows starts up, it
<a HREF="http://support.microsoft.com/KB/74516">
broadcasts an interrupt</a>.
TSRs and device drivers can listen for this interrupt and respond
by specifying that Windows should
load a custom driver or request that certain ranges
of data should be treated as per-virtual-machine state rather
than global state
(known to the Windows virtual machine manager as
<a HREF="http://www.drdobbs.com/article/printableArticle.jhtml?articleId=184409226">
instance data</a>).
MS-DOS itself listens for this interrupt, and when Windows sends
out the "Does anybody have any special requests?" broadcast,
MS-DOS responds,
"Yeah, please load this WINA20.386 driver."
</p>
<p>
So there you have it, the story of WINA20.386.
Interesting or boring?</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-965073">
				<div id="div-comment-965073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TKW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965073">
			February 6, 2012 at 7:10 am</a>		</div>

		<p>Interesting! &nbsp;Thanks for doing the digging for us.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965083">
				<div id="div-comment-965083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VoicesInMyHead</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965083">
			February 6, 2012 at 7:23 am</a>		</div>

		<p>Yes, very interesting. &nbsp;Being a developer from the MS-DOS days, I love to hear pieces of history like this. &nbsp;While the platform may not be very relevant anymore, the lessons learned and techniques used are very relevant. &nbsp;Quite honestly, developers of today could learn a few things from these history lessons. &nbsp;Stories like this often spark a more granular level of thinking in the minds of modern developers who are used to having the details taken care of for them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965093">
				<div id="div-comment-965093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jcs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965093">
			February 6, 2012 at 7:44 am</a>		</div>

		<p>Back in the old days, we used to speculate that the first person to figure out the purpose of this file would win a 20MHz 386 computer from Microsoft.</p>
<p>Of course, this anecdote dates me, because back then we really did want to win a 20MHz 386&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus odd alt thread-odd thread-alt depth-1" id="comment-965103">
				<div id="div-comment-965103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965103">
			February 6, 2012 at 8:02 am</a>		</div>

		<p>The certain popular Web search engine now has this very blog post as the first hit. The KB article is second.</p>
<div class="post">[<i>Note that the variant of the KB article it picked is precisely the one I linked to in the article (rather than say <a href="http://blogs.msdn.com/controlpanel/blogs/comments.aspx/support.microsoft.com/?kbid=89698" rel="nofollow">this one</a> or <a href="http://blogs.msdn.com/controlpanel/blogs/comments.aspx/support.microsoft.com/default.aspx?scid=kb;en-us;68655" rel="nofollow">this one</a>), so I wouldn&#39;t be too quick to say that it found it without any help from me. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965113">
				<div id="div-comment-965113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TKW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965113">
			February 6, 2012 at 8:17 am</a>		</div>

		<p>Clearly, they know a good source when they see it!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965123">
				<div id="div-comment-965123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Muller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965123">
			February 6, 2012 at 8:23 am</a>		</div>

		<p>Seems like Raymond is the E. F. Hutton of the internet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965133">
				<div id="div-comment-965133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965133">
			February 6, 2012 at 9:36 am</a>		</div>

		<p>I remember how the A20 line was a source of problems, but I never understood exactly what was going on. Now, over 20 years later, I can understand it thanks to Wikipedia!</p>
<p>Apparently when the 80286 was introduced they added additional address lines (previous CPUs had lines A0-A19), but didn&#39;t provide a backwards-compatibility mode to simulate the old behavior of wrapping around at 1MB. In order to avoid breaking software that relied on that wrap-around, IBM installed what was effectively a hardware AND gate between the CPU&#39;s A20 line and RAM. One input to that AND gate was A20 and the other one was controlled by the on-board Intel 8042 that was originally there to manage the keyboard interface, but had an otherwise unused I/O pin.</p>
<p>When internal caches got added to chips (Intel&#39;s i486 in 1989), the cache needed to know the state of the A20 enable line, so they had to add a pin to the CPU (called A20M#, or Address bit 20 Mask). This pin lasted 20 years before finally being retired in 2008 with the Core i7. Note that this is only required for running the bootloader, because nowadays virtual memory is used to create the wrap-around effect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965163">
				<div id="div-comment-965163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965163">
			February 6, 2012 at 9:40 am</a>		</div>

		<p>I certainly found it an interesting look into an odd quirk of the past. Thanks for writing it up despite your uncertainty about it&#39;s interestingness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965173">
				<div id="div-comment-965173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raphael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965173">
			February 6, 2012 at 10:36 am</a>		</div>

		<p>The certain popular search engine apparently completely removed the spam link from it&#39;s results. Bing still seems to put it in second place (just above this very blog post).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965183">
				<div id="div-comment-965183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leo Davidson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965183">
			February 6, 2012 at 10:39 am</a>		</div>

		<p>Is Bing better at filtering out spam sites or are its algorithms just less targeted by them them in the first place?</p>
<p>(It could be both, of course.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965193">
				<div id="div-comment-965193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JenK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965193">
			February 6, 2012 at 10:45 am</a>		</div>

		<p>Hm. The last two paras of that KB article seem REALLY familiar. I think I edited/cleaned up that article at least once&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965203">
				<div id="div-comment-965203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965203">
			February 6, 2012 at 10:54 am</a>		</div>

		<blockquote><p>
  Quite honestly, developers of today could learn a few things from these history lessons.
</p></blockquote>
<p>The lesson I take from it is &quot;trying to be compatible is not always the best thing&quot;.</p>
<p>I can&#39;t think of any good reason why code needs to explicitly require 1048575 + 1 == 0. &nbsp;So, treat that as a bug, fix the offensive code, don&#39;t hook a spare keyboard gate up to the address lines of the processor (!), don&#39;t waste time writing code to virtualize this foolishness, &#8230;</p>
<p>Yeah, yeah, it&#39;s attitudes like mine which explain why I&#39;m not a software billionaire&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965213">
				<div id="div-comment-965213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965213">
			February 6, 2012 at 11:26 am</a>		</div>

		<p>@dave: How would you expect to fix a bug in a bootloader written 20 years ago for which the source code has been long since lost? &nbsp;[I&#39;m not saying this is the case, but it certainly could be]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965243">
				<div id="div-comment-965243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965243">
			February 6, 2012 at 11:39 am</a>		</div>

		<p>@Leo Davidson: Or Bing gives priority to Microsoft sites.. but no.. no.. that would never happen, surely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965253">
				<div id="div-comment-965253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965253">
			February 6, 2012 at 12:43 pm</a>		</div>

		<blockquote><p>
  Or Bing gives priority to Microsoft sites
</p></blockquote>
<p>Well, I&#39;d would probably be very sensible for both Bing and Google to give priority to Microsoft sites over spam-aggregators. That&#39;s the spirit of page rank.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965273">
				<div id="div-comment-965273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chentiangemalc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965273">
			February 6, 2012 at 2:06 pm</a>		</div>

		<p>while totally useless knowledge today it does bring back memories&#8230;. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965283">
				<div id="div-comment-965283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ralph Vader</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965283">
			February 6, 2012 at 2:34 pm</a>		</div>

		<p>shame on M1cr0$0f+ for trying to monopolize knowledge bases. before you know it they&#39;ll be making us all pay to think</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965293">
				<div id="div-comment-965293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965293">
			February 6, 2012 at 2:36 pm</a>		</div>

		<p>History, shmistory (line stolen from The Far Side).</p>
<p>And off-topic / for what it&#39;s worth: the first non-advert link when I entered &#39;printer help&#39; in Google (in Australia) went to a Microsoft support page, while the first non-advert link in Bing went to a generic help site for pc&#39;s &amp; macs. (Although many users who enter queries like that would probably just click the topmost ad links.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965303">
				<div id="div-comment-965303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965303">
			February 6, 2012 at 2:41 pm</a>		</div>

		<p>@dave: Awesome work, you&#39;ve just made a processor that a whole lot existing code doesn&#39;t work on. Who are you going to sell it to? Are you going to pay developers so that you have software that actually works on the processor when you launch it? Are you going to advertise it as &quot;mostly-compatible&quot;? Are the extra outlays and lost revenue more or less costly than a cheap compatibility hack?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965313">
				<div id="div-comment-965313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965313">
			February 6, 2012 at 3:06 pm</a>		</div>

		<p>I wonder who the guilty parties were for this. &nbsp;There must be an interesting back story at IBM&#8230; &nbsp;What widely-used piece(s) of software originally needed this A20 hack? &nbsp;Why did IBM originally have to do this for the 286?</p>
<p>I can see it now&#8230; an engineer testing an early 286 motherboard&#8230;</p>
<p>1. &nbsp;Hmmm, software XYZ isn&#39;t running.</p>
<p>2. &nbsp;&lt;extensive debug session; realizes that software XYZ expects wrap-around behavior&gt;</p>
<p>3. &nbsp;Stupid programmers, did they really think we&#39;d never have more than 1 MB RAM?</p>
<p>4. &nbsp;Nobody will buy this computer if it won&#39;t run software XYZ, flagship killer app of the IBM PC platform!</p>
<p>5. &nbsp;Hmmm&#8230;. original software assumed A20 was always 0, what if we use an AND gate to force A20 to 0 unless the user knows how to use &gt; 1 MB RAM?</p>
<p>6. &nbsp;&lt;gets razor knife, cuts A20 trace on the prototype PCB; also located an unused AND gate on the board&gt;</p>
<p>7. &nbsp;&lt;hooks up A20 line on RAM to output of AND gate with piece of wire&gt;</p>
<p>8. &nbsp;&lt;hooks up AND gate input to CPU A20 line with another piece of hookup wire&gt;</p>
<p>9. &nbsp;Uh oh, how will I control this gate? &nbsp;I need an unused I/O!</p>
<p>10. Hey, nobody seems to be using this output on the keyboard controller&#8230;.</p>
<p>I guess the rest is history&#8230; &nbsp;This thing has last-second hack written all over it.</p>
<div class="post">[<i>Two words: Copy protection. Here are a few more words: Anti-debugging. Games. (I wouldn&#39;t be surprised if there were BIOSes that pulled this trick. Set your DS to F800 and you have access not only to the ROM BIOS but also the BIOS data area with a single segment!) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965323">
				<div id="div-comment-965323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeremy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965323">
			February 6, 2012 at 3:31 pm</a>		</div>

		<p>Another interesting piece of A20 lore: &nbsp;it helped original Xbox users &quot;jailbreak&quot; their device! &nbsp;That console was more or less a PC compatible machine, powered by an Intel Pentium III. &nbsp;It booted from a &quot;secret&quot; ROM at address FFFFFFF0. &nbsp;Hardware hackers pulled down the A20 pin on the CPU to force it to boot from FFEFFFF0 instead, a location in user-overwritable flash memory.</p>
<p><a rel="nofollow" target="_new" href="http://web.archive.org/web/20090416175601/http://www.xbox-linux.org/wiki/17_Mistakes_Microsoft_Made_in_the_Xbox_Security_System#The_A20_Hack" rel="nofollow">web.archive.org/&#8230;/17_Mistakes_Microsoft_Made_in_the_Xbox_Security_System</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965333">
				<div id="div-comment-965333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965333">
			February 6, 2012 at 3:34 pm</a>		</div>

		<p>i7 cannot load dos in hma? what a piece of junk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965343">
				<div id="div-comment-965343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raphael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965343">
			February 6, 2012 at 3:46 pm</a>		</div>

		<blockquote><p>
  i7 cannot load dos in hma? what a piece of junk.
</p></blockquote>
<p>Huh? Why not? To do that you only need a enabled A20 line. Doesn&#39;t matter if it was on in the first place.</p>
<p>Now running the original IBM PC BIOS on an i7, that would be a problem (not least of all because it wouldn&#39;t support the chip in the first place).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965143">
				<div id="div-comment-965143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965143">
			February 6, 2012 at 9:37 am</a>		</div>

		<p>&gt;certain popular Web search engine</p>
<p>*sigh* Just name it. In any case, if it was Google, the KB article is the first hit now. Of course, someone might have reported the spammer to Google, or maybe this blog has a high pagerank that bumped the KB article up. We&#39;ll probably never know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-965353">
				<div id="div-comment-965353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965353">
			February 6, 2012 at 6:11 pm</a>		</div>

		<p>Besides, i7s still have A20M etc via Virtual Legacy Wires.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-965363">
				<div id="div-comment-965363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965363">
			February 6, 2012 at 6:13 pm</a>		</div>

		<p>[Two words: Copy protection. Here are a few more words: Anti-debugging. Games. (I wouldn&#39;t be surprised if there were BIOSes that pulled this trick. Set your DS to F800 and you have access not only to the ROM BIOS but also the BIOS data area with a single segment!) -Raymond]</p>
<p>Don&#39;t forget CALL 5 (helps in CP/M translation).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965373">
				<div id="div-comment-965373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xpclient</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965373">
			February 6, 2012 at 7:51 pm</a>		</div>

		<p>WP states &quot;Support for the A20 gate was removed in the Nehalem microarchitecture.&quot; :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965383">
				<div id="div-comment-965383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965383">
			February 7, 2012 at 1:36 am</a>		</div>

		<p>Boring. God, I&#39;m glad we got rid of all that real/protected mode switching and all the crap that comes out of &quot;use real mode&quot;/&quot;use protected mode to have more memory&quot; junk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965403">
				<div id="div-comment-965403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jas71_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jas71@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965403">
			February 7, 2012 at 7:21 am</a>		</div>

		<p>Ditching all the legacy stuff in your CPU is nice and easy. Then you just have the task of persuading customers to buy your new architecture and software developers to develop it, like Intel did so effectively with the Itanium systems we all use now, wiping out those silly backwards-compatible 64-bit chips from AMD &#8230; whoops.</p>
<p>There is a market for nice clean efficient CPU designs: anywhere you don&#39;t need to worry about existing code bases, essentially. Does my current washing machine use the same control chip as the previous one? Who cares &#8211; if the manufacturer wanted to switch from, say, Z80 to 6502, that&#39;s up to them. If my new laptop couldn&#39;t run existing x86 code, though? It would be most of the way to paperweight status already. Ask anyone with an iPhone or Android phone to think about tablets: buy a different platform, re-purchase all their apps and start again, or keep using all the familiar apps they&#39;ve already got and paid for?</p>
<p>It can be a pain sometimes &#8211; but if you couldn&#39;t be sure that shiny new PC would run Windows XP happily, or that Windows 7 would run Office 2003, your favourite old shoot-em-up, that accounts package you rely on and the free PDF generator you&#39;ve got set up to do stuff just the way you like, you won&#39;t be at all happy. Sure, you could upgrade Office &#8211; but then some of those macros you use for client invoices break&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965453">
				<div id="div-comment-965453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965453">
			February 7, 2012 at 7:49 am</a>		</div>

		<p>&quot;What widely-used piece(s) of software originally needed this A20 hack?&quot;</p>
<p>As Yuhong Bao briefly mentioned above, MS-DOS &#8212; for the CALL 5 entry point. For CP/M-80 compatibility, the offset at PSP bytes 6 and 7 needs to be as high as possible (DOS seems to use 0xFEF0). But it&#39;s also treated as the offset of an entry point within MS-DOS. MS-DOS, certainly in the early versions, was less than 0xFEF0 bytes long, so the only way for 0xFEF0 to be the offset of an address in MS-DOS was to use the wrap. (In fact the entry point chosen was right at the start of memory, 0000:00C0, so the PSP gets set up with the address F01D:FEF0).</p>
<p>Incidentally, CP/M-86 didn&#39;t do this, because it didn&#39;t provide the CALL 5 entry point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965523">
				<div id="div-comment-965523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Douglas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965523">
			February 7, 2012 at 11:31 am</a>		</div>

		<p>Interesting! Thanks Raymond. I really enjoyed this trip down memory lane.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965553">
				<div id="div-comment-965553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965553">
			February 7, 2012 at 2:40 pm</a>		</div>

		<p>I think my answer is that I found it interesting because I never had to deal with any of this, so to me it&#39;s an insight into a complex but long-abandoned world. If I had once needed to deal with it, I&#39;m sure it would just a reminder of hours wasted learning arcane details of what should&#39;ve been easy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965593">
				<div id="div-comment-965593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965593">
			February 7, 2012 at 8:28 pm</a>		</div>

		<p>Douglas: Was the &quot;memory lane&quot; pun intentional or not?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965623">
				<div id="div-comment-965623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965623">
			February 8, 2012 at 12:48 am</a>		</div>

		<p>@jas88: Ditching all the legacy stuff in your CPU is nice and easy. Then you just have the task of persuading customers to buy your new architecture and software developers to develop it, like Intel did so effectively with the Itanium systems we all use now, wiping out those silly backwards-compatible 64-bit chips from AMD &#8230; whoops.</p>
<p>You do realize that amd64 isn&#39;t fully backwards compatible with x86, right? amd64 is a completely different architecture to x86, with an ia32 compatibility mode.</p>
<p>It&#39;s best to treat the amd64 CPU as two different CPUs &#8211; a regular x86 with full real mode through protected and all the quirks in-between, with a 64-bit processor with 32-but x86 compatibliity mode on the side. Because once you&#39;re in 64-bit mode, your only option is to run 32-bit code or 64-bit code. If you have 16-bit code, it ain&#39;t gonna work in 64-bit mode. You&#39;ll have to run a 32-bit OS to still use it.</p>
<p>Actually run into this problem from time to time &#8211; and no, VMs will not work for obvious reasons. You have to use something like DOSbox to run your 16-bit app. Or if it&#39;s Windows, hope you have qemu working with Windows 95 or something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965983">
				<div id="div-comment-965983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hagenp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120206-00/?p=8373#comment-965983">
			February 9, 2012 at 9:05 am</a>		</div>

		<p>@dave: How would you expect to fix a bug in a bootloader written 20 years ago for which the source code has been long since lost?</p>
<p>Disassemble it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

