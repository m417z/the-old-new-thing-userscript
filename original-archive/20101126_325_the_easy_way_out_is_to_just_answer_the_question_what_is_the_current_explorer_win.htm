<html>
<head>
<title>The easy way out is to just answer the question: What is the current Explorer window looking at?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The easy way out is to just answer the question: What is the current Explorer window looking at?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 26, 2010 / year-entry #326</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer had the following question: We have an application which copies and pastes files. Our problem is that we want to paste the files into the folder which corresponds to the currently active Windows Explorer window. Right now, we're using SendKeys.SendWait("^(v)"), but we find this method unsatisfactory because we want to replace Explorer's default...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer had the following question:</p>
<blockquote class="q"><p> We have an application which copies and pastes files. Our problem is that we want to paste the files into the folder which corresponds to the currently active Windows Explorer window. Right now, we're using <code>SendKeys.SendWait("^(v)")</code>, but we find this method unsatisfactory because we want to replace Explorer's default file copy engine with our own custom one. Can you provide assistance? </p>
</blockquote>
<p> (And commenter wtroost had <a href="http://blogs.msdn.com/oldnewthing/archive/2008/01/29/7294949.aspx#7327211"> no clue why somebody would copy a file by sending window messages to Explorer</a>. Well here you have it.) </p>
<p> The easy way out is to answer the question: You can enumerate the active Explorer windows and <a href="http://blogs.msdn.com/oldnewthing/archive/2005/07/05/435657.aspx"> ask each one what folder it is viewing</a>. <a href="http://blogs.msdn.com/oldnewthing/archive/2004/07/20/188696.aspx"> There's even a script interface for it</a>. </p>
<p> The hard way out is to understand the customer's problem and see if there's a better solution. The question as phrased suggests that the customer hasn't thought through the entire problem. What if the current window is not an Explorer window, or if it's a window on a virtual folder instead of a file system folder (for example, an FTP site)? Simulating keyboard input (in this case, fake-pressing Ctrl+V) is rarely a good solution to a problem; after all, what if the hotkey for Paste changes based on the user's preferred language? Or what if the Explorer window happens to be in a state where Ctrl+V doesn't paste files into the current folder? (For example, focus might be on the Address Bar.) And the fact that they put contents onto the clipboard means that they are <a href="http://blogs.msdn.com/oldnewthing/archive/2009/02/02/9388941.aspx#9391395"> overwriting the previous contents of the clipboard</a>. </p>
<p> I asked for a little more information about what their application is trying to do. </p>
<blockquote class="q"><p> This is a file transfer application for computers which are not directly connected to each other, but which are both connected to a common third computer. From the first computer, you run the file transfer application, select some files from the transfer application's interface, and hit Copy. This transfers the files to the common third computer. Then from the second computer, you run the file transfer application and hit Paste, and the program retrieves the files from the common third computer and places them in the folder that you are currently viewing in Windows Explorer. </p>
</blockquote>
<p> Oh, the whole "get the path to the folder that Windows Explorer is viewing" is just a strange way of telling the program where to copy the files. In other words, they were using Windows Explorer as a very expensive cross-process replacement for the <code>SHBrowseForFolder</code> function. </p>
<p> The recommendation therefore came in two parts: </p>
<ol>
<li>Instead of hijacking Explorer as a directory-picker,     just call <code>SHBrowseForFolder</code>.     You can pass the <code>BIF_RETURNONLYFSDIRS</code> flag,     and <code>SHBrowseForFolder</code> will automatically filter out     anything that is not a file system folder,     thereby saving you the trouble of filtering them out yourself. </li>
<li>If you really want to hijack Explorer as a directory-picker,     then add a context menu command to     <a href="http://blogs.msdn.com/oldnewthing/archive/2007/08/02/4179107.aspx">     <code>Directory</code></a>     or     <code>Directory\Background</code>     called <i>Paste from Transfer Shelf</i> (or whatever your application     calls that intermediate computer). </li>
</ol>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-877193">
				<div id="div-comment-877193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877193">
			November 26, 2010 at 7:58 am</a>		</div>

		<p>SHBrowseForFolder is a horrible interface though; Explorer is convenient. The context menu suggestion is much better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877213">
				<div id="div-comment-877213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kythyria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877213">
			November 26, 2010 at 8:30 am</a>		</div>

		<p>Merely seeing the title was enough to make me think &quot;Here comes another story of a program that does something in an unnecessarily strange and overcomplicated way&quot;.</p>
<p>I can easily imagine that the logic for using Explorer as a directory picker is that the user only has to navigate to the directory once in total, rather than once in the application&#39;s directory picker and again in Explorer to do something with the files. From that perspective, it makes a weird kind of sense, but not as much as, yes, adding a context menu entry.</p>
<p>And I have to say, configurator is right: SHBrowseForFolder is kinda annoying. If it has the same scrolling glitch in Win7 that Explorer&#39;s folder list does, that would make it even more annoying.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877233">
				<div id="div-comment-877233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877233">
			November 26, 2010 at 9:54 am</a>		</div>

		<p>[configurator &#8211; SHBrowseForFolder is a horrible interface though]</p>
<p>Fully agree. If you are targeting Vista+, please please please use IFileOpenDialog with FOS_PICKFOLDERS.</p>
<p>On older OSes there are ways to use GetOpenFileName to pick a folder (I&#39;ve seen 3DS MAX do it more than 10 years ago). It is not very easy, but definitely possible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877243">
				<div id="div-comment-877243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gui sux</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877243">
			November 26, 2010 at 10:07 am</a>		</div>

		<p>Any sane program doesn&#39;t use SHBrowseForFolder because the dialog is evil. Choosing folders with GetOpenFileName is better, then the user have access to the left pane with desktop/computer/documents/&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877253">
				<div id="div-comment-877253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877253">
			November 26, 2010 at 11:31 am</a>		</div>

		<p>I know this is impossible but each time I read one of your customer stories I think you should just tell them to get lost.</p>
<p>Seriously, simulating keypresses in another process is far worse than most of the stuff on TDWTF. These people should just stop developing software.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877273">
				<div id="div-comment-877273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877273">
			November 26, 2010 at 3:40 pm</a>		</div>

		<p>I admit, the SendKeys call was surprising (and not in a good way). &nbsp;If there is some common computer with a staging directory for file transfers, why not just use CopyFile/MoveFile or something fancier but along the same lines.</p>
<p>I realize the main question was getting the current Explorer view, but once you have it, why not use the path in a more sane way?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877183">
				<div id="div-comment-877183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877183">
			November 26, 2010 at 7:57 am</a>		</div>

		<p>*googling*</p>
<p>Hmm, this DirectoryBackground is pretty cool. Hadn&#39;t heard about that one before.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877293">
				<div id="div-comment-877293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh Smeaton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877293">
			November 26, 2010 at 4:33 pm</a>		</div>

		<p>@Me after only a short time working in this wonderful industry of ours, I&#39;ve learnt to accept that there are MANY horrible developers. I include myself in that category every now and then. There are three major reasons horrible programs are written (that I can fathom on a whim):</p>
<ol>
<li>&quot;Get Dave from accounting some training in Visual Basic so he can make his own accounting application. We aren&#39;t paying $200/h to outsource something so easy!&quot;</li>
<li>
<p>&quot;Ahh! I can&#39;t find documentation on how to achieve the outcome I&#39;m after. Let me browse the source and find a way to do it&quot;.</p>
</li>
<li>
<p>&quot;Meh whatever, lunch is in 10 let&#39;s go!&quot;</p>
</li>
</ol>
<p>I used to hate Dave. Now I hate companies that force Dave into doing something he doesn&#39;t have the skills to do, to save a few thousand dollars in CapEx to sacrifice a much larger amount in maintenance in the long term.</p>
<p>I&#39;m guilty of 2, though sites like stackoverflow are significantly reducing my need to jump into source unless I&#39;m interested in the code.</p>
<p>All 3&#39;s should be identified and shot on site.</p>
<p>Raymond, I really appreciate how you provide answers to Customer&#39;s questions AND answers to the actual problem they are having. I don&#39;t know many people like that unfortunately. The Easy Way leads to the dark-side!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877303">
				<div id="div-comment-877303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh Smeaton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877303">
			November 26, 2010 at 4:36 pm</a>		</div>

		<p>Clarification:</p>
<ol>
<li>Was supposed to be a reference to using undocumented APIs and internal data structures. I realise that reading the source can be a very good way to program in some cases.</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877313">
				<div id="div-comment-877313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877313">
			November 26, 2010 at 5:58 pm</a>		</div>

		<p>Raymond, after reading these stories from time to time, I just want to know &#8211; How do you ask Microsoft a question like this?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877333">
				<div id="div-comment-877333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877333">
			November 26, 2010 at 9:25 pm</a>		</div>

		<p>Is it me, or does this just scream &quot;drag and drop&quot;? That&#39;s what I would have told them to do. Then a user could simply drag something from their custom app to wherever they want it to go (most likely the currently open Explorer window).</p>
<p>I do sympathize with them not wanting to use the ridiculously bad folder browsing dialog. One of my pet peeves is that you cannot drag something from an already-open Explorer window into a common file dialog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877343">
				<div id="div-comment-877343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877343">
			November 26, 2010 at 11:31 pm</a>		</div>

		<p>Heck, why drag and drop? Shell extensions!</p>
<p>This guy&#39;s app isn&#39;t, and it can simulate a virtual folder of the third PC&#39;s dropbox. User does everything in Explorer. To move files, you just drag/drop, copy/paste, etc. the file to the virtual folder, which copies the file to the third PC. The destination browses the virtual folder, and copy/pastes.</p>
<p>Of course, no one tell this company that Microsoft did it as &quot;File Sharing&quot;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877383">
				<div id="div-comment-877383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877383">
			November 27, 2010 at 10:21 am</a>		</div>

		<p>You can ask questions like these all day long simply by calling Microsoft Developer Support. I have seen much crazier things come through there than this, which is why it&#39;s always important to ask &quot;What are you trying to accomplish?&quot; rather than simply answering the question as presented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877393">
				<div id="div-comment-877393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877393">
			November 27, 2010 at 10:23 am</a>		</div>

		<p>Oh, and here is how you reach them: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/aa570318.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/aa570318.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877413">
				<div id="div-comment-877413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Cohn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877413">
			November 27, 2010 at 12:19 pm</a>		</div>

		<p>My collegues have recently delivered an application that does exactly this: it can copy a remote file to a folder that is opened in Explorer. Or to a context related to an open window of another application. The catch is that the remote file resides on a cameraphone, therefore the user only points to the desired destination with her camera. And yes, under the hood we use drag&#39;n&#39;drop, not Ctrl-V.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877433">
				<div id="div-comment-877433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877433">
			November 28, 2010 at 4:37 pm</a>		</div>

		<p>A very simple rule for developers to internalise: if you&#39;re using SendKeys (or its moral equivalents), then you&#39;re doing it wrong. &nbsp;(With *maybe* a possible exception for user-initiated keyboard macro programs.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson even thread-even depth-1" id="comment-877493">
				<div id="div-comment-877493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101126-00/?p=12193#comment-877493">
			November 29, 2010 at 5:52 am</a>		</div>

		<p>I guess those who think anyone using SendKeys should retire from programming are not fans of Mark Russinovich and Process Monitor, or have never noticed what Process Monitor does when you ask it to jump to a registry key? :)</p>
<p>Not that it excuses using SendKeys when there is a better alternative, like in Raymond&#39;s example, but it seems sometimes it&#39;s the only way to get certain things done when trying to get another program to do what you want.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

