<html>
<head>
<title>Rendering standard Windows elements</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Rendering standard Windows elements</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 1, 2005 / year-entry #208</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The DrawFrameControl function allows you to render standard Windows elements in your custom controls. Let's start by simply rendering a selected radio button. Start with our</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
<a HREF="http://msdn.microsoft.com/library/en-us/gdi/pantdraw_4b3g.asp">
The <code>DrawFrameControl</code> function</a>
allows you to render standard Windows elements in your custom controls.
Let's start by simply rendering a selected radio button.
Start with our
<a HREF=http://blogs.msdn.com/oldnewthing/archive/2005/04/22/410773.aspx">
new scratch program</a>
and make this very simple change:
</p>
<pre>
class RootWindow : public Window
{
 ...
protected:
 <font COLOR=blue>void PaintContent(PAINTSTRUCT *pps);</font>
 ...
};

void RootWindow::PaintContent(PAINTSTRUCT *pps)
{
 <font COLOR=blue>RECT rc = { 0, 0, 32, 32 };
 DrawFrameControl(pps-&gt;hdc, &amp;rc, DFC_BUTTON,
                  DFCS_BUTTONRADIO | DFCS_CHECKED);</font>
}
</pre>
<p>
When you run the program, you'll see a little radio
button in the corner.
Woo-hoo.
</p>
<p>
You might also notice that it's an unthemed radio button.
To get a themed radio button, you need to use the theme-drawing functions
defined in the <code>uxtheme.h</code> header file.
Let's make the following further changes:
</p>
<pre>
class RootWindow : public Window
{
 ...
protected:
 <font COLOR=blue>void OpenTheme() { m_htheme = OpenThemeData(m_hwnd, L"Button"); }
 void CloseTheme()
 {
  if (m_htheme) { CloseThemeData(m_htheme); m_htheme = NULL; }
 }
 RootWindow() : m_htheme(NULL) { }
 ~RootWindow() { CloseTheme(); }</font>
 ...
};

LRESULT RootWindow::OnCreate()
{
 <font COLOR=blue>OpenTheme();</font>
 return 0;
}

void RootWindow::PaintContent(PAINTSTRUCT *pps)
{
 RECT rc = { 0, 0, 32, 32 };
 <font COLOR=blue>if (m_htheme) {
  DrawThemeBackground(m_htheme, pps->hdc,
                      BP_RADIOBUTTON, RBS_CHECKEDNORMAL,
                      &amp;rc, NULL);
 } else {</font>
  DrawFrameControl(pps->hdc, &amp;rc, DFC_BUTTON,
                   DFCS_BUTTONRADIO | DFCS_CHECKED);
 <font COLOR=blue>}</font>
}

LRESULT RootWindow::HandleMessage(...)
{
 ...
  <font COLOR=blue>case WM_THEMECHANGED:
   CloseTheme();
   OpenTheme();
   break;</font>
 ...
}
</pre>
<p>
This new version attempts to open the "Button" theme for the window
when the window is created.
If themes are not enabled, then this call will fail.
When it comes time to draw, we see whether we have a theme
available.
If so, then we use
<a HREF="http://msdn.microsoft.com/library/en-us/shellcc/platform/commctls/userex/functions/drawthemebackground.asp">
the <code>DrawThemeBackground</code> function</a> to draw it;
otherwise, we draw it the unthemed way.
Of course, we close the theme handle at destruction,
and we also refresh the theme handle if the user changes the theme.
</p>
<p>
If you run this new program with themes enabled,
then you will get the pretty themed radio button
instead of the old-fashioned unthemed radio button.
</p>
<p>
Next time, we'll look at the trickier menu bitmaps.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-universalis even thread-even depth-1" id="comment-293773">
				<div id="div-comment-293773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Universalis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293773">
			August 1, 2005 at 10:51 am</a>		</div>

		<p>Is there a standard way to get the size of the control you&#8217;re drawing? If I&#8217;m drawing multiple radio buttons then I need to know how much space to reserve for them so that they don&#8217;t overlap or have yawning gaps between them. Do I use GetSystemMetrics, or is there another function?<br />
<br />Also &#8211; your example draws directly onto the window DC, which apparently directly contradicts the DrawFrameControl docs: &quot;If uType is either DFC_MENU or DFC_BUTTON and uState is not DFCS_BUTTONPUSH, the frame control is a black-on-white mask (that is, a black frame control on a white background). In such cases, the application must pass a handle to a bitmap memory device control&#8230;&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293793">
				<div id="div-comment-293793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christopher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293793">
			August 1, 2005 at 11:29 am</a>		</div>

		<p>Does anyone have any idea why DrawThemeBackground and the other UxTheme functions fail to properly draw a progress bar control in Windows Vista Beta 1? </p>
<p>I&#8217;ve checked out the theme with a resource editor, and the functions are drawing the contents, but it is not the same as the system progress bars. It looks awful.</p>
<p>Is the win32 progressbar using something other than UxTheme now? (I don&#8217;t have &#8216;glass&#8217; capabilities). Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293853">
				<div id="div-comment-293853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293853">
			August 1, 2005 at 1:48 pm</a>		</div>

		<p>Yeah, how to get the standard size for the radio buttons/checkboxes? The system uses some fixed size that doesn&#8217;t depend on the dialog&#8217;s font size. Is it linked to the DPI settings?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293863">
				<div id="div-comment-293863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ramblings.aaronballman.com' rel='external nofollow' class='url'>Aaron Ballman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293863">
			August 1, 2005 at 4:02 pm</a>		</div>

		<p>What I&#8217;m curious about is how to use the theme drawing functions to properly draw a multiline editfield.  Specifically, how do you properly draw the scrollbar?</p>
<p>The reason I ask is because I&#8217;m handling the non-client paint message so that I can make the RichEdit control theme-savvy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293873">
				<div id="div-comment-293873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293873">
			August 1, 2005 at 4:04 pm</a>		</div>

		<p>Somehow related to other size questions:<br />
<br />  How do I get the size of the text area?<br />
<br />The client rect included the space for the circle in the radio-button and the one for the checkbox in the check-box button.<br />
<br />Nice to have to implement some layout manager (controls/dialogs auto-resizing to fit the text).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293883">
				<div id="div-comment-293883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas Haeber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293883">
			August 1, 2005 at 4:15 pm</a>		</div>

		<p>Here is one place to look for sizing guidelines: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnwue/html/ch14a.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnwue/html/ch14a.asp</a></p>
<p>But maybe there is some API to get the information at runtime too?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293913">
				<div id="div-comment-293913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eluent.com/freeware.htm' rel='external nofollow' class='url'>Doug Harrison</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293913">
			August 1, 2005 at 5:34 pm</a>		</div>

		<p>This topic reminds me of something. Does anyone know how to get the color the Common Controls 6 listview control uses for the background of the selected column, i.e. the column designated in LVM_SETSELECTEDCOLUMN? I hear tell the only way involves GetPixel. :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293953">
				<div id="div-comment-293953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.infinite-imagination.com/' rel='external nofollow' class='url'>Ralph Thomas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293953">
			August 1, 2005 at 11:30 pm</a>		</div>

		<p>There is no standard way to get the dimensions of any arbitrary control. I spent several weeks (fulltime) writing code to extract widget metrics for the Adobe Source Libraries (<a rel="nofollow" target="_new" href="http://opensource.adobe.com/" rel="nofollow">http://opensource.adobe.com/</a>) Win32 version.</p>
<p>The source is here:</p>
<p><a rel="nofollow" target="_new" href="http://cvs.sourceforge.net/viewcvs.py/adobe-source/adobe-source/adobe/future/widgets/sources/win/ui_core_implementation.cpp?rev=1.1&amp;view=auto" rel="nofollow">http://cvs.sourceforge.net/viewcvs.py/adobe-source/adobe-source/adobe/future/widgets/sources/win/ui_core_implementation.cpp?rev=1.1&#038;view=auto</a></p>
<p>The two functions which you are interested in are: calculate_edit_bounds and calculate_best_bounds. These call into a little UxTheme wrapper (which uses UxTheme when it&#8217;s available and has some good default values available when it&#8217;s not) that is in the same directory in CVS.</p>
<p>Note that the above code also figures out where the text baseline is inside the control (which you might not need). It does this so that controls in a row are baseline-aligned.</p>
<p>Ralph<br />
<br /><a href="mailto:ralpht@infinite-imagination.com">ralpht@infinite-imagination.com</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293963">
				<div id="div-comment-293963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Juris G.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-293963">
			August 2, 2005 at 1:23 am</a>		</div>

		<p>There is a typo in the link to the scratch program &#8211; it has a &#8216;%22&#8217; character at the end. Should be <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/04/22/410773.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/04/22/410773.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-294023">
				<div id="div-comment-294023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/08/02/446605.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-294023">
			August 2, 2005 at 10:00 am</a>		</div>

		<p>Drawing the menu checkmark, as an example.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-universalis even thread-even depth-1" id="comment-294043">
				<div id="div-comment-294043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Universalis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-294043">
			August 2, 2005 at 10:40 am</a>		</div>

		<p>To reiterate &#8211; the documentation says &quot;use this function to write to a memory DC, not to the screen&quot;, and your example writes directly to the screen. Which is right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-294073">
				<div id="div-comment-294073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-294073">
			August 2, 2005 at 11:07 am</a>		</div>

		<p>I believe the documentation is in error. The conditions should be &quot;If uType is either DFC_MENU or if uType is DFC_BUTTON and uState is DFCS_RADIOMASK&quot;.</p>
<p>The &quot;must&quot; is a bit too strong. It&#8217;s really trying to say, &quot;You&#8217;re getting a mask. I hope you know what to do with a mask.&quot;  I&#8217;ll see what I can do to clarify the docs better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-universalis even thread-even depth-1" id="comment-294083">
				<div id="div-comment-294083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Universalis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-294083">
			August 2, 2005 at 11:25 am</a>		</div>

		<p>Thanks &#8211; that would make a lot more sense!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-294213">
				<div id="div-comment-294213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/08/02/446605.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-294213">
			August 3, 2005 at 12:01 pm</a>		</div>

		<p>Drawing the menu checkmark, as an example.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-294243">
				<div id="div-comment-294243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rookkey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050801-11/?p=34763#comment-294243">
			August 3, 2005 at 12:08 pm</a>		</div>

		<p>For those trying to compile Raymond&#8217;s example, it may be helpful to know that you need to include some files:</p>
<p>#include &lt;uxtheme.h&gt;<br />
<br />#include &lt;tmschema.h&gt;</p>
<p>Since the WM_THEMECHANGED message has only been available since Windows XP, you may need to explicitly tell the preprocessor which version of Windows to compile under:</p>
<p>#define _WIN32_WINNT 0x0501</p>
<p>Also, Raymond&#8217;s example assumes you have declared a member variable in the RootWindow class to hold the HTHEME handle:</p>
<p>class RootWindow : public Window<br />
<br />{<br />
<br /> &#8230;<br />
<br />private:<br />
<br /> HTHEME m_htheme;<br />
<br />};</p>
<p>After making these changes, you&#8217;ll see the Windows XP-themed radio button in the upper-left corner of the program&#8217;s window.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

