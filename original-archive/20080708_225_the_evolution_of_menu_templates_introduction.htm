<html>
<head>
<title>The evolution of menu templates: Introduction</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The evolution of menu templates: Introduction</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 8, 2008 / year-entry #226</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080708-00/?p=21713</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>2</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">As with dialog templates, menu templates have also gone through a four-stage evolutionary process. People don't often generate menu templates in code, although the LoadMenuIndirect function is there waiting for you once you get the urge. As a result, there aren't many questions from people trying to generate menu templates dynamically, but I'm going to...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p> <a href="http://blogs.msdn.com/oldnewthing/archive/2004/06/24/164737.aspx"> As with dialog templates</a>, menu templates have also gone through a four-stage evolutionary process. People don't often generate menu templates in code, although the <code>LoadMenuIndirect</code> function is there waiting for you once you get the urge. As a result, there aren't many questions from people trying to generate menu templates dynamically, but I'm going to go into the history of menu templates anyway, just out of a sense of completeness. </p>
<p> If you're having problems with your dynamically-generated menu templates, you can ask the resource compiler to tell you what you're doing wrong by createing a *.rc file for it and compiling it into a scratch program. Dump the resource as bytes, and there's your answer. Same trick we used for dialog templates. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (2)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-645363">
				<div id="div-comment-645363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jamaw At Nouals</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080708-00/?p=21713#comment-645363">
			July 8, 2008 at 5:13 pm</a>		</div>

		<p>A pity menuitems and accels can&#8217;t be linked together, instead you have to put the accelerator of a menuitem in its string, seperated by a TAB character, like NewtCtrl+N. This way of doing this (almost) never takes into account Apple keyboards, layouts with a seperate Alt and AltGr and probably some others I can&#8217;t think of right now.</p>
<p>At some point I wanted accelerators to &quot;just work&quot; so I wrote a function that walks through the menu to generate the corresponding accelerator table, and just &quot;be done&quot; with it. I think it would&#8217;ve been better to write a function that combines LoadAccelerators and LoadMenu, adding the textual representation of an accelerator (with matching id) as it creates the menu. It&#8217;d only have to deal with 1 version of menu template, so it would be relatively simple.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645383">
				<div id="div-comment-645383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080708-00/?p=21713#comment-645383">
			July 8, 2008 at 5:33 pm</a>		</div>

		<p>On the matter of 16-bit extended templates, what was not so well known about Win9x is that it allowed some of its new features (not all, but most of the exceptions are related to the shell, for example none of the common controls introduced after Windows 95 can be used), including, of course, this, to be used by 16-bit applications WITHOUT thunking. In fact, in older versions of the Win32 SDKs there was a 16-bit RC utility that you could use to actually mark your app as version 4.0, and the Win9x DDKs had 16-bit header and library files that allowed you to program 16-bit apps that take advantage of Win9x. Most of this support probably came from early 95 development (for example, as mentioned in another blog article, the Cabinet shell was built in both 16-bit and 32-bit). It was not documented of course, and I wonder why?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

