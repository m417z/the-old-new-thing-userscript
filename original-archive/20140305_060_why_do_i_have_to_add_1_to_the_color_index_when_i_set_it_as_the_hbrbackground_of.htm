<html>
<head>
<title>Why do I have to add 1 to the color index when I set it as the hbrBackground of a window class?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why do I have to add 1 to the color index when I set it as the hbrBackground of a window class?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 5, 2014 / year-entry #61</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Our scratch program sets the background color to COLOR_WINDOW by setting the class background brush as follows: wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1); What's with the +1? Okay, first of all, let's backtrack a bit. The real first question is, "What's the deal with taking an integer (COLOR_WINDOW) and casting it to a HBRUSH and expecting...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Our
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a>
sets the background color to <code>COLOR_<wbr>WINDOW</code>
by setting the class background brush as follows:
</p>
<pre>
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
</pre>
<p>
What's with the <code>+1</code>?
</p>
<p>
Okay, first of all, let's backtrack a bit.
</p>
<p>
The real first question is,
"What's the deal with taking an integer (<code>COLOR_<wbr>WINDOW</code>)
and casting it to a <code>HBRUSH</code> and expecting anything sane
to happen?"
</p>
<p>
The window manager wants to provide multiple ways of setting the class
background brush.
</p>
<ol>
<li>The application can request
    that no automatic background drawing should occur at all.</p>
<li>The application can request
    custom background drawing and provide that custom drawing by handling
    the <code>WM_<wbr>ERASE&shy;BKGND</code> message.</p>
<li>The application can request that the background be a specific brush
    provided by the application.</p>
<li>The application can request that the background be a specific system color.
</ol>
<p>
The first three cases are easy:
If you don't want automatic background drawing,
then pass
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/01/26/62991.aspx">
the hollow brush</a>.
If you want custom background drawing,
then pass <code>NULL</code> as the brush.
And if you want background drawing with a specific brush,
then pass that brush.
It's the last case that is weird.
</p>
<p>
Now, if <code>Register&shy;Class</code> were being invented today,
we would satisfy the last requirement
by saying,
"If you want the background to be a system color,
then use a system color brush like this:
</p>
<pre>
    wc.hbrBackground = GetSysColorBrush(COLOR_WINDOW);
</pre>
<p>System color brushes match the corresponding system color,
so this sets your background to whatever the current system
window color is."
</p>
<p>
But just as
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/01/19/10117410.aspx">
NASA couldn't use the Space Shuttle to rescue the Apollo 13 astronauts</a>,
the
<code>Register&shy;Class</code> function couldn't use
<code>Get&shy;Sys&shy;Color&shy;Brush</code> for class brushes:
At the time
<code>Register&shy;Class</code> was designed,
system color brushes had not yet been invented yet.
In fact, they won't have been invented for over a decade.
</p>
<p>
Therefore, <code>Register&shy;Class</code> had to find some
way of smuggling an integer inside a pointer,
and the traditional way of doing this is to say that
certain numerically-small pointer values are actually integers
in disguise.
We've seen this with
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2006/05/05/590749.aspx">
the <code>HINSTANCE</code> returned by
<code>Shell&shy;Execute</code></a>,
with
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/05/01/8445487.aspx">
the <code>MAKE&shy;INT&shy;ATOM</code> macro</a>,
with the
<code>MAKE&shy;INT&shy;RESOURCE</code>/<code>IS_<wbr>INT&shy;RESOURCE</code>
macro pair,
and with the second parameter to the
<code>Get&shy;Proc&shy;Address</code> function.
(There are plenty of other examples.)
</p>
<p>
The na&iuml;ve solution would therefore be to say,
"Well, if you want a system color to be used as the brush color,
then just cast the <code>COLOR_<wbr>XXX</code> value to
an <code>HBRUSH</code>,
and the <code>Register&shy;Class</code> function will recognize it
as a smuggled integer and treat it as a color code rather than an
actual brush."
</p>
<p>
And then you run into a problem:
The numeric value of
<code>COLOR_<wbr>SCROLL&shy;BAR</code> is zero.
Casting this to a <code>HBRUSH</code> would result in a
<code>NULL</code> pointer,
but a <code>NULL</code> brush already means something else:
Don't draw any background at all.
</p>
<p>
To avoid this conflict, the <code>Register&shy;Class</code>
function artificially adds 1 to the system color number
so that none of its smuggled integers will be mistaken for
<code>NULL</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1110593">
				<div id="div-comment-1110593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110593">
			March 5, 2014 at 7:10 am</a>		</div>

		<p>Q: Who wants scrollbar color as back color.</p>
<p>A: The scrollbar.</p>
<p>Personally I&#39;d have made scrollbars part of the chrome (non client area) and an independent scrollbar made by setting HSCROLL or VSCROLL on button but oh well.</p>
<div class="post">[<em>Without <code>COLOR_SCROLLBAR</code>, how would you make a custom control that matches the scroll bar color? Why does <code>COLOR_SCROLLBAR</code> have to be the one loser? (Also, if the scroll bar control was all-nonclient, how would you customize the color?) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jason-warren odd alt thread-odd thread-alt depth-1" id="comment-1110603">
				<div id="div-comment-1110603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Jason+Warren' rel='external nofollow' class='url'>Jason Warren</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110603">
			March 5, 2014 at 7:33 am</a>		</div>

		<p>Another great insight into why things are they way they are!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110613">
				<div id="div-comment-1110613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Parker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110613">
			March 5, 2014 at 7:42 am</a>		</div>

		<p>These kind of tricks are still a common way to extend things without redesigning&#8230;unfortunately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes odd alt thread-odd thread-alt depth-1" id="comment-1110623">
				<div id="div-comment-1110623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110623">
			March 5, 2014 at 7:56 am</a>		</div>

		<p>I like the awkward phrasing that starts to emerge as you attempt to describe an event that is in the past from the perspective of a time even further in the past causing it to be both past and future at the same time. It reminds me of a great Douglas Adams quote:</p>
<p>The major problem [with time travel] is simply one of grammar, and the main work to consult in this matter is Dr. Dan Streetmentioner&#39;s Time Traveler&#39;s Handbook of 1001 Tense Formations. It will tell you, for instance, how to describe something that was about to happen to you in the past before you avoided it by time-jumping forward two days in order to avoid it. The event will be descibed differently according to whether you are talking about it from the standpoint of your own natural time, from a time in the further future, or a time in the further past and is futher complicated by the possibility of conducting conversations while you are actually traveling from one time to another with the intention of becoming your own mother or father.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1110633">
				<div id="div-comment-1110633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110633">
			March 5, 2014 at 8:20 am</a>		</div>

		<p>Nowadays the +1 wouldn&#39;t be necessary even if we still used the cast to HBRUSH, because COLOR_SCROLLBAR seems to have died ( <a rel="nofollow" target="_new" href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/fac3ab17-2de9-45f9-b6c2-8afa87ed999a/">social.msdn.microsoft.com/&#8230;/fac3ab17-2de9-45f9-b6c2-8afa87ed999a</a> ).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110643">
				<div id="div-comment-1110643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110643">
			March 5, 2014 at 8:21 am</a>		</div>

		<p>[(Also, if the scroll bar control was all-nonclient, how would you customize the color?) -Raymond]</p>
<p>The same way you customize the menu bar color.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110653">
				<div id="div-comment-1110653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">*</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110653">
			March 5, 2014 at 8:29 am</a>		</div>

		<p>Why is the numeric value of COLOR_SCROLL­BAR zero? By convention, zero is normally reserved for absent or error values. Utilizing zero is asking for trouble and I&#39;m sure the problem here is not by accident.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1110663">
				<div id="div-comment-1110663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110663">
			March 5, 2014 at 8:32 am</a>		</div>

		<p>@*: Arrays are zero-indexed, in which case the error value is -1 rather than zero. I wouldn&#39;t be surprised if the system colors were an array, especially when the parameter of GetSysColor() is called &quot;nIndex&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110673">
				<div id="div-comment-1110673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">*</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110673">
			March 5, 2014 at 8:37 am</a>		</div>

		<p>@Medinoc: So the intention is to save one array entry? As -1 is the error value, one oversight in error checking and you are indexing -1 into the array and get screwed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110693">
				<div id="div-comment-1110693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">*</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110693">
			March 5, 2014 at 8:57 am</a>		</div>

		<p>@Medinoc: Memory address is also an index into an array and you should probably use 0xFFFFFFFF instead of NULL as the error value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1110713">
				<div id="div-comment-1110713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110713">
			March 5, 2014 at 9:12 am</a>		</div>

		<p>&gt; wc.hbrBackground = GetSysColorBrush(COLOR_WINDOW);</p>
<p>We can still do this, we just have to implement GetSysColorBrush as a client-side function.</p>
<div class="post">[<em>Except that there is no way to change the color of a solid brush once it has been created, so if the window color changes, you&#39;re stuck. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110723">
				<div id="div-comment-1110723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110723">
			March 5, 2014 at 10:46 am</a>		</div>

		<p>[Except that there is no way to change the color of a solid brush once it has been created, so if the window color changes, you&#39;re stuck. -Raymond]</p>
<p>What do you think SetClassLong is for?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110743">
				<div id="div-comment-1110743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110743">
			March 5, 2014 at 11:28 am</a>		</div>

		<p>I&#39;ve seen countless of times code like this:</p>
<p> &nbsp; &nbsp;wc.hbrBackground = (HBRUSH)COLOR_WINDOW;</p>
<p>and no one seems to notice.</p>
<p>People don&#39;t read documentation. Most of WinAPI code in the wild is copy-pasted from online tutorials, with the same quirks and mistakes repeated over and over.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110753">
				<div id="div-comment-1110753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110753">
			March 5, 2014 at 2:12 pm</a>		</div>

		<p>Well to be fair, in Win16, COLOR_MENU and COLOR_WINDOW were the same color. Now, it&#39;s approximately the same as BTNFACE which probably makes it look more like a dialog box. I suppose it&#39;s possible somebody likes their menus inverted, but it&#39;s unlikely anybody would discover this particular bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110763">
				<div id="div-comment-1110763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110763">
			March 5, 2014 at 2:19 pm</a>		</div>

		<p>Why not a MAKESMUGGLEDBRUSH macro, which would hide the + 1 within it? That would make the code more readable, reduce the chance of errors, and compile to the exact same machine code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1110683">
				<div id="div-comment-1110683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110683">
			March 5, 2014 at 8:40 am</a>		</div>

		<p>@*: Error checking where? You only need to write on GetSysColor() function and one GetSysColorBrush() function for internal use. And there is no function that *returns* a system color index.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1110703">
				<div id="div-comment-1110703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110703">
			March 5, 2014 at 9:11 am</a>		</div>

		<p>System colors are an array &quot;small enough for signed indexes&quot;, which means checking for &quot;the error value&quot; can be abridged into checking for *any* negative value, simply by checking the sign status flag (after *any* operation that affects it, not just comparison).</p>
<p>You can&#39;t do this with memory, where you have to explicitly compare with either 0xFFFFFFFF or 0x00000000. The latter is easier.</p>
<p>I know this isn&#39;t an argument in favor of using zero as a valid index for small arrays; it&#39;s only a rebuttal of the argument against it &quot;because memory doesn&#39;t does so&quot;: Memory has different requirements.</p>
<p>Also, &quot;saving one array entry&quot; was a pretty big deal back in Win16&#39;s days.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110773">
				<div id="div-comment-1110773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110773">
			March 5, 2014 at 7:23 pm</a>		</div>

		<p>@Raymond: [Except that there is no way to change the color of a solid brush once it has been created, so if the window color changes, you&#39;re stuck. -Raymond]</p>
<p>If Microsoft was implementing GetSysColorBrush, there&#39;s no reason why it has to return a SolidColorBrush &#8211; only that it must return a HBRUSH. It could return a HBRUSH that always maps to COLOR_WINDOW trivially (either via a fudge like &quot;return (HBRUSH)(param + 1)&quot; or via something better like if(param == COLOR_WINDOW) return NtGdi_CreateSystemColorBrush(SYSCOLOR_WINDOW) ).</p>
<div class="post">[<em>Um, you&#39;re responding to a side thread about how to get the effect of GetSysColorBrush before GetSysColorBrush was invented. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110783">
				<div id="div-comment-1110783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110783">
			March 5, 2014 at 11:50 pm</a>		</div>

		<p>@Cesar, how does a DBRUSH differ from an HBRUSH, and why would a muggle want one? :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1110803">
				<div id="div-comment-1110803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110803">
			March 6, 2014 at 3:29 am</a>		</div>

		<p>I propose some simple syntactic sugar:</p>
<p>// .h</p>
<p>inline HBRUSH WindowClassBrush_From_SysColor(int c) { return (HBRUSH)(c + 1); }</p>
<p>// .cpp</p>
<p>wc.hbrBackground = WindowClassBrush_From_SysColor(COLOR_WINDOW);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1110813">
				<div id="div-comment-1110813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110813">
			March 6, 2014 at 6:33 am</a>		</div>

		<p>@Maurits: Too much sugar will make you fat and have diabetes. Perhaps now we know why Windows is so bloated (too much syntactic sugar in the source).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110873">
				<div id="div-comment-1110873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1110873">
			March 6, 2014 at 7:32 am</a>		</div>

		<p>@Brian_EE: How exactly would an inline function that does only what you have to do anyhow, increase the code size? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1111063">
				<div id="div-comment-1111063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140305-00/?p=1593#comment-1111063">
			March 7, 2014 at 5:55 am</a>		</div>

		<p>@Voo&#8230; it&#39;s just a joke. Go with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

