<html>
<head>
<title>How did registry keys work in 16-bit Windows?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How did registry keys work in 16-bit Windows?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 17, 2008 / year-entry #19</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Back in 16-bit Windows, the registry was a very different beast. Originally, the only registry hive was HKEY_CLASSES_ROOT, and the only things it was used for were COM object registration and file type registration. (Prior to the registry, file type registration was done in WIN.INI, and the only verb you could register for was "open".)...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Back in 16-bit Windows, the registry was a very different beast. Originally, the only registry <a href="http://blogs.msdn.com/oldnewthing/archive/2003/08/08/54618.aspx"> hive</a> was <code>HKEY_CLASSES_ROOT</code>, and the only things it was used for were COM object registration and file type registration. (Prior to the registry, <a href="http://support.microsoft.com/kb/58333"> file type registration was done in <code>WIN.INI</code></a>, and the only verb you could register for was "open".) The registry was stored in a single file, <code>REG.DAT</code>, which could not exceed 64KB in size.</p>
<p> But back to registry keys. In 16-bit Windows, the registry was much simpler. The first program to call <code>RegOpenKey</code> caused the registry to be loaded, and the registry kept a running count of how many registry keys were open. When the matching number of <code>RegCloseKey</code> calls was made, the registry was written back to disk and unloaded from memory. (Yes, this means that if a program leaked a registry key, then the registry never got unloaded. Welcome to 16-bit Windows, which <a href="http://blogs.msdn.com/oldnewthing/archive/2005/10/21/483438.aspx"> trusted software developers not to be stupid</a>.) The registry key itself was just an index into the raw registry data. </p>
<p> This backgrounder is really just a boring set-up for <a href="http://msdn.microsoft.com/library/en-us/sysinfo/base/regopenkey.asp"> this little quirk of the <code>RegOpenKey</code> function in Win32</a>: </p>
<blockquote class="q"><p> If this parameter [lpSubKey] is NULL or a pointer to an empty string, the function returns the same handle that was passed in. </p>
</blockquote>
<p> This is an example of <i>over-documentation</i>, documenting the implementation rather than the contract. That the same handle was returned in 16-bit Windows is just a side effect of the fact that a registry key was an index. Opening the same key twice leads to the same key, which consequently has the same index (since it's the same thing). Therefore, opening the same key more than once yields the same numeric value for the handle. </p>
<p> On the other hand, in 16-bit Windows, even if you reopened the key and got the same numeric value back, it nevertheless increased the "number of open registry keys" counter, and consequently you had to call <code>RegCloseKey</code> for each successful call to <code>RegOpenKey</code>, even if the numerical handle values were the same (which you shouldn't care about since handles are opaque). </p>
<p> The people designing the 32-bit registry found themselves in a pickle. What should <code>RegOpenKey</code> do if asked to open the same key that was passed in? Should it return a new key which also must be closed with <code>RegCloseKey</code>? Or should it preserve the inadvertently contractual 16-bit behavior and return the same numeric key back? Since <a href="http://blogs.msdn.com/oldnewthing/archive/2007/08/29/4620336.aspx"> kernel handles are not reference-counted</a>, returning the same numeric value back means that when the caller closes the key, they close both that key and the original key passed in (since they are the same thing). </p>
<p> The Win32 folks went for the second option: <code>RegOpenKey</code> on the same key returns the same numeric value back, which must not be closed (for doing so would close the original key as well). Personally, I would have gone for the first option (returning a new handle), but presumably the people who made this decision did so for a good reason. I suspect application compatibility played a major role. </p>
<p> What does this mean for you? It means that you should just plain avoid the <code>RegOpenKey</code> function, since it becomes harder to predict whether you need to close the returned key or not. Sure, if you pass a hard-coded string as the subkey name you can tell, but if the subkey name is dynamically-generated, then there's a possibility that the subkey name is a null string, in which case the returned key shouldn't be closed. Instead, use <code>RegOpenKeyEx</code>, which&mdash;since it is a new function in Win32&mdash;does not have the compatibility constraints of <code>RegOpenKey</code>. The key returned by <code>RegOpenKeyEx</code> is a brand new key and must be closed. Doesn't matter whether the subkey name is blank or not. Open with <code>RegOpenKeyEx</code> and close with <code>RegCloseKey</code>, end of story. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-aadsso-1live-com000300008195987d even thread-even depth-1" id="comment-590933">
				<div id="div-comment-590933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Spire' rel='external nofollow' class='url'>Spire</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-590933">
			January 17, 2008 at 10:18 am</a>		</div>

		<p>Related trivia: Back in the Win16 days, the registry was called the &quot;registration database&quot;, and regedit.exe was the &quot;Registration Database Editor&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-590983">
				<div id="div-comment-590983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-590983">
			January 17, 2008 at 11:16 am</a>		</div>

		<p>Huh. I always assumed the 32-bit registry predated the 16-bit registry since so much of Windows NT&#8217;s configuration uses it, although of course the registry was released originally for Windows 3.1 in 1992 while NT 3.1 was released in 1993.</p>
<p>I suppose this is probably a case where NT&#8217;s implementation came first, in NtCreateKey, then the concept was backported (badly) to 16-bit Windows, leaving a compatibility mess for the Win32 API authors to deal with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590993">
				<div id="div-comment-590993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-590993">
			January 17, 2008 at 11:21 am</a>		</div>

		<p>&quot;&#8230;trusted software developers not to be stupid.&quot;</p>
<p>Well, there&#8217;s your problem. &nbsp;But seriously, isn&#8217;t there only so much you can do to protect against stupidity / maliciousness? &nbsp;At what point do you have to concede defeat?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591003">
				<div id="div-comment-591003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.differentpla.net/' rel='external nofollow' class='url'>roger@differentpla.net</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591003">
			January 17, 2008 at 11:25 am</a>		</div>

		<p>Huh Mike? Windows 3.1 was released <em>before</em> Windows NT 3.1, and yet it was &quot;backported (badly)&quot;?</p>
<p>The registry was implemented as part of OLE 1 (i.e. before COM). This made its first appearance in Windows 3.1, and was then (presumably) ported forward into Win32.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591013">
				<div id="div-comment-591013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CN</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591013">
			January 17, 2008 at 11:30 am</a>		</div>

		<p>rlipscombe: Mike&#8217;s point was probably that the work on NT had been going on for quite some time (even predating the release of Windows 3.0), and, as the Registry now seems so prevalent in every aspect of NT configuration, it would make sense to assume that it was present in some form when the decision was made to include a similar concept in Win 3.1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cornedbee odd alt thread-odd thread-alt depth-1" id="comment-591023">
				<div id="div-comment-591023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CornedBee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591023">
			January 17, 2008 at 11:30 am</a>		</div>

		<p>Hmmm &#8230; trusting a programmer not to be stupid is one thing. Trusting him to never leak a handle is another.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591103">
				<div id="div-comment-591103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591103">
			January 17, 2008 at 1:20 pm</a>		</div>

		<blockquote><p>
  &gt; &quot;&#8230;trusted software developers not to be stupid.&quot;</p>
<p>  Well, there&#8217;s your problem
</p></blockquote>
<p>Please understand that this was not a problem in the 80&#8217;s. &nbsp;Not everyone was a programmer. &nbsp;There were not even formalized computer science degrees (in the 70&#8217;s up to the 80&#8217;s people who entered the programming profession usually had a degree in mathematics). &nbsp;There were only a handful of programmers, most of whom were smart.</p>
<p>Jonathan Pryor is right in that Win16 was developed for woefully underpowered computers, as compared to the mainframes that VAX and/or UNIX ran. &nbsp;But please understand that another factor in deciding to trust developers is that most developers were sane. &nbsp;Remebmer, it&#8217;s the 80&#8217;s. &nbsp;This was before the time of &quot;Learn C++ in 21 Days&quot; and sub-par students that managed to graduate with a BS in computer science and entered the field.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591123">
				<div id="div-comment-591123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591123">
			January 17, 2008 at 1:27 pm</a>		</div>

		<p>BTW, the new Win32 registry was one of the things backported to Win16 with Windows 95.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591133">
				<div id="div-comment-591133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591133">
			January 17, 2008 at 2:03 pm</a>		</div>

		<p>&quot;But seriously, isn&#8217;t there only so much you can do to protect against stupidity / maliciousness? &nbsp;At what point do you have to concede defeat?&quot;</p>
<p>Probably 1995.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591173">
				<div id="div-comment-591173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591173">
			January 17, 2008 at 3:08 pm</a>		</div>

		<p>&quot;But seriously, isn&#8217;t there only so much you can do to protect against stupidity / maliciousness? &nbsp;At what point do you have to concede defeat?&quot;</p>
<p>Try 1988 &#8211; Morris Worm: unintended side-effects of buffer overflows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591243">
				<div id="div-comment-591243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591243">
			January 17, 2008 at 7:26 pm</a>		</div>

		<p>&#8220;The Win32 folks went for the second option: RegOpenKey on the same key returns the same numeric value back, which must not be closed (for doing so would close the original key as well). Personally, I would have gone for the first option (returning a new handle), but presumably the people who made this decision did so for a good reason. I suspect application compatibility played a major role.&#8221;</p>
<p>I would have thought that AppCompat would have led to the other decision &#8212; after all, it seems less likely that someone was relying on the same numeric value to be returned than the idea that two calls to RegCloseKey would be required. &nbsp;After all, the ported code would have those two calls, since they&#8217;re not allowed to leak handles (as you also pointed out)&#8230;</p>
<div class=post>[<i>That they went for preserving the behavior tells me that there is a strong likelihood that somebody <u>was</u> relying on the numerical value being the same. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591083">
				<div id="div-comment-591083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Pryor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591083">
			January 17, 2008 at 12:15 pm</a>		</div>

		<p>&gt; &gt; &quot;&#8230;trusted software developers not to be stupid.&quot;</p>
<p>&gt; Well, there&#8217;s your problem.</p>
<p>No, the problem was that Win16 was developed for a resource-contrained (minimal RAM, minimal CPU; 16-bit x86 didn&#8217;t support memory protection between processes, etc.), so to get *anything* decent done they had to go with a few &quot;simplifying assumptions.&quot; &nbsp;Sane/decent developers was one of those simplifying assumptions.</p>
<p>The same assumption is made for e.g. kernel-space device drivers, where if the author screws things up, the system crashes. </p>
<p>Notice that many of these were cleaned up in Win32, such as the aforementioned RegOpenKeyEx(), *real* process address space separation, etc., with a corresponding increase in machine requirements (32-bit CPU, more RAM, etc.).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591323">
				<div id="div-comment-591323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591323">
			January 18, 2008 at 1:37 am</a>		</div>

		<p>I remember the Win16 registry for a different reason. Back then, the computer music format that was the rage was MODs, and the best player was MOD4Win, a nice shareware (now freeware) app for Windows 3.1. Of course, it relied on a key code you got when you registered it, and it tracked the number of days that you used it.</p>
<p>The thing was, uninstalling and reinstalling never re-enabled the trial functionality, it was always hidden deep within the bowels of Windows. Actually, it was kept in the registry. Since no one knew about it (since a user had no need to ever go in there, unlike today) it was the perfect place to hide stuff. I found out about it when someone hinted that I should look there, and sure enough, deleting those keys reset the timer.</p>
<p>Fun times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591333">
				<div id="div-comment-591333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Spike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591333">
			January 18, 2008 at 3:13 am</a>		</div>

		<p>Nicholas&gt;</p>
<p>&quot;Please understand that this was not a problem in the 80&#8217;s. &nbsp;Not everyone was a programmer. &nbsp;There were not even formalized computer science degrees&quot;</p>
<p>My BSc. degree certificate which was given to me in 1982 quite explicitly states &quot;Computer Science&quot;.</p>
<p>Was I the victim of some elaborate hoax then?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591273">
				<div id="div-comment-591273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">oj</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591273">
			January 17, 2008 at 9:30 pm</a>		</div>

		<p>[Pre-empted pre-emptive snarky comment]</p>
<p>Oh yawn!</p>
<p>Now, if the article had gone into more detail about how this all worked on Windows 286, that would have been really riveting. And relevant.</p>
<p>*snicker*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591353">
				<div id="div-comment-591353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591353">
			January 18, 2008 at 9:26 am</a>		</div>

		<p>&quot;</p>
<p>(Yes, this means that if a program leaked a registry key, then the registry never got unloaded.</p>
<p>&quot;</p>
<p>Even when Windows was shut down?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591373">
				<div id="div-comment-591373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Are you kidding?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591373">
			January 18, 2008 at 9:48 am</a>		</div>

		<p>&quot;Even when Windows was shut down?&quot;</p>
<p>Yes the registry stayed loaded even with the power off. You never know when you might need that registry in a power off scenario.</p>
<p>Then again I really hope you were just kidding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591403">
				<div id="div-comment-591403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591403">
			January 18, 2008 at 10:41 am</a>		</div>

		<p>&quot;</p>
<p>Yes the registry stayed loaded even with the power off. You never know when you might need that registry in a power off scenario.</p>
<p>&quot;</p>
<p>I meant: Was the registry base saved to disk when exiting Windows when a handle is leaking?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-someone even thread-even depth-1" id="comment-591433">
				<div id="div-comment-591433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/anony.muos' rel='external nofollow' class='url'>anony.muos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591433">
			January 18, 2008 at 11:02 am</a>		</div>

		<p>AFAI understand, with stupid Vista&#8217;s file type options removed, the only verb you can register for is &quot;open&quot; unless you do it programmatically. Of course, we&#8217;ve got Open with but that&#8217;s more than 2 clicks. Are we back to Windows 3.1 then?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591693">
				<div id="div-comment-591693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591693">
			January 19, 2008 at 6:35 pm</a>		</div>

		<p>&quot;Please understand that this was not a problem in the 80&#8217;s. &nbsp;Not everyone was a programmer. &nbsp;There were not even formalized computer science degrees (in the 70&#8217;s up to the 80&#8217;s people who entered the programming profession usually had a degree in mathematics).&quot;</p>
<p>Where does this crazy rumor keep coming from? &nbsp;There were well-established Computer Science degree programs when I started college in 1974. &nbsp;Most of them had been around for years, certainly back into the 1960s.</p>
<p>Some had close ties to Math, EE, or Systems Science programs, but they were clearly distinct from them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591713">
				<div id="div-comment-591713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bcthanks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-591713">
			January 19, 2008 at 10:25 pm</a>		</div>

		<p>This is going way off topic&#8230;</p>
<p>&quot;There were only a handful of programmers, most of whom were smart.&quot;</p>
<p>And most users could be trusted.</p>
<p>It&#8217;s funny people are defending their CS degrees. From the point of view of engineering reliable systems, Computer Science is as worthless today as it was back then.</p>
<p>Having a CS degree does not make one a smart programmer. And it certainly does not confer any project management skills necessary to resist management&#8217;s push for more features in less time.</p>
<p>Remember it was a bunch of academics who designed the C library, with gets() that doesn&#8217;t specify the buffer length, the unbounded strxxx functions and printf that writes back to its arguments.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-592113">
				<div id="div-comment-592113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Illuminator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080117-00/?p=23783#comment-592113">
			January 22, 2008 at 2:56 am</a>		</div>

		<p>bcthanks, that last line made my day.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

