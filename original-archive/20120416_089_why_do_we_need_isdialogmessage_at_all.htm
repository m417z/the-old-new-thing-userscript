<html>
<head>
<title>Why do we need IsDialogMessage at all?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why do we need IsDialogMessage at all?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 16, 2012 / year-entry #90</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120416-00/?p=7853</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">alv wonders why we need the IsDialogMessage function at all. "All its activity could take place inside the window procedure of the modeless dialog itself", since when it doesn't have focus, it shouldn't be responding to messages anyway. Sure, that works great if the modeless dialog has focus. But it almost never does. What has...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>alv wonders <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/20/10040074.aspx#10042921"> why we need the <code>IsDialogMessage</code> function at all</a>. "All its activity could take place inside the window procedure of the modeless dialog itself", since when it doesn't have focus, it shouldn't be responding to messages anyway.</p>
<p> Sure, that works great if the modeless dialog has focus. But it almost never does. What has focus is a control <i>inside</i> the modeless dialog. And in that case, the modeless dialog never sees the message, since the rule is that keyboard messages go to the window with focus. And that ain't the modeless dialog box. </p>
<p> Consider, for example, a message box with OK and Cancel buttons. Focus defaults to the OK button. You hit the TAB key to move to the Cancel button. The TAB message goes to the OK button because it is the control with keyboard focus. The OK button says, "I don't know what TAB means. I guess I'll just beep." (The button control doesn't know whether it's part of a dialog box or not; it just worries about being a button.) </p>
<p> The <code>IsDialogMessage</code> function is in the message loop so that it can intercept the TAB message <i>before it reaches the OK button</i>. At this point, <code>IsDialogMessage</code> can step in and say "Hang on, I'll take care of this" and use the TAB key to perform dialog box navigation. (Of course, as we know, it first <a href="http://blogs.msdn.com/b/oldnewthing/archive/2003/11/26/55872.aspx"> checks with the control that stealing the message is okay</a>.) </p>
<p> Some progamming frameworks capture the concept of "stealing messages" with names like <a href="http://msdn.microsoft.com/en-us/library/kkbhxcs2(VS.80).aspx"> <code>PreTranslateMessage</code></a> and <a href="http://msdn.microsoft.com/en-us/magazine/cc785480.aspx"> event routing</a>. But the basic idea is the same: Letting somebody other than the target of a window message get a chance to intercept the message and do something special with it. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-978373">
				<div id="div-comment-978373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120416-00/?p=7853#comment-978373">
			April 16, 2012 at 7:49 am</a>		</div>

		<p>I think this misconception may be in some part based on the HTML event model, where inner &quot;controls&quot; [elements], like the OK button, naturally pass the event on to the parent if they do not handle it themselves. (or the other HTML event model, where the parent control is always given all events and can choose to handle it itself or give it to the relevant child element &#8211; in either case, nothing special has to happen for the dialog to handle &quot;tab&quot;, since the button clearly isn&#39;t interested in it.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-978393">
				<div id="div-comment-978393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120416-00/?p=7853#comment-978393">
			April 16, 2012 at 8:15 am</a>		</div>

		<p>Wow, I reinvented IsDialogMessage once.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-978413">
				<div id="div-comment-978413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120416-00/?p=7853#comment-978413">
			April 16, 2012 at 10:37 am</a>		</div>

		<p>Sometimes I skip an entry since it seems so high above my head in Windows API world, but I gave this one a shot and learned something interesting about Windows and events in general :) I&#39;ll take this lesson with me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-978433">
				<div id="div-comment-978433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">alv</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120416-00/?p=7853#comment-978433">
			April 17, 2012 at 2:50 am</a>		</div>

		<p>Thanks for the explanation! I also see now that I formulated my question in a misleading way; instead of &#39;has focus&#39; I should&#39;ve written &#39;active&#39;. Let me explain: This question came up when I was to develop and add-on to a somewhat large software suite, and part of the project was displaying a modeless dialog. I didn&#39;t have access to the main message loop (not even read-only access to the source code), and because of other constraints having my own message loop in a separate thread or process wasn&#39;t feasible either. Therefore, I had to reimplement the functionality of IsDialogMessage inside the dialog. I would&#39;ve been very happy if there had been some way of telling Windows &#39;Hey, here is my modeless dialog, please incorporate it in some magical way to the message loop&#39;, and of course deregister it afterwards &#8211; for example when handling the WM_ACTIVATE message.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

