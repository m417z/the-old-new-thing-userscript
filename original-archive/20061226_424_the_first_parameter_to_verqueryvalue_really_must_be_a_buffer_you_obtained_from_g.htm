<html>
<head>
<title>The first parameter to VerQueryValue really must be a buffer you obtained from GetFileVersionInfo</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The first parameter to VerQueryValue really must be a buffer you obtained from GetFileVersionInfo</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 26, 2006 / year-entry #425</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20061226-06/?p=28603</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>3</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The documentation for the VerQueryValue function states that the first parameter is a "pointer to the buffer containing the version-information resource returned by the GetFileVersionInfo function." Some people, however, decide to bypass this step and pass a pointer to data that was obtained some other way, and then wonder why VerQueryValue doesn't work. The documentation...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The documentation for the <code>VerQueryValue</code> function states that the first parameter is a "pointer to the buffer containing the version-information resource returned by the <code>GetFileVersionInfo</code> function." Some people, however, decide to bypass this step and <a href="http://groups.google.com/groups?selm=%23sUOkg4SFHA.3936@TK2MSFTNGP15.phx.gbl"> pass a pointer to data that was obtained some other way</a>, and then wonder why <code>VerQueryValue</code> doesn't work.</p>
<p> The documentation says that the first parameter to <code>VerQueryValue</code> must be a buffer returned by the <code>GetFileVersionInfo</code> function for a reason. The buffer returned by <code>GetFileVersionInfo</code> is an opaque data block specifically formatted so that <code>VerQueryValue</code> will work. You're not supposed to look inside that buffer, and you certainly can't try to "obtain the data some other way". Because if you do, <code>VerQueryValue</code> will look for something in a buffer that is not formatted in the manner the function expects. </p>
<p> (And it can't even detect that the buffer is improperly formatted because there is no <code>cbSize</code> parameter to the <code>VerQueryValue</code> function that tells it how big the buffer is. Without that information, <code>VerQueryValue</code> can't check that, say, all the internal values are in range, since it doesn't know what "out-of-range" is! Is a value of 4000 out of range? It would be if the buffer were only 3000 bytes long. But it would be okay if the buffer were 5000 bytes long. Since there is no size parameter, the the <code>VerQueryValue</code> function is forced to assume that everything is okay.) </p>
<p> If it wasn't obvious enough from the documentation that you can't just pass a pointer to a version resource obtained "some other way", it's even more obvious once you see <a href="http://blogs.msdn.com/oldnewthing/archive/2006/12/21/1340571.aspx"> the format of 32-bit version resources</a>. Notice that all strings are stored in Unicode. But if you call the ANSI version <code>VerQueryValueA</code> to request a string, the function has to give you a pointer to an ANSI string. There is no ANSI version of the string in the raw version resource, so what can it possibly return? You can't return a pointer to something that doesn't exist. <code>VerQueryValueA</code> needs to produce an ANSI string, and it does so from memory that <code>GetFileVersionInfo</code> prepared when the resources were extracted. </p>
<p> That there is no <code>cbSize</code> parameter to <code>VerQueryValue</code> was a failure of the original design of the function, but a slightly more understandable one when you look at the original design of 16-bit version resources: Since 16-bit Windows didn't have Unicode support, there was only one version of <code>VerQueryValue</code>, and it operated on ANSI strings. The 16-bit version resource format used ANSI strings, so <code>VerQueryValue</code> could just return a pointer into the raw version resource. No character set conversion was necessary, and therefore no need to reserve additional space as a string conversion buffer, no need for <code>GetFileVersionInfo</code> to "prepare" a buffer so that <code>VerQueryValue</code> could convert from one character set to another. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-455963">
				<div id="div-comment-455963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">teebee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061226-06/?p=28603#comment-455963">
			December 26, 2006 at 11:03 pm</a>		</div>

		<p>Pretty dang sure I&#8217;ve read and re-read that and still screwed it up. &nbsp;Thanks for clearing that up &nbsp;6 years later</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-456043">
				<div id="div-comment-456043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">file handle --&amp;gt; version</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061226-06/?p=28603#comment-456043">
			December 27, 2006 at 2:19 pm</a>		</div>

		<p>Then, how can I feed a file handle into GetFileVersionInfo (instead of a file name)? What is the second &quot;ignored&quot; parameter used for anyway?</p>
<div class="post">{<em>The function takes a file name. You will learn about that second parameter <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/31/4138786.aspx" rel="nofollow">next year</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-456133">
				<div id="div-comment-456133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061226-06/?p=28603#comment-456133">
			December 27, 2006 at 6:50 pm</a>		</div>

		<p>Is there any reason (apart from the obvious design defect) why that function wouldn&#8217;t accept version resource loaded with say LoadResource()?</p>
<p>Any plans to make it work with unmodified version resource block?</p>
<div class=post>[<i>Please read the entry again. The fourth paragraph answers precisely this question. Sometimes I wonder why I even write these entries. Maybe I should just post the titles and not bother writing the body since nobody reads the body anyway. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

