<html>
<head>
<title>With what operations is LockWindowUpdate not meant to be used?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>With what operations is LockWindowUpdate not meant to be used?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 22, 2007 / year-entry #64</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>28</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Okay, now that we know what operations LockWindowUpdate is meant to be used with, we can look at various ways people misuse the function for things unrelated to dragging. People see the "the window you lock won't be able to redraw itself" behavior of LockWindowUpdate and use it as a sort of lazy version of...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Okay, now that we know <a href="http://blogs.msdn.com/oldnewthing/archive/2007/02/21/1735472.aspx"> what operations <code>LockWindowUpdate</code> is meant to be used with</a>, we can look at various ways people misuse the function for things unrelated to dragging.</p>
<p> People see the "the window you lock won't be able to redraw itself" behavior of <code>LockWindowUpdate</code> and use it as a sort of lazy version of the <code>WM_SETREDRAW</code> message. Though sending the <code>WM_SETREDRAW</code> message really isn't that much harder than calling <code>LockWindowUpdate</code>. It's twenty more characters of typing, half that if you use the <code>SetWindowRedraw</code> macro in <code>&lt;windowsx.h&gt;</code>. </p>
<table border="1">
<tr>
<th valign="BASELINE">Instead of</th>
<td valign="BASELINE"><code>LockWindowUpdate(hwnd)</code></td>
</tr>
<tr>
<th valign="BASELINE">Use</th>
<td valign="BASELINE"><code>SendMessage(hwnd, WM_SETREDRAW, FALSE, 0)</code> or<br>         <code>SetWindowRedraw(hwnd, FALSE)</code></td>
</tr>
</table>
<table border="1">
<tr>
<th valign="BASELINE">Instead of</th>
<td valign="BASELINE"><code>LockWindowUpdate(NULL)</code></td>
</tr>
<tr>
<th valign="BASELINE">Use</th>
<td valign="BASELINE"><code>SendMessage(hwnd, WM_SETREDRAW, TRUE, 0)</code> or<br>         <code>SetWindowRedraw(hwnd, TRUE)</code></td>
</tr>
</table>
<p> <a href="http://blogs.msdn.com/oldnewthing/archive/2007/02/19/1716211.aspx"> As we noted earlier</a>, only one window in the system can be locked for update at a time. If your intention for calling <code>LockWindowUpdate</code> is merely to prevent a window from redrawing, say, because you're updating it and don't want the window continuously refreshing until your update is complete, then just disable redraw on that window. If you use <code>LockWindowUpdate</code>, you create a whole slew of subtle problems. </p>
<p> First off, if some other program is misusing <code>LockWindowUpdate</code> in this same way, then one of you will lose. Whoever tries <code>LockWindowUpdate</code> first will get it, and the second program will fail. Now what do you do? Your window isn't locked any more. </p>
<p> Second, if you have locked your window for update and the user switches to another program and tries to drag an item (or even just tries to move the window!), that attempt to <code>LockWindowUpdate</code> will fail, and the user is now in the position where drag/drop has stopped working for some mysterious reason. And then, ten seconds later, it starts working again. "Stupid buggy Windows," the user mutters. </p>
<p> Conversely, if you decide to call <code>LockWindowUpdate</code> when a drag/drop or window-move operation is in progress, then your call will fail. </p>
<p> This is just a specific example of the more general programming mistake of using global state to manage a local condition. When you want to disable redrawing in one of your windows, you don't want this to affect other windows in the system; it's a local condition. But you're using a global state (the window locked for update) to keep track of it. </p>
<p> I can already anticipate people saying, "Well, the window manager shouldn't let somebody lock a window for update if they're not doing a drag/drop operation." But how does the window manager know? It knows what is happening, but it doesn't know why. Is that program calling <code>LockWindowUpdate</code> because it's too lazy to use the <code>WM_SETREDRAW</code> message? Or is it doing it in response to some user input that resulted in a drag/drop operation? Note that you can't just say, "Well, the mouse button has to be down," because the user might be performing a keyboard-based operation (such as resizing a window with the arrow keys) that has the moral equivalent of a drag/drop. Morality is hard enough to resolve as it is; expecting computers to be able to infer it is asking a bit much. </p>
<p> Next time, a final remark on <code>LockWindowUpdate</code>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (28)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-474913">
				<div id="div-comment-474913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-474913">
			February 22, 2007 at 11:30 am</a>		</div>

		<p>Lazy? &nbsp;I resent that assertion.</p>
<p>The Win32 API is extremely large. &nbsp;The easiest way to find something is to look in the function reference. &nbsp;LockWindowUpdate is right there, SetWindowRedraw is not. &nbsp;There is not one line in LockWindowUpdate that says that does not say &#8220;hey, use this only for dragging&#8221; or &#8220;this functionality exists in WM_SETREDRAW&#8221;.</p>
<p>It&#8217;s one thing for you to point out common pitfalls, it&#8217;s quite another to assume that those mistakes are the result of laziness on the part of the programmer. &nbsp;I would hazard a guess that 90% of people using LockWindowUpdate are doing so because they simply don&#8217;t know about WM_SETREDRAW. &nbsp;And they would use the SetWindowRedraw macro if it exists.</p>
<p>It&#8217;s the difference between saying &#8220;Many people use LockWindowUpdate, but that&#8217;s a common pitfall, and SetWindowRedraw should be used instead&#8221; and &#8220;Many people use LockWindowUpdate because they&#8217;re too lazy to use SetWindowRedraw.&#8221;</p>
<div class="post">[<i>And people wonder why I don&#8217;t like to write any more. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-474933">
				<div id="div-comment-474933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-474933">
			February 22, 2007 at 11:34 am</a>		</div>

		<p>Wouldn&#8217;t much the redrawing issues in a D&amp;D implementation simplified by creating a temporary transparent window on top of the desktop and drawing there instead? &nbsp;</p>
<p>If something below redraws, it would cause a redraw on the overlayed window. &nbsp;This is how I implement splitter bar feedback in my application. &nbsp;Personally, I can&#8217;t recall ever using using LockWindowUpdate or even SetDraw(FALSE).</p>
<div class="post">[<i>You&#8217;ll enjoy tomorrow&#8217;s article. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-474963">
				<div id="div-comment-474963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-474963">
			February 22, 2007 at 11:56 am</a>		</div>

		<p>You said that the blocking happens in the functions that acquire a DC (BeginPaint etc.) (and the docs say they return an empty visible region). So what happens if the program already has a DC and is currently painting?</p>
<p>Is it suspended? Is the DC altered? Or perhaps the LockWindowUpdate would wait? It all sounds hard to implement.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-474983">
				<div id="div-comment-474983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-474983">
			February 22, 2007 at 12:17 pm</a>		</div>

		<p>Nice table, Raymond :)</p>
<p>(Hope this feedback gives you encouragement to continue writing, despite Jack Matthew&#8217;s comment above!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475063">
				<div id="div-comment-475063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.crazyontap.com' rel='external nofollow' class='url'>AlmostAlive</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475063">
			February 22, 2007 at 1:01 pm</a>		</div>

		<p>It seems to me that maybe MSDN could benefit from user comments in the documentation. &nbsp;The PHP documentation has this and anyone can comment on any function or page in the entire documentation. &nbsp;They also bundle up the comments into the downloadable documentation.</p>
<p>Even if they you don&#8217;t want to allow user comments, what about comments from Microsoft employees? &nbsp;A little note from Raymond Chen appended to the bottom of the page could go a long way.</p>
<div class=post>[<i>Wow, that&#8217;s such a great idea, <a href="http://blogs.msdn.com/mdurso/archive/2006/12/08/msdn-wiki.aspx" rel="nofollow">they already started doing it</a>. Many pages have an &#8220;Add Community Content&#8221; link at the bottom. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475073">
				<div id="div-comment-475073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475073">
			February 22, 2007 at 1:05 pm</a>		</div>

		<p>I might be wrong, but after reviewing Raymond&#8217;s post, he was glib with the first commenter because Raymond never once called programmers lazy.</p>
<p>He said: &quot;LockWindowUpdate and use it as a sort of lazy version of the WM_SETREDRAW message&quot;</p>
<p>and: &quot;it&#8217;s too lazy to use the WM_SETREDRAW message&quot;</p>
<p>You can argue there&#8217;s an implication there about the person who wrote the code, but even if that&#8217;s so, I think we should cut Raymond a little slack. He&#8217;s sharing information with us in part because he sees developers making mistakes. If he does get exasperated sometimes, remember how much he&#8217;s dealt with developers behaving badly. Don&#8217;t always take something personally.</p>
<p>Yes, there are issues with documentation that need addressing. It&#8217;s sadly an imperfect world as anyone who works on software realizes. I also imagine Raymond knows and has seen enough that he could write many more books. Be thankful he&#8217;s sharing what he knows so we at least have this knowledge published somewhere!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475093">
				<div id="div-comment-475093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eiffel.com' rel='external nofollow' class='url'>Manu</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475093">
			February 22, 2007 at 1:25 pm</a>		</div>

		<p>I&#8217;ve tried to replace LockWindowUpdate in my application with SetWindowRedraw but it certainly does not have the same behavior. I&#8217;ve even added a call to `InvalidateRect&#8217;.</p>
<p>The difference is that my algorithm to resize child windows is broken by using SetWindowRedraw but works just fine with LockWindowUpdate. Any idea?</p>
<p>For info, I only call LockWindowUpdate on top level windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475113">
				<div id="div-comment-475113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Herb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475113">
			February 22, 2007 at 1:46 pm</a>		</div>

		<p>Oh-ho! Finally, I get it. I do &#8211; randomly &#8211; have the &quot;I can&#8217;t drag anything&quot; problem. I&#8217;ve never been able to understand why until now. Thanks &#8211; it makes sense now, even if I can&#8217;t find the misbehaving application.</p>
<p>And for the people that are too lazy to read through the docs? Yeah, there&#8217;s a lot of stuff there. Odds are, if you&#8217;re trying to do something to a window, there&#8217;s a message for it. Do a little digging; it&#8217;s what you&#8217;re paid for.</p>
<p>In this particular case, the docs clearly say &quot;Only one window can be locked at a time.&quot;, which should be a pretty big warning that this may not be the thing you&#8217;re looking for, if you&#8217;re trying to disable drawing to a portion of your application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475143">
				<div id="div-comment-475143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://luke.breuer.com' rel='external nofollow' class='url'>Luke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475143">
			February 22, 2007 at 2:56 pm</a>		</div>

		<p>Raymond, it&#8217;s clear that you aren&#8217;t the master of MSDN, nor would you want to be. &nbsp;However, perhaps you have advice for how we developers could exert pressure on Microsoft to produce/maintain better documentation? &nbsp;Many of us really appreciate your posts and simply feel they would be that much more valuable if their content could be somehow integrated with MS documentation. &nbsp;It&#8217;s frustrating that there is so much good material scattered about the web that can be quite hard to find.</p>
<p>The MSDN wiki idea is OK, but I&#8217;m not sure it&#8217;s really optimal: there is no way to annotate Microsoft portions of the documentation, which means in order to take advantage of user-generated content, I must scan through all of it even if I&#8217;m only interested in, say, the exceptions a class throws. &nbsp;Moreover, it really doesn&#8217;t support a good method for talking about content in multiple pages simultaneously (e.g. using class X with class Y). &nbsp;I think it would be incredibly useful to be able to look up some class/function/whatever and find all the relevant, verified-[mostly-]correct material related to it. &nbsp;Yes, I know that Google (err, Live Search) exists, but it has no method for eliminating duplication and misinformation other than popularity.</p>
<p>What do you think the biggest obstacles are with respect to getting [formal] documentation published more quickly? &nbsp;I was going to suggest that MS devs responsible for feature X review documentation generated by non-MS devs or MS devs not responsible for X. &nbsp;I should think this would benefit everyone: MS gets documentation written for it and the contributors get to be MVPs or simply get verification/correction of their understanding of whatever they documented. &nbsp;It seems that many of the troubles you encounter (or at least write about) have to do with people misusing MS APIs. &nbsp;Is it not in your (and MS&#8217;s) best interest to try to improve the situation? &nbsp;I hope you&#8217;re not saying that there simply is no way the formal documentation can appreciably improve.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-475203">
				<div id="div-comment-475203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475203">
			February 22, 2007 at 5:04 pm</a>		</div>

		<p>I can&#8217;t believe how I ever got anything done at all before the internet came along. If I am tasked with writing some new functionality that I&#8217;ve never implemented before, the name of some random function (&quot;I know, LockWindowUpdate!&quot;) doesn&#8217;t pop into my, I don&#8217;t visit ONE MSDN page and NOTHING ELSE. No. I search the internet to see if someone else has done what I am doing before (chances are good that LOTS of people have!)</p>
<p>MSDN isn&#8217;t perfect. But that&#8217;s why people like Raymond have blogs. It&#8217;s about a million times easier for Raymond to write a couple of posts about this function that it would be to get all of this info included into MSDN.</p>
<p>And there&#8217;s nothing wrong with that! Perhaps when the &quot;Community Content&quot; section makes its way to the LockWindowUpdate documentation, someone will stick a link to this blog in there. But until then, I&#8217;m going to stick with Google, because what Raymond is writing has been written many times before, I&#8217;m sure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475233">
				<div id="div-comment-475233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475233">
			February 22, 2007 at 5:30 pm</a>		</div>

		<blockquote><p>
  And people wonder why I don&#8217;t like to write any more. -Raymond
</p></blockquote>
<p>I thought I&#8217;d pipe up at this point (I&#8217;m one of your silent readers who rarely comments): your blog is a great read and I&#8217;ve learned a lot from it. &nbsp;(I even placed an order for your book a few days ago.) &nbsp;Please don&#8217;t feel discouraged, there are a lot of people who value your blog highly.</p>
<p>Also, don&#8217;t mistake developers who feel frustrated at the documentation for developers feeling frustrated at you &#8211; I think it&#8217;s a shoot-the-messenger reaction on their part. &nbsp;And you&#8217;re quite right about the articles &#8211; I almost never read them, and rely solely on the API references. &nbsp;I think it&#8217;s because they&#8217;re usually longer (or another click away) and I just want to find something as quickly as possible. &nbsp;Maybe I should start reading them more&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475243">
				<div id="div-comment-475243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://com2kid.wordpress.com' rel='external nofollow' class='url'>Devlin Bentley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475243">
			February 22, 2007 at 6:14 pm</a>		</div>

		<blockquote><p>
  I get the impression that MSDN could delete all</p>
<p>  the overviews and articles and nobody would even</p>
<p>  notice. -Raymond
</p></blockquote>
<p>Likely so. &nbsp;I did not even know that they where there.</p>
<p>I am used to Javadoc, where warnings and usage information is at the top of the page.</p>
<p>This, and MSDN2 loads so horrifically slowly, I really am discouraged from exploring it more. &nbsp;Every time I go to a new page, there is this huge redraw lag.</p>
<p>Honestly, blogs like yours are of greater resource than MSDN. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475003">
				<div id="div-comment-475003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475003">
			February 22, 2007 at 12:41 pm</a>		</div>

		<p>Raymond, I think your response to the first poster is a little glib, to be honest (although I can understand the frustration).</p>
<p>And this leads me to ask something that I&#8217;ve been wondering about since you moved onto LockWindowUpdate recently. &nbsp;It&#8217;s because I had exactly the same problem as the poster &#8211; I&#8217;m a Windows programmer of many years experience, but I read the MSDN entry on LockWindowUpdate once, and it seemed to be what I was looking for. &nbsp;It wasn&#8217;t, of course.</p>
<p>So, bearing in mind that I am aware of the following:</p>
<p>* Raymond does not run Microsoft.</p>
<p>* Raymond does not run MSDN.</p>
<p>* Raymond can&#8217;t force random people at Microsoft to do things he wants.</p>
<p>Let me ask this: as it is clear (I hope), that there is a problem with the documentation for LockWindowUpdate, what can be done to fix this? &nbsp;Do you forward suggestions to MSDN for documentation correction? Is there a system in place at Microsoft to do this? &nbsp;Does MSDN allow 3rd party developers to do this easily (and I don&#8217;t mean email <a href="mailto:blackholeforallfeedback@microsoft.com">blackholeforallfeedback@microsoft.com</a> or whatever).</p>
<p>It&#8217;s just that a fair number of your blog entries are about people using APIs incorrectly &nbsp;(and then the compatibility problems this can cause). &nbsp;So, ignoring the inertia of existing Windows apps, wouldn&#8217;t it be nice to let developers know how to miss these potholes? &nbsp;I can&#8217;t imagine this LockWindowUpdate thing is a new problem (I first encountered it a few years ago, and iirc only learned the correct solution from your blog), yet the MSDN docs I just looked up on the MSDN site still just say &#8220;Only one window can be locked at a time.&#8221; &nbsp;</p>
<p>No mention of SetWindowRedraw etc, or &#8220;Here&#8217;s a hint. This probably isn&#8217;t the function you want unless you just want to do flicker-free dragging.&#8221; &nbsp;Just still the same description that has misled countless developers already.</p>
<p>I remember in DDJ, they used to do a regular feature of &#8216;Help file annotations&#8217; (back in the days when Windows help files supported annotations). &nbsp;They were basically notes/caveats about certain pages in the help that you could add to your system, and then you&#8217;d always see them. &nbsp;This was actually really useful (and good that a competent source like DDJ provided ones you might not know about). &nbsp;Of course, sites like php.net have democratised this, so you can see anyone&#8217;s tips on each page (sometimes good; sometimes an example of really poor code).</p>
<p>I guess I&#8217;m really saying: documentation needs to be improved. &nbsp;Some of this stuff (incorrect API usage) is really affecting some Windows (i.e. MS) devs quite significantly, so do/can they push for documentation revisions?</p>
<p>I&#8217;m aware it&#8217;s probably quite hard for MS devs to get MSDN changed &#8211; a friend of mine once waited a year for MSDN to approve a short tech article he wrote, and in the end he gave up waiting and published it on another site. &nbsp;He works for MS, btw.</p>
<p>But maybe that&#8217;s the problem. &nbsp;I don&#8217;t care if you think it should be &#8216;obvious&#8217; by using extensive logic and deduction on the documentation to divine what is being said. &nbsp;Most developers don&#8217;t have time to learn absolutely everything about absolutely every API they use. &nbsp;Developer time is *expensive* &#8211; we always go on about this wrt programming languages and frameworks, but no-one ever seems to think this applies to having decent documentation. &nbsp;</p>
<p>The &#8216;just apply logic&#8217; argument is weak, because if it were true, then we wouldn&#8217;t bother to write comments in our code either. &nbsp;</p>
<p>If an API has consistently been misunderstood and misused, then the documentation is at fault, not the developer. &nbsp;I would rarely blame the &#8216;stupid users&#8217; if a program I wrote regularly baffled users and let them do the wrong things, or things they didn&#8217;t expect &#8211; I would assume that the UI was poorly designed. &nbsp;I&#8217;d just like to see a similar approach for API documentation.</p>
<p>Sorry to rant, it&#8217;s a bugbear of mine.</p>
<p>So: if you find an API that is being abused, and it&#8217;s affecting you (or another MS dev) a lot, do you feel you have sufficient mechanisms in place to do something to address this at MS, and get the documentation changed?</p>
<p>Or is that mechanism your blog? :-)</p>
<div class=post>[<i>There&#8217;s more to documentation than just the function description page. The function documentation focuses on &#8220;What does this function do? Just the facts ma&#8217;am.&#8221;, and the overviews/articles focus on &#8220;How should the functions be used as intended?&#8221; It seems people look only at the former and totally miss out on the fact that they link to the latter. I get the impression that MSDN could delete all the overviews and articles and nobody would even notice. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475293">
				<div id="div-comment-475293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475293">
			February 22, 2007 at 9:45 pm</a>		</div>

		<blockquote><p>
  People see the &quot;the window you lock won&#8217;t be</p>
<p>  able to redraw itself&quot; behavior of</p>
<p>  LockWindowUpdate and use it as a sort of lazy</p>
<p>  version of the WM_SETREDRAW message.
</p></blockquote>
<p>I agree with Jack Mathews and a few others. &nbsp;If you&#8217;d said &quot;findable&quot; instead of &quot;lazy&quot; then it would be accurate and inoffensive. &nbsp;People do indeed SEE LockWindowUpdate; it&#8217;s easy to find.</p>
<p>A few months ago I wanted some effect that might resemble either WM_SETREDRAW or some of the APIs mentioned in the comments, but didn&#8217;t guess that a window message might be the way to do it and couldn&#8217;t find an API that really looked suitable. &nbsp;I sort-of solved it by ShowWindow, hide before manipulations and show afterwards. &nbsp;I wasn&#8217;t happy but the results looked OK and the testers approved.</p>
<p>OK, time for comic relief.</p>
<blockquote><p>
  First off, if some other program is misusing</p>
<p>  LockWindowUpdate in this same way, then one</p>
<p>  of you will lose. Whoever tries</p>
<p>  LockWindowUpdate first will get it, and the</p>
<p>  second program will fail.
</p></blockquote>
<p>Oh, that&#8217;s easy to fix! &nbsp;Anyone who wants to abuse LockWindowUpdate should just abuse LockWindowUpdate(NULL) before abusing LockWindowUpdate on their own window.</p>
<p>Thursday, February 22, 2007 1:46 PM by Herb</p>
<blockquote><p>
  In this particular case, the docs clearly say</p>
<p>  &quot;Only one window can be locked at a time.&quot;,
</p></blockquote>
<p>You&#8217;re right&#8230; now come to think of it, one window per process? &nbsp;one per window station? &nbsp;one per terminal services session? &nbsp;one per computer?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475303">
				<div id="div-comment-475303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475303">
			February 22, 2007 at 9:56 pm</a>		</div>

		<p>Dean, you hit the nail on the head. &nbsp;I search for the way to accomplish tasks all the time. &nbsp;I have never stopped at finding one solution. &nbsp;Ever. &nbsp;Rarely is there only one solution to a problem, therefore I keep searching until I find a consensus.</p>
<p>Also, if any documentation contained every possible nugget of information it would be too verbose to get anything useful out of it.</p>
<p>On top of that, as Raymond pointed out, this function is old, and maybe at that time it was very evident that it was only used for dragging operations. &nbsp;I&#8217;m new to programming (relatively &#8212; meaning only 8 years or so) so I don&#8217;t know anything, just offering up a solution.</p>
<p>Sheesh, people! &nbsp;If you want to bitch about MS, join any one of a million forums out there. &nbsp;They abound. &nbsp;</p>
<p>However, if you want to learn and enjoy Raymond&#8217;s unique contributions (comp related or cycling or cooking or languages &#8212; he&#8217;s a pretty interesting and varied guy) then leave the petty whining at home.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475313">
				<div id="div-comment-475313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shog9</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475313">
			February 22, 2007 at 10:02 pm</a>		</div>

		<p>Thanks for the heads-up. It&#8217;s become a habit for me to read this blog, and then do a full search of my code for the subject API to make sure i&#8217;m actually using it correctly. In this case, i&#8217;d done exactly what you described (and then fixed it a few years ago, after encountering some of the problems you predict).</p>
<p>FWIW: MSDN sucks, in so SO many ways&#8230; but this isn&#8217;t the place for that rant. Thanks again for the work you do to make Windows development a tad less of a crap-shoot. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475173">
				<div id="div-comment-475173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://luke.breuer.com' rel='external nofollow' class='url'>Luke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475173">
			February 22, 2007 at 4:05 pm</a>		</div>

		<p>&#8220;There&#8217;s more to documentation than just the function description page. The function documentation focuses on &#8216;What does this function do? Just the facts ma&#8217;am.&#8217;, and the overviews/articles focus on &#8216;How should the functions be used as intended?&#8217; It seems people look only at the former and totally miss out on the fact that they link to the latter. I get the impression that MSDN could delete all the overviews and articles and nobody would even notice. -Raymond&#8221;</p>
<p>I must take issue with this, as it seems similar to those who claim their code does not need comments. &nbsp;While it&#8217;s good to know what a function does, is it not also invaluable to know what it was *meant* to do? &nbsp;Such a purpose statement does not need to be very long; the articles you mention can pick up on the nuances. &nbsp;Some function names don&#8217;t need an explanation &#8212; .NET&#8217;s System.IO.File.Delete(string) is quite obvious. &nbsp;Some function names, such as LockWindowUpdate, are most definitely not clear in this respect, which you yourself have noted.</p>
<div class=post>[<i>Code says what, comments say why. Similarly, function documentation says what, overviews and articles say why. At least that was the philosophy back when the documentation was written originally. Remember, LockWindowUpdate is a very old function, written when documentation fashions were different.. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475343">
				<div id="div-comment-475343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475343">
			February 23, 2007 at 1:59 am</a>		</div>

		<p>Thank you for discussing the WM_SETREDRAW message. The documentation it isn&#8217;t clear about what the WM_SETREDRAW message does, making it look like a message specific to list boxes and other controls that might implement it. It seems that SendMessage(WM_SETREDRAW, FALSE) actually just clears the WS_VISIBLE style bit for any window, which has a similar effect as calling</p>
<p>SetWindowLongPtr(GWL_STYLE, * &amp; ~WS_VISIBLE)</p>
<p>or</p>
<p>SetWindowPos(SWP_NOxxx | SWP_HIDEWINDOW),</p>
<p>namely hiding the window without repainting the parent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475353">
				<div id="div-comment-475353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475353">
			February 23, 2007 at 2:21 am</a>		</div>

		<p>on using SetWindowRedraw to speed up adding items to a combobox or listbox:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2004/06/10/152612.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2004/06/10/152612.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475673">
				<div id="div-comment-475673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mikkin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475673">
			February 23, 2007 at 2:01 pm</a>		</div>

		<p>&quot;This is just a specific example of the more general programming mistake of using global state to manage a local condition.&quot;</p>
<p>&quot;&#8230;function documentation says what, overviews and articles say why.&quot;</p>
<p>Bingo. &nbsp;Raymond offers an excellent parallelism.</p>
<p>In a system so large, complex, baroque, and overburdened with legacy as Windows, it is essential to get a handle on the big picture. &nbsp;Yes, the detail reference material could try to accommodate those in the habit of bottom-up (or bottom only) research by including more explanation of intent and integration. &nbsp;Perhaps in some instances it should. &nbsp;But the point of diminishing returns is reached very quickly because these are not bottom-up considerations.</p>
<p>If I may offer a silly analogy: &nbsp;Reading a dictionary is not going to tell you how to construct meaningful sentences and paragraphs. &nbsp;It would be impossibly impractical to cover that topic in any depth within each definition.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475903">
				<div id="div-comment-475903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475903">
			February 23, 2007 at 9:13 pm</a>		</div>

		<p>[quote user=Tim]</p>
<p>Is there a system in place at Microsoft to do this? &nbsp;Does MSDN allow 3rd party developers to do this easily (and I don&#8217;t mean email <a href="mailto:blackholeforallfeedback@microsoft.com">blackholeforallfeedback@microsoft.com</a> or whatever).</p>
<p>[/quote]</p>
<p>I sent one suggestion to <a href="mailto:netfwsdk@microsoft.com">netfwsdk@microsoft.com</a> 2 years before for .NET SDK documentation improvement, and they quickly respond to me that the change would be made in version 1.1.1 of SDK Doc.</p>
<p>So let me reassure you that the blackhole isn&#8217;t there. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475973">
				<div id="div-comment-475973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.PretentiousName.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-475973">
			February 24, 2007 at 7:58 am</a>		</div>

		<p>It&#8217;s anecdotal but I&#8217;ve found the MSDN feedback link at least got me a response, and a quick one as well. It&#8217;s apparently not the black hole that one might assume it is.</p>
<p>(I found two pages in MSDN which contradicted each other over something like the meaning of a boolean argument. It was easy to write a test program to work out which was correct. I then wrote to MSDN to let them know, in case someone only found the incorrect page, and I soon got a reply from someone saying thanks and that they would look into it. Unfortunately I can&#8217;t remember what the thing actually was so I can&#8217;t verify that the documentation is now correct, but a human being certainly looked at the issue and replied in good time so there&#8217;s a good chance it was fixed.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-476123">
				<div id="div-comment-476123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-476123">
			February 25, 2007 at 7:58 pm</a>		</div>

		<p>Sure the MSDN feedback link isn&#8217;t a black hole, it gets me responses too.</p>
<p>The last time I reported a few bugs about one page, Microsoft politely extended the discussion long enough so that Microsoft repeated its assertions twice in one discussion: &nbsp;I had acquired web site <a rel="nofollow" target="_new" href="http://msdn.microsoft.com" rel="nofollow">http://msdn.microsoft.com</a> outside of North America, therefore it differed vastly from North American version of <a rel="nofollow" target="_new" href="http://msdn.microsoft.com" rel="nofollow">http://msdn.microsoft.com</a>, therefore I should pay a support fee to Microsoft Japan to report bugs in the page.</p>
<p>After that it became a black hole.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477333">
				<div id="div-comment-477333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jolyon Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-477333">
			February 27, 2007 at 3:36 pm</a>		</div>

		<p>This has been a timely series &#8211; just one problem:</p>
<p>I latched onto the series eagerly, as I was aware of a number of uses of LockWindowUpdate in a particular project, and was keen to find out a) why this was bad (I had a feeling I knew &#8211; the indiscriminate nature of LockWindowUpdate(0) is a BIG clue) and more importantly b) what was the <em>right</em> way to do what LockWindowUpdate() does.</p>
<p>Unfortunately, One of the cases where LockWindowUpdate() is used in this project cannot seemingly be replaced by WM_SETREDRAW &#8211; at least not as simply as suggested.</p>
<p>The scenario is:</p>
<p>I&#8217;m about to create a MDI child window. &nbsp;This is a Delphi app, and the VCL for reasons best known to itself always creates MDI children at CW_USEDEFAULT X and Y. &nbsp;But our app re-positions these windows to the place the user last left them.</p>
<p>It can&#8217;t do this until after the window has been created, and the result is a very ugly flicker.</p>
<p>Guess what LockWindowUpdate() was being used for? &nbsp; :D</p>
<p>Previously, the creation of the MDI child was wrapped in a par of LockWindowUpdate() calls that locked and unlocked the MDI window itself, and this worked like a charm.</p>
<p>Replacing these calls to LockWindowUpdate() with appropriate WM_SETREDRAW not only doesn&#8217;t work, but actually results in an ugly mess.</p>
<p>The flicker is eliminated, but the MDI child form doesn&#8217;t repaint in full (all sorts of invalidate/redraw/update incantations have been thrown at it no to avail).</p>
<p>We have tried using the handle of the MDICLIENT window of the MDI window, as well as the handle of the window itself, also to no avail.</p>
<p>Help?</p>
<div class=post>[<i>Create the window hidden, resize it, then show it after the size has been fixed. But this is trying to fix the problem after-the-fact; the correct thing to do is to create the window with the desired coordinates in the first place. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477793">
				<div id="div-comment-477793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jolyon Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-477793">
			February 28, 2007 at 6:19 pm</a>		</div>

		<p>Thanks for the reply Raymond.</p>
<p>Sadly in the particular Delphi app in question this isn&#8217;t possible because of some very messy code in the inherited implementations of the MDI window wrappers (not just VCL code, but also some very untidy legacy code in the project itself that implements the window placement info persistence at runtime).</p>
<p>I appreciate that the finer points of Delphi VCL overrides etc goes waaaay beyond the scope of this blog, but was just curious why WM_SETREDRAW is not an adequate replacement for LockWindowUpdate() in this particular case.</p>
<p>I haven&#8217;t got time to take apart the low level MDI wrappers (not to mention the risk that doing so would have ancillary consequences in the 200+ forms in the project that derive from these base classes!), so will have to leave LockWindowUpdate() in place for now.</p>
<p>From the content of this series, I think it&#8217;s use in this particular case is &#8220;safe enough&#8221;, even if ultimately undesirable.</p>
<p>Thanks again.</p>
<div class="post">[<i>What if two programs did this? (WM_SETREDRAW is not 100% identical to LockWindowUpdate, so differences are hardly unexpected.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477963">
				<div id="div-comment-477963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">...</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-477963">
			March 1, 2007 at 4:58 am</a>		</div>

		<p>Very nice site! Good work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499733">
				<div id="div-comment-499733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.csdn.net/balonfan/archive/2007/05/05/1596661.aspx' rel='external nofollow' class='url'>BalonFan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-499733">
			May 4, 2007 at 1:45 pm</a>		</div>

		<p>就像我们在前面所说的，同一时间系统中只能有一个窗口的更新被锁定。如果你调用LockWindowUpdate的目的仅仅是防止窗口重绘，比如因为你在更新这个窗口，在你的更新完成前，不希望它不停的刷新，那么请直接禁止窗口的重绘。如果你使用了LockWindowUpdate，将引来无数下面的问题。</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-541663">
				<div id="div-comment-541663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.aaronlerch.com/blog/2007/02/24/lock-updates-for-a-control/' rel='external nofollow' class='url'>Lock updates for a control | Aaron Lerch</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070222-01/?p=27913#comment-541663">
			August 23, 2007 at 8:20 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.aaronlerch.com/blog/2007/02/24/lock-updates-for-a-control/" rel="nofollow">http://www.aaronlerch.com/blog/2007/02/24/lock-updates-for-a-control/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

