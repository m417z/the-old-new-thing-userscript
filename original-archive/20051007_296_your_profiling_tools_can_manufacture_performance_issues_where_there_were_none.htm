<html>
<head>
<title>Your profiling tools can manufacture performance issues where there were none</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Your profiling tools can manufacture performance issues where there were none</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 7, 2005 / year-entry #297</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When analyzing the performance of a program, you must be mindful that your performance analysis tools can themselves affect the operation of the system you are analyzing. This is especially true if the performance analysis tool is running on the same computer as the program being studied. People often complain that Explorer takes a page...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>When analyzing the performance of a program, you must be mindful that your performance analysis tools can themselves affect the operation of the system you are analyzing. This is especially true if the performance analysis tool is running on the same computer as the program being studied.</p>
<p> People often complain that Explorer takes a page fault every two seconds even when doing nothing. They determine this by opening Task Manager and enabling the Page Faults column, and observing that the number of Page Faults increases by one every two seconds. </p>
<p> This got reported so often that I was asked to sit down and figure out what's going on. </p>
<p> Notice, though, that if you change Task Manager's Update Speed to High, then Explorer's page fault rate goes up to four per second. If you drop it to Low, then it drops to one every four seconds. </p>
<p> If you haven't figured it out by now, the reason is that Task Manager itself is causing those page faults. Mind you, they are soft faults and therefore do not entail any disk access. Every two seconds (at the Normal update rate), Task Manager updates the CPU meter in the taskbar, and it is this act of updating the CPU meter that is the cause of the page faults. </p>
<p> No Task Manager, no animating taskbar notification icon, and therefore no page faults from Explorer when idle. </p>
<p> (A similar effect was discovered by <a href="http://www.sysinternals.com/blog/"> Mark Russinovich</a> when he found that <a href="http://www.sysinternals.com/blog/2005/04/services-polling-when-process-explorer.html"> Process Explorer's polling calls to the <code>EnumServiceStatusEx</code> function was triggering repeated registry access</a>.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-311633">
				<div id="div-comment-311633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">herd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311633">
			October 7, 2005 at 11:41 am</a>		</div>

		<p>Is it that each Icon update in the tray causes a page fault? If so, why on earth?</p>
<p>And to make this entry complete, I&#8217;d like to hear why GDI+ apps cause hundreds of page faults when drawing an image.</p>
<p>In the old days, a page fault at the wrong time would take down the entire system. Since NT, an application that became page fault millionaire in a reasonable time was surely badly programmed: Fragmenting the heap by too many new/delete or malloc/free in a loop or went into the famous CString trap. </p>
<p>If I had a say at MS I&#8217;d demand to keep this profiling helper intact. It was very useful.</p>
<p>wkr,</p>
<p>herd</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311653">
				<div id="div-comment-311653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311653">
			October 7, 2005 at 12:06 pm</a>		</div>

		<p>Ahh! Thatâ€™s it. The Heisenberg Principle of performance profiling. As soon as you add code that measures time spent by different functions in the program, it starts spending half the total time :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311673">
				<div id="div-comment-311673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/frank_hileman' rel='external nofollow' class='url'>Frank Hileman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311673">
			October 7, 2005 at 1:25 pm</a>		</div>

		<p>For those using Task Manager, kill that process and use Performance Monitor instead (under the Administrative Tools menu). It adds less overhead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-reuvenlax odd alt thread-odd thread-alt depth-1" id="comment-311693">
				<div id="div-comment-311693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ReuvenLax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311693">
			October 7, 2005 at 2:34 pm</a>		</div>

		<p>There&#8217;s something missing in this explanation.  Why out of all the processes on the system is explorer.exe the only process that shows this behavior?  I just tried it on my machine, and no other process showed this steadily-increasing page-count.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rickbrew even thread-even depth-1" id="comment-311703">
				<div id="div-comment-311703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rickbrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311703">
			October 7, 2005 at 3:05 pm</a>		</div>

		<p>ReuvenLax, Because Explorer.exe is responsible for maintaining the tray icons. Task Manager updates its tray icon every time it refreshes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-311743">
				<div id="div-comment-311743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311743">
			October 7, 2005 at 4:06 pm</a>		</div>

		<p>It&#8217;s the same code but a completely different icon each time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311753">
				<div id="div-comment-311753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ReuvenLax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311753">
			October 7, 2005 at 5:49 pm</a>		</div>

		<p>Oh, of course.  I didn&#8217;t properly read Raymond&#8217;s original article.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311763">
				<div id="div-comment-311763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sean Barrett</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311763">
			October 7, 2005 at 6:40 pm</a>		</div>

		<p>The implication here is that there is <em>nothing wrong</em> with these page faults: they are supposed to happen, they aren&#8217;t going to disk, they aren&#8217;t a performance issue.</p>
<p>If that&#8217;s the case, then isn&#8217;t the task manager measuring <em>the wrong thing</em>?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311773">
				<div id="div-comment-311773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311773">
			October 7, 2005 at 7:12 pm</a>		</div>

		<p>(very simplified)</p>
<p>A soft page fault comes from main memory where a hard fault comes from the drive.</p>
<p>Each process has a working set.  When they need more pages than their working set allows, &quot;old&quot; pages will either be moved to the free list or the modified list.  If those pages haven&#8217;t been dumped to be used for other pages, then they can be faulted back into the original process.  This is a soft fault.   If the page must be read from the drive, then it is a hard fault.</p>
<p>Soft faults are a fact of life and in general a good thing.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311713">
				<div id="div-comment-311713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311713">
			October 7, 2005 at 3:21 pm</a>		</div>

		<p>But then, echoing what herd said, the question becomes:</p>
<p>*Why?*</p>
<p>Why does repainting the tray icon cause a pagefault in explorer.exe?  Refreshing an on-screen bitmap should be a fairly simple process, unless I don&#8217;t understand everything that repainting an icon involves.  It should be a simple memory block transfer (or perhaps a set of them).  The target block of memory already exists, and the source block is given to the notification API call by the taskmgr.exe process, so it must exist also.</p>
<p>So why is the pagefault happening?</p>
<p>On a related note, I&#8217;m not sure what a &quot;soft&quot; pagefault is, compared to a &quot;hard&quot; one.  Is it just that a &quot;soft&quot; one doesn&#8217;t cause a page to be loaded from disk?  Is this difference explained somewhere online (perhaps in MSDN)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-311723">
				<div id="div-comment-311723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311723">
			October 7, 2005 at 3:41 pm</a>		</div>

		<p>&quot;Why does repainting the tray icon cause a pagefault?&quot;</p>
<p>Read the article again. It&#8217;s not the repaint that&#8217;s causing the pagefault. It&#8217;s the *update*. Every two seconds, task manager says &quot;Hey, get rid of the old icon and use this new icon instead&quot;. Icons have their own subtleties. I&#8217;ll cover them next year.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311733">
				<div id="div-comment-311733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311733">
			October 7, 2005 at 4:01 pm</a>		</div>

		<p>&quot;It&#8217;s not the repaint that&#8217;s causing the pagefault. It&#8217;s the *update*.&quot;</p>
<p>Repaint or update, the point is it&#8217;s the same code that is always executed, why would invoking it cause page fault?</p>
<p>If I keep calling the same function, I don&#8217;t expect it to generate page fault (assuming it reads/writes the same memory area too).</p>
<p>It seems explorer has some weird memory access patterns that trigger these extra page fault.</p>
<p>The bottom line is that you haven&#8217;t given enough explanation.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311803">
				<div id="div-comment-311803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311803">
			October 7, 2005 at 11:56 pm</a>		</div>

		<p>&quot;they aren&#8217;t a performance issue. &quot;</p>
<p>Um, task manager is only measuring a subset of system events, it&#8217;s not a performance monitor (though it can be used as one in a crude way). There&#8217;s a tool actually named performance monitor that has far more granular and useful details, though it still only tells you what&#8217;s happening, not what it means.</p>
<p>Soft faults can still cause problems in high-performance tools (like audio/video processing), but typically don&#8217;t matter. But just because it&#8217;s not useful from a process profiling perspective doesn&#8217;t mean it&#8217;s not useful at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311833">
				<div id="div-comment-311833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spacebunny.xepher.net/' rel='external nofollow' class='url'>KJK::Hyperion</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051007-11/?p=33863#comment-311833">
			October 8, 2005 at 4:41 pm</a>		</div>

		<p>To anyone not getting it: Explorer draws the icons, not the applications. The applications create an icon and they send it to Explorer (internal shell magic here &#8211; IIRC it&#8217;s a WM_COPYDATA). It&#8217;s simpler this way, no synchronization needed, and it&#8217;s also why icons aren&#8217;t cleaned up immediately when the owner terminates (they are as soon as Explorer cannot find their owner window anymore). When changing the icon you could probably rewrite the icon&#8217;s bits directly, since icons are shared objects, but it&#8217;s not guaranteed to work, not to mention very impolite</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

