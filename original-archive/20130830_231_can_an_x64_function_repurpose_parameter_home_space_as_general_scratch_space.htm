<html>
<head>
<title>Can an x64 function repurpose parameter home space as general scratch space?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Can an x64 function repurpose parameter home space as general scratch space?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 30, 2013 / year-entry #232</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">We saw some time ago that the x64 calling convention in Windows reserves space for the register parameters on the stack, in case the called function wants to spill them. But can the called function use the memory for other purposes, too? You sort of already know the answer to this question. Consider this function:...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
We saw some time ago that
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/01/14/58579.aspx">
the x64 calling convention in Windows</a>
reserves space for the register parameters on the stack,
in case the called function wants to spill them.
But can the called function use the memory for other purposes, too?
</p>
<p>
You sort of already know the answer to this question.
Consider this function:
</p>
<pre>
void testfunction(int a)
{
 a = 42;
}
</pre>
<p>
How would a na&iuml;ve compiler generate code for this function?
</p>
<pre>
testfunction:
    sub rsp, 8 ;; realign the stack

    ;; spill all register parameters into home locations
    mov [rsp+0x10], rcx
    mov [rsp+0x18], rdx
    mov [rsp+0x20], r8
    mov [rsp+0x28], r9

    ;; a = 42
    mov [rsp+0x10], 42

    ;; return
    add rsp, 8 ;; clean up local frame
    ret
</pre>
<p>
Observe that after spilling the register parameters into their
home locations onto the stack,
the function modified the local variable,
which updated the value in the home location.
</p>
<p>
Since a function can arbitrarily modify a parameter,
you can see that a function is therefore allowed to arbitrarily
modify a parameter's home location.
At which point you can see that an optimizing compiler might
choose an arbitrary value completely unrelated to the parameter.
</p>
<p>
Our test function has only one parameter.
What about the other three home registers?
</p>
<blockquote CLASS=q><p>
The caller is responsible for allocating space for parameters to the callee,
and
<a HREF="http://msdn.microsoft.com/library/ms235286.aspx">
must always allocate sufficient space for the 4 register parameters</a>,
even if the callee doesn't have that many parameters.
</p>
</blockquote>
<p>
A function can therefore treat those 32 bytes as
<i>bonus free play</i>.
The rationale behind those 32 bytes is that it gives you a place
to spill your inbound register
parameters so that they will be adjacent to the
stack-based parameters.
(We saw how the na&iuml;ve compiler took advantage of this by
not trying to be clever in its function prologue and simply
spilling all register parameters whether it needs them or not.)
</p>
<p>
Nevertheless, you are free to use them for whatever purpose you like,
and if you're looking at heavily-optimized code,
you'll probably find that the compiler found all sorts of clever
things it can do with them.
For example, a common trick is to use them to save the nonvolatile
registers that the function locally uses to hold the corresponding
parameter!
</p>
<p>
(Did this article look familiar?
Turns out
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/03/02/10135747.aspx">
I covered this article a few years ago</a>,
but I'm senile and accidentally repeated a topic.
And since I put so much effort into writing it,
I'm going to make you suffer through it,
even though it's a repeat.
Hey, television programs repeat during the summer.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1075403">
				<div id="div-comment-1075403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075403">
			August 30, 2013 at 7:16 am</a>		</div>

		<p>Don&#39;t worry Raymond. We&#39;re always happy to hijack your duplicate topics with very tangential rants.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus odd alt thread-odd thread-alt depth-1" id="comment-1075413">
				<div id="div-comment-1075413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075413">
			August 30, 2013 at 7:16 am</a>		</div>

		<p>Please stop usïng gratuïtïous umlauts. Ït leads to ïrrelevant comments.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075423">
				<div id="div-comment-1075423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075423">
			August 30, 2013 at 7:25 am</a>		</div>

		<p>Well, since they&#39;re neither gratuitous nor umlauts, I guess he&#39;s okay. We can eliminate irrelevant comments in our time! All we need is your coöperation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075433">
				<div id="div-comment-1075433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075433">
			August 30, 2013 at 7:49 am</a>		</div>

		<p>But an ï with two dots looks soooo cute!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075453">
				<div id="div-comment-1075453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 0238804</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075453">
			August 30, 2013 at 8:11 am</a>		</div>

		<p>@kinokijuf</p>
<p>As parkrrr states, they are not umlauts. They are diaereses. Their purpose is to clarify that the indicated vowel does not participate in a digraph or diphthong.</p>
<p>And they are not gratuitous. I actually know people who would pronounce &quot;naïve&quot; as expected, but would pronounce &quot;naive&quot; like &quot;nave&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075473">
				<div id="div-comment-1075473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075473">
			August 30, 2013 at 9:11 am</a>		</div>

		<p>&quot;(Did this article look familiar? Turns out &nbsp;I covered this article a few years ago, but I&#39;m senile and accidentally repeated a topic. And since I put so much effort into writing it, I&#39;m going to make you suffer through it, even though it&#39;s a repeat. Hey, television programs repeat during the summer.)&quot;</p>
<p>Don&#39;t worry, I also have a short memory. I didn&#39;t actually realise it was repeated until the final paragraph.</p>
<p>But having a short memory is good, it makes life feel fresh and new again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1075483">
				<div id="div-comment-1075483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075483">
			August 30, 2013 at 10:43 am</a>		</div>

		<p>As a proverb goes, &quot;new is just a well forgotten old&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1075493">
				<div id="div-comment-1075493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075493">
			August 30, 2013 at 10:46 am</a>		</div>

		<p>diæreses is what you get after dining in fäšt foöd.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075503">
				<div id="div-comment-1075503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075503">
			August 30, 2013 at 11:34 am</a>		</div>

		<p>Well as long as we&#39;re repeating things, you can look up <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2013/06/07/10424279.aspx">blogs.msdn.com/&#8230;/10424279.aspx</a> for more tangential discussion on those little dots.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075513">
				<div id="div-comment-1075513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/codevisio_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>codevisio@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075513">
			August 30, 2013 at 11:40 am</a>		</div>

		<p>Well, it&#39;s a repeated article for who has been following the blog since the first appearance of that article.</p>
<p>For who, like me, that sees for the first time the article and didn&#39;t go through the previous&#39;, it&#39;s the first time.</p>
<p>So thank you Raymond for your effort in repeating articles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075523">
				<div id="div-comment-1075523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken in NH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075523">
			August 30, 2013 at 12:38 pm</a>		</div>

		<p>An old adage in pedagogy is to tell the audience, repeat yourself, then tell it to them again. You only need to re-post this article again in a few years to really make it stick in our memories.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075533">
				<div id="div-comment-1075533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075533">
			August 31, 2013 at 8:18 am</a>		</div>

		<p>are you guys talking about the word &quot;naïve&quot;? &nbsp;that&#39;s a french word, written exactly like that with a &quot;trema&quot;, and that spelling is noted as a variant in every english dictionnary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075543">
				<div id="div-comment-1075543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">us</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075543">
			September 1, 2013 at 4:31 am</a>		</div>

		<p>I&#39;m going with &quot;naive&quot;, there&#39;s no reason to use smelly surrender letters when there&#39;s a fine native replacement.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard odd alt thread-odd thread-alt depth-1" id="comment-1075553">
				<div id="div-comment-1075553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075553">
			September 2, 2013 at 3:42 am</a>		</div>

		<p>Won&#39;t this convention just make function calls heavier? And what was the point of allocating that 8 bytes of stack space that&#39;s never used?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard even thread-even depth-1" id="comment-1075563">
				<div id="div-comment-1075563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075563">
			September 2, 2013 at 3:44 am</a>		</div>

		<p>By heavier I&#39;m talking about the sudden extra requirement of making 32 bytes of stack space extra with each function call, if I&#39;ve understood the convention.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1075663">
				<div id="div-comment-1075663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075663">
			September 3, 2013 at 6:44 am</a>		</div>

		<p>@Veltas:</p>
<p>These 32 bytes are always there and don&#39;t have to be allocated/deallocated. It is allocated once when the ESP is adjusted for local variables.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075873">
				<div id="div-comment-1075873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075873">
			September 3, 2013 at 1:05 pm</a>		</div>

		<p>alegr1: I think Veltas is asking why the calling convention includes slots for 4 parameters regardless of how many the function has. In other words, shouldn&#39;t a 1-parameter function only require 1 spill slot? Or couldn&#39;t the callee determine how much space it needs on the stack and use it accordingly?</p>
<div class="post">[<em>One word: <a href="http://www.gnu.org/software/libc/manual/html_node/Opening-and-Closing-Files.html">open</a>. Two more words: <a href="http://msdn.microsoft.com/en-us/library/6yy8aw4d.aspx">Unprototyped functions</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard odd alt thread-odd thread-alt depth-1" id="comment-1075913">
				<div id="div-comment-1075913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075913">
			September 3, 2013 at 2:38 pm</a>		</div>

		<p>Okay, &quot;sub rsp, 8 ;; realign the stack&quot;.</p>
<p>What&#39;s the point of that line? Is this just part of a convention that&#39;s not necessary but just nicer somehow?</p>
<p>Also, I was interested as to the point of the 32 bytes of spill space by default, surely the callee could just allocate as required (yep Gabe, you had that right).</p>
<p>Sorry if that was the answer in the last post, Raymond, but I didn&#39;t understand if that was so unfortunately.</p>
<div class="post">[<em>Please read the linked article first. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard even thread-even depth-1" id="comment-1075943">
				<div id="div-comment-1075943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1075943">
			September 3, 2013 at 3:32 pm</a>		</div>

		<p>Okay I&#39;ve read the article and now understand the line that realigns the stack.</p>
<p>I see the reason for having the 32 bytes of space is in case you want to spill them, and you say that this is useful if the function is variadic, how so if you don&#39;t mind me asking?</p>
<div class="post">[<em>Think about it. If you haven&#39;t figured it out, you can wait for my answer in two years. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1076013">
				<div id="div-comment-1076013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1076013">
			September 3, 2013 at 10:04 pm</a>		</div>

		<p>@Veltas:</p>
<p>The code is simpler if all parameters can simply be retrieved from the stack, instead of worrying about which ones are in registers and which ones are in memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard even thread-even depth-1" id="comment-1076053">
				<div id="div-comment-1076053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1076053">
			September 4, 2013 at 1:08 am</a>		</div>

		<p>Cheers</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1076293">
				<div id="div-comment-1076293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1076293">
			September 5, 2013 at 4:07 am</a>		</div>

		<p>So, the scratch space is a case of optimizing for the uncommon case.</p>
<div class="post">[<em>The alternative is being broken in certain special cases. And it doesn&#39;t really cost you anything in the common case anyway. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1076443">
				<div id="div-comment-1076443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363#comment-1076443">
			September 6, 2013 at 6:58 am</a>		</div>

		<p>@Raymond, what is bad, and I recall, is the optimization of the uncommon case, but this time I&#39;ll add, at the cost of making everything else pay for it.</p>
<p>For instance, let&#39;s take the AMD64 ABI, used by every other kid. It doesn&#39;t have a scratch space whose purpose is to easily allow spilling in varargs functions. Yet, it isn&#39;t broken in the special cases.</p>
<p>Certainly, all compilers must be smart about the use of va_*, but the other kids&#39; compilers must be way smarter. However, that&#39;s a one-off effort, so the justification that va_* is much simpler in this kid&#39;s single convention is just a distraction.</p>
<p>It does cost you something in the rather common case: 32 bytes of caller-allocated stack for optional callee consumption. Some or all of it will end up unused. This kid doesn&#39;t know, it can&#39;t know, but it gives that space on each call, anyway.</p>
<div class="post">[<em>I think you&#39;ll find that in practice, it all gets used. As noted in the article, it is typically used as spill space for preserved registers, space which you need to allocate anyway. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

