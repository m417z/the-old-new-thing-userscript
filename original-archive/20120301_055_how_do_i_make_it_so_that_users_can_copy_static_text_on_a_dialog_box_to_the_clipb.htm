<html>
<head>
<title>How do I make it so that users can copy static text on a dialog box to the clipboard easily?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I make it so that users can copy static text on a dialog box to the clipboard easily?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 1, 2012 / year-entry #56</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>20</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Given that you have a Win32 dialog box with static text in an LTEXT control, how do you make it so that users can easily copy that text to the clipboard? The traditional solution is to create a borderless read-only edit control (which draws as static text by default). Add it to the tab order...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Given that you have a Win32 dialog box with static
text in an <code>LTEXT</code> control,
how do you make it so that users can easily copy that
text to the clipboard?
</p>
<p>
The traditional solution is to create a borderless read-only edit control
(which draws as static text by default).
Add it to the tab order by setting the <code>WS_<wbr>TABSTOP</code>
style, and maybe even
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/06/02/8568490.aspx">
give it a keyboard accelerator for accessibility</a>.
</p>
<p>
Starting in Windows Vista,
version&nbsp;6 of the common controls provides an alternative.
(A less accessible alternative, mind you.)
Static text controls automatically copy their contents
to the clipboard when you double-click them
if you set the <code>SS_NOTIFY</code> style.
</p>
<p>
Let's try it:
</p>
<pre>
#include &lt;windows.h&gt;
#include &lt;windowsx.h&gt;
#include &lt;commctrl.h&gt;

#pragma comment(linker, \
 "\"<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/05/31/2995284.aspx">/manifestdependency</a>:type='Win32' "\
 "name='Microsoft.Windows.Common-Controls' "\
 "version='6.0.0.0' "\
 "processorArchitecture='*' "\
 "publicKeyToken='6595b64144ccf1df' "\
 "language='*'\"")

INT_PTR CALLBACK DlgProc(
    HWND hdlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
 switch (uMsg) {
 case WM_INITDIALOG:
  return TRUE;
 case WM_COMMAND:
  switch (GET_WM_COMMAND_ID(wParam, lParam)) {
  case IDCANCEL:
   EndDialog(hdlg, 0);
   break;
  }
 }
 return FALSE;
}

int WINAPI WinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPSTR lpCmdLine, int nShowCmd)
{
 return DialogBox(hinst, MAKEINTRESOURCE(1), NULL, DlgProc);
}

// resource file
#include &lt;windows.h&gt;

1 DIALOG 50, 50, 100, 50
STYLE DS_SHELLFONT | WS_SYSMENU
CAPTION "Sample"
FONT 8, "MS Shell Dlg"
BEGIN
 LTEXT "Sample text 1",100,10,10,80,10,SS_NOTIFY
 LTEXT "Sample text 2",101,10,20,80,10,SS_NOTIFY
 LTEXT "Sample text 3",102,10,30,80,10
END
</pre>
<p>
Run this program and double-click on the text controls,
and observe that the text gets copied to the clipboard,
or at least it does for the first two, since I
set the <code>SS_NOTIFY</code> style on them.
</p>
<p>
Now, when the <i>double-click to copy</i>
feature was added to the static control,
there was no way to suppress it.
The <code>STN_DBLCLK</code> notification is documented
as ignoring its return code,
so it would be a compatibility problem if suddenly it started
studying its return code so that the parent could respond
"No, I handled the click, don't do your default action."
Instead, if you want to disable the <i>double-click to copy</i>
feature on a <code>SS_NOTIFY</code> static control,
you have to subclass the static control and eat
the clicks yourself.
</p>
<pre>
<font COLOR=blue>LRESULT CALLBACK SuppressCopyOnClick(
    HWND hwnd, UINT uMsg, WPARAM wParam,
    LPARAM lParam, UINT_PTR uIdSubclass, DWORD_PTR dwRefData)
{
 switch (uMsg) {
 case WM_LBUTTONDBLCLK: return 0; // eat the double-click
 case WM_NCDESTROY:
  RemoveWindowSubclass(hwnd, SuppressCopyOnClick, uIdSubclass);
  break;
 }
 return DefSubclassProc(hwnd, uMsg, wParam, lParam);
}</font>

INT_PTR CALLBACK DlgProc(
    HWND hdlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
 switch (uMsg) {
 case WM_INITDIALOG:
  <font COLOR=blue>SetWindowSubclass(GetDlgItem(hdlg, 101),
                    SuppressCopyOnClick, 0, 0);</font>
  return TRUE;
 ...
</pre>
<p>
"Why would you add a style that enabled a feature, and then
disable the feature?"
</p>
<p>
Maybe you want some other aspects of the feature but not the
copy-on-double-click behavior.
Maybe somebody else is adding the <code>SS_NOTIFY</code>
style behind your back.
For example, a UI framework might add it automatically to all
static controls.
</p>
<p>
And actually, in that UI framework case,
you probably want the <code>STN_DBLCLK</code> notification
to be fired when a double-click occurs,
because you added an
<code>OnDoubleClick</code> handler to your class.
You just don't want the copy-to-clipboard behavior.
We can fix that by firing the notification in our subclass
procedure.
</p>
<pre>
 case WM_LBUTTONDBLCLK:
  <font COLOR=blue>if (GetWindowStyle(hwnd) &amp; SS_NOTIFY) {
   FORWARD_WM_COMMAND(GetParent(hwnd), GetDlgCtrlID(hwnd), hwnd,
                      STN_DBLCLK, SendMessage);
  }
  return 0; // message handled</font>
</pre>
<p>
To illustrate this change, we'll make our dialog box beep
when it gets a double-click notification.
In real life, of course, you would do whatever you want
to happen on the "double click on a static control" event.
Actually, in real life, the code that responds to the
<code>STN_DBLCLK</code> 
lives inside your framework, and it turns around and
raises an <code>OnDoubleClick</code> event,
but for simplicity, we'll just code it inline.</p>
<pre>
 case WM_COMMAND:
     switch (GET_WM_COMMAND_ID(wParam, lParam)) {
     case IDCANCEL:
        EndDialog(hdlg, 0);
        break;
     case 100:
     case 101:
     case 102:
      switch (GET_WM_COMMAND_CMD(wParam, lParam)) {
      // Obviously we would do something more interesting here
      case STN_DBLCLK: MessageBeep(MB_OK); break;
      }
     }
</pre>
<p>
Each of the static controls on the dialog behaves differently.
The first one is <code>SS_NOTIFY</code> with no subclassing,
so double-clicking copies the text to the clipboard and also
beeps.
The second one is
<code>SS_NOTIFY</code> with subclassing to disable
the copy-to-clipboard, so
double-clicking merely beeps.
And the third one doesn't have the <code>SS_NOTIFY</code>
style at all, so it neither copies the next nor responds
to double-click.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-969083">
				<div id="div-comment-969083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969083">
			March 1, 2012 at 7:51 am</a>		</div>

		<p>[Static text controls automatically copy their contents to the clipboard when you double-click them if you set the SS_NOTIFY style.]</p>
<p>The best part about this feature is that it&#39;s not documented (as far as I can tell).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969093">
				<div id="div-comment-969093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rangoric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969093">
			March 1, 2012 at 8:06 am</a>		</div>

		<p>Documented on Result #2 on a search engine for me: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb760767(v=vs.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/bb760767(v=vs.85).aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-969103">
				<div id="div-comment-969103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969103">
			March 1, 2012 at 8:19 am</a>		</div>

		<p>That, I&#39;m afraid, smells like a feature that was needed in one place that leaked into the base implementation. It should have been a new SS_COPYTOCLIPBOARD style that people opted into, it&#39;s completely inappropriate to cause random new behaviour in existing applications.</p>
<p>Yes, I know, you have to opt in to the new common controls via the manifest, but come on: you really think people are going to check that LABELS still have the same functionality before turning this on?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969123">
				<div id="div-comment-969123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969123">
			March 1, 2012 at 8:51 am</a>		</div>

		<p>I prefer the readonly text controls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-969143">
				<div id="div-comment-969143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969143">
			March 1, 2012 at 9:42 am</a>		</div>

		<p>While I don&#39;t mind the new feature (have to opt-in through the controls v6), I do agree that it is a very curious thing to add at this point. Also, besides the already mentioned issue of near impossible discoverability, there is no consistency nor feedback available either! This is almost as bad of an issue as the Ctrl+C for MessageBox, except that short-cut is universal and can eventually be discovered by a considerable leap of faith and frustration by a user with average Windows experience.</p>
<p>Some text may or may not copy when you doubleclick, but the only way you will find out whether it did is by trying to paste something (and if you are unlucky, you just pasted 20 paragraphs from a letter you had been working on earlier&#8230;) The user never knows what to expect with regards to this control because its behaviour is not consistent.</p>
<p>As for the feedback.. if I actually doubleclick something accidentally and it happens to copy something, I want to know so I don&#39;t end up tearing my hairs out wondering why the hell my clipboard got messed up. It best give some sort of visual feedback to avoid this problem. (I have not tested this; I can&#39;t make a test program right now and do not know where to find a label in the OS to test with; but as it was not mentioned I presume there is no such feedback at present.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969153">
				<div id="div-comment-969153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969153">
			March 1, 2012 at 10:17 am</a>		</div>

		<p>@Rangoric: &nbsp;Where on that page does it mention anything about copying text to the clipboard? &nbsp;Only in a comment posted by a user.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd even thread-even depth-1" id="comment-969163">
				<div id="div-comment-969163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969163">
			March 1, 2012 at 10:47 am</a>		</div>

		<p>It&#39;s always painful to be reading text and not have the ability to copy it, regardless of the Control.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969173">
				<div id="div-comment-969173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969173">
			March 1, 2012 at 11:26 am</a>		</div>

		<p>And in addition to the flaws already mentioned, it is completely undiscoverable. But remember folks, this isn&#39;t &quot;curious&quot;, it&#39;s called &quot;design&quot;.</p>
<div class="post">[<i>I agree with everyone else that this was a poorly-designed feature. But this is Practical Programming: Whether something was designed well or not, you still have to deal with it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-969183">
				<div id="div-comment-969183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rangoric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969183">
			March 1, 2012 at 11:46 am</a>		</div>

		<p>@John &#8211; &quot;Where does it mention anything, ignoring where it says it&quot;. Um yes the comment. That comment is by someone who works for Microsoft and that comment has been there for 3 going on 4 years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969193">
				<div id="div-comment-969193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969193">
			March 1, 2012 at 11:49 am</a>		</div>

		<p>I&#39;ve worked with the Windows API since Win16, and I didn&#39;t know that you could copy the contents of a MessageBoxW with control-C&#8230;</p>
<p>By the way, I wish that Microsoft&#39;s example code would stop using the ANSI version of the Windows API. &nbsp;Many programmers copy and paste such code. &nbsp;I&#39;m tired of applications that don&#39;t work the instant you try to give them a filename containing Unicode characters. &nbsp;The example above should use wWinMain. &nbsp;(Personally, I explicitly use the W versions of functions rather than rely upon the #define.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-969213">
				<div id="div-comment-969213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969213">
			March 1, 2012 at 12:12 pm</a>		</div>

		<p>@Rangoric: &nbsp;Maybe it&#39;s just me, but I don&#39;t consider random posts in the comments section as &quot;documentation&quot; even if it is from an alleged Microsoft employee; have you seen some of the stuff that gets posted there?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969223">
				<div id="div-comment-969223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969223">
			March 1, 2012 at 1:25 pm</a>		</div>

		<p>I guess that &nbsp;sums up Windows Vista :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-969233">
				<div id="div-comment-969233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969233">
			March 1, 2012 at 2:14 pm</a>		</div>

		<p>Please someone tell me I misread or interpret it wrongly. If you add a static text, starting with Vista, if you don&#39;t add the SS_NOTIFY style it will not fire the double click event. Because that is my understanding. Please tell me I got it wrong because if I got right&#8230;then LOOOOOOOOOOL&#8230;..and more&#8230;&#8230;ROFLMAO&#8230;and even more LARONFLOOLMAOOOOO</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969113">
				<div id="div-comment-969113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969113">
			March 1, 2012 at 8:38 am</a>		</div>

		<p>Wait a second&#8230; you mean if I absentmindedly double-click static text in a dialog it *might* copy it to the clipboard? &nbsp;WTF?!! How are users supposed to know about this behavior change, if most developers don&#39;t even know about it!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-969203">
				<div id="div-comment-969203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969203">
			March 1, 2012 at 11:52 am</a>		</div>

		<p>@Rangoric &#8211; I don&#39;t normally google for biographies of people who add random comments to web pages, so it frankly doesn&#39;t matter how long this person has or has not been working for Microsoft. All I can see is a comment, made 3-4 years ago that *still* hasn&#39;t been incorporated into the official docs.</p>
<p>To me, the most likely explanations are EITHER that the comment is untrue OR that this isn&#39;t behaviour that I should depend upon. Raymond&#39;s pretty much made a blogging career out of documenting the reasons why you shouldn&#39;t depend on something just because it happens to be true in the one version of Windows that you tried it on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969273">
				<div id="div-comment-969273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969273">
			March 1, 2012 at 10:30 pm</a>		</div>

		<p>&gt;&gt;&gt; so it would be a compatibility problem if suddenly it started studying its return code so that the parent could respond</p>
<p>No, it wouldn&#39;t be. Old applications use old version, new applications use &quot;version 6&quot; &#8211; no problem to change behaviour for new apps. I understand, that changing &quot;version 6&quot; NOW would be potentially problematic, but still, it won&#39;t be a problem for &quot;version 7&quot; controls. Even adding SS_COPYTOCLIPBOARD won&#39;t be a compatibility problem for &quot;version 7&quot; &#8211; only it should be very well documented, listed in &quot;changes since last version&quot;, etc&#8230;</p>
<div class="post">[<i>This was a change to version 6, which already shipped in Windows XP. And you may have noticed that all the available style bits are used up. But as I noted earlier, I think this was a poorly-designed featured. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-969263">
				<div id="div-comment-969263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969263">
			March 1, 2012 at 10:01 pm</a>		</div>

		<p>@Ken Hagan</p>
<p>&gt; All I can see is a comment, made 3-4 years ago that *still* hasn&#39;t been incorporated into the official docs. To me, the most likely explanations are EITHER that the comment is untrue OR that this isn&#39;t behaviour that I should depend upon.</p>
<p>Or (surely far more likely), they just don&#39;t read those comments at all &#8211; let alone submit them to their documentation update process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969283">
				<div id="div-comment-969283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/aylivex_4000_live.ru/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>aylivex@live.ru</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969283">
			March 1, 2012 at 11:24 pm</a>		</div>

		<p>@Rangoric Even if this comment is from Microsoft employee, I don&#39;t consider it documentation. Additionally this comment must have been made on the page documenting the styles of static controls.</p>
<p>Nevertheless this feature has to be *properly* documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-969473">
				<div id="div-comment-969473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969473">
			March 2, 2012 at 4:58 pm</a>		</div>

		<p>@JW &#8211; I have been in IT for years, working exclusively in Windows, and didn&#39;t know about Ctrl-C on a Message box. I feel like I probably should (and also shouldn&#39;t have manually typed out so many message box errors!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-969493">
				<div id="div-comment-969493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120301-00/?p=8193#comment-969493">
			March 2, 2012 at 8:43 pm</a>		</div>

		<blockquote><p>
  &gt;&gt; This was a change to version 6, which already shipped in Windows XP
</p></blockquote>
<p>I agree about the design and I didn&#39;t notice, that all availabe style bits are used, however, nothing to stop you from changing the required OS version and/or any other means, included, but not limited to, additional API that would configure the particular flag usage or by specifying some configuration information in the manifest. Whether or not is worth the efforts is whole another issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

