<html>
<head>
<title>Modality, part 5: Setting the correct owner for modal UI</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Modality, part 5: Setting the correct owner for modal UI</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 24, 2005 / year-entry #46</td></tr>
<tr><td><b>Tags:</b></td><td>code;modality</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Here is the very simple fix for the buggy program we presented last time. void OnChar(HWND hwnd, TCHAR ch, int cRepeat) { switch (ch) { case ' ': MessageBox(hwnd, TEXT("Message"), TEXT("Title"), MB_OK); if (!IsWindow(hwnd)) MessageBeep(-1); break; } } We have fixed the problem by passing the correct owner window for the modal UI. Since MessageBox...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Here is the very simple fix for
<a href="http://blogs.msdn.com/oldnewthing/archive/2005/02/23/378866.aspx">
the buggy program we presented last time</a>.
</p>
<pre>
void OnChar(HWND hwnd, TCHAR ch, int cRepeat)
{
  switch (ch) {
  case ' ':
    MessageBox(<font COLOR=blue>hwnd</font>, TEXT("Message"), TEXT("Title"), MB_OK);
    if (!IsWindow(hwnd)) MessageBeep(-1);
    break;
  }
}
</pre>
<p>
We have fixed the problem by passing the correct owner window
for the modal UI.  Since <code>MessageBox</code> is modal,
it disables the owner while the modal UI is being displayed,
thereby preventing the user from destroying or
changing the owner window's state when it is not expecting it.
</p>
<p>
This is why all the shell functions that can potentially display
UI accept a window handle as one of its parameters.
They need to know which window to use as the owner for any
necessary UI dialogs. If you call such functions from a thread
that is hosting UI, you must pass the handle to the window you
want the shell to use as the UI owner.  If you pass NULL
(or worse, <code>GetDesktopWindow</code>), you may find yourself
in the same bad state that our buggy sample program demonstrated.
</p>
<p>
If you are displaying a modal dialog from another modal dialog,
it is important to pass the correct window as the owner for
the second dialog.  Specifically, you need to pass the modal dialog
initiating the sub-dialog and not the original frame window.
Here's a stack diagram illustrating:
</p>
<pre>
 MainWindow
  DialogBox(hwndOwner = main window) [dialog 1]
   ... dialog manager ...
    DlgProc
     DialogBox(hwndOwner = <u>dialog 1</u>) [dialog 2]
</pre>
<p>
If you mess up and pass the main window handle when
creating the second modal dialog, you will find yourself
back in a situation analogous to what we had last time:
The user can dismiss the first dialog while the second
dialog is up, leaving its stack frames orphaned.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-257493">
				<div id="div-comment-257493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257493">
			February 24, 2005 at 10:44 am</a>		</div>

		<p>I have a windowless ActiveX control and it sometimes needs to pop a dialog box. If the container is IE or WebBrowser, IObjectWithSite gives me the container&#8217;s IUnknown and from there I can get the IWebBrowser2.HWND property. Otherwise I punt back to NULL, for example if called from a WScript.exe script. Is there a generic way to get any container&#8217;s HWND?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-257513">
				<div id="div-comment-257513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257513">
			February 24, 2005 at 11:20 am</a>		</div>

		<p>WTL is using GetActiveWindow as parent by default. Will that work in all cases? What will happen for example if a tooltip pops up &#8211; will that be the active window?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-257523">
				<div id="div-comment-257523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257523">
			February 24, 2005 at 11:30 am</a>		</div>

		<p>Tooltips never get activation. The Active Window is the one which is &#8230; erm&#8230; active &#8211; not the one on the top of the Z-order.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-257533">
				<div id="div-comment-257533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257533">
			February 24, 2005 at 1:15 pm</a>		</div>

		<p>Dave: ActiveX controls can use their host&#8217;s IOleWindow interface to get its HWND.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-257543">
				<div id="div-comment-257543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257543">
			February 24, 2005 at 1:29 pm</a>		</div>

		<blockquote><p>
  WTL is using GetActiveWindow as parent by default. Will that work in all cases?</p>
<p>Nope, I would call that a bug. GetActiveWindow will return NULL if your application isn&#8217;t in the foreground. Thus, if your application were to throw up a dialog in response to, say, a timer tick, it would have no owner if your application wasn&#8217;t in the foreground at that precise moment.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-257553">
				<div id="div-comment-257553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257553">
			February 24, 2005 at 2:35 pm</a>		</div>

		<p>I&#8217;m sure these series are great for those that can understand them, but how about a little lighter fare to break this one up?  Something simple even I can understand like &quot;Why does Windows do such and such?&quot;  And then tell us about the good old days and how they transitioned to the even better later days.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-257573">
				<div id="div-comment-257573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anthony Wieser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257573">
			February 24, 2005 at 3:06 pm</a>		</div>

		<p>Funny, just yesterday, I came across a problem with HtmlHelp in a debug MFC build of my project.</p>
<p>If I clicked on the dialog, sometimes, the program would assert in _AfxHandleActivate, after the WM_ACTIVATE was called.</p>
<p>It seems that despite setting the parent window correctly, because HTML help is on another thread, the window pointed to as being deactivated will not necessarily exist, as it was on another thread.</p>
<p>And we all know how much MFC likes windows from multiple threads ;)</p>
<p>Apparently the solution is to initialize HTML Help as single threaded, and pass it messages (yuck).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-257583">
				<div id="div-comment-257583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257583">
			February 25, 2005 at 6:24 am</a>		</div>

		<p>Ivo&gt; Yeah, the default of GetActiveWindow() has bitten me a couple times in the past. Now I&#8217;m in the paranoid habit of passing an HWND to every DoModal(), luckily most of the time &quot;*this&quot; is sufficient so it&#8217;s not a hassle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-257893">
				<div id="div-comment-257893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2005/02/28/381591.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-257893">
			February 28, 2005 at 10:00 am</a>		</div>

		<p>Respect the modality of a window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388733">
				<div id="div-comment-388733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/06/07/620776.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050224-00/?p=36373#comment-388733">
			June 7, 2006 at 10:00 am</a>		</div>

		<p>Otherwise you end up creating the impossible.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

