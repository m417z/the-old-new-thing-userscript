<html>
<head>
<title>The poor man's way of identifying memory leaks</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The poor man&#8217;s way of identifying memory leaks</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 15, 2005 / year-entry #225</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There is a variety of tools available for identifying resource leaks, but there's one method that requires no tools or special compiler switches or support libraries: Just let the leak continue until the source becomes blatantly obvious. Nightly automated stress testing is a regular part of any project. Some teams use screen savers as the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>There is a variety of tools available for identifying resource leaks, but there's one method that requires no tools or special compiler switches or support libraries: Just let the leak continue until the source becomes blatantly obvious.</p>
<p> Nightly automated stress testing is a regular part of any project. Some teams use screen savers as the trigger, others use a custom program, still others require manual launching of the stress test, but by whatever means, after you've gone home for the day, your computer connects to a central server and receives a set of tests that it runs all night. </p>
<p> One of the things that these overnight tests often turn up are memory leaks of one sort or another, identified by the stress team because your program's resource usage has gone abnormally high. But how do you debug these failures? These machines aren't running a special instrumented build with your leak detection tool, so you can't use that. </p>
<p> Instead, you use the "target-rich environment" principle. </p>
<p> Suppose you're leaking memory. After fifteen hours of continuous heavy usage, your program starts getting out-of-memory failures. You're obviously leaking something, but what? </p>
<p> Think about it: If you are leaking something, then there are going to be a lot of them. Whereas things you aren't leaking will be few in number. Therefore, if you grab something at random, it will most likely be a leaked object! In mathematical terms, suppose your program's normal memory usage is 15 megabytes, but for some reason you've used up 1693 megabytes of dynamically-allocated memory. Since only 15 megabytes of that is normal memory usage, the other 1678 megabytes must be the leaked data. If you dump a random address from the heap, you have a greater-than-99% chance of dumping a leaked object. </p>
<p> So grab a dozen or so addresses at random and dump them. Odds are you'll see the same data pattern over and over again. That's your leak. If it's a C++ object with virtual methods, dumping the vtable will quickly identify what type of object it is. If it's a <a href="http://c2.com/cgi/wiki?PlainOldData"> POD</a> type, you can usually identify what it is by looking for string buffers or pointers to other data. </p>
<p> Your mileage may vary, but I've found it to be an enormously successful technique. Think of it as applied psychic powers. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-296673">
				<div id="div-comment-296673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296673">
			August 15, 2005 at 10:23 am</a>		</div>

		<p>Of course, this assumes you have the ability to identify what a particular block of memory holds just by looking at a hex dump: even if the addresses you grab starts in the middle of a vtable or instance data.</p>
<p>That also doesn&#8217;t work for handle leaks :) Still, not a bad idea for if nothing else works ..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-296713">
				<div id="div-comment-296713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wound</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296713">
			August 15, 2005 at 11:20 am</a>		</div>

		<p>We found a great one of these recently. You lose about 300 GDI handles each time you create and destroy the property pages for the phillips webcam capture filter included with Windows XP. Before long you can bring the OS to its knees.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-296743">
				<div id="div-comment-296743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">michkap</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296743">
			August 15, 2005 at 2:19 pm</a>		</div>

		<p>So, that&#8217;s what you mean when you talk from time to time about your &quot;psychic powers&quot; &#8212; a debugger and a hex dump! :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-296793">
				<div id="div-comment-296793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296793">
			August 15, 2005 at 3:38 pm</a>		</div>

		<p>@Wound</p>
<p>You don&#8217;t even need 3rd party software to hurt the OS. I caught this one yesterday:</p>
<p><a rel="nofollow" target="_new" href="http://weatherley.net/pics/AnotherQualityProduct.png" rel="nofollow">http://weatherley.net/pics/AnotherQualityProduct.png</a></p>
<p>A bit of googling told me that wisptis.exe is some tablet PC thingy that everyone gets free with software update &#8211; tablet PC or not. Shame it leaks like a seive ;)</p>
<p>On a less MS bashing note, some tips on catching GDI leaks would be great. GDI leaks do seem a common problem. Take a look at &#8216;ypager.exe&#8217;  &#8211; the Yahoo messenger exe &#8211; maybe it&#8217;s not leaking, but it&#8217;s certainly using up those handles&#8230;</p>
<p>The frustrating part for me is when you know handle 0x01231200 is leaking but you have no idea what it refers to or where it was allocated. I guess a GDI object explorer would be a good thing.</p>
<p>A colleague and I knocked up a dirty program that enumerates GDI handles for processes and identifies the GDI object type that they refer to. It would even have a go at rendering bitmap and DC objects as well as display font information. We knocked off a ton of leaks in a week with that! It did lots of grovelling around the GDI handle table and made lots of naughty assumptions about what it found there &#8211; so I suppose Raymond won&#8217;t approve :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-296833">
				<div id="div-comment-296833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296833">
			August 15, 2005 at 6:24 pm</a>		</div>

		<p>JamesW:</p>
<p>This cool tool will help you find your leaking GDI resources:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/msdnmag/issues/03/01/GDILeaks/default.aspx" rel="nofollow">http://msdn.microsoft.com/msdnmag/issues/03/01/GDILeaks/default.aspx</a></p>
<p>If I recall, it also makes lots of assumptions about what it finds in the tables.  I have seen a few false positives related to hosted IE browser controls, but it&#8217;ll quickly help you find lots of real leaks, too.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-296853">
				<div id="div-comment-296853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sandbox.zeroaffinity.com' rel='external nofollow' class='url'>Dan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296853">
			August 15, 2005 at 6:44 pm</a>		</div>

		<p>Mike, if you want to take a little of the guess work out of which addresses to select then the !heap extension is available. With the !heap -a command you&#8217;re able to display all the information related to a heap. You&#8217;ll be able to see all the allocations and their sizes. Look for a large numbers of allocations with the same size. Randomly examine those for ideas.</p>
<p>JamesW, handle leaks can quickly be identified by monitoring the Handle Count counter of the process using Performance Monitor. Information about the handle can be displayed with the !handle extension. If you wish to track a handle then it gets a little more complicated. You&#8217;ll need to enable Application Verifier for the process and then use the !htrace extension.</p>
<p>The point of Raymond&#8217;s post was to offer a stab in the dark approach to troubleshooting. It&#8217;s fast to perform and there&#8217;s a chance it will reveal useful results. If not then tools such as UMDH will need to be used against the process to create a user mode stack trace database which can then be studied.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-296873">
				<div id="div-comment-296873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296873">
			August 15, 2005 at 7:24 pm</a>		</div>

		<p>PS &#8211; Raymond&#8217;s stab in the dark approach is certainly worth bearing in mind. Definitely another tool for the armoury when all else fails.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-296923">
				<div id="div-comment-296923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.wlug.org.nz/PerryLorier' rel='external nofollow' class='url'>Perry Lorier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296923">
			August 15, 2005 at 9:36 pm</a>		</div>

		<p>I use a similar technique as a poor mans profiler.  If you have one part of your program using up 90% of the cpu time, if you stop the program at random, theres a 9/10 chance that you stopped it within the bottleneck.</p>
<p>Repeat 5 or 6 times and you get a pretty good feel for what&#8217;s causing the slowdown.  A statistical profiler just automates this process :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-296863">
				<div id="div-comment-296863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296863">
			August 15, 2005 at 7:23 pm</a>		</div>

		<p>@ Adrian</p>
<p>Yeah &#8211; we used that. Trouble was it would tell us 2 HBITMAPs had leaked but it couldn&#8217;t tie up the handle to an actual bitmap. That was my moan about knowing handle 0x0babe000 leaked &#8211; even if I know it was a bitmap it would be nice to know *which* bitmap. Hence we ended up writing our own GDI object crawler that attempted to render the GDI object. Once we could see the rendition of the bitmap that was leaking it was trivial to plug the gap.</p>
<p>@Dan</p>
<p>I have looked at App. Verifier but the problem is we&#8217;re stuck on XP SP1 &#8211; yeah we should get with the SP2 party but the wheels grind slowly. The problem with being on SP1 is that our product is OpenGL heavy, and the first thing App. Verifier catches and forces a crash on is the MS OpenGL implementation&#8230; (Fixed in SP2 according to MSDN)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-296983">
				<div id="div-comment-296983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wind.codepixel.com' rel='external nofollow' class='url'>Antonio Vargas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-296983">
			August 16, 2005 at 6:23 am</a>		</div>

		<p>One of my coworkers, a graphician, used to refer to my usual assembler debuger, monam, as &quot;the astral visualizer&quot; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-297593">
				<div id="div-comment-297593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-297593">
			August 16, 2005 at 11:21 pm</a>		</div>

		<p>This reminds me of the Monte Carlo method for estimating the area &#8216;X&#8217; of an irregular shape. If I remember correctly, you draw a box of known area &#8216;A&#8217; around the shape, then pick thousands of spots at random within the box. Then, X = A * (# spots inside the irregular area)/(total # of spots).</p>
<p>More on MC methods:<br />
<br /><a rel="nofollow" target="_new" href="http://www.chem.unl.edu/zeng/joy/mclab/mcintro.html" rel="nofollow">http://www.chem.unl.edu/zeng/joy/mclab/mcintro.html</a></p>
<p>TC</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-299303">
				<div id="div-comment-299303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ltearno.free.fr/dpus' rel='external nofollow' class='url'>LteArno</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-299303">
			August 20, 2005 at 6:32 am</a>		</div>

		<p>You can get this little software that is free !<br />
<br />I wrote it at my spare time, it is a leak explorer, you can see GDI objects, Dump buffers and see what was the callstack and the call parameters when creating the leak</p>
<p>You can send me bugs or ideas to <a href="mailto:ltearno@free.fr">ltearno@free.fr</a></p>
<p>Good deleakage (the soft is not incompatible with the poor man&#8217;s way&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-299413">
				<div id="div-comment-299413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-299413">
			August 21, 2005 at 3:53 am</a>		</div>

		<p>If you run the checked build of Windows XP Pro SP2, some applets automatically diagnose and report their own resource leaks.  I don&#8217;t recall seeing such reports from the checked build of Windows 2000 Pro RTM.  My intuitive feeling is that the added functionality was the checking and reporting rather than the leaks themselves (yup, sometimes I forget to be cynical ^_^) but I do wonder if there are plans to fix them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-300683">
				<div id="div-comment-300683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/robcaron/archive/2005/08/24/455526.aspx' rel='external nofollow' class='url'>Rob Caron's Blog - A Team System Nexus</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-300683">
			August 24, 2005 at 3:42 pm</a>		</div>

		<p>… for Architects</p>
<p>Nick Malik – Enterprise Architecture Agility<br />
<br />Roy Osherove – [Audio Interview] Ingo&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-301073">
				<div id="div-comment-301073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/larryosterman/archive/2005/08/25/456344.aspx' rel='external nofollow' class='url'>Larry Osterman's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-301073">
			August 25, 2005 at 1:43 pm</a>		</div>

		<p>Another one from someone sending a comment:</p>
<p>I came across your blog and was wondering if what to do&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-376393">
				<div id="div-comment-376393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jfoscoding/archive/2006/05/03/588974.aspx' rel='external nofollow' class='url'>jfo's coding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-376393">
			May 3, 2006 at 3:15 am</a>		</div>

		<p>I got a note from Mukund, who is investigating a memory leak problem.&amp;amp;nbsp; </p>
<p>Hi Jessica, Is it true&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-684323">
				<div id="div-comment-684323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.developers.org.ua/archives/max/2005/08/20/weekly-linkdump-4/' rel='external nofollow' class='url'>Weekly linkdump #39 - max - ???????? ??????????????????????????</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050815-11/?p=34583#comment-684323">
			November 15, 2008 at 9:37 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.developers.org.ua/archives/max/2005/08/20/weekly-linkdump-4/" rel="nofollow">http://www.developers.org.ua/archives/max/2005/08/20/weekly-linkdump-4/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

