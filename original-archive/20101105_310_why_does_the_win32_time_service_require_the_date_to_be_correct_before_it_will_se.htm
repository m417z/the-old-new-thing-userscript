<html>
<head>
<title>Why does the Win32 Time service require the date to be correct before it will set the time?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does the Win32 Time service require the date to be correct before it will set the time?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 5, 2010 / year-entry #311</td></tr>
<tr><td><b>Tags:</b></td><td>time;tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>43</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Public Service Announcement: Daylight Saving Time ends in most parts of the United States this weekend. Andy points out that if you attempt to synchronize your clock when the date is set incorrectly, the operation fails with the error message "An error occurred while Windows was synchronizing with time.windows.com. For security reasons, Windows cannot synchronize...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Public Service Announcement: Daylight Saving Time ends in most parts of the United States this weekend.</p>
<p> Andy points out that if you attempt to synchronize your clock when the date is set incorrectly, the operation fails with the error message "An error occurred while Windows was synchronizing with time.windows.com. For security reasons, Windows cannot synchronize with the server because your date does not match. Please fix the date and try again." He wonders <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#1603442"> what the security risk is</a>. </p>
<p> First of all, for people who are trying to solve the problem, the solution is to <a href="http://blogs.msdn.com/oldnewthing/archive/2009/05/21/9633075.aspx"> follow the steps in the error message</a>. Set your date to the correct date, then try again. If that doesn't help, also set the time to something close to the correct time. Once your time gets close, the time server can nudge it the rest of the way. </p>
<p> Back to the original question: What is the security risk being defended against, here? </p>
<p> At first glance, you might think that the server is attempting to defend itself against a client whose time is set incorrectly, but actually the potential attack is in reverse: Your computer is protecting itself against a rogue time server. </p>
<p> The Kerberos authentication protocol relies heavily on all participants agreeing on what time it is (with some slop tolerance). If somebody manages to fool the client into synchronizing its time against a rogue server (for example, by using a DNS poisoning attack), the attacker can use that invalid date (typically a backdate) as a foothold for the next level of attacks. </p>
<p> The default configuration for the Windows Time service is to reject attempts to change the clock on domain-joined machines by more than 15&nbsp;hours. You can change the configuration settings by following the instructions in <a href="http://support.microsoft.com/kb/884776"> this KB article</a> (which happens also to have been the source material for most of this article). </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (43)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-871653">
				<div id="div-comment-871653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Fisher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871653">
			November 5, 2010 at 7:22 am</a>		</div>

		<p>Is it possible for a rogue server to ease the time backwards by 15 hours per shot?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871663">
				<div id="div-comment-871663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua Ganes</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871663">
			November 5, 2010 at 7:40 am</a>		</div>

		<p>I have seen this error once and was slightly puzzled by it. I followed the suggested steps in the error message, and the problem was solved. Given the approach suggested in Matt Fisher&#39;s comment above, I would say that the 15 hour safety net makes life more difficult for an attacker, but is hardly a strong source of security. I found it much more irritating as a user that a service intended to set the correct time complained that I didn&#39;t have the correct time to start with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871673">
				<div id="div-comment-871673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wladimir Palant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871673">
			November 5, 2010 at 7:53 am</a>		</div>

		<p>@Matt Fisher, Joshua Ganes:</p>
<p>Time synchronization only runs once a week. Even assuming that a rogue server is operating continuously and undetected, it will only be able to skew the computer clock by 15 hours per week. Setting the clock to a date a few years back (most likely the point of this attack) will still be impossible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871693">
				<div id="div-comment-871693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zeno490</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871693">
			November 5, 2010 at 7:56 am</a>		</div>

		<p>Yes I&#39;ve been bitten by this several time as I am in possession of a rare item: a time traveling laptop. My motherboard is fuubar and sometimes, the clock will travel backwards, sometimes several days/weeks/years&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871703">
				<div id="div-comment-871703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871703">
			November 5, 2010 at 7:56 am</a>		</div>

		<p>Do systems in a domain synchronize their time to an external server or to the domain controller?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871713">
				<div id="div-comment-871713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871713">
			November 5, 2010 at 8:01 am</a>		</div>

		<p>ntpd does something similar: the 4.1.0 documentation (<a rel="nofollow" target="_new" href="http://doc.ntp.org/4.1.0/ntpd.htm" rel="nofollow">doc.ntp.org/&#8230;/ntpd.htm</a>) says that it the daemon quits if the local clock is more than 1000s away from the reference clock. &nbsp;I found this out the hard way when I was setting up an old laptop with a malfunctioning CMOS battery! &nbsp;Yes, this behaviour can be overridden by specifying &quot;-g&quot;, but at first it seemed non-intuitive to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871723">
				<div id="div-comment-871723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871723">
			November 5, 2010 at 8:02 am</a>		</div>

		<p>OK, I&#39;m lazy. &quot;All the client desktop computers nominate the authenticating domain controller as their authoritative time source.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-nathan_works odd alt thread-odd thread-alt depth-1" id="comment-871743">
				<div id="div-comment-871743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/nathan_works' rel='external nofollow' class='url'>nathan_works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871743">
			November 5, 2010 at 8:17 am</a>		</div>

		<p>I&#39;ve had similar issues with doing SSL connections on .net/IIS web services.. SSL, DST, and clocks out of sync makes for difficult-to-track problems.. (I can&#39;t recall if ssldiag helped or not .. )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871773">
				<div id="div-comment-871773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jaanus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871773">
			November 5, 2010 at 8:38 am</a>		</div>

		<p>Raymond, do you think that what you describe is good systems design? How common are rogue time servers vs people&#39;s clocks being wildly off? To me, it sounds like an instance of designing for a rare corner case while making the common case&#39;s life more miserable.</p>
<div class="post">[<i>Bad guys love rare corner cases. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871783">
				<div id="div-comment-871783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Oliver Taylor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871783">
			November 5, 2010 at 8:53 am</a>		</div>

		<p>@Jaanus</p>
<p>In many cases security exploits will make a customer&#39;s life more miserable than having to change the date.</p>
<p>Of course it is swings and roundabouts, but I suspect that those who suffer from malware or viruses would prefer that those on the development teams that deal with windows make design decisions that reduce the chances of their system being compromised.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871793">
				<div id="div-comment-871793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Ibbotson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871793">
			November 5, 2010 at 8:58 am</a>		</div>

		<p>When I was trying to get our domain correctly setup (we always used to see w32time errors in the event log) I found a control panel applet from greyware called Windows time agent (it&#39;s freeware) absolutely brilliant in helping me figure where machines thought they were getting time from.</p>
<p>In the end the problem was being caused by VMs and their host servers having different ideas as to what the time was.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson odd alt thread-odd thread-alt depth-1" id="comment-871813">
				<div id="div-comment-871813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871813">
			November 5, 2010 at 9:25 am</a>		</div>

		<p>@Wladimir Palant: &quot;Time synchronization only runs once a week.&quot;</p>
<p>By default, but not always.</p>
<p>The motherboard clocks on both my computers are so unreliable that I had to make them sync once a day to avoid accumulating ridiculous clock drifts (5 min or more over just a few days!) which messed up TV recordings etc.</p>
<p>Getting the Windows 7 time service to sync more than once a week turned out to be fairly complex, too, and the solutions I found on the web didn&#39;t actually work. (I think it&#39;s due to there being two schedules to worry about: one for when the service runs and one for what the service does when it runs. Perhaps it&#39;s a side effect of the (good) work done in Win7 to prevent services running when they don&#39;t need to.) I put my findings here in case they&#39;re of use to others:</p>
<p><a rel="nofollow" target="_new" href="http://www.pretentiousname.com/timesync/index.html" rel="nofollow">http://www.pretentiousname.com/&#8230;/index.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871853">
				<div id="div-comment-871853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabest</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871853">
			November 5, 2010 at 10:54 am</a>		</div>

		<p>I always wondered if a time service could exists like p2p file sharing. No one would know for sure if he has the correct time, instead they asked their connected neighbours and took the average, ignoring the values that deviate too much of course. After a certain number of clients the time set in this network would be automatically precise forever.</p>
<div class="post">[<i>That would eliminate random drift, but it would be susceptible to systematic drift. (For example, due to rounding, the PC clock runs 0.00015% fast. If more than 50% of the machine in the neighborhood are PCs, then the collective clock will run fast.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871863">
				<div id="div-comment-871863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871863">
			November 5, 2010 at 11:37 am</a>		</div>

		<p>In other news, Europe (or at least the Central European Time zone) already fell back last weekend.</p>
<div class="post">[<i>Not sure what your point is. Should I announce every time zone change worldwide? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871873">
				<div id="div-comment-871873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871873">
			November 5, 2010 at 12:38 pm</a>		</div>

		<p>Only trying to be informative.</p>
<p>Also we&#39;re ahead of ya.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871893">
				<div id="div-comment-871893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871893">
			November 5, 2010 at 1:42 pm</a>		</div>

		<p>Raymond, please ban comments from people who live in the future. &nbsp;They could cause a tear in the space-time continuum if they reveal any substantive information to us.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871733">
				<div id="div-comment-871733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871733">
			November 5, 2010 at 8:16 am</a>		</div>

		<p>So *that&#39;s* why we can&#39;t override the local time server settings even when the domain controller&#39;s time is fubar&#39;d.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871933">
				<div id="div-comment-871933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871933">
			November 5, 2010 at 4:59 pm</a>		</div>

		<p>I have to agree with Ian Boyd. </p>
<p>Since I don&#39;t have time to try and parse the source article, I&#39;ll just ask: Is there any way to tell it &quot;I, the administrator, accept the risk of a rogue time server. Since I am manually saying &#39;update time&#39;, just do what I told you to do and update the time.&quot;</p>
<div class="post">[<i>Yes. See the source article for details. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871903">
				<div id="div-comment-871903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871903">
			November 5, 2010 at 1:46 pm</a>		</div>

		<p>Can i just say that if the source article were written this clearly i would have easily understood it. You have a way to taking some hard to follow documentation and clearing it up. And like Don Box&#39;s book: by explaining the *why* you make the *what* easy, and essentially obvious. That&#39;s why i bought the book.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-871943">
				<div id="div-comment-871943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871943">
			November 5, 2010 at 8:55 pm</a>		</div>

		<blockquote><p>
  even when the domain controller&#39;s time is fubar&#39;d
</p></blockquote>
<p>The primary domain controller should have its time server set to an authoritative off-domain NTP server. &nbsp;Otherwise the entire domain will drift out of sync with the rest of the world.</p>
<p>I&#39;m not sure what to do for backup domain controllers. &nbsp;I would say configure them to use authoritative off-domain NTP servers too. &nbsp;I would guess that while they are BDCs they slave to the PDC, and if they get promoted to PDC they revert to their NTP server setting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871953">
				<div id="div-comment-871953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871953">
			November 6, 2010 at 2:48 am</a>		</div>

		<p>@Gabest If you are using NTP to synchronize your time, ntpd supports a so-called &quot;orphan&quot; mode which must be explicitly configured, in case it is important to you that the (local) network stays in sync <em>with each other</em> but not with the &quot;real time&quot;, in case connection to external time sources is lost.</p>
<p>Have been using this very successfully in some scenarios, where synced time between participants in the system was important, but the internet connection was rather unreliable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871963">
				<div id="div-comment-871963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Z</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871963">
			November 6, 2010 at 6:44 am</a>		</div>

		<p>this seems like a workaround designed to avoid handling the actual issue: proper validation / trust of the time server.</p>
<p>i don&#39;t know the ins and outs of the time protocol used here, but couldn&#39;t this have been solved by using secure connections (TLS) and validating the server certificate? perhaps only allow certs signed by a certificate authority owned by Microsoft. this way, Microsoft would get to control whether a time server is valid enough to be accepted by Windows clients or not.</p>
<div class="post">[<i>You must not get out much. If Microsoft did that there would be a riot. &quot;You&#39;re telling me that if I set up a domain in my organization, I need to get Microsoft to issue a certificate to each of my my domain controllers so my clients can use it as a time server?&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-871973">
				<div id="div-comment-871973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871973">
			November 6, 2010 at 8:43 am</a>		</div>

		<p>Actually Z has a point. &nbsp;In the domain scenario there&#39;s already a trust relationship between the NTP client and the NTP server. &nbsp;It should be possible to use a secure version of NTP that builds on top of that trust relationship&#8230; that would fix the &quot;rogue server&quot; issue in that specific scenario.</p>
<p>In principle it would also work for non-domain scenarios if internet &quot;secure NTP&quot; servers published public keys, which the client could indicate trust in at the time they decided which NTP server to use. &nbsp;These could be self-signed. &nbsp;That would vastly limit the attack window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-871983">
				<div id="div-comment-871983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">grumpy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871983">
			November 6, 2010 at 12:42 pm</a>		</div>

		<p>@Z, @Mauritz, you&#39;re just missing one fairly obvious point here:</p>
<p>how do you define a trustworthy time server?</p>
<p>I can see one, and only one, sane definition: A trustworthy time server is one that reports the correct time.</p>
<p>I don&#39;t care how many certificates it has, if it tells me the wrong time. And vice versa, as long as it tells me the correct time, I couldn&#39;t care less who has, or has not, signed its certificates.</p>
<p>So it makes good sense that in order for me to trust a time server, it has to report a time that is close to what I happen to know the time is. This is pretty sensible behavior, and I&#39;d hate to have to rely on arbitrary certificates that don&#39;t tell me what I need to know (that the server reports the correct time), but only that Microsoft trusts the server (that&#39;s nice too, but it&#39;s not as important as whether it reports the correct time).</p>
<p>@Jaanus: no, I&#39;d say it&#39;s the other way around. A user&#39;s clock suddenly diverging dramatically (by default, more than 15 hours per week) sounds like a rare corner case (and it&#39;s usually a symptom of a hardware malfunction, and then it doesn&#39;t really matter what the time server does. Your clock will drift off again almost immediately after synchronizing). But a potential security vulnerability is pretty much by definition never a corner case. If it can be exploited, it will be exploited. And then it&#39;s no longer a corner case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-871993">
				<div id="div-comment-871993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-871993">
			November 6, 2010 at 4:02 pm</a>		</div>

		<p>I don&#39;t get it. Wiki says &quot;Kerberos has strict time requirements, which means the clocks of the involved hosts must be be synchronized within configured limits.&quot; So what if some bad time server give me the wrong time, it would &quot;only&quot; mean that Kerberos would not work: &quot;Sorry, your time deviate more than 5 minutes&quot;. In case, it sounds like DOS problem, not a security problem. Also, if Kerberos require max 5 minute deviation, why the heck is not time synchronization built into Kerberos? Sounds like a badly designed POS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-872003">
				<div id="div-comment-872003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872003">
			November 6, 2010 at 7:25 pm</a>		</div>

		<blockquote><p>
  how do you define a trustworthy time server
</p></blockquote>
<p>One that I have made a conscious decision to trust. &nbsp;Part of this is being able to reliably identify the time server a given NTP packet actually comes from, perhaps via an extension to NTP (S-NTP, we could call it) where packets include something that could only be generated by the holder of the private key that corresponds to the public key I pointed to when I set up time synchronization.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-872013">
				<div id="div-comment-872013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872013">
			November 6, 2010 at 8:12 pm</a>		</div>

		<p>[Yes. See the source article for details. -Raymond]</p>
<p>Excellent, when I have the time I&#39;ll go take a look for the next time I have a motherboard that&#39;s reset its time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-872023">
				<div id="div-comment-872023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872023">
			November 7, 2010 at 8:47 am</a>		</div>

		<p>@osexpert: If there is already a well adopted and understood protocol for synchronising time why reinvent the wheel and duplicate this effort as part of the kerberos protocol? What would happen if a pc was set to sync via ntp and also was part of a domain &#8211; it now has two time sources. Do we ignore the ntp source as long as a kerberos server is available but fall back if one isn&#39;t &#8211; that could result in temporary network outages causing clocks to be more out of sync than if we did nothing at all. If we ignore the ntp setting completely then that is just going to cause confusion.</p>
<p>Although the article was referring to kerberos there could be other authentication mechanisms in use that do not enforce a requirement on time anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-872033">
				<div id="div-comment-872033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Semi Essessi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872033">
			November 7, 2010 at 4:02 pm</a>		</div>

		<p>Why have the limit at all? If you make it public then I would expect that attackers would modify their attacks accordingly (they can Google it when their first attack fails) &#8211; its only marginally more secure than having no limit at all. Unfortunately having the limit inconveniences users and, from the naive perspective, makes it look like Microsoft failed to solve a trivial problem properly.</p>
<p>I&#39;d expect having the limit is only going to protect against the most useless and undetermined of attackers &#8211; who are the least threat anyway.</p>
<p>Still&#8230; interesting to know about. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-872043">
				<div id="div-comment-872043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872043">
			November 7, 2010 at 6:27 pm</a>		</div>

		<p>How about that, by default the domain should generate a certificle for NTP source authentication purpose only that all computers joining domain be trusted. This certificate will be updated as other domain-wide certificate deployment.</p>
<p>Time service will update only with those NTP which have Microsoft or domain generated certificate, when required to ignore the 15 hour limit.</p>
<div class="post">[<i>Suppose Microsoft did that. You made it impossible for people to switch to ntp.org as their time server. Who&#39;s the evil one now? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-872053">
				<div id="div-comment-872053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872053">
			November 7, 2010 at 8:01 pm</a>		</div>

		<p>I think that Cheong was trying to imply that a domain-generated or Microsoft-generated certificate would automatically allow the time service to ignore the 15-hour limit. It would only be with untrusted NTP servers that the HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesW32TimeConfig limits would need to be enforced.</p>
<p>Given that there probably close to a billion computers that sync to time.windows.com once a week by default, that equates to over 1,000 requests per second against MS time servers. I&#39;d guess that MS would probably skip the signing and just leave it up to the domain-connected systems where time sync really matters to do the secure NTP.</p>
<div class="post">[<i>I guess that could work, but it would also increase the load on the time servers (having to digitally sign every response) to cover a corner case that can be fixed by the end user by simply following the instructions. Good luck justifying that infrastructure budget. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-872093">
				<div id="div-comment-872093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872093">
			November 8, 2010 at 8:21 am</a>		</div>

		<p>Raymond, it&#39;s pretty hard to get an &quot;end user to follow the instructions&quot; when you want to automate the solution. Signing could be done only as a second phase, when the initial request fails due to incorrect date. I wonder how much the load would be affected then. </p>
<div class="post">[<i>My reading of NTP is that there is no way for the client to indicate whether it wants the response signed or not. The server, if it supports signing, must sign everything. But I didn&#39;t spend a lot of time researching NTP. (In that respect, I&#39;m following the lead of most commenters.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-872263">
				<div id="div-comment-872263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872263">
			November 8, 2010 at 2:29 pm</a>		</div>

		<p>NTP doesn&#39;t support a concept of signing at all. &nbsp;There would need to be an extension to NTP to allow the client to verify the identity of a server.</p>
<p>I don&#39;t see that the load is significant. &nbsp;NTP packets are just calculated every so often.</p>
<p>A more serious design concern is that the rogue time server could just replay old packets from the real time server.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-872293">
				<div id="div-comment-872293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">time2time</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872293">
			November 8, 2010 at 3:04 pm</a>		</div>

		<p>Why the arbitrary 15 hours default limit? Why not 14 or 16? What makes 15 better than everything else?</p>
<div class="post">[<i>Why the arbitrary 14 hour limit? Why not 13 or 15? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-872333">
				<div id="div-comment-872333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goldilocks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872333">
			November 8, 2010 at 4:29 pm</a>		</div>

		<p>Because 14 is too little and 16 is too much. &nbsp;15 is just right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-872373">
				<div id="div-comment-872373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872373">
			November 8, 2010 at 5:06 pm</a>		</div>

		<p>@time2time: My guess would be GMT +/- 12 hours difference in timezone + 1 hour possible daylight saving adjustment in U.S. + 1 hour possible daylight adjustment in other countries + allowance for 00-59 minutes deviation in time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-872393">
				<div id="div-comment-872393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872393">
			November 8, 2010 at 5:15 pm</a>		</div>

		<p>[My reading of NTP is that there is no way for the client to indicate whether it wants the response signed or not. The server, if it supports signing, must sign everything. But I didn&#39;t spend a lot of time researching NTP. (In that respect, I&#39;m following the lead of most commenters.) -Raymond]</p>
<p>Currently NTP works on UDP, how about adding TCP 123 for SSL enabled NTP, and make RFC require NTP clients connect with NTP first, and then connect TCP if connection through UDP fails or time skews more than 15 hours, and always assume TCP NTP connection will always be SSL enabled?</p>
<p>In this way the old clients would just work, and the infrasturcture investment shouldn&#39;t be huge, as people only need TCP one on &quot;corner case&quot;.</p>
<p>That said, even if not implemented this way, I think the loading for intradomain NTP request should be quite acceptable for most companies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-872403">
				<div id="div-comment-872403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872403">
			November 8, 2010 at 5:17 pm</a>		</div>

		<p>/adjustment in U.S./adjustment in NTP server time/ for reply to time2time</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-872413">
				<div id="div-comment-872413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nobugz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872413">
			November 8, 2010 at 5:21 pm</a>		</div>

		<p>@Cheong &#8211; I like the thinking but it does ignore somebody hopping back and forth across the International Date Line. &nbsp;25 hours to make that hop sufficiently impractical. &nbsp;Ignoring UTC+14, Kiribati is on my bucket list.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-872483">
				<div id="div-comment-872483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872483">
			November 9, 2010 at 6:10 am</a>		</div>

		<p>Raymond, the obvious answer is to connect to a different IP and/or port. However&#8230;</p>
<p>Everyone who&#39;s suggesting some sort of digital signing idea &#8211; what happens when the client machine thinks the certificate has expired?</p>
<p>Everyone who thinks it has to do with moving between timezones &#8211; the windows system time and NTP are maintained in UTC.</p>
<p>Maurits &#8211; see rfc 5906 &#8211; the load for a pki-based system is significant, thought has been put into replay attacks, but there doesn&#39;t appear to be a solution requiring no configuration on a client whose time may be off by an arbitrary amount in either direction.</p>
<p>It seems like the attacks involving a rogue NTP setting the date to some point in the future are much less clear than those involving setting it to the past, and the [wrong] client clock being set in the past [and being moved forward a large amount by a correct NTP server] seems like a more likely scenario than being set in the future &#8211; so a plausible solution might be to only apply the limit for setting it backwards.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-872683">
				<div id="div-comment-872683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Wooding</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872683">
			November 9, 2010 at 11:34 am</a>		</div>

		<p>@cheong: Running NTP over TCP is crazy. &nbsp;In particular, the server&#39;s reply packet is meant to contain a timestamp for when the packet was transmitted. &nbsp;TCP retransmission and congestion control delays would completely destroy the server&#39;s ability to predict when the packet is actually sent. &nbsp;Currently, properly configured NTP (with a number of reasonbly low-stratum servers) can keep a client&#39;s clock within a hundredth of a second of true; there&#39;s no way that could happen over TCP.</p>
<p>Note also that introducing nontrivial cryptography makes this sort of thing way more complicated. &nbsp;I suspect that a server would have to predict an upper bound for when (say) it will have finished signing a packet, put that time, and the time when the client&#39;s request was received, in the message to be signed, send it off to the crypto engine &#8212; which may be a hardware security module, communications with which will introduce unpredictable latency (it might be network attached, for example) &#8212; and then /delay/ transmission of the finished signed response until the predicted time. &nbsp;(You could just try to include the crypto as network latency overhead, but it&#39;s a strongly asymmetric overhead so I think that&#39;ll cause clients to lock onto the wrong time.)</p>
<p>Alternatively, you could set up a persistent association with symmetric session keys between the server and each client &#8212; but then the introduction of per-client state will severely limit the number of clients that the server can deal with simultaneously. &nbsp;You could mitigate that by deepening the forest of servers, but then leaves will be further adrift of true time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-872833">
				<div id="div-comment-872833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872833">
			November 9, 2010 at 5:11 pm</a>		</div>

		<p>@Mark Wooding: I see. In that case, how about introducing SSL for just authentication purpose?</p>
<p>A machine connects to NTP server, seeing clock skew by 15+ hours, then connect to TCP port to check the e-cert. After confirmed server identity, resume normal time-sync process with UDP. The authentication will be valid for a specified amount of time (sort of TTL in DNS servers) and NTP clients need not connect TCP port if the authentication status is still valid.</p>
<p>I guess the addition loading it&#39;ll receive will be no more than average popular webmails. (Afterall, after the certificate is checked, it can be returned and no other content is needed)</p>
<p>For authentication purpse, I guess kerbose or others could do too. Just that for e-certificate you can limit the purpose of what the certificate can do, hence reducing chance of possible unwanted side effect in introduced.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-872873">
				<div id="div-comment-872873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101105-00/?p=12343#comment-872873">
			November 9, 2010 at 10:56 pm</a>		</div>

		<p>Maybe allow 3 different time sources? Then if 2 agree, and one is way off, use those 2. If they all disagree (within limits), you&#39;d still be screwed but at least Windows would know something&#39;s up.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

