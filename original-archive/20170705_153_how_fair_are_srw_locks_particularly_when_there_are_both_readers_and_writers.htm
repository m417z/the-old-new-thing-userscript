<html>
<head>
<title>How fair are SRW locks, particularly when there are both readers and writers?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How fair are SRW locks, particularly when there are both readers and writers?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 5, 2017 / year-entry #154</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170705-00/?p=96535</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Not fair! As with the other Windows synchronization objects.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to know about the order of lock acquisition
in the <code>SRWLOCK</code> functions.
They note that
<a HREF="https://msdn.microsoft.com/library/windows/desktop/aa904937(v=vs.85).aspx">
the documentation says</a>,
</p>
<blockquote CLASS=q><p>
There is no guarantee about the order in which threads
that request ownership will be granted ownership;
SRW locks are neither fair nor FIFO.
</p>
</blockquote>
<p>
They were worried about starvation.
For example,
suppose thread&nbsp;1 acquires in shared mode,&sup1;
and then thread&nbsp;2 requests exclusive access (and therefore waits).
Now
thread&nbsp;3 requests shared access.
Will it acquire immediately (since shared mode is available),
jumping ahead of thread&nbsp;2?
If readers can jump ahead of writers,
then does this mean that thread&nbsp;2 could be starved
out indefinitely if the lock is popular with readers?
</p>
<p>
As with the other Windows synchronization objects,
they do not guarantee fairness.
Removing the fairness guarantee
<a HREF="http://joeduffyblog.com/2006/12/14/anticonvoy-locks-in-windows-server-2003-sp1-and-windows-vista/">
avoids lock convoys</a>.
That said, SRW locks aren't aggressively unfair either.
If shared readers arrive when there is a waiting writer,
they will queue up behind the writer,
which generally avoids the problem of readers starving out
a writer.
</p>
<p>
The unfairness comes into play when the last reader exits
the lock while there is a waiting writer.
At that point, the exclusive waiter is woken so it can acquire
the lock,
but in the time between the last reader exits and the exclusive
waiter acquires,
a totally unrelated thread might come in and steal the lock.
This behavior is unfortunate, but it's necessary in order to
avoid a lock convoy.
</p>
<p>
The good news is that even though there is occasional unfairness,
there is unlikely to be persistent unfairness.
In order for a thread to steal the lock,
it needs to hit the tiny window where the lock is available.
In practice, a thread is unlikely to be this lucky repeatedly.
Eventually, its luck will run out, and it will
find that the lock is already acquired, at which point it queues
up behind the exclusive writer and will not be able to steal the
lock any more.
</p>
<p>
<b>Reminder</b>:
This article discusses implementation details which are not contractual.
The behavior may change at any time.
</p>
<p>
&sup1;
In SRW lock parlance,
a shared lock acquirer is often called a "reader"
and an exclusive lock acquirer is often called a "writer".</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1301445">
				<div id="div-comment-1301445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin Fee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170705-00/?p=96535#comment-1301445">
			July 5, 2017 at 1:38 pm</a>		</div>

		<p>I followed the link to Joe Duffy&#8217;s blog, which had a link back to your blog. On that page (&#8220;A high waiter count on a free critical section may indicate a lock convoy&#8221; which has its comments closed) there&#8217;s another link (&#8220;about lock convoys&#8221;) which 404s.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1301467">
				<div id="div-comment-1301467" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170705-00/?p=96535#comment-1301467">
			July 6, 2017 at 3:18 am</a>		</div>

		<p>&#8220;If shared readers arrive when there is a waiting writer, they will queue up behind the writer&#8221;</p>
<p>&#8220;in the time between the last reader exits and the exclusive waiter acquires, a totally unrelated thread might come in and steal the lock&#8221;</p>
<p>So when the last reader exits, the lock forgets that it has a waiting writer?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1301475">
				<div id="div-comment-1301475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170705-00/?p=96535#comment-1301475">
			July 6, 2017 at 5:09 am</a>		</div>

		<p>When the last reader exits, the waiting writer is woken. At this point, the writer is no longer waiting (it is running and racing to acquire the lock), so the &#8220;shared readers queue behind a waiting writer&#8221; rule does not apply.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1301505">
				<div id="div-comment-1301505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://skuldwyrm.no/' rel='external nofollow' class='url'>Roger HÃ¥gensen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170705-00/?p=96535#comment-1301505">
			July 6, 2017 at 6:57 pm</a>		</div>

		<p>And I assume the Writer gets a failed lock and then gets back in the queue (most likely).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

