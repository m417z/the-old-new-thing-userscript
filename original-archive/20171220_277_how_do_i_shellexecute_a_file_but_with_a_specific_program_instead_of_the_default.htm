<html>
<head>
<title>How do I ShellExecute a file, but with a specific program instead of the default program?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I ShellExecute a file, but with a specific program instead of the default program?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 20, 2017 / year-entry #278</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Count the ways.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The usual way to launch a file is to use
<code>Shell&shy;Execute</code>,
which opens the file in the default program
registered to handle that type of file.
But what if you want to override the default?
</p>
<p>
We saw
some time ago
that if you know the ProgId of the program you want to run,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543">
you can specify it in the <code>lpClass</code> of the
<code>SHELL&shy;EXECUTE&shy;INFO</code></a>
to force the file to be treated as if it were a specific
kind of file.
</p>
<p>
Okay, but what if you aren't sure that the program
you want to run has registered a ProgId at all?
Or if you don't know what that ProgId is?
For example,
maybe you searched the hard drive for executable files
and put them all in a list,
and let the user pick one,
and then you want to run that program to open the file.
</p>
<p>
In that case, you are in a bit of a pickle because
you don't know how an arbitrary program expects its
command line to be formatted in order to open a file.
Fortunately, most programs which can open files will
accept the file name on the command line with no other
options,
so you will have a high chance of success if you
simply enclose the name of the file you want to open
in quotation marks (in case it contains spaces),
and then pass that as the command line.
When calling <code>Shell&shy;Execute</code>,
you pass
<code>lpFile</code>
equal to the program you want to run,
and
<code>lpParameters</code>
equal to the file you want to open,
enclosed in quotation marks if necessary.
</p>
<p>
<b>Exercise</b>:
Does the path to the program need to be fully-qualified?
</p>
<p>
<b>Exercise</b>:
Why do you have to quote the file you want to open,
but not the program itself?
</p>
<p>
One reason you may want to use
<code>Shell&shy;Execute</code>
instead of just going straight to
<code>Create&shy;Process</code>
is if you need elevation.
You can pass
<code>lpOperation</code> equal
to <code>runas</code>
to get <code>Shell&shy;Execute</code>
to do the work of prompting the user for elevation.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1318275">
				<div id="div-comment-1318275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kenn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318275">
			December 20, 2017 at 7:14 am</a>		</div>

		<p>Another reason to use ShellExecute rather than CreateProcess is that CreateProcess doesn&#8217;t modify the PATH environment variable to add per-application path directories (as configured at SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\exe-name.EXE).  You need ShellExecute to do that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1 parent" id="comment-1318276">
				<div id="div-comment-1318276" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318276">
			December 20, 2017 at 7:18 am</a>		</div>

		<p>A) No, it will search the normal places and the App Paths key. If you know the full path then you should use it, it is faster and will not cause problems if there are naming collisions, multiple versions installed, or a broken registry entry.</p>
<p>B) The parameters argument can contain multiple switches and paths and space is the separator. You therefore need the path+name item to be quoted so it is treated as a single item. The file argument is always a single path/name and should never be quoted.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1318415">
				<div id="div-comment-1318415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318415">
			December 20, 2017 at 11:22 pm</a>		</div>

		<p>Off topic, but won&#8217;t there be an issue if two different applications happen to use the same &#8220;app paths&#8221; subkey name? I guess this isn&#8217;t an issue in the real world though since most people would pick a unique name or just overwrite an existing key on install.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-3" id="comment-1318445">
				<div id="div-comment-1318445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318445">
			December 22, 2017 at 8:43 am</a>		</div>

		<p>In the real world it can be a issue because most installers do not delete the key, they just add the values they need without clearing the key first. If two apps with the same .exe name are installed on the same machine the app installed last &#8220;wins&#8221; but other values like &#8220;UseUrl&#8221; and &#8220;DropTarget&#8221; might still be there even if they are not supported by the second app.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1318315">
				<div id="div-comment-1318315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318315">
			December 20, 2017 at 9:41 am</a>		</div>

		<p>If  searching takes place on a lpFile member that is not fully qualified, then the docs for SHELLEXECUTEINFO should be updated.  They currently say this about lpFile: &#8221; If the path is not included with the name, the current directory is assumed.&#8221;</p>
<p>Of course, if you have a full path to the executable you should specify it.  If searching takes place then you might not get the program you wanted executed.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-2 parent" id="comment-1318335">
				<div id="div-comment-1318335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318335">
			December 20, 2017 at 10:01 am</a>		</div>

		<p>The locations are documented @ <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ee872121#app_exe" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/ee872121#app_exe</a></p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1318337">
				<div id="div-comment-1318337" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318337">
			December 20, 2017 at 10:35 am</a>		</div>

		<p>I&#8217;m not surprised that searching takes place or that it&#8217;s documented somewhere.  I think that it would be appropriate to at least mention it in the docs for SHELLEXECUTEINFO, especially since what is mentioned there is incorrect for this scenario.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1318347">
				<div id="div-comment-1318347" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.lebeausoftware.org' rel='external nofollow' class='url'>Remy Lebeau</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318347">
			December 20, 2017 at 11:44 am</a>		</div>

		<p>Why doesn&#8217;t Microsoft expose new CreateProcess/ShellExecute APIs for launching elevated processes without having to use hacks?  It has been possible for 10 years now using 3rd party functions (see <a href="https://www.codeproject.com/Articles/19165/Vista-UAC-The-Definitive-Guide" rel="nofollow">https://www.codeproject.com/Articles/19165/Vista-UAC-The-Definitive-Guide</a>), so why not make official APIs for it?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1318375">
				<div id="div-comment-1318375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318375">
			December 20, 2017 at 3:55 pm</a>		</div>

		<p>I don&#8217;t think you&#8217;re gonna get an answer.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1318356">
				<div id="div-comment-1318356" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318356">
			December 20, 2017 at 1:53 pm</a>		</div>

		<p>If the filename or path contains quotation marks, you have to escape those, right?  Is there a standard function for doing so?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-2" id="comment-1318365">
				<div id="div-comment-1318365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318365">
			December 20, 2017 at 2:20 pm</a>		</div>

		<p>Double quote is a reserved character not allowed in filenames.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1318395">
				<div id="div-comment-1318395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318395">
			December 20, 2017 at 8:09 pm</a>		</div>

		<p>I&#8217;ve complained about no inverse of CommandLineToArgvW before.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-msn even depth-2" id="comment-1318405">
				<div id="div-comment-1318405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/poizan42' rel='external nofollow' class='url'>poizan42</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171220-00/?p=97615#comment-1318405">
			December 20, 2017 at 9:28 pm</a>		</div>

		<p>Unfortunately no. And the escaping rules are complex and everybody gets them wrong. You must escape quotes with a backslash. But backslashes themselves are not escaped *unless they precede a quote*. So a run of backslashes preceding a quote must be doubled up. See this blogpost for a correct implementation: <a href="https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/" rel="nofollow">https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

