<html>
<head>
<title>The wrong way to check whether the mouse buttons have been swapped</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The wrong way to check whether the mouse buttons have been swapped</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 17, 2007 / year-entry #381</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>39</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Back in the late 1990's, the window manager team received a bug that said that sometimes the mouse button state got messed up and the computer acted as if the buttons were stuck down. Further investigation revealed that it occurred only when one particular program was running, and only if the user had enabled mouse...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Back in the late 1990's, the window manager team received a bug
that said that sometimes the mouse button state
got messed up and the computer acted
as if the buttons were stuck down.
Further investigation revealed that it occurred only when one
particular program was running, and only if the user had enabled mouse
button swapping.
</p>
<p>
The reason is that the program in question detected whether the
mouse buttons were swapped with a function like this:
</p>
<pre>
<i>// do not use this function
BOOL AreMouseButtonsSwapped()
{
 BOOL fWasSwapped = SwapMouseButton(FALSE);
 if (fWasSwapped) SwapMouseButton(TRUE);
 return fWasSwapped;
}</i>
</pre>
<p>
The <code>SwapMouseButton</code> function changes the button swap state
and returns the old state.
The way the program checked whether the buttons were swapped
was by unswapping the buttons and using the return value to
determine what the previous setting was,
then re-swapping the buttons if the previous setting was
"Yes, they were swapped."
</p>
<p>
If you started with the buttons swapped, running this function
created a tiny window where the buttons were momentarily unswapped.
And if you were unlucky enough to click the mouse during this
window of vulnerability, the program saw one mouse button go down
and a different button come up!
Even though it was the same physical button each time,
it was a different logical button, since the meanings of the buttons
had changed.
</p>
<p>
The correct way of detecting whether mouse buttons are swapped
is just to ask non-intrusively.
</p>
<pre>
BOOL AreMouseButtonsSwapped()
{
 return GetSystemMetrics(SM_SWAPBUTTON);
}
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (39)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-560223">
				<div id="div-comment-560223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://msdn2.microsoft.com/en-us/library/ms646264.aspx' rel='external nofollow' class='url'>Peter</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560223">
			October 17, 2007 at 10:35 am</a>		</div>

		<p>And because this information should go to more places, I&#8217;ve used the &#8216;Community Content&#8217; feature of MSDN to add it to the (english version of the) MSDN site.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560253">
				<div id="div-comment-560253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.google.com/search?q=SM_SWAPBUTTON+site%3Amsdn.microsoft.com' rel='external nofollow' class='url'>msdn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560253">
			October 17, 2007 at 11:12 am</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://www.google.com/search?q=SM_SWAPBUTTON+site%3Amsdn2.microsoft.com" rel="nofollow">http://www.google.com/search?q=SM_SWAPBUTTON+site%3Amsdn2.microsoft.com</a></p>
<p><a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/ms724385.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/ms724385.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560273">
				<div id="div-comment-560273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://patentlystupid.com' rel='external nofollow' class='url'>Richard Ahlquist</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560273">
			October 17, 2007 at 11:23 am</a>		</div>

		<p>Very interesting. I have run into a mouse swap button bug since 95 build 347. Sometimes you will left click and it pops up the right click context menu. I have found that rapidly clicking back and forth between the two buttons for a few seconds eventually fixes it. Still an annoyance though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560293">
				<div id="div-comment-560293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560293">
			October 17, 2007 at 11:39 am</a>		</div>

		<p>While the swapping back and forth is an ugly way to check if the buttons are swapped, the real problem lies here:</p>
<p>&quot;And if you were unlucky enough to click the mouse during this window of vulnerability, the program saw one mouse button go down and a different button come up!&quot;</p>
<p>Seems like a race condition in the mouse handling code. The swap function should lock the mouse while performing the swap.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560303">
				<div id="div-comment-560303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">a</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560303">
			October 17, 2007 at 11:41 am</a>		</div>

		<p>Why would a program need to know this anyway?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560353">
				<div id="div-comment-560353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Good Point</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560353">
			October 17, 2007 at 1:00 pm</a>		</div>

		<p>&quot;Why would a program need to know this anyway?&quot;</p>
<p>Because someone (a PM no doubt) filed a defect that said to change all text refering to &quot;Right-Click&quot; to &quot;Left-Click&quot; for left handed mouse users.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560383">
				<div id="div-comment-560383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560383">
			October 17, 2007 at 1:42 pm</a>		</div>

		<p>Richard Ahlquist: I think I know what you mean. &nbsp;If so, it appears to be caused by a corrupted packet of mouse data&#8230; or at least it happened to me a lot more often when I had a mouse with a dodgy cable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560403">
				<div id="div-comment-560403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560403">
			October 17, 2007 at 2:03 pm</a>		</div>

		<p>Swapping the mouse buttons over should almost certainly only be done at the user&#8217;s request, in which case the user is probably clicking Apply in the mouse settings control panel, in which case none of the issues mentioned in the comments seem worth solving, given that it would add complexity, and potentially bugs, to the vital mouse handling code.</p>
<p>Fixing the program, and adding a compatibility layer for the old versions of it if needed, seems like the more sensible route, unless several other programs made the same mistake (which seems unlikely).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560413">
				<div id="div-comment-560413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560413">
			October 17, 2007 at 2:32 pm</a>		</div>

		<p>Holy crap &#8211; how did you guys ever manage to reproduce this problem reliably enough to track down the problem?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560423">
				<div id="div-comment-560423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mikkin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560423">
			October 17, 2007 at 2:38 pm</a>		</div>

		<blockquote><p>
  Every mouse down event is eventually followed by a mouse up event.
</p></blockquote>
<p>Only in an ideal world, actual results may differ. (I can&#8217;t believe Raymond had to explain this.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560443">
				<div id="div-comment-560443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://myfirstrealcsharpproject.blogspot.com/' rel='external nofollow' class='url'>peterchen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560443">
			October 17, 2007 at 3:07 pm</a>		</div>

		<p>Evan: As I understand it Aaargh! is right. The problem occurs when a mouse button is down while buttons are swapped &#8211; whether it&#8217;s the first or the last call. A press-and-release between the calls should not matter.</p>
<p>(Think of this: If I call SwapMoouseButton once today, and once again tomorrow, have I opened a barn dor of opportunity?)</p>
<p>Or am I missing something, Raymond?</p>
<p>Nitpicks corner: I know it&#8217;s not your fault.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560453">
				<div id="div-comment-560453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.asvguy.com' rel='external nofollow' class='url'>Burak KALAYCI</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560453">
			October 17, 2007 at 3:27 pm</a>		</div>

		<p>The root of the problem, I think, is SwapMouseButton returning previous state (it shouldn&#8217;t have returned any value, or, at most a boolean for success).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560463">
				<div id="div-comment-560463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560463">
			October 17, 2007 at 3:54 pm</a>		</div>

		<p>&quot;Holy crap &#8211; how did you guys ever manage to reproduce this problem reliably enough to track down the problem?&quot;</p>
<p>I&#8217;d guess that it&#8217;d be easy to see if you watched the program and what functions it was calling.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560483">
				<div id="div-comment-560483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560483">
			October 17, 2007 at 4:00 pm</a>		</div>

		<p>Good question &quot;a&quot; &#8212; why should a program need to know this? &nbsp;It&#8217;s none of the program&#8217;s business {speaking of any application program}.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560503">
				<div id="div-comment-560503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560503">
			October 17, 2007 at 4:31 pm</a>		</div>

		<p>peterchen: &nbsp;Yes, you&#8217;ve opened a barn door of opportunity, sort of. &nbsp;If you call swap once, then the mouse button gets pressed (while the buttons are reversed), then you call swap again, then the OS won&#8217;t recognize the release. &nbsp;(Because the OS gets a press for one button, but a release for the other.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560533">
				<div id="div-comment-560533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560533">
			October 17, 2007 at 5:40 pm</a>		</div>

		<p>This looks like another episode of &quot;The developer didn&#8217;t manage to find the right MSDN page in the time available.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560323">
				<div id="div-comment-560323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560323">
			October 17, 2007 at 11:59 am</a>		</div>

		<p>@Aaargh</p>
<p>&quot;Seems like a race condition in the mouse handling code. The swap function should lock the mouse while performing the swap.&quot;</p>
<p>That&#8217;s not the issue; the swap is instantaneous. It the window between the two calls that makes it a race, and Windows *can&#8217;t* lock the mouse out during that interval because it has no clue the second call is coming. </p>
<p>Now, it could be argued that Windows should properly deal with a button being held down during the swap, but even if it&#8217;s possible to do better, what the proper semantics are isn&#8217;t exactly clear.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560363">
				<div id="div-comment-560363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poochner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560363">
			October 17, 2007 at 1:16 pm</a>		</div>

		<p>Every* book on yarncraft (knitting, crochet, etc) I&#8217;ve run across handles this by saying something similar to, &quot;if you&#8217;re left handed, just think &#8216;right hand&#8217; when I say &#8216;left hand&#8217; and vice versa.&quot; &nbsp;Lefties are supposed to be bright and creative, right? &nbsp;And used to dealing with this sort of thing. &nbsp;I honestly think it would confuse some of them because they wouldn&#8217;t think the system would think that far ahead. &nbsp;They would do the flip in their minds automatically.</p>
<p>*with one exception that repeated each section, even with flipped photos. &nbsp;Crappy book, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560393">
				<div id="div-comment-560393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560393">
			October 17, 2007 at 1:49 pm</a>		</div>

		<p>@evan</p>
<p>&quot;Windows *can&#8217;t* lock the mouse out during that interval because it has no clue the second call is coming.&quot;</p>
<p>Every mouse down event is eventually followed by a mouse up event. If you swap the mouse buttons, the time between those two events is a critical path. One could postpone the swap until the mouse up event, or you could &#8216;remember&#8217; what button number was sent to the application when the physical mouse button was pressed down and send the accompanying mouse up event for that button, regardless of the swap occuring when the physical button is released.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560553">
				<div id="div-comment-560553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560553">
			October 17, 2007 at 9:25 pm</a>		</div>

		<p>Peterchen: the real barn door is open if your application does the swap thing every second. &nbsp;It gives you a much greater chance hitting the window (remember: it happens when you press down, the buttons get reversed, and then you lift up).</p>
<p>You can also get into this state with unfortunate sets of simulated mouse events.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560563">
				<div id="div-comment-560563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ebiango@comcast.net' rel='external nofollow' class='url'>Eilene</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560563">
			October 17, 2007 at 10:56 pm</a>		</div>

		<p>I am having nothing but the same problems. Dell does not have any answer and this is a new system I have. I think they think I just want another exchange. Please help!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560573">
				<div id="div-comment-560573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/tonyschr/archive/2007/10/17/don-t-change-system-settings-to-perform-a-computation.aspx' rel='external nofollow' class='url'>Tony Schreiner's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560573">
			October 17, 2007 at 11:52 pm</a>		</div>

		<p>A post from Raymond Chen today reminds me of the first application compatibility issue I debugged (and</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560523">
				<div id="div-comment-560523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Trent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560523">
			October 17, 2007 at 5:20 pm</a>		</div>

		<p>As for why an app needs to know the mouse swap state, there are any number of possible reasons (in my case because I have a user-mode helper application that has to tell my kernel mode *mouse* driver because there&#8217;s no reliable way to find this out on a per-user basis from the kernel).</p>
<p>But I think the most likely reason is for tutorial purposes: &quot;Now move your pointer over the &lt;foobar&gt; control and press the &lt;left/right&gt; mouse button.&quot;. Users, particularly the ones that need a tutorial at that level of detail in the first place, really *are* too stupid to mentally convert from left to right without calling customer support.</p>
<p>But who knows, maybe it&#8217;s an app that comes with some special mouse that has &quot;This button is for &lt;foobar&gt;&quot; printed on it, and the app needs to know when that physical switch is actually depressed, regardless of the swap state.</p>
<p>It&#8217;s still hard to comprehend that some programmer would think that swapping the buttons was a good way to determine this. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560583">
				<div id="div-comment-560583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560583">
			October 18, 2007 at 1:30 am</a>		</div>

		<p>I can imagine wanting to know this if you were making a pinball game in which the flippers were controlled by the mouse buttons.. Would be sort of silly to have the right flipper go off on a LMB press and vice versa :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560643">
				<div id="div-comment-560643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560643">
			October 18, 2007 at 6:53 am</a>		</div>

		<p>@Aaargh!</p>
<p>That&#8217;s not how Windows works and it gets really messy anyway. You can for example press the left button, and while it&#8217;s down click with the right one and only then release the left button. And all permutations of the that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560653">
				<div id="div-comment-560653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560653">
			October 18, 2007 at 7:29 am</a>		</div>

		<p>bryank: but that could happen during the first call to SwapMouseButtons as well, or am I missing something here?</p>
<p>i.e. as I understand the problem is with SwapMouseButton itself, not the use: when a mouse button is pressed while you call SetMouseButton, things go boom.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560613">
				<div id="div-comment-560613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Name required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560613">
			October 18, 2007 at 4:05 am</a>		</div>

		<p>&gt; the user is probably clicking Apply in the mouse settings control panel</p>
<p>Actually the buttons are swapped *before* the Apply button is clicked (Win XP), as soon as the checkbox is (un)checked as far as I can tell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560623">
				<div id="div-comment-560623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Name required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560623">
			October 18, 2007 at 4:14 am</a>		</div>

		<p>&gt; &quot;Now move your pointer over the &lt;foobar&gt; control and press the &lt;left/right&gt; mouse button.&quot;. Users, particularly the ones that need a tutorial at that level of detail in the first place, really *are* too stupid to mentally convert from left to right without calling customer support.</p>
<p>This problem is much easier to solve by using natural language than code:</p>
<p>sed s/left mouse button/forefinger mouse button/ myhelp.txt</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-560663">
				<div id="div-comment-560663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560663">
			October 18, 2007 at 11:26 am</a>		</div>

		<p>Yeah, can&#8217;t blame the coder for this. If you have a &quot;SwapMouseButtons&quot; function but no &quot;GetMouseSwapState&quot;, and instead have to go groping in an entirely different and unexpected area of the SDK docs for your solution, and the docs on the page don&#8217;t even tell you how to check the state of the thing you just set, then what you have is not a bad programmer, but a bad library, with very bad docs. In this case, someone&#8217;s corrected this by adding some &quot;community content&quot; to msdn2, referring to this blog, but that&#8217;s about a decade late for the programmer described in the OP, and won&#8217;t help anyone with offline msdn docs anyway.</p>
<p>Every single &quot;setX&quot; anywhere in a library should have a matching &quot;getX&quot;, without exception. Abhorrent though Java is, this is one thing it usually got very right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-560753">
				<div id="div-comment-560753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-560753">
			October 18, 2007 at 1:41 pm</a>		</div>

		<p>As usual everyone is arguing pointlessly and completely missing the point &#8212; THIS IS &quot;The wrong way to check whether the mouse buttons have been swapped&quot;. How Windows handles it is irrelevant. It&#8217;s programmer&#8217;s fault, not Windows&#8217;.</p>
<p>@Dewi:</p>
<p>Do you check if your room light is on by flipping the light switch twice? Or you are intelligent enough to look for a more efficient way of doing it?</p>
<p>Any decent Windows programmer knows that GetSystemMetrics() returns loads of things which perhaps should be implemented as GetXxx() but not having GetXxx() is still not a good enough excuse to write this horrible code.</p>
<p>Just imagine the same programmer faced with a challenge of determining whether disk is writeable or not and his code incorporated into some data recovery application and you will understand what I am talking about here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561033">
				<div id="div-comment-561033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561033">
			October 19, 2007 at 12:09 am</a>		</div>

		<p>@Dewi:</p>
<p>I expected you to bring up the broken lightbulb, or a broken switch as an excuse, but the API for swapping the buttons is not broken so you don&#8217;t have any excuse to fiddle with it.</p>
<p>While we are at it, standard ways of checking whether the light is on are:</p>
<ol>
<li>to compare default light level against current</li>
<li>
<p>to check if the switch is in the &quot;On&quot; position</p>
</li>
</ol>
<p>IMO that whole Set and Get thing is extremely inefficient way of programming.</p>
<p>If you have a set of values you can query, it is much easier and less error prone to have one function (like GetSystemMetrics) and to pass a parameter to get different values back. The only thing you have to validate is one function parameter.</p>
<p>On the other hand if you have GetXxx() for each value you can query then you might not have parameters for all of them, but you will have dozens of entry points into your code which you have to check, guard and maintain.</p>
<p>Not to mention that if you want to preserve several settings at once you can&#8217;t use arrays and a single call to GetSystemMetrics() inside of a loop anymore but instead you have to explicitly code dozens of GetXxx() calls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561003">
				<div id="div-comment-561003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561003">
			October 18, 2007 at 7:05 pm</a>		</div>

		<p>@Igor: wrong metaphor. If I am checking to see if the light is switched on, *and I don&#8217;t know the answer already* odds are that I will need to check the switch.</p>
<p>I leave it as an exercise for yourself to figure out why.</p>
<p>You can try on silly non-computing metaphors all day, but my original point stands: the only computing system where a &quot;set&quot; command be separate from a &quot;get&quot; command, is one where you deliberately want to isolate the two comands (financial information walls, etc). In this case, it should be extremely clearly documented, as an exception to the general rule.</p>
<p>Except where separation is a design goal, there is no rational situation where this rule can be broken without it being a flawed design that will increase development and maintenance time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561193">
				<div id="div-comment-561193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.georg-rottensteiner.de' rel='external nofollow' class='url'>Georg Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561193">
			October 19, 2007 at 11:59 am</a>		</div>

		<p>Thanks for mentioning this.</p>
<p>I&#8217;ll admit i did exactly that in my games; changed the code after reading ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561223">
				<div id="div-comment-561223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://patentlystupid.com' rel='external nofollow' class='url'>Richard Ahlquist</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561223">
			October 19, 2007 at 12:39 pm</a>		</div>

		<p>Jules, funny I only use MS Intellimouse explorers nowadays LOL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561273">
				<div id="div-comment-561273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561273">
			October 19, 2007 at 2:50 pm</a>		</div>

		<p>I got hit by this bug several times on Win9x. IIRC, the solution was to press both buttons at once, then the system somehow found out what&#8217;s really happening.</p>
<p>I still occassionally see a similar problem with keyboard in XP &#8211; Windows suddenly starts thinking that either Ctrl, Shift or Alt is pressed &#8211; could something similar be the cause?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561163">
				<div id="div-comment-561163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Name required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561163">
			October 19, 2007 at 11:24 am</a>		</div>

		<p>Igor &#8211; you forgot &quot;3. Tripping over the dog&quot; (in this case the light is *usually* off, but the sneaky dog can also cause this exception to occur when the light is on).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561663">
				<div id="div-comment-561663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">butt-on</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561663">
			October 22, 2007 at 6:06 am</a>		</div>

		<p>Why isn&#8217;t all the mouse buttons bindable? To only be able to swap button #1 and button #2 seems like a very tight constraint.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561783">
				<div id="div-comment-561783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561783">
			October 22, 2007 at 12:56 pm</a>		</div>

		<p>At the time this was created, there were probably only 2 buttons. &nbsp;Three-button mice came later.</p>
<p>Some drivers for multi-button mice already handle this cleanly without having to get the OS involved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561953">
				<div id="div-comment-561953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071017-00/?p=24753#comment-561953">
			October 23, 2007 at 1:00 am</a>		</div>

		<p>@Raymond: So how did the window manager team fix this particular bug? Was it just a shim put into that particular program?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

