<html>
<head>
<title>Drawing content at a fixed screen position, regardless of window position</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Drawing content at a fixed screen position, regardless of window position</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 24, 2013 / year-entry #167</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program draws content at a fixed screen position. The idea is that the window is really a viewport into some magical world. Unfortunately, our magical world just has a sign that says "Booga booga." Creating a more interesting magical world is left as an exercise. Start with our scratch program and make these...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program draws content at a fixed screen position.
The idea is that the window is really a viewport into some magical
world.
Unfortunately, our magical world just has a sign that says
"Booga booga."
Creating a more interesting magical world is left as an exercise.
</p>
<p>
Start with our
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a>
and make these changes:
</p>
<pre>
<font COLOR=blue>void OnMove(HWND hwnd, int x, int y)
{
 InvalidateRect(hwnd, 0, TRUE);
}</font>

void
PaintContent(HWND hwnd, PAINTSTRUCT *pps)
{
 <font COLOR=blue>POINT ptOrigin = { 0, 0 };
 ClientToScreen(hwnd, &amp;ptOrigin);
 POINT ptOrg;
 SetWindowOrgEx(pps-&gt;hdc, ptOrigin.x, ptOrigin.y, &amp;ptOrg);
 TextOut(pps-&gt;hdc, 200, 200, TEXT("Booga booga"), 11);
 SetWindowOrgEx(pps-&gt;hdc, ptOrg.x, ptOrg.y, nullptr);</font>
}

<font COLOR=blue>    HANDLE_MSG(hwnd, WM_MOVE, OnMove);</font>
</pre>
<p>
Run this program and drag the window across the screen.
When it reaches the "magic place",
you will see the words "Booga booga".
(You can resize the window to be smaller in order to make
finding the magic place more of a challenge.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1062783">
				<div id="div-comment-1062783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1062783">
			June 24, 2013 at 7:23 am</a>		</div>

		<p>You can save three lines of code. If you rewrite the TextOut line this way:</p>
<p>TextOut(pps-&gt;hdc, 200 &#8211; ptOrigin.x, 200 &#8211; ptOrigin.y, TEXT(&quot;Booga booga&quot;), 11);</p>
<p>both calls to SetWindowOrgEx and the ptOrg declaration can be removed &#8211; a 50% saving inside PaintContent!</p>
<div class="post">[<em>Your solution does not generalize well. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062793">
				<div id="div-comment-1062793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Buchan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1062793">
			June 24, 2013 at 7:35 am</a>		</div>

		<p>I think you&#39;re probably the only blogger out there that can make me continuously giggle through a post demonstrating OS APIs. SetWindowOrgEx()&#39;s documentation is a little shaky on actual semantics, but it looks like SetWindowOrgEx(x, y) ~= SetViewportOrg(-x, -y) ~= subtract x and y from all coordinates?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1062823">
				<div id="div-comment-1062823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1062823">
			June 24, 2013 at 8:09 am</a>		</div>

		<p>@Antonio for this program yes but I think the point here is to showcase how SetWindowOrgEx can save you a bit of math.</p>
<p>In this case it seems to be more trouble than its worth, but if you start painting more stuff it quickly becomes a bit complicated and harder to read if you do the math by hand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062853">
				<div id="div-comment-1062853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/stephen.oberholtzer_4000_freedompay.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>stephen.oberholtzer@freedompay.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1062853">
			June 24, 2013 at 10:17 am</a>		</div>

		<p>This is the first time I&#39;ve ever compiled one of these Little Programs. &nbsp;It&#39;s pretty nifty, but (on my system at least) I can see the text flicker when I move around. &nbsp;I assume this is because GDI/USER is automatically blitting the window image to try and reduce flicker, but in this case, it has the opposite effect. Is there a property or something that can be set on the window in order to simplify this behavior?</p>
<div class="post">[<em>Standard techniques for reducing flicker apply here, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2003/09/15/54925.aspx">like this one from 2003</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1062903">
				<div id="div-comment-1062903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1062903">
			June 24, 2013 at 12:23 pm</a>		</div>

		<p>My GDI-Fu is not good&#8230; &nbsp;On pre-DWM Windows versions, would this have drawn to the screen regardless of whether your window&#39;s client area was on top of it? &nbsp;Or does the HDC clip?</p>
<div class="post">[<em>Not sure how DWM factors into the matter. Paint DCs have always been clipped to the window dirty region. Asking this question suggest that you aren&#39;t really all that familiar with the Windows painting model; you might want to read up on that first. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062913">
				<div id="div-comment-1062913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anyfoo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1062913">
			June 24, 2013 at 2:07 pm</a>		</div>

		<p>While most of your articles are interesting (and I&#39;m really thankful for the hours of informative entertainment you&#39;ve given us), I do miss the tales of past times a little. Granted, 16bit Windows input queues were mentioned a few times&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1062923">
				<div id="div-comment-1062923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1062923">
			June 24, 2013 at 3:38 pm</a>		</div>

		<p>[Your solution does not generalize well. -Raymond]</p>
<p>Right. It depends on the complexity of painting and how you calculate the coordinates of the objects. If you have to draw several items at fixed positions, SetWindowOrgEx() is the way to go. If the drawing is simple (as in this sample), or if you calculate coordinates on the fly, subtracting ptOrigin may be better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062973">
				<div id="div-comment-1062973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1062973">
			June 25, 2013 at 3:18 am</a>		</div>

		<p>Last time I looked (may have been Windows 3.1) InvalidateRect(hWnd, 0, TRUE); causes the non-client area to be redrawn too. Better to get the client rect and just invalidate that.</p>
<div class="post">[<em>I&#39;m pretty sure that&#39;s never been true. I just wrote a test app to confirm. Invalidating with <code>Invalidate&shy;Rect(hWnd, 0, TRUE)</code> does not generate a <code>WM_NC&shy;PAINT</code>. Maybe you&#39;re doing something else to force a nonclient paint, like changing activation. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1063313">
				<div id="div-comment-1063313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">icabod</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1063313">
			June 27, 2013 at 3:57 am</a>		</div>

		<p>I have a similar query to Simon Buchan.</p>
<p>With the caveat that the internals are likely to change, are SetViewportOrgEx and SetWindowOrgEx essentially implemented the same way? &nbsp;Or is there some other internal that&#39;s different?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1063933">
				<div id="div-comment-1063933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130624-00/?p=4013#comment-1063933">
			June 28, 2013 at 2:48 pm</a>		</div>

		<p>Should the scratch program (unmodified) fail on the line:</p>
<p> &nbsp; &nbsp; &nbsp;if (SUCCEEDED(CoInitialize(NULL))) {/* In case we use COM */</p>
<p>and not show the window? Just wondering if this is an artifact of using Express version of VS 2010. Everything else compiles/links/etc and runs.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

