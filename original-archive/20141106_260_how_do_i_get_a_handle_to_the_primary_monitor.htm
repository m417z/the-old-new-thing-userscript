<html>
<head>
<title>How do I get a handle to the primary monitor?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I get a handle to the primary monitor?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 6, 2014 / year-entry #261</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>21</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There are various ways of getting a monitor. You can get the monitor from a point, from a rectangle, or from a window. But how do you get the primary monitor? The primary monitor is defined to be the one which has (0, 0) as its origin. Therefore, one solution is HMONITOR GetPrimaryMonitor() { POINT...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
There are various ways of getting a monitor.
You can get the monitor from a point,
from a rectangle,
or from a window.
But how do you get the primary monitor?
</p>
<p>
The primary monitor is defined to be the one
which has (0, 0) as its origin.
Therefore,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/08/09/4300545.aspx">
one solution</a>
is
</p>
<pre>
HMONITOR GetPrimaryMonitor()
{
 POINT ptZero = { 0, 0 };
 return MonitorFromPoint(ptZero,
                         MONITOR_DEFAULTTOPRIMARY);
}
</pre>
<p>
The desktop window by convention is deemed to reside
primarily on the primary monitor,
so you could also use this:
</p>
<pre>
HMONITOR GetPrimaryMonitor()
{
 return MonitorFromWindow(GetDesktopWindow(),
                          MONITOR_DEFAULTTOPRIMARY);
}
</pre>
<p>
Or you could just pass the null window handle.
This is technically an illegal parameter,
but by specifying
<code>MONITOR_<wbr>DEFAULT&shy;TO&shy;PRIMARY</code>,
you are saying,
"If anything goes wrong,
give me the primary monitor."
</p>
<pre>
HMONITOR GetPrimaryMonitor()
{
 return MonitorFromWindow(nullptr,
                          MONITOR_DEFAULTTOPRIMARY);
}
</pre>
<p>
In this case, we are intentionally going astray
because we want to kick in the
<code>MONITOR_<wbr>DEFAULT&shy;TO&shy;PRIMARY</code>
behavior.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1160433">
				<div id="div-comment-1160433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1160433">
			November 6, 2014 at 8:21 am</a>		</div>

		<p>Amusingly, GetWindowRect(GetDeskopWindow(), &amp;r) returns the bounds of the primary monitor. Took me a bit to find the API to get the desktop size (bounding box of all monitors).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1160533">
				<div id="div-comment-1160533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1160533">
			November 6, 2014 at 9:09 am</a>		</div>

		<p>@Joshua: Likely because a RECT can&#39;t describe the shape of a nonuniform multi-monitor system (for example, my home PC has monitors of sizes 2560&#215;1440 and 1920&#215;1200). &nbsp;It can&#39;t capture a region, so back-compat concerns kick in&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1160703">
				<div id="div-comment-1160703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1160703">
			November 6, 2014 at 11:23 am</a>		</div>

		<p>Likewise, even multiple displays of the same resolution might not make a rectangle. I have 4 displays. They can be arranged all in a horizontal row, a vertical column, a &quot;square&quot; 2&#215;2, or in a J, L or T shape.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes odd alt thread-odd thread-alt depth-1" id="comment-1160753">
				<div id="div-comment-1160753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1160753">
			November 6, 2014 at 12:19 pm</a>		</div>

		<p>You&#39;ve provided three quick examples that should work well. I can imagine that there are infinitely more convoluted implementations that happen to return the correct result in the end. (e.g. Calculate the Ackermann function A( 10, 10 ) and provide the result to a function f( x ) = 0 to calculate your x,y point coordinates.)</p>
<p>Are there any clear benefits, drawbacks, or trade-offs here? Which implementation would you recommend?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1160813">
				<div id="div-comment-1160813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1160813">
			November 6, 2014 at 1:15 pm</a>		</div>

		<p>@Brian_EE, Rob: Apparently neither of you got &quot;bounding box&quot;. The smallest rectangle encompassing any finite set of finite rectangles always exists.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1160863">
				<div id="div-comment-1160863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1160863">
			November 6, 2014 at 3:44 pm</a>		</div>

		<p>I wonder why we&#39;re still stuck with rectangular monitors anyway. Elliptical screens would be much more natural and allow for some fancy user interface designs.</p>
<p>There are some cell phones with circular displays, but they kinda died when smartphones arrived :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1160953">
				<div id="div-comment-1160953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1160953">
			November 6, 2014 at 7:21 pm</a>		</div>

		<p>Kythyria: How do you arrange it so there is no monitor at (0, 0)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1160853">
				<div id="div-comment-1160853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kythyria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1160853">
			November 6, 2014 at 2:55 pm</a>		</div>

		<p>@Joshua: The desktop bounding box is not as useful as it looks: I&#39;ve encountered a number of programs that can&#39;t quite grasp the concept of (0,0) *not* being on any monitor and so become incorrectly positioned. In the end I put another couple of books under a monitor so that something would be there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1161003">
				<div id="div-comment-1161003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Count Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161003">
			November 7, 2014 at 1:53 am</a>		</div>

		<p>@Gabe &#8211; He can&#39;t. Since (0,0) is by definition on the primary monitor it would only be possible if he has a monitor with a vertical resolution under 0 lines. (Yet another occasion where italic text would have been useful.) Also the described problem exists. I used to use my laptop with one of my 24&#39;&#39; HDMI displays attached when I was at home, but lately I have simply gave up on that.</p>
<p> Some applications tend to &quot;remember&quot; their last position even it is not on the screen. I have written a tiny program that detects if a form is fully outside of the viewable area of the desktop (or if its title bar is outside of the viewable area of the desktop), and moves all forms onto the &quot;real&quot; desktop, but there are programs that don&#39;t let themselves &nbsp;be moved for some reason. They identify the sender of WM_MOVE and does not move if its an other application (except explorer.exe). This practice is more common then you would think and has no logical reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1161013">
				<div id="div-comment-1161013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161013">
			November 7, 2014 at 4:08 am</a>		</div>

		<p>Sven2: Elliptical screens would be much more natural and allow for some fancy user interface designs.</p>
<p>What? Unless you wanted to use then for &#8211; reading documents, or watching tv/movies, or &#8230; essentially anything else people usually do with screens, beside analogue clocks and radar.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1161023">
				<div id="div-comment-1161023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Julien L</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161023">
			November 7, 2014 at 4:54 am</a>		</div>

		<p>@Count Zero: I agree, there are too many applications that try to restore their position manually without taking monitors into account. To do this correctly, one only has to use GetWindowPlacement/SetWindowPlacement:</p>
<p>&quot;If the information specified in WINDOWPLACEMENT would result in a window that is completely off the screen, the system will automatically adjust the coordinates so that the window is visible, taking into account changes in screen resolution and multiple monitor configuration.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1161063">
				<div id="div-comment-1161063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Count Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161063">
			November 7, 2014 at 5:30 am</a>		</div>

		<p>@Julien L &#8211; I could live with that (though lots of users without the knowledge/possibility of writing their own tools don&#39;t). &nbsp;The thing that disturbs me is the aggressivity those programs show when I try to move their forms (back to the screen).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1161093">
				<div id="div-comment-1161093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">not an anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161093">
			November 7, 2014 at 6:50 am</a>		</div>

		<p>@Gabe: I take it that a reverse-L of 3 monitors with the topmost monitor primary would yield negative coordinates then? &nbsp;Or is the primary monitor always one of the leftmost monitors in the configuration?</p>
<p>@Count Zero: that behavior really is TRWTF.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1161103">
				<div id="div-comment-1161103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161103">
			November 7, 2014 at 7:42 am</a>		</div>

		<p>not an anon: Whichever monitor you specify as &quot;primary&quot; is the one that gets assigned (0,0) as its upper-left corner. Any monitor to the left or top gets negative coordinates.</p>
<p>In your example with the top-most monitor being primary, the left-most monitor would have negative x-coordinates.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1161163">
				<div id="div-comment-1161163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deanna </cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161163">
			November 7, 2014 at 11:31 am</a>		</div>

		<p>You can also create arrangements with holes in with 4+ monitors. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1161173">
				<div id="div-comment-1161173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161173">
			November 7, 2014 at 1:28 pm</a>		</div>

		<p>You could also use EnumDisplayMonitors and then call GetMonitorInfo for each monitor. &nbsp;The primary monitor will have MONITORINFOF_PRIMARY set in dwFlags.</p>
<p>That is a more explicit method; it&#39;s pretty clear to Windows you are searching for a primary monitor by using a documented &quot;MONITORINFOF_PRIMARY&quot; flag.</p>
<p>I didn&#39;t know that origin (0,0) was contractually guaranteed to always be on the primary monitor in future versions of Windows. &nbsp;(Of course, I suppose for compatibility reasons this will probably always be so&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1161233">
				<div id="div-comment-1161233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Count Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161233">
			November 10, 2014 at 2:06 am</a>		</div>

		<p>@Deanna &#8211; You can create holes, but you can&#39;t create an arrangement where (0, 0) is not on the (primary) screen. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1161343">
				<div id="div-comment-1161343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161343">
			November 10, 2014 at 10:39 am</a>		</div>

		<p>@Douglas: I&#39;m pretty sure Windows doesn&#39;t boot on a machine with no monitor attachment points (Windows assumes the last monitor is still present when it&#39;s disconnected for the obvious reason).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1161283">
				<div id="div-comment-1161283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Douglas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161283">
			November 10, 2014 at 7:19 am</a>		</div>

		<p>Going by what @James Johnston is saying, and checking the docs (of course), this should be acceptable, right? Although, now that I look at it, this won&#39;t work on a system with no monitors, but that&#39;s easy enough to detect.</p>
<p>Oh, and for all the people wanting official documentation on (0,0) and the primary monitor, it&#39;s here: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/dd145136(v=vs.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/dd145136(v=vs.85).aspx</a></p>
<p>Oddly, I couldn&#39;t find anything to say that there is at most one primary monitor. I think that we can take that for granted, though.</p>
<p>BOOL CALLBACK MonitorEnumProc(HMONITOR hMonitor, HDC hdcMonitor, LPRECT lprcMonitor, LPARAM dwData){</p>
<p>MONITORINFO mi;</p>
<p>mi.cbSize = sizeof(MONITORINFO);</p>
<p>GetMonitorInfo(hMonitor, &amp;mi);</p>
<p>if(mi.dwFlags &amp; MONITORINFOF_PRIMARY){</p>
<p>*((HMONITOR*)dwData) = hMonitor;</p>
<p>return false;</p>
<p>}</p>
<p>return true;</p>
<p>}</p>
<p>HMONITOR getPrimaryMonitor(void){</p>
<p>HMONITOR hm;</p>
<p>EnumDisplayMonitors(NULL, NULL, MonitorEnumProc, (LPARAM)&amp;hm);</p>
<p>return hm;</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1161483">
				<div id="div-comment-1161483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161483">
			November 11, 2014 at 11:00 am</a>		</div>

		<p>Joshua: All programs run on a Desktop (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms682573.aspx">msdn.microsoft.com/&#8230;/ms682573.aspx</a>), and a Desktop may not have a monitor associated with it. For example, services run in Session 0, which doesn&#39;t have a monitor. A process on an RDP session loses its monitor with the session is disconnected. A UAC prompt probably does the same thing temporarily.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1161503">
				<div id="div-comment-1161503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141106-00/?p=43683#comment-1161503">
			November 11, 2014 at 2:59 pm</a>		</div>

		<p>@Gabe: If you ask for monitor params on the service desktop, you get 1 at 640&#215;480 1bpp. I heard rumor that somebody managed to open some windows on it and get a screen snapshot (by auto-snapshot program). I wonder how.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

