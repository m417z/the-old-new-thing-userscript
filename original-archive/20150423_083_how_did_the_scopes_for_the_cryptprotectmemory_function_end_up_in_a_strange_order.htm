<html>
<head>
<title>How did the scopes for the CryptProtectMemory function end up in a strange order?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How did the scopes for the CryptProtectMemory function end up in a strange order?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 23, 2015 / year-entry #84</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150423-00/?p=44173</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A few weeks ago, I left an exercise: Propose a theory as to why the names and values of the scopes for the Crypt≠Protect≠Memory function are the way they are. I didn't know the answer when I posed the exercise, but I went back and dug into it. The Crypt≠Protect≠Memory function started out as an...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A few weeks ago, I left an exercise: <a href="http://blogs.msdn.com/b/oldnewthing/archive/2015/04/13/10607036.aspx"> Propose a theory as to why the names and values of the scopes for the <code>Crypt&shy;Protect&shy;Memory</code> function are the way they are</a>.</p>
<p> I didn't know the answer when I posed the exercise, but I went back and dug into it. </p>
<p> The <code>Crypt&shy;Protect&shy;Memory</code> function started out as an internal function back in Windows 2000, and when originally introduced, there were only two scopes: Within a process and cross-process. The Flags parameter therefore defined only a single bit, leaving the other bits reserved (must be zero). If the bottom bit was clear, then the memory was protected within a process; if the bottom bit was set, then the memory was protected across processes. </p>
<p> Later, the team realized that they needed to add a third scope, the one that corresponds to <code>CRYPT&shy;PROTECT_<wbr>SAME_<wbr>LOGON</wbr></wbr></code>. They didn't want to make a breaking change for existing callers, but they saw that they could retarget what used to be a Flags parameter as an Options parameter, and they added the new scope as a third option. </p>
<p> The numeric values remained unchanged, which meant that the new function was backward-compatible with existing callers. </p>
<p> <b>Bonus chatter</b>: Commenter sense is correct that <a href="http://blogs.msdn.com/b/oldnewthing/archive/2015/04/13/10607036.aspx#10607280"> <code>SAME_<wbr>LOGON</wbr></code> can be used by a service while impersonating the client</a>, however it is not the case that the scope can be larger when impersonating a remote user. The memory block returned by the <code>Crypt&shy;Protect&shy;Memory</code> function can be decrypted only on the same machine that encrypted it, and only as long as the machine has not been rebooted. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1186653">
				<div id="div-comment-1186653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150423-00/?p=44173#comment-1186653">
			April 23, 2015 at 8:45 am</a>		</div>

		<p>And when was it added? During a 2000 SP? In XP? When the function moved to crypt32.dll with 2003?</p>
<p>Was it added because of TS/RDP reasons or something else?</p>
<div class="post">[<em>It was added while the function was still internal. I don&#39;t know why it was added. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1186663">
				<div id="div-comment-1186663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Burov Dmitry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150423-00/?p=44173#comment-1186663">
			April 23, 2015 at 9:44 am</a>		</div>

		<p>@skSdnW Win2003 = WinXP x64 = WinNT 5.2</p>
<p>For what i recall from Delphi Win32 API project, it was moved and given name in Vista. In XP/2003 it only had a number index, not a public name</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1186673">
				<div id="div-comment-1186673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Burov Dmitry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150423-00/?p=44173#comment-1186673">
			April 23, 2015 at 9:49 am</a>		</div>

		<p>&quot;The memory block returned by the CryptProtectMemory function can be decrypted only on the same machine that encrypted it, and only as long as the machine has not been rebooted&quot;</p>
<p>This line only is about &quot;SAME_LOGON&quot; option. In &quot;same windows instance&quot; aka cross-process mode the function works across reboots.</p>
<p>SAME_LOGON is just a bad, ambiguous constant name, it can stand for both &quot;SAME_USER_IDENTITY&quot; and &quot;SAME_USER_SESSION&quot;, the latter obviously cannot survive reboot.</p>
<p>An obvious consequence of this fuction being internal one that occasionally leaked out and after found used by 3rd party applications eventually published &quot;as is&quot; without a lot of effort to document it</p>
<div class="post">[<em>&quot;Typically, you use the CryptProtectMemory function to encrypt sensitive information that you are going to decrypt while your process is running. Do not use this function to save data that you want to decrypt later; you will not be able to decrypt the data if the computer is restarted.&quot; This is in the general discussion, not in the SAME_LOGON section. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1186683">
				<div id="div-comment-1186683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150423-00/?p=44173#comment-1186683">
			April 23, 2015 at 12:01 pm</a>		</div>

		<p>Looks like my theory #2 from the old thread was essentially correct =^-^=</p>
<p>‚ÄúTheory 2 (IMO more likely): dwFlags was originally intended to be a flags parameter, but now doesn&#39;t really mean &quot;flags&quot;. &nbsp;Only one flag was defined at first, CRYPTPROTECTMEMORY_CROSS_PROCESS. &nbsp;Eventually, the meaning of dwFlags morphed into meaning &quot;scope&quot; rather than &quot;flags&quot;. &nbsp;The absence of the former &quot;flag&quot; had to be given a name, hence CRYPTPROTECTMEMORY_SAME_PROCESS. &nbsp;The same-machine scope was left as the former flag&#39;s name, CRYPTPROTECTMEMORY_CROSS_PROCESS. &nbsp;The new functionality was added as CRYPTPROTECTMEMORY_SAME_LOGON.‚Äù</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

