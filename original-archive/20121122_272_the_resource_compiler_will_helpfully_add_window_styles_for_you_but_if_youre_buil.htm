<html>
<head>
<title>The resource compiler will helpfully add window styles for you, but if you're building a dialog template yourself, you don't get that help</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The resource compiler will helpfully add window styles for you, but if you&#8217;re building a dialog template yourself, you don&#8217;t get that help</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 22, 2012 / year-entry #273</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20121122-00/?p=6023</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer was having trouble with nested dialogs. They were doing something very similar to a property sheet, with a main frame dialog, and then a collection of child dialogs that take turns appearing inside the frame dialog based on what the user is doing. The customer found that if they created the child dialogs...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was having trouble with
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/07/30/201988.aspx">
nested dialogs</a>.
They were doing something very similar to a property sheet,
with a main frame dialog, and then a collection of child dialogs
that take turns appearing inside the frame dialog
based on what the user is doing.
The customer found that if they created the child dialogs with the
<code>Create&shy;Dialog&shy;Param</code> function,
everything worked great,
but if they
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/04/29/412577.aspx">
built the template at run-time</a>,
keyboard navigation wasn't working right.
Specifically, one of their child dialogs contained an edit control,
and while you could put focus on it with the mouse,
it was not possible to tab to the control.
On the other hand, a resource template didn't have this problem.
Tabbing in and out worked just fine.
</p>
<p>
There is logically no difference between a resource-based dialog template
and a memory-based one,
because
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/03/29/403298.aspx">
the resource-based one is implemented in terms of the
memory-based one</a>.
</p>
<p>
The real problem is the memory-based template you created differs
somehow from the one the resource compiler generated.
</p>
<p>
One way to identify this discrepancy is simply to
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/06/17/158175.aspx">
do a <code>memcmp</code> of the two dialog templates</a>,
the resource-based one and the memory-based one,
and see where they differ.
After all, if you want to know why your template doesn't match the
one generated by the resource compiler,
you can just <i>ask the resource compiler to generate the template</i>
and then compare the two versions.
</p>
<p>
Instead of explaining this, I decided to invoke my psychic powers.
</p>
<blockquote CLASS=q><p>
My psychic powers tell me that you neglected to provide the
<code>WS_<wbr>TAB&shy;STOP</code> style to the edit control
when you created your in-memory template.
(You probably didn't realize that you needed to do this,
because the resource compile adds that style by default.)
</p>
</blockquote>
<p>
When you use the resource compiler to generate a dialog template,
it sets a bunch of styles by default,
depending on the type of control.
For example,
<a HREF="http://msdn.microsoft.com/en-us/library/aa381009(v=VS.85).aspx">
<code>EDIT&shy;TEXT</code></a> says
"If you do not specify a style, the default style is
<code>ES_<wbr>LEFT | WS_<wbr>BORDER | WS_<wbr>TABSTOP</code>."
</p>
<p>
Not mentioned is that the
default style is in addition to the defaults for all
controls:
<code>WS_<wbr>CHILD | WS_<wbr>VISIBLE</code>.
</p>
<p>
If you want to turn off one of the default styles for a control,
you do so with the <code>NOT</code> keyword.
For example, if you write
</p>
<pre>
   EDITTEXT IDC_AWESOME, 10, 10, 100, 100, ES_MULTILINE | NOT WS_VISIBLE
</pre>
<p>
the resource compiler starts with the default style of
</p>
<pre>
dwStyle = WS_CHILD | WS_VISIBLE | ES_LEFT | WS_BORDER | WS_TABSTOP;
</pre>
<p>
then it adds <code>ES_<wbr>MULTI&shy;LINE</code>:
</p>
<pre>
dwStyle |= ES_MULTILINE;
// dwStyle value is now
// WS_CHILD | WS_VISIBLE | ES_LEFT | WS_BORDER | WS_TABSTOP | ES_MULTILINE
</pre>
<p>
and then it removes <code>WS_<wbr>VISIBLE</code>:
</p>
<pre>
dwStyle &amp;= ~WS_VISIBLE;
// dwStyle value is now
// WS_CHILD | ES_LEFT | WS_BORDER | WS_TABSTOP | ES_MULTILINE
</pre>
<p>
which is the final style applied to the control.
</p>
<p>
The resource compiler is trying to help you out by pre-setting
the styles that you probably want,
but if you don't realize that those defaults are in place,
you may not realize that you need to provide them yourself
when you don't use the resource compiler.
Maybe it was being <i>too</i> helpful and ended up resulting in
helplessness.
</p>
<p>
The customer was kind enough to write back.
</p>
<blockquote CLASS=q><p>
Thanks! That did the trick.
</p>
</blockquote>
<p>
For completeness, the default dialog style is
<code>WS_<wbr>POPUP&shy;WINDOW =
WS_<wbr>POPUP |
WS_<wbr>BORDER |
WS_<wbr>SYS&shy;MENU</code>.
If you have a custom font, then you also get
<code>DS_<wbr>SET&shy;FONT</code>,
and if you have a caption, then you get
<code>WS_<wbr>CAPTION</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1022163">
				<div id="div-comment-1022163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121122-00/?p=6023#comment-1022163">
			November 22, 2012 at 7:22 am</a>		</div>

		<p>Default dialog settings are also dependant on Visual Studio version. Upgraded rc files can of course be some kind of hybrid between what different VS versions use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1022213">
				<div id="div-comment-1022213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sinsi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121122-00/?p=6023#comment-1022213">
			November 22, 2012 at 8:47 pm</a>		</div>

		<p>Is this correct? ES_MULTILINE | NOT WS_VISIBLE</p>
<p>Shouldn&#39;t there be an AND there somewhere?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1022223">
				<div id="div-comment-1022223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121122-00/?p=6023#comment-1022223">
			November 22, 2012 at 9:05 pm</a>		</div>

		<p>I know nothing about win32, but I assumed the vertical bar was the AND.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1022233">
				<div id="div-comment-1022233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">-Sander1981-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121122-00/?p=6023#comment-1022233">
			November 22, 2012 at 9:45 pm</a>		</div>

		<p>@mark: The | is a bitwise OR in C-style languages, so if you do 0100 | 0010 you&#39;ll get 0110.</p>
<p>If you then do 0110 &amp; ~0100, which means AND the inverse of 0100 (1011), this will result in 0010.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1022263">
				<div id="div-comment-1022263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xerox6502</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121122-00/?p=6023#comment-1022263">
			November 23, 2012 at 6:58 am</a>		</div>

		<p>@mark: The line you are looking at is not C, its <em>resource</em> code (as in a .rc file), and the resource compiler will know to handle the NOT correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1022353">
				<div id="div-comment-1022353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xavi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121122-00/?p=6023#comment-1022353">
			November 25, 2012 at 3:27 am</a>		</div>

		<p>@ Xerox6502</p>
<p>IT IS NOT A NOT AND IT IS NOT A BITWISE AND. IT IS A LOGICAL AND WHICH IS A BITWISE OR &#8230;OR IS IT NOT?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

