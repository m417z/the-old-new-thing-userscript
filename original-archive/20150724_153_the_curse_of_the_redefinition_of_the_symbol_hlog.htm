<html>
<head>
<title>The curse of the redefinition of the symbol HLOG</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The curse of the redefinition of the symbol HLOG</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 24, 2015 / year-entry #154</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150724-00/?p=90831</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer was running into a compiler error complaining about redefinition of the symbol HLOG. #include <pdh.h> #include <lm.h> ... The result is lmerrlog.h(80): error C2373: 'HLOG' redefinition; different type modifiers pdh.h(70): See declaration of 'HLOG' "Our project uses both performance counters (pdh.h) and networking (lm.h). What can we do to avoid this conflict?" We've...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was running into a compiler error complaining about
redefinition of the symbol <code>HLOG</code>.
</p>
<pre>
#include &lt;pdh.h&gt;
#include &lt;lm.h&gt;

...
</pre>
<p>
The result is
</p>
<pre>
lmerrlog.h(80): error C2373: 'HLOG' redefinition; different type modifiers
pdh.h(70): See declaration of 'HLOG'
</pre>
<p>
"Our project uses both
performance counters (<code>pdh.h</code>)
and
networking (<code>lm.h</code>).
What can we do to avoid this conflict?"
</p>
<p>
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/11/07/9051091.aspx">
We've seen this before</a>.
The conflict arises from two problems.
</p>
<p>
First is
hubris/<wbr>lack of creativity.
"My component does logging.
I need a handle to a log.
I will call it <code>HLOG</code>
because (1) I can't think of a better name,
and/or (2) obviously I'm the only person who does logging.
(Anybody else who wants to do logging should just quit their job now
because it's been done.)"
</p>
<p>
This wouldn't normally be a problem except that Win32 uses a global
namespace.
This is necessary for annoying reasons:
</p>
<ul>
<li>Not all Win32 languages support namespaces.
<li>Even though C++ supports namespaces,
    different C++ implementations decorate differently,
    so there is no agreement on the external linkage.
    (Indeed, the decoration can change from one version of the C++
    compiler to another!)
</ul>
<p>
Fortunately, in the case of <code>HLOG</code>,
the two teams noticed the collision and came to some sort of
understanding.
If you include them in the order
</p>
<pre>
#include &lt;lm.h&gt;
#include &lt;pdh.h&gt;
</pre>
<p>
then <code>pdh.h</code> detects that <code>lm.h</code> has
already been included and avoids the conflicting definition.
</p>
<pre>
#ifndef _LMHLOGDEFINED_
typedef PDH_HLOG     HLOG;
#endif
</pre>
<p>
The PDH log is always accessible via the name
<code>PDH_HLOG</code>.
If <code>lm.h</code> was not also included,
then the PDH log is also accessible under the name
<code>HLOG</code>.
</p>
<p>
Sorry for the confusion.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-koldude even thread-even depth-1" id="comment-1235576">
				<div id="div-comment-1235576" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150724-00/?p=90831#comment-1235576">
			July 24, 2015 at 7:10 am</a>		</div>

		<p>true different compilers mangle differently, however there is no need to worry about mangling here (for C++)</p>
<p>#ifdef _LMHLOGDEFINED_</p>
<p>namespace pdh</p>
<p>{</p>
<p>&nbsp; using HLOG = PDH_HLOG;</p>
<p>}</p>
<p>#endif</p>
<p>This creates a namespaced alias and is the syntax used by the C++ standard library to define functions from the C standard library into the C++ standard library. Because this is only a naming alias it doesn&#39;t have the same side effects as actually using a namespaced version.</p>
<div class="post">[<em>But the underlying problem (the &quot;true&quot; type is in the global namespace) still remains. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1222151">
				<div id="div-comment-1222151" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rangi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150724-00/?p=90831#comment-1222151">
			July 24, 2015 at 7:47 am</a>		</div>

		<p>And with a little bit more thought, they could have called it PDH_HLOG in the first place, and avoid conflict with any future HLOG definitions. Naming everything with a prefix like &quot;PDH_&quot; *is* the usual way to imitate namespaces in C, right?</p>
<div class="post">[<em>See &quot;hubris/lack of creativity&quot;. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235556">
				<div id="div-comment-1235556" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150724-00/?p=90831#comment-1235556">
			July 24, 2015 at 12:44 pm</a>		</div>

		<p>My memory is hazy, but I ran into a problem with a system function named &quot;Log&quot; once may years ago. On OpenVMS I think. The company I used to work for included an internal diagnostic logging library in its driver products. The library was written in C and statically linked. I remember having to delve into the linker manual to resolve the clash between the system function and our unfortunately named diagnostic &quot;Log&quot; function. If I recall correctly, OpenVMS (at the time) didn&#39;t care about case sensitivity when linking, so maybe it was the C runtime logarithm function that was the problem. Strangely enough, I was reminded of this the other day when the &quot;Make sure the function you&#39;re calling is the right one&quot; article came out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1222141">
				<div id="div-comment-1222141" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150724-00/?p=90831#comment-1222141">
			July 25, 2015 at 6:24 pm</a>		</div>

		<p>Ok, so I&#39;m pretty much a digital hardware engineer though I do write some software for small jobs and/or hardware debugging&#8230; Even I know how to dig into header files when resolving a compiler issue. Didn&#39;t it occur them to *actually open the files* and look at the definitions themselves?</p>
<p>Then again, I remember about 15 years ago digging through an embedded C++ design to find and point out to our software engineer the source of a null-pointer de-referencing bug to prove that my FPGA design was not the cause of spontaneous radio reboots.</p>
<p>I wonder why engineers are so unwilling (or unable) to do basic problem solving when the compiler basically points them to the error (including file names and line numbers).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235316">
				<div id="div-comment-1235316" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150724-00/?p=90831#comment-1235316">
			July 27, 2015 at 9:37 am</a>		</div>

		<p>Modularity in the language (namespaces) helps impose modularity in the design, but design itself can mitigate these issues. &nbsp;Wrap the Lan Manager functions and expose your wrapper. &nbsp;Do the same for the Perf Counter functions. &nbsp;Code that needs lm.h never needs to see pdh.h, and vice-versa. </p>
<p>If it is required that all header files be visible to all translation units (using stdafx.h), there are 1,967 header files in the latest SDK&#8230; 2 files that do not satifisy the ordering constraint == 99.9% correct. &nbsp;A tremendous achievement by Microsoft engineers, especially considering the rate that new features are added, that must remain compatible with cruft from the past. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1234966">
				<div id="div-comment-1234966" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150724-00/?p=90831#comment-1234966">
			July 28, 2015 at 7:07 am</a>		</div>

		<p>Would it be possible for pdh.h to define a symbol and lm.h to use a #error directive to give an error message saying what the correct order to import the libraries is?</p>
<p>OTOH a mechanism like that would probably be overkill.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

