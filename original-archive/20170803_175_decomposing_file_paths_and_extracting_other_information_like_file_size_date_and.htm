<html>
<head>
<title>Decomposing file paths (and extracting other information like file size, date and time, and attributes) from a batch file</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Decomposing file paths (and extracting other information like file size, date and time, and attributes) from a batch file</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 3, 2017 / year-entry #176</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">FOR to the rescue.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
We saw something very similar to this
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2012/08/02/10334559.aspx">
during the first Batch File Week</a>.
You have a file name in an environment variable,
and you want to decompose its path (say, extract the drive letter
or get the file base name without any path information or extension).
Or you want to get the file's size or date or attributes.
</p>
<p>
The technique we saw in the article was to call a subroutine
with the file name,
and have the subroutine use the
<a HREF="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/percent.mspx">
tilde operators</a>
to extract information from the inbound parameter.
</p>
<p>
You can also do this inline (without needing a subroutine)
by abusing the <code>FOR</code> command.
Tilde operators work on <code>FOR</code> loop variables,
so you just need to set up a <code>FOR</code> loop that doesn't
actually loop!
</p>
<pre>
set FILENAME=C:\Program Files\desktop.ini
for %%i in ("%FILENAME%") do set SIZE=%%~zi
</pre>
<p>
Ta-da, you put the file size in the <code>SIZE</code> variable.
</p>
<p>
Of course, you could do actual math, too.
Or use the other tilde operators to extract other information.
Go nuts.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1305115">
				<div id="div-comment-1305115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305115">
			August 3, 2017 at 7:15 am</a>		</div>

		<p>Well, the linked article specifically shows how &#8220;you can also do it without a subroutine&#8221; using the for command.</p>
<p>Then again, I&#8217;d completely forgotten that this wasn&#8217;t the first time you&#8217;ve had Batch File Week, so the reminder was helpful.</p>
<p>(At this point, Raymond&#8217;s done enough content that he could show reruns for quite some time, and a lot of people would still get a lot out of them. I&#8217;m pretty sure I&#8217;ve seen him talk about the redirection operators not at the end of the line before, but it may have just been on StackOverflow.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1305136">
				<div id="div-comment-1305136" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305136">
			August 3, 2017 at 10:54 am</a>		</div>

		<p>I didn&#8217;t know you can also use the tilde operators on the loop variable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1305155">
				<div id="div-comment-1305155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305155">
			August 3, 2017 at 1:54 pm</a>		</div>

		<p>I&#8217;ve used tilde operators in batch scripts for years.  They&#8217;re well documented in the for-loop help: for/?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1305165">
				<div id="div-comment-1305165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305165">
			August 3, 2017 at 5:54 pm</a>		</div>

		<p>It always seemed to me that shell scripting in Windows was more often than not abuse of FOR and IF commands to do something else useful they were probably not originally designed to do.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1305175">
				<div id="div-comment-1305175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AlexShalimov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305175">
			August 3, 2017 at 10:30 pm</a>		</div>

		<p>I think this can be said about almost any command (think about using PING or WAIT for getting delay).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1305305">
				<div id="div-comment-1305305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305305">
			August 4, 2017 at 10:07 am</a>		</div>

		<p>ping -n X 127.0.0.1&gt;NUL&#8230; yep, that&#8217;s in a lot of my scripts.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1305176">
				<div id="div-comment-1305176" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305176">
			August 3, 2017 at 11:49 pm</a>		</div>

		<p>My favorite FOR construct is this one from your blog:<br />
<a href="https://blogs.msdn.microsoft.com/oldnewthing/20050120-00/?p=36653" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20050120-00/?p=36653</a></p>
<p>I often use it the other way round to check if %PATH% already includes the location of certain required executable files a script depends on.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1305315">
				<div id="div-comment-1305315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305315">
			August 4, 2017 at 10:09 am</a>		</div>

		<p>Nowadays I use where.exe to check for something in the PATH.  It&#8217;s much easier to remember than that one-liner.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1305185">
				<div id="div-comment-1305185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170803-00/?p=96745#comment-1305185">
			August 4, 2017 at 3:23 am</a>		</div>

		<p>My favourite FOR construct is this:</p>
<p>for %%i in (&#8220;string with special characters&#8221;) do echo %%~i</p>
<p>Works with anything you can quote. (So, not quotes themselves, unless you want a pair.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

