<html>
<head>
<title>Why is there sometimes a long delay between pressing a hotkey for a shortcut and opening the shortcut?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is there sometimes a long delay between pressing a hotkey for a shortcut and opening the shortcut?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 2, 2012 / year-entry #103</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>51</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Via a customer liaison, we received a problem report from a customer. The customer is facing issues with delayed desponses to opening a .lnk file by pressing its keyboard shortcut hotkey. This delay does not appear when the shortcut is double-clicked. For example, the customer has created a shortcut to Notepad and assigned it the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Via a customer liaison, we received a problem report from a customer.</p>
<blockquote class="q"><p>  The customer is facing issues with delayed desponses to opening a .lnk file by pressing its keyboard shortcut hotkey. This delay does not appear when the shortcut is double-clicked. </p>
<p> For example, the customer has created a shortcut to Notepad and assigned it the shortcut <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>X</kbd>. Pressing the keyboard combination sometimes takes 5 or 6 seconds for Notepad to open. As noted above, double-clicking on the shortcut causes Notepad to open without delay. </p>
<p> This issue is not consistently reproducible, but it appears to be independent of the shortcut file itself. Any shortcut with a hotkey exhibits this problem. </p>
<p> All the shortcuts in question are on the desktop. </p>
</blockquote>
<p> The short answer is "There is a program running on your machine that occasionally stops responding to messages. If you press a shortcut hotkey during those moments, you will experience this problem. Identify the program that stops responding to messages and fix it." </p>
<p> Okay, that sort of cuts to the chase, but the interesting part is the journey, not the destination. </p>
<p> First, observe that if you associate a hotkey with a shortcut to say Notepad, and you press the hotkey twice, you do <i>not</i> get two copies of Notepad. The first time you press the hotkey, Notepad launches, but the second time you press the hotkey, focus is put on the <i>existing</i> copy of Notepad. This is one of those things that's so natural you may not even realize that it's happening. </p>
<p> When you press the hotkey assigned to a shortcut, Explorer receives the hotkey and needs to decide what to do about it. Before it can launch the shortcut, it needs to see if the shortcut target already has a window open, in which case it should just switch to that window. </p>
<p> Finding out whether a window has a hotkey is done by sending the window the <code>WM_GETHOTKEY</code> message. When you press a hotkey that is assigned to a shortcut, Explorer goes to all the windows already on the screen and asks each one, "Hey, what's your hotkey?" If any window says, "My hotkey is <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>X</kbd>," then Explorer says, "Oh, sorry to step on your toes. The user pressed your hotkey, so here, go ahead and take focus." </p>
<p> If no window cops to having <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>X</kbd> as its hotkey, Explorer says, "Okay, well, then I guess I have to make one." It launches Notepad and tells it, "Oh, and your hotkey is <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>X</kbd>." </p>
<p> If there is a window that is not responding to messages, then when Explorer asks it, "Hey, what's your hotkey?", the window just sits there and doesn't answer. After about three seconds, Explorer gives up. "Yeesh, I was just asking a question. Don't have to give me the silent treatment." </p>
<p> And that petulant window is the source of the 3-second delay. It takes Explorer 3 seconds before it finally gives up and says, "Forget it. Even if that was somebody's hotkey, they're being a jerk, so I'm just going to pretend they didn't have a hotkey. Let me open a new window instead and just deal with the hotkey conflict." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (51)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-982093">
				<div id="div-comment-982093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982093">
			May 2, 2012 at 7:09 am</a>		</div>

		<p>I&#39;m sure it&#39;s too late to change now, but why didn&#39;t explorer originally store the hotkey information internally?</p>
<div class="post">[<i>Because <code>RegisterHotKey</code> is a window manager feature, not an Explorer feature. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-982103">
				<div id="div-comment-982103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982103">
			May 2, 2012 at 7:12 am</a>		</div>

		<p>And how does the process responding to WM_GETHOTKEY know which shortcut hotkey a user has assigned? My guess is STARTF_USEHOTKEY in STARTUPINFO&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982113">
				<div id="div-comment-982113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982113">
			May 2, 2012 at 7:24 am</a>		</div>

		<p>Whoa, why does the STARTUPINFO struct overload the hStdInput member to be used for either the standard input handle or the wParam value sent with the WM_SETHOTKEY message depending on the flags? &nbsp;Why not have a separate member for the latter? &nbsp;How would you launch a program that needed to handle hot keys like this but also redirect its standard streams?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982123">
				<div id="div-comment-982123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982123">
			May 2, 2012 at 7:24 am</a>		</div>

		<p>And now for the million dollar question, how to hunt down the offending process?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982143">
				<div id="div-comment-982143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982143">
			May 2, 2012 at 7:26 am</a>		</div>

		<p>@Adam R</p>
<p>There is no meaningful standard input stream if you were launched with a hotkey.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982153">
				<div id="div-comment-982153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Dawson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982153">
			May 2, 2012 at 7:29 am</a>		</div>

		<p>The time delay needs to be shorter. I encounter this all the time when debugging, because usually when broken into the debugger, there is of course a process that isn&#39;t responding to messages. And when debugging, I often need to launch shortcuts to handy things like Notepad. This seems to be the same with the Run dialog too, which I&#39;m in the habit of using to launch URLs.</p>
<p>You&#39;ve done a great job of explaining why it isn&#39;t technically broken, but the user is always right, and it still needs to be fixed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982163">
				<div id="div-comment-982163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982163">
			May 2, 2012 at 7:29 am</a>		</div>

		<p>Raymond, I appreciate the way you illustrate the way things work by personifying processes, API functions, etc. It really makes it easier to understand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982173">
				<div id="div-comment-982173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982173">
			May 2, 2012 at 7:35 am</a>		</div>

		<p>@henke37: How so? &nbsp;What if I want to write a program that launches other programs with hot keys, and what if one of those programs is one that has a UI but also reads debugging commands from standard input?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982183">
				<div id="div-comment-982183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric Fournier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982183">
			May 2, 2012 at 7:51 am</a>		</div>

		<p>@Adam Rosenfield</p>
<p>It seems a mite contrived to think that you would like to have a program launch other programs through hotkeys rather than the normal API for doing it, such as CreateProcess.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982193">
				<div id="div-comment-982193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982193">
			May 2, 2012 at 8:07 am</a>		</div>

		<p>@Tim Dawson &quot;You&#39;ve done a great job of explaining why it isn&#39;t technically broken, but the user is always right, and it still needs to be fixed.&quot;</p>
<p>No, this is not the case at all. &nbsp;Imagine if Microsoft tried this. &nbsp;The most obvious &quot;fix&quot; is to reduce or remove the delay. &nbsp;Now you&#39;ll have users saying &quot;sometimes my shortcuts don&#39;t work at all&quot; if their program happens to not respond to messages for just longer than the delay.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982203">
				<div id="div-comment-982203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982203">
			May 2, 2012 at 8:10 am</a>		</div>

		<p>@Eric Fournier: I <em>am</em> talking about using CreateProcess to launch other programs. &nbsp;I was positing that a program could want to launch other programs with CreateProcess and passing in STARTF_USEHOTKEY|STARTF_USESTDHANDLES as the dwFlags of the STARTUPINFO passed to CreateProcess. &nbsp;It&#39;s a little contrived but not entirely out-of-this-world, IMO.</p>
<p>It seems to me that the STARTF_USEHOTKEY flag exists for the convenience of the window manager &#8212; assuming that the window manager is the only system that uses it, it makes sense that <em>it</em> doesn&#39;t need STARTF_USESTDHANDLES to redirect the standard streams of a process launched with a hot key. &nbsp;If the window manager ran in kernel mode, that flag wouldn&#39;t need to exist, and it could do all its magic inside kernel mode without exposing that flag to the userspace API. &nbsp;But since it runs in user mode, that flag needs to exist in user mode, and if other programs want to implement their own hot key launching, then why not also let them redirect the standard streams at the same time if they want?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982213">
				<div id="div-comment-982213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">aux</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982213">
			May 2, 2012 at 8:19 am</a>		</div>

		<p>That explains the shortcut delay problem I had a while ago. I could never figure out where the delay comes from, and ended up just not using hotkeys anymore. Is there a way to make it just ignore running applications and always launch the shortcut no matter what?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982223">
				<div id="div-comment-982223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Mol</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982223">
			May 2, 2012 at 8:47 am</a>		</div>

		<p>@Rick C: No, because the message was still placed in the application&#39;s message queue, and it&#39;ll receive the message when it eventually gets to that point in its queue. (Unless there&#39;s some kind of transactional logic for applications&#39; message queues I&#39;m not familiar with.)</p>
<p>You&#39;re more likely to see a complaint of &#39;sometimes my hotkey starts a new copy of the application, but sometimes it causes the existing copy to gain focus.&#39;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982233">
				<div id="div-comment-982233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jmthomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982233">
			May 2, 2012 at 9:09 am</a>		</div>

		<p>Another &quot;local solution to a global problem&quot;. &nbsp;Keyboards, shortcuts, and shortcut keys are global. &nbsp;Window manager is not global. &nbsp;In a ringed kernel, there would be a place (API + structures) for global support of shortcuts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982253">
				<div id="div-comment-982253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982253">
			May 2, 2012 at 9:27 am</a>		</div>

		<p>@HiTechHiTouch: I agree, the window manager isn&#39;t global, because there are processes that don&#39;t use it. But neither are keyboard shortcuts, because the very same processes that don&#39;t use it (services, system processes, etc.) do not communicate with the user or are even launched by him/her. So in the end, it&#39;s a local solution to a local problem.</p>
<p>@Adam Rosenfield: For a similar reason, I don&#39;t think it&#39;s useful to support both standard input and keyboard shortcuts: if the process is launched via a keyboard shortcut, what console or handle does its input get attached to? And if the process is being launched by another process so it can attach to its standard input (say, cmd.exe or a debugging host), does the keyboard shortcut parameter make any sense? Will it ever need to respond to a shortcut?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982263">
				<div id="div-comment-982263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">doug.kavendek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982263">
			May 2, 2012 at 9:40 am</a>		</div>

		<p>I would also be interested in knowing if there&#39;s any way to force it just to always launch the shortcut, since for me when I press the shortcut key twice I really want it to run twice &#8212; like opening up two separate ssh windows. &nbsp;If it&#39;s an app that I want to force only a single instance, I can generally configure the app itself to do its own check. &nbsp;I&#39;ve usually just made intermediate batch files to circumvent the single-instance check, but the huge delay while debugging is still one of those recurring minor pains.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982283">
				<div id="div-comment-982283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982283">
			May 2, 2012 at 9:58 am</a>		</div>

		<blockquote><p>
  &gt;I&#39;m sure it&#39;s too late to change now, but why didn&#39;t explorer originally store the hotkey information internally?</p>
<p>  [Because RegisterHotKey is a window manager feature, not an Explorer feature. -Raymond]
</p></blockquote>
<p>OK, that just moves the problem around a little. &nbsp;I think the real question is, why do you have to query active programs for their hotkeys? &nbsp;Why doesn&#39;t the program register its hotkey with [some global location] when it&#39;s launched, and then Explorer can query that, so it doesn&#39;t have to deal with unresponsive programs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 odd alt thread-odd thread-alt depth-1" id="comment-982303">
				<div id="div-comment-982303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982303">
			May 2, 2012 at 10:27 am</a>		</div>

		<p>@henke37</p>
<blockquote><p>
  And now for the million dollar question, how to hunt down the offending process?
</p></blockquote>
<p>You already know the answer. Write a program that mimics Explorer&#39;s behaviour and note which processes don&#39;t respond in 3 seconds.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-982313">
				<div id="div-comment-982313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982313">
			May 2, 2012 at 10:48 am</a>		</div>

		<p>@henke37, @AndyCadley: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/ntdebugging/archive/2007/05/29/detecting-and-automatically-dumping-hung-gui-based-windows-applications.aspx" rel="nofollow">blogs.msdn.com/&#8230;/detecting-and-automatically-dumping-hung-gui-based-windows-applications.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982323">
				<div id="div-comment-982323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982323">
			May 2, 2012 at 11:30 am</a>		</div>

		<p>The latest version of Android has a setting in the developer section where you can make apps that don&#39;t respond in a timely fashion in their main thread to messages flash. &nbsp;You get a thick red border appearing around the app until it responds to the message. &nbsp;It is notable how often it happens even on apps written by Google. &nbsp;(The time threshold is also considerably less than 3 seconds.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982333">
				<div id="div-comment-982333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/dan.cavina_4000_live.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>dan.cavina@live.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982333">
			May 2, 2012 at 11:41 am</a>		</div>

		<p>Very good explanation, thanks.</p>
<p>Would parallelizing the code in Explorer that does this scan help? This way, you could ask a bunch of windows at the same time and hopefully the right one will come back right away and you don&#39;t have to wait for the slow ones.</p>
<div class="post">[<i>That only speeds up the case where the app is already running. The initial launch will still have to wait. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982343">
				<div id="div-comment-982343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982343">
			May 2, 2012 at 12:06 pm</a>		</div>

		<p>I keep wondering why it seems to be worse with Windows 7 than it is with Windows XP. &nbsp;With no applications running, my Windows XP box will respond to the Windows+L hotkey to lock the screen instantaneously, but my Windows 7 box often takes three or more seconds. &nbsp;It&#39;s weird because, in general, the Windows 7 machine feels much snappier, which is not surprising since the hardware has much more horsepower.</p>
<p>I assume screen lock go through the same procedure as other hotkeys . &nbsp;ALT+TAB never seems to stall. &nbsp;I wonder what other causes there are for slow-responding hot keys.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982353">
				<div id="div-comment-982353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982353">
			May 2, 2012 at 1:24 pm</a>		</div>

		<p>&gt;&gt; Would parallelizing the code in Explorer that does this scan help?</p>
<p>[That only speeds up the case where the app is already running. The initial launch will still have to wait. -Raymond]</p>
<p>Yes, but it would bring the total down to 3 seconds, as opposed to a cumulative total of n*3. Which happens to me a lot. (not just hot keys, also the DDE open/print verbs)</p>
<div class="post">[<i>True. Or apps could stop going unresponsive. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982373">
				<div id="div-comment-982373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982373">
			May 2, 2012 at 1:58 pm</a>		</div>

		<p>My workaround is to use a program (such as AutoHotKey) that allows you to configure hotkeys but doesn&#39;t bother to query apps/windows. &nbsp;You can optionally add app detection logic to prevent a duplicate instance, but control over this is in your hands.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982133">
				<div id="div-comment-982133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian Friesen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982133">
			May 2, 2012 at 7:25 am</a>		</div>

		<p>This answers a long standing problem of mine. &nbsp;I&#39;ve noticed if Visual Studio is actively debugging another process and I try and use shortcuts, there is a long delay (sure feels longer than 3 seconds, maybe it&#39;s 3 seconds per non-responding app). &nbsp;It&#39;s very annoying and I&#39;ve always wished Explorer were changed to prevent this. &nbsp;On the one hand it&#39;s frustrating because I&#39;m interrupted trying to launch a program just because another process is not responding. &nbsp;Well at least knowing *why* this happens makes it a little easier the next time it happens to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982403">
				<div id="div-comment-982403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982403">
			May 2, 2012 at 3:57 pm</a>		</div>

		<p>A similar problem can happen when you double click a document, or click on a link in an HTML control. In that case, in order to prevent the same document being opened twice, a DDE message is sent and if some windows are unresponsive then you get a very annoying delay, which can in some cases even lock up the application which originated the DDE message.</p>
<p>There are two real flaws here. 1) There are applications which don&#39;t respond to their messages. Sometimes there is no real replacement for these and can&#39;t count on the developers fixing it. 2) Two applications (in the case of the article Explorer and the hotkeyed application) have a problem to solve, and in order to do so they require cooperation of every application on the system. It&#39;s the infamous global solution to a local problem.</p>
<p>I must confess that I find it really hard to think of a fix. The design is really flawed, but it&#39;s there and it must remain working, so changing over to a better design may not be possible. As a start, note that windows generally don&#39;t handle WM_{G|S}ETHOTKEY and if they do this results in aberrant behaviour; they just pass it to DefWindowProc. So you could make the window manager handle the messages instead and then the hanging window won&#39;t even get the message and can&#39;t clog up the system.</p>
<p>The DDE problem is harder to solve. You can&#39;t use PostMessage because you need to know if no one responds, although part of the problem (hanging initiating application) can be mitigated by updating the documentation of ShellExecute[Ex] to warn about the problem of unresponsive windows and what to do about it. Still, all you can do is pass SEE_MASK_NOASYNC or not. Unless you have no UI, you can&#39;t pass it (because then you&#39;re at the mercy of other applications) but if you do pass it there is a risk your application might exit before the conversation is finished, so you really always have to call ShellExecuteEx on a separate thread with SEE_MASK_NOASYNC and make sure your application will wait on such threads in the case of process exit. Since that&#39;s the only correct way of calling it, there should be a flag to make the function do the work for you.</p>
<p>But this doesn&#39;t solve the second half of the problem: no appropriate DDE server is running and a window is unresponsive. You can&#39;t really know if the unresponsive window might be the server you&#39;re waiting on, and if you shorten the delay you&#39;ll get misbehaviour in case when the application is trying its very best to respond but simply can&#39;t because of some performance issue (which may be caused by another application). And this puts us in a pickle since DDE servers don&#39;t have to report to a central manager that they&#39;re running a server, which is a situation inherited from Windows 3.1 and a real weakness of the design. Still, the loword of lParam is supposed to be application specific, so once an application responds, you only have to query that one in the future. This doesn&#39;t help when the application name is NULL (for example when the topic is WWW_OpenURL to open it in the default browser) but on the other hand ShellExecute[Ex] knows what the default browser is, I should think.</p>
<p>There are probably situations where these solutions won&#39;t always work right, so it&#39;ll need a bit more work, but it could improve the majority of actual use cases.</p>
<p>Looking back, I realise that this was an enormous wall of text. My apologies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982273">
				<div id="div-comment-982273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982273">
			May 2, 2012 at 9:42 am</a>		</div>

		<p>Is a full fledged window manager a requirement for using the keyboard now?</p>
<p>Why the need for apps to register keyboard shortcuts, when USER not keeping track of it anyway?</p>
<div class="post">[<i>I don&#39;t understand the question. USER *is* keeping track of it. Hence the <code>WM_GETHOTKEY</code> message. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-982423">
				<div id="div-comment-982423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982423">
			May 2, 2012 at 6:23 pm</a>		</div>

		<p>@Tim Dawson: Or Windows should change the handling a bit&#8230; Explorer can send the WM_GETHOTKEY as broadcast message, and if no reply in 3 seconds, launch the application instead. So in the end it would be juat a little more than 3 seconds delay. (Any application that&#39;s busy at that time will be treated the same as not hearing that message)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-982433">
				<div id="div-comment-982433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982433">
			May 2, 2012 at 6:32 pm</a>		</div>

		<p>@James: There&#39;s one flaw on that: Not every Windows application is launched by Explorer. Say, IE can launch notepad or else for opening downloads. So Explorer don&#39;t keep track of every application opened in the current desktop.</p>
<p>Maybe it&#39;s time to add another Windows message, something like WM_PROCESSSTART. Maybe it can help solve another common problem too. Something like want to launch an application and wait until it&#39;s completely loaded to return.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982443">
				<div id="div-comment-982443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982443">
			May 2, 2012 at 6:44 pm</a>		</div>

		<p>@cheong00: That&#39;s exactly what I meant by &quot;a case where the window was created by a child process&quot;. &nbsp;My point was that figuring out which window corresponds to which shortcut is very non-trivial, and &quot;storing hotkey information internally&quot; doesn&#39;t solve that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-982453">
				<div id="div-comment-982453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982453">
			May 2, 2012 at 7:57 pm</a>		</div>

		<p>On the other hand, maybe DWM can expose a function to allow Explorer query that, so Explorer can query a centralized source instead of asking each applications?</p>
<p>It&#39;d be good if Explorer can know when a new application registered new hotkey (maybe through event subscription to DWM), so Explorer will ask what hotkey is registered to that application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982463">
				<div id="div-comment-982463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">None</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982463">
			May 2, 2012 at 8:17 pm</a>		</div>

		<p>What if two windows have the same shortcut? &nbsp;Which is given focus?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982363">
				<div id="div-comment-982363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982363">
			May 2, 2012 at 1:25 pm</a>		</div>

		<p>[That only speeds up the case where the app is already running. The initial launch will still have to wait. -Raymond]</p>
<p>Doesn&#39;t this also speed up when there&#39;s *two* slow windows, or am I missing something here?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982383">
				<div id="div-comment-982383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982383">
			May 2, 2012 at 2:15 pm</a>		</div>

		<p>This bites me quite a lot. Maybe now I can figure out what program is causing this. Still, I find the behaviour rather annoying as, in almost all cases, I actually *want* to start another copy of the program for which I&#39;m hitting the hotkey. I don&#39;t suppose that is configurable?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tejaskumar-joshiemerson-com even thread-even depth-1" id="comment-982483">
				<div id="div-comment-982483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/TejasJ' rel='external nofollow' class='url'>TejasJ</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982483">
			May 2, 2012 at 10:57 pm</a>		</div>

		<p>Thanks for this wonderful explanation..!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982493">
				<div id="div-comment-982493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982493">
			May 3, 2012 at 12:07 am</a>		</div>

		<p>Raymond, I couldn&#39;t have put it better than Mason Wheeler:</p>
<p>I think the real question is, why do you have to query active programs for their hotkeys? &nbsp;Why doesn&#39;t the program register its hotkey with [some global location] when it&#39;s launched, and then Explorer can query that, so it doesn&#39;t have to deal with unresponsive programs?</p>
<p>&quot;[True. Or apps could stop going unresponsive. -Raymond]&quot;</p>
<p>This is kind of like Windows 3 blaming an application for bringing down the OS.</p>
<div class="post">[<i>The hotkey design dates back to 16-bit Windows. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982503">
				<div id="div-comment-982503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982503">
			May 3, 2012 at 12:18 am</a>		</div>

		<p>3 seconds delay for each non-responsive app? hardly that is the true..maybe in the Windows lab where Ray is sitting, but in the real world try forever. I start a debug session then hit WIN+E to launch another Explorer window, don&#39;t respond. Hit few more times, nothing. Double click the Total Commander icon on desktop, nothing. Press CTRL+SHIFT+ESC, nothing. All this indicate the Explorer itself is not responding to it&#39;s own internals. Go to IDE, stop debugging session and suddenly on my desktop 6 exporer windows, one Task Manager and a Total Commander windows pop all at the same time. What do you respond to this Ray? It&#39;s happening all the time when I debug. Curious, if I just hit Right Click on exporer icon and launch it with &quot;Run as&quot; under different credentials it will pop-up just nicely. So, huh, I guess there is more to it then just this simple explanation of Explorer going on &quot;asking spree&quot; as you imply. I want the entire story, not just the 1st chapter, hope you&#39;ll do it as a series.</p>
<div class="post">[<i>Windows+E and Ctrl+Shift+Esc are not hotkeys for shortcuts. And double-clicking an icon doesn&#39;t even involve a hotkey! The scenarios you describe here are unrelated to today&#39;s topic. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982413">
				<div id="div-comment-982413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982413">
			May 2, 2012 at 5:46 pm</a>		</div>

		<p>&gt;&gt;I&#39;m sure it&#39;s too late to change now, but why didn&#39;t explorer originally store the hotkey information internally?</p>
<p>&gt;[Because RegisterHotKey is a window manager feature, not an Explorer feature. -Raymond]</p>
<p>But launching shortcuts in response to hotkeys *is* an Explorer feature, so Explorer already must have some kind of internal mapping to know which shortcut to launch for which hotkey.</p>
<p>I think I can rationalize the behavior as: Explorer can (and probably does) store that information, but that doesn&#39;t help in the case described here, where Explorer wants to activate an existing window if possible. &nbsp;Explorer doesn&#39;t necessarily know which window came from which shortcut (if it even was started via a shortcut). &nbsp;It could try comparing the process name to the shortcut&#39;s command-line, or it could keep track of the process handle from CreateProcess and see if that corresponds to the window, but neither of those would work in a case where the window was created by a child process or where a single application instance creates multiple top-level windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982513">
				<div id="div-comment-982513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982513">
			May 3, 2012 at 3:18 am</a>		</div>

		<p>@Danny: Usually that happens if the debugged program currently holds the loader lock for whatever reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982533">
				<div id="div-comment-982533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lasse Hansen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982533">
			May 3, 2012 at 4:50 am</a>		</div>

		<p>Finally an explanation! This has been bugging me for years!</p>
<p>In Windows 7 it has become so prevalent for me that I&#39;ve switched to AutoHotkey to handle program launch. Now I know this switch won&#39;t be temporary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982543">
				<div id="div-comment-982543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982543">
			May 3, 2012 at 6:47 am</a>		</div>

		<p>If I write a program that uses a small launcher executable to trigger the real program, I can make it so the real program responds to the hotkey message in the same way the launcher does. That lets the program work properly with hotkeys even though the hotkey is configured on a shortcut to the launcher. If explorer used a lookup table to know what process to look for instead of using the message, then it would just end up running the launcher even though the real program is already running.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982573">
				<div id="div-comment-982573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982573">
			May 3, 2012 at 8:00 am</a>		</div>

		<p>Like some others, I don&#39;t understand why Windows is asking the running applications &quot;is this your hotkey&quot;?. &nbsp;Windows already knows what application to start for a given hotkey (consider the case where there are (effectively) no appliations running. &nbsp;Windows knows what application it needs to start for a hotkey, and it should be able to tell if that application is running or not. &nbsp;</p>
<p>Maybe it can&#39;t tell if a running application is the same as the name of the executable that it would start for hotkey X, but that also sounds hard to believe.</p>
<p>I also agree that if I press a hotkey while the application is already running, I very likely want another copy of that program to start. &nbsp;This behaviour should be custonizable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-even depth-1" id="comment-982653">
				<div id="div-comment-982653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982653">
			May 3, 2012 at 11:19 am</a>		</div>

		<p>This is why I often prefer to remove the DDE enchantment &nbsp;from HKCR open key.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982733">
				<div id="div-comment-982733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982733">
			May 3, 2012 at 7:40 pm</a>		</div>

		<p>&quot;[The hotkey design dates back to 16-bit Windows. -Raymond]&quot;</p>
<p>Understood, but could that design be improved? Is this a case of &quot;could fix, but other things take priority&quot;, or &quot;can&#39;t fix due to backwards compatibility constraints&quot;?</p>
<div class="post">[<i>The benefit probably does not outweigh the costs of implementation, risk of regression, and compatibility risk. See: <a href="http://blogs.msdn.com/b/ericgu/archive/2004/01/12/57985.aspx" rel="nofollow">Minus 100 points</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclient even thread-even depth-1" id="comment-982773">
				<div id="div-comment-982773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xp.client' rel='external nofollow' class='url'>xp.client</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982773">
			May 4, 2012 at 6:55 am</a>		</div>

		<p>Imagine my horror when the shortcut hotkey feature didn&#39;t work on Windows 8 Developer Preview unless you did the RPEnabled trick. Thankfully, it works again in Consumer Preview. But as noted above by many, there is a noticeable delay sometimes compared to XP. And you can&#39;t set it for Metro-style app shortcuts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982783">
				<div id="div-comment-982783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dsmtoday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982783">
			May 4, 2012 at 7:54 am</a>		</div>

		<p>It happens quite often that the volume control key presses on my Microsoft keyboard are delayed by approximately 3-6 seconds, especially if I&#39;m in the middle of debugging an application. &nbsp;Perhaps the Intellitype software is mistakenly passing these keypresses around to all the applications before it changes the volume? &nbsp;Very frustrating if I need to turn something down quickly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982813">
				<div id="div-comment-982813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil (SM)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982813">
			May 4, 2012 at 11:11 am</a>		</div>

		<p>I really like Raymond&#39;s personification of explorer here. &nbsp;Explorer sounds a bit passive-agressive!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982823">
				<div id="div-comment-982823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@heinke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982823">
			May 4, 2012 at 11:13 am</a>		</div>

		<p>You could open the programs one at a time until the delay started happening.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982853">
				<div id="div-comment-982853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982853">
			May 4, 2012 at 1:33 pm</a>		</div>

		<p>[The benefit probably does not outweigh the costs of implementation, risk of regression, and compatibility risk. See: Minus 100 points. -Raymond]</p>
<p>Why is there sometimes a long delay between pressing a hotkey for a shortcut and opening the shortcut?</p>
<p>&#8211;&gt;</p>
<p>Because MS cannot afford to code a better OS. Ever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982933">
				<div id="div-comment-982933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Annoyed</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-982933">
			May 6, 2012 at 6:29 pm</a>		</div>

		<p>Like the tv news guy said, &quot;keep f&#8212;&#8211; that chicken, 640k&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-983163">
				<div id="div-comment-983163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Abel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120502-00/?p=7723#comment-983163">
			May 7, 2012 at 12:04 pm</a>		</div>

		<p>Wow, thank you so much. You just answered a question I&#39;ve had for almost a decade (is that even possible?).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

