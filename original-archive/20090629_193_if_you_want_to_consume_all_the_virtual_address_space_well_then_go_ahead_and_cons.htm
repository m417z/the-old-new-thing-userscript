<html>
<head>
<title>If you want to consume all the virtual address space, well, then go ahead and consume it, you don't need my help</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If you want to consume all the virtual address space, well, then go ahead and consume it, you don&#8217;t need my help</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 29, 2009 / year-entry #194</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Matthew Chaboud asks if there's an easy way to consume all the virtual address space below 4GB, short of, well, actually allocating it. "It seems like there should be a cleaner way to do this." If you want to consume all the virtual address space, then call VirtualAlloc until you turn blue. Programs shouldn't...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter <a href="http://matthew.chaboud.com/"> Matthew Chaboud</a> asks <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#605479"> if there's an easy way to consume all the virtual address space below 4GB</a>, short of, well, actually allocating it. "It seems like there should be a cleaner way to do this."</p>
<p> If you want to consume all the virtual address space, then call <code>VirtualAlloc</code> until you turn blue. Programs shouldn't care what address they get back from a memory allocation function; they should handle values below 2GB and <a href="http://blogs.msdn.com/oldnewthing/archive/2004/08/12/213468.aspx"> above 2GB</a> with equal facility. </p>
<p> It's not like there's a <code>Consume<wbr>All<wbr>Available<wbr>Virtual<wbr>Address<wbr>Space<wbr>And<wbr>Exhaust<wbr>The<wbr>Heap</wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></code> function. (Is there a <code>Allocate<wbr>All<wbr>Remaining<wbr>Disk<wbr>Space<wbr>And<wbr>Fill<wbr>Existing<wbr>Files<wbr>With<wbr>Zeroes</wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></code> function?) What would be the point of such a function? Once you call it, you have run out of memory! </p>
<p> If Mr. Chaboud is talking about keeping programs away from bottom 4GB of virtual address space on a 64-bit machine, then a much easier way to do this is to <a href="http://www.microsoft.com/whdc/system/platform/server/PAE/PAEdrv.mspx"> set the <code>AllocationPreference</code></a> configuration setting to specify that memory should be allocated from high addresses first. (But I don't think that's the scenario that prompted the original question, because on 64-bit Windows, the default heap is above the 4GB boundary, so there would be no need to exhaust the heap in order to consume the memory at virtual addresses below 4GB.) </p>
<p> <b>Correction</b>: <a href="http://blogs.msdn.com/oldnewthing/archive/2009/06/29/9807826.aspx#9809341"> Pavel Lebedinsky  points out</a> that the default heap is below 4GB on 64-bit machines. It used to be above the 4GB boundary on earlier versions of 64-bit Windows, but I guess they changed it. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-750563">
				<div id="div-comment-750563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bahbar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-750563">
			June 29, 2009 at 10:15 am</a>		</div>

		<p>I&#8217;d suspect the question is specific to 64bit programs, in order to make sure their programs deal cleanly with addresses that don&#8217;t fit in 32bits (old code base).</p>
<p>Call the magic &quot;allocateall4GB&quot;, and then, all future allocations will have more bits than fit in DWORD. Anything that does not handle it properly will hopefully crash.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-750593">
				<div id="div-comment-750593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-750593">
			June 29, 2009 at 11:59 am</a>		</div>

		<p>&quot;AllocationPreference&quot; is &quot;much easier&quot;l well it seems to work on server operating systems, I&#8217;d rather use something I know will work.</p>
<p>We used virtual alloc, or one big malloc, like the questionner did. &nbsp;(This was years ago now)</p>
<p>this is done to run automated test to catch at run time any problem where the pointers could be truncated. In large programs, we can&#8217;t catch them all with compiler warning. &nbsp;</p>
<p>Even with smaller programs, we can have people use the wrong macro or data member in a VARIANT-like union to get a pointer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-750733">
				<div id="div-comment-750733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-750733">
			June 29, 2009 at 7:22 pm</a>		</div>

		<p>Actually, the 16-bit Windows API included a stress-testing function called AllocDiskSpace; as I recall, this created a STRESS.EAT file that filled the disk.</p>
<div class=post>[<i>That function was not part of the 16-bit Windows API; it was in a stress test helper library that came with the SDK. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-750763">
				<div id="div-comment-750763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-750763">
			June 29, 2009 at 10:18 pm</a>		</div>

		<blockquote><p>
  Is there a AllocateAllRemainingDiskSpaceAndFillExistingFilesWithZeroes function?
</p></blockquote>
<p>Hey, I want one of these, but maybe without the FillExistingFilesWithZeros part.</p>
<p>Filling up a multi-TB disk is so tedious these days and SetFileValidData() requires special privileges. I want an API that anybody can call, that will fill up the whole disk (up to their quota), and creates files that only SYSTEM can access.</p>
<p>Removing the leftover SYSTEM-only files that will inevitably result from abusing this API is somebody else&#8217;s problem. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-750783">
				<div id="div-comment-750783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Lebedinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-750783">
			June 30, 2009 at 2:52 am</a>		</div>

		<p>The default process heap on 64 bit is below 4 GB unless AllocationPreference is changed to force top-down allocations.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-750803">
				<div id="div-comment-750803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sandman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-750803">
			June 30, 2009 at 5:06 am</a>		</div>

		<blockquote><p>
  &gt; Is there a AllocateAllRemainingDiskSpaceAndFillExistingFilesWithZeroes function?</p>
<p>  Hey, I want one of these, but maybe without the FillExistingFilesWithZeros part.
</p></blockquote>
<p>So what are you filling the diskspace with? If you&#8217;ll leaving it as is- you effectively got a security hole.</p>
<p>As you immediately have read access to all the contents of deleted files. Why do you think SetValidData() requires privs?</p>
<p>If you&#8217;re going to overwrite a large chunk of a disk &#8211; it&#8217;s going to be slow &#8211; I can&#8217;t see what you can do about it. (Except to be clever with threads).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-750813">
				<div id="div-comment-750813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-750813">
			June 30, 2009 at 6:36 am</a>		</div>

		<blockquote><p>
  &gt; Filling up a multi-TB disk is so tedious these days
</p></blockquote>
<p>Then use smaller disks?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-750853">
				<div id="div-comment-750853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-750853">
			June 30, 2009 at 9:24 am</a>		</div>

		<blockquote><p>
  &gt;Hey, I want one of these, but maybe without the FillExistingFilesWithZeros part.</p>
<p>  So what are you filling the diskspace with?
</p></blockquote>
<p>Pi.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-751223">
				<div id="div-comment-751223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://matthew.chaboud.com' rel='external nofollow' class='url'>Matthew Chaboud</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090629-00/?p=17713#comment-751223">
			July 2, 2009 at 12:27 am</a>		</div>

		<p>That must be a really old question, as I haven&#8217;t had to deal with x64 porting issues for close to a year.</p>
<p>As some have guessed, the point was to debug code that, scarily enough, had some sections that had gone from win16 to win32 to winx64. &nbsp;Pavel lended an advisory hand to me back in those days while I wrestled with a number of memory and performance issues.</p>
<p>I ended up setting the top-down pref and still wrote a FillUp4GB() (or something like that) function. &nbsp;Compiler warnings about truncation were also immensely helpful. &nbsp;</p>
<p>Even before the days of x64 (when we still had builds for nt 5 on the alpha), my team at the time used general memory allocation replacements that could be toggled to fail from the help menu (internal builds) and address-space filling tricks. &nbsp;Screwing with otherwise repeated initial conditions may not be the best way to test, but I find it an invaluable one. &nbsp;Thanks for mocking my question (and using my name) on your blog. &nbsp;I am now immortal in the eyes of my peers.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

