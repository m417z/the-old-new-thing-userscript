<html>
<head>
<title>How does the MultiByteToWideChar function treat invalid characters?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How does the MultiByteToWideChar function treat invalid characters?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 4, 2012 / year-entry #105</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The MB_ERR_INVALID_CHARS flag controls how the Multi­Byte­To­Wide­Char function treats invalid characters. Some people claim that the following sentences in the documentation are contradictory: "Starting with Windows Vista, the function does not drop illegal code points if the application does not set the flag." "Windows XP: If this flag is not set, the function silently drops...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The <code>MB_<wbr>ERR_<wbr>INVALID_<wbr>CHARS</code> flag
controls how the
<code>Multi&shy;Byte&shy;To&shy;Wide&shy;Char</code>
function treats invalid characters.
Some people claim that the following sentences in the documentation
are contradictory:
</p>
<ul>
<li>"Starting with Windows Vista, the function does not drop
    illegal code points if the application does not set the flag."</p>
<li>"Windows XP: If this flag is not set,
    the function silently drops illegal code points."</p>
<li>"The function fails if
    <code>MB_<wbr>ERR_<wbr>INVALID_<wbr>CHARS</code> is set
    and an invalid character is encountered in the source string."
</ul>
<p>
Actually, the three sentences are talking about different cases.
The first two talk about what happens if you omit the flag;
the third talks about what happens if you include the flag.
</p>
<p>
Since people seem to like tables, here's a description of
the <code>MB_<wbr>ERR_<wbr>INVALID_<wbr>CHARS</code> flag
in tabular form:
</p>
<table BORDER=1 BORDERCOLOR=black
    STYLE="border-collapse: collapse; border: solid .75pt black">
<tr>
<th><code>MB_<wbr>ERR_<wbr>INVALID_<wbr>CHARS</code> set?</th>
<th>Operating system</th>
<th>Treatment of invalid character</th>
</tr>
<tr>
<td>Yes</td>
<td>Any</td>
<td>Function fails</td>
</tr>
<tr>
<td ROWSPAN=2>No</td>
<td>XP and earlier</td>
<td>Character is dropped</td>
</tr>
<tr>
<td>Vista and later</td>
<td>Character is not dropped</td>
</tr>
</table>
<p>
Here's a sample program that illustrates the possibilities:
</p>
<pre>
#include &lt;windows.h&gt;
#include &lt;ole2.h&gt;
#include &lt;windowsx.h&gt;
#include &lt;commctrl.h&gt;
#include &lt;strsafe.h&gt;
#include &lt;uxtheme.h&gt;

void MB2WCTest(DWORD flags)
{
 WCHAR szOut[256];
 int cch = MultiByteToWideChar(CP_UTF8, flags,
                               "\xC0\x41\x42", 3, szOut, 256);
 printf("Called with flags %d\n", flags);
 printf("Return value is %d\n", cch);
 for (int i = 0; i &lt; cch; i++) {
  printf("value[%d] = %d\n", i, szOut[i]);
 }
 printf("-----\n");
}

int __cdecl main(int argc, char **argv)
{
 MB2WCTest(0);
 MB2WCTest(MB_ERR_INVALID_CHARS);
 return 0;
}
</pre>
<p>
If you run this on Windows&nbsp;XP, you get
</p>
<pre>
Called with flags 0
Return value is 2
Value[0] = 65
Value[1] = 66
-----
Called with flags 8
Return value is 0
-----
</pre>
<p>
This demonstrates that passing the
<code>MB_<wbr>ERR_<wbr>INVALID_<wbr>CHARS</code> flag
causes the function to fail,
and omitting it causes
the invalid character \xC0 to be dropped.
</p>
<p>
If you run this on Windows&nbsp;Vista, you get
</p>
<pre>
Called with flags 0
Return value is 3
Value[0] = 65533
Value[1] = 65
Value[2] = 66
-----
Called with flags 8
Return value is 0
-----
</pre>
<p>
This demonstrates again that passing the
<code>MB_<wbr>ERR_<wbr>INVALID_<wbr>CHARS</code> flag
causes the function to fail,
but this time, if you omit the flag,
the invalid character \xC0 is converted to U+FFFD,
which is
<a HREF="http://en.wikipedia.org/wiki/Specials (Unicode block)#Replacement_character">
REPLACEMENT CHARACTER</a>.
(Note that it does not appear to be documented precisely
<i>what</i> happens to invalid characters, aside from the fact
that they are not dropped.
Perhaps code pages other than <code>CP_UTF8</code> convert
them to some other default character.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-982803">
				<div id="div-comment-982803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982803">
			May 4, 2012 at 10:45 am</a>		</div>

		<p>Now I&#39;m sort of curious as to what prompted the behavior change. This seems like it could be a breaking change for apps that tended to get illegal characters in their inputs and were able to safely ignore them.</p>
<div class="post">[<i>My guess is security. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982833">
				<div id="div-comment-982833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982833">
			May 4, 2012 at 12:36 pm</a>		</div>

		<blockquote><p>
  Some people claim that the following sentences in the documentation are contradictory
</p></blockquote>
<p>One might assume that people reading those sentences are, generally speaking, programmers. &nbsp;One might assume that programmers, who after all work with logical devices, could mentally derive that little table as they were reading the text. &nbsp; Alas, one would likely be wrong.</p>
<p>Lawyers, on the other hand &#8230; ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982843">
				<div id="div-comment-982843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982843">
			May 4, 2012 at 1:28 pm</a>		</div>

		<p>Documentation is overcomplicated with negatives. That&#39;s why Raymond now has to spend time on explaining it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982863">
				<div id="div-comment-982863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982863">
			May 4, 2012 at 3:43 pm</a>		</div>

		<p>Wasn&#39;t there some discussion on this in the comments awhile back? Unfortunately the Web 2.0 abuse makes it impossible to use a search engine to search the comments on this blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982893">
				<div id="div-comment-982893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wayne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982893">
			May 5, 2012 at 4:10 pm</a>		</div>

		<p>The documentation should have Raymond&#39;s tables!! &nbsp;It&#39;s so much easier to parse than the text.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-982913">
				<div id="div-comment-982913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982913">
			May 6, 2012 at 5:34 pm</a>		</div>

		<p>I too am one of the humans who likes tables.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-982943">
				<div id="div-comment-982943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982943">
			May 6, 2012 at 7:37 pm</a>		</div>

		<p>[My guess is security. -Raymond]</p>
<p>Agreed. I see the same potential as &quot;canonical Unicode forms&quot; abuse as it were in IIS before Win2k. If an application do checking on MBCS then convert to Unicode, and the source string contains discardable character that&#39;d make some illegal sequence seems legal, that&#39;ll effectively allow bad people write code to bypass the checking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-982953">
				<div id="div-comment-982953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982953">
			May 6, 2012 at 7:43 pm</a>		</div>

		<p>I&#39;ll also note that if certain application is written for MBCS and not Unicode, all it&#39;s validation would be done in with MBCS data. And if that application passes the data to COM, since it&#39;ll transparently do the MBCS to Unicode conversion, it may unknowingly pass inadequately validated data to the COM component.</p>
<p>Another reason for not writing non-Unicode applications these days&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-982973">
				<div id="div-comment-982973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120504-00/?p=7703#comment-982973">
			May 7, 2012 at 1:25 am</a>		</div>

		<p>Codepages can specify a replacement character (most commonly &quot;?&quot;). It&#39;s documented as the default replacement character used by WideCharToMultiByte, presumably it&#39;s now used by MultiByteToWideChar, too. It could be made clearer</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

