<html>
<head>
<title>Why does pasting a string containing an illegal filename character into a rename edit box delete the characters from the clipboard, too?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does pasting a string containing an illegal filename character into a rename edit box delete the characters from the clipboard, too?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 10, 2011 / year-entry #6</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>37</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Ane asks why, if you have a string with an illegal filename character on the clipboard, and you paste that string into a rename edit box, do the illegal characters get deleted not just from the edit box but also the clipboard? Basically, it's a bug, the result of a poor choice of default in...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Ane asks <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#2914610"> why, if you have a string with an illegal filename character on the clipboard, and you paste that string into a rename edit box, do the illegal characters get deleted not just from the edit box but also the clipboard</a>?</p>
<p> Basically, it's a bug, the result of a poor choice of default in an internal helper class. </p>
<p> There is an internal helper class for "monitoring an edit control" with options to do things like remove illegal characters. This helper class was written back in 1998, presumably with the intention of being used somewhere, but it never did get hooked up. Maybe the feature it was originally written for got cancelled, I can't quite tell. At any rate, this helper class had many options, one of which was "When pasting text containing illegal characters, should I filter the illegal characters from the clipboard, too?", and for some reason it defaulted to <i>Yes</i>. (I can see why the default was <i>Yes</i> from a coding standpoint. It was actually less work to filter the characters from the clipboard that it was to preserve them, but it's a bad default from an API design standpoint.) </p>
<p> Anyway, this helper class sat unused for a few years, but in 2000, Explorer decided to use this helper class so it could filter illegal characters out of file names when you used the Rename command. The code that uses this helper class chose which options it wanted, and probably due to oversight, the "preserve clipboard contents when pasting" flag was not specified. </p>
<p> So yeah, it's just a bug. But then again, it's a bug that's been around for over a decade, so who knows if there's somebody out there that relies on it. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (37)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-887053">
				<div id="div-comment-887053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887053">
			January 10, 2011 at 7:38 am</a>		</div>

		<p>Someday (when I&#39;m laid off or something), and feeling particularly eVil, I&#39;m going to write some sort of super-cool application that all my friends are going to want, using only using undocumented APIs and semantics.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887063">
				<div id="div-comment-887063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887063">
			January 10, 2011 at 8:28 am</a>		</div>

		<p>@Joe Hype a program you&#39;re making for about a month and then release it in April 1st:</p>
<p>void main() {</p>
<p>&nbsp;return *0;</p>
<p>}</p>
<p>Don&#39;t release the source, of course. When the bug reports start coming in, claim it runs fine for you and you can&#39;t repro the crash, and they&#39;re on their own.</p>
<p>For bonus points adjust the compile options to get the smallest size EXE to hint to the observant that it probably doesn&#39;t do much.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887073">
				<div id="div-comment-887073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887073">
			January 10, 2011 at 8:29 am</a>		</div>

		<p>And obviously that should be int, not void. &nbsp;Plus I&#39;m not sure if you can dereference a literal like that without casting it to a specific pointer type first.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887083">
				<div id="div-comment-887083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Robinson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887083">
			January 10, 2011 at 9:23 am</a>		</div>

		<p>But &#8211; being pedantic &#8211; does using int main() as the program entry point break the rule of using only &#39;undocumented APIs and semantics&#39;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887093">
				<div id="div-comment-887093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887093">
			January 10, 2011 at 9:31 am</a>		</div>

		<p>@Simon: just document your program as being written is Cobol. That way, main() is undocumented.</p>
<p>(Disclaimer: I don&#39;t know cobol and ignore if it has a main() function. I also can&#39;t be bothered to check just for a joke reply.)</p>
<p>@Raymond: Seriously, is that the level of backward compatibility Windows is aiming at? My mind keeps oscillating between finding this fact wonderful and awful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887103">
				<div id="div-comment-887103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ThomasW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887103">
			January 10, 2011 at 9:45 am</a>		</div>

		<p>If it&#39;s a bug then why not simply fix it? I am sure writing this blog entry took longer than actually fixing the bug.</p>
<div class="post">[<i>Fixing the bug is the easy part. Verifying that your fix didn&#39;t break anything is hard. (It&#39;s not like every Windows user uploads their personal workflow to a central location so we can run through all of them and verify that we didn&#39;t break anybody. And even if they did, imagine how long it would take to run through that massive database and repeat the workflow of every Windows user on the planet.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887113">
				<div id="div-comment-887113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JohnL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887113">
			January 10, 2011 at 10:01 am</a>		</div>

		<p>@Raymond re @ThomasW&#39;s comment, they could probably have fixed it around the Vista era &#8211; they broke a lot of stuff, so this probably wouldn&#39;t have caused too many extra issues. </p>
<div class="post">[<i>This assumes the problem was known in the Vista era. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887123">
				<div id="div-comment-887123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Ludlow</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887123">
			January 10, 2011 at 10:01 am</a>		</div>

		<p>@Raymond re @ThomasW&#39;s comment, they could probably have fixed it around the Vista era &#8211; they broke a lot of stuff, so this probably wouldn&#39;t have caused too many extra issues.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887133">
				<div id="div-comment-887133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dylan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887133">
			January 10, 2011 at 10:21 am</a>		</div>

		<p>@John</p>
<p>It has, in fact, been fixed by win7.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887143">
				<div id="div-comment-887143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BC_Programmer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887143">
			January 10, 2011 at 10:23 am</a>		</div>

		<blockquote><p>
  &gt;I am sure writing this blog entry took longer than actually fixing the bug.
</p></blockquote>
<p>But at the same time, had he not taken the time to write this blog post you would have never gotten the self-satisfaction of making a snarky comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887163">
				<div id="div-comment-887163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clipboarder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887163">
			January 10, 2011 at 1:26 pm</a>		</div>

		<p>The bug is still in Win 7. You can easily reproduce it.</p>
<p>The question is weather more people are annoyed by the bug than there are who rely on it.</p>
<div class="post">[<i>Interesting metric you&#39;re using there. So, for example, it&#39;s okay to add a feature that breaks an app if the number of people who use the feature is greater than the number of people who use the now-broken app? (So much for the long tail.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887173">
				<div id="div-comment-887173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clipboarder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887173">
			January 10, 2011 at 2:11 pm</a>		</div>

		<p>Well, if breaking the app can&#39;t be avoided, I&#39;d do it that way.</p>
<p>Of course the average time-saving and &quot;anger-reducement&quot; of that new feature (or fixed bug) should be greater than the anger caused by breaking an app. That&#39;s often difficult to archive by adding new features but easy by fixing bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887183">
				<div id="div-comment-887183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887183">
			January 10, 2011 at 2:27 pm</a>		</div>

		<p>I am optimistic and assume that sufficent number of people found it so usefull that they are using the bug for filtering&#8230;</p>
<p>(for added evil uses WM_COMMAND or something like that&#8230; )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887193">
				<div id="div-comment-887193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric TF Bat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887193">
			January 10, 2011 at 2:37 pm</a>		</div>

		<p>That&#39;s an intriguing implication, Raymond. &nbsp;Using your psychic debugging skillz, can you speculate on how this particular bug could be useful or necessary? &nbsp;I can see a lot of upside to even the silliest bugs, and your blog is a terrific source for the weirdnesses of backward compatibility, but this one has me beaten. &nbsp;I&#39;d love to read your wild (informed) guesses on what sort of procedures or workflow could rely on something as obscure as this.</p>
<div class="post">[<i>You have a string on the clipboard that you want to use as a file name, but it has illegal characters. How do you clean it up? Easy: Click a file on the desktop (doesn&#39;t matter which one), hit F2, Ctrl+V, Esc. Bingo: Clipboard cleaned up. I can see this entering some people&#39;s muscle memory, possibly even showing up on some &quot;Windows Tips and Tricks&quot; site and becoming part of some company&#39;s internal workflow. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887203">
				<div id="div-comment-887203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887203">
			January 10, 2011 at 2:52 pm</a>		</div>

		<p>Easy. Due to the bug, the rename box trims trailing spaces that are in the clipboard. I can imagine lots of people depending on that by accident. You don&#39;t want a file named &quot;welcome to eight &nbsp;.doc&quot; now do you?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887213">
				<div id="div-comment-887213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887213">
			January 10, 2011 at 3:15 pm</a>		</div>

		<p>&quot;(So much for the long tail.)&quot;</p>
<p>In fact, Clipboarder is asking the very same question (&quot;whether more people are annoyed by the bug than there are who rely on it.&quot;) Raymond asked about Scraps! &nbsp;<a rel="nofollow" target="_new" href="http://www.dotnetrocks.com/text/0211/index8.html" rel="nofollow">http://www.dotnetrocks.com/&#8230;/index8.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887243">
				<div id="div-comment-887243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887243">
			January 10, 2011 at 6:32 pm</a>		</div>

		<p>I see where you&#39;re coming from, Raymond, but I&#39;m not sure I understand why a bug such as this garners so much support for backwards compatibility. &nbsp;How many people really rely on this odd behavior? &nbsp;Maybe 1000? &nbsp;I&#39;d have to guess even less.</p>
<p>I have to compare something like this with other changes made to Windows in the last few versions. &nbsp;Compare this bug to the removal of the File Types dialog (I know you&#39;ve blogged about this, and even wrote a TechNet column about it). &nbsp;The number of people impacted by the complete removal of that feature (flawed as it was) is immensely greater than those relying on this odd little clipboard bug.</p>
<p>This isn&#39;t a complaint, just an observation. &nbsp;Why do bugs like this persist and yet other, much more drastic changes get pushed through? &nbsp;You&#39;ve talked a lot about how features get added to Windows (starting at -200 points, or whatever), but how do &quot;features&quot; like these get slated for removal?</p>
<div class="post">[<i>Features become candidates for removal when the maintenance costs significantly exceed the benefit + the cost of removing it. (I hope this statement was obvious to most people.) The cost of removing the feature is definitely nonzero; a lot of research would have to be done first. The cost of maintaining this feature is currently zero. It&#39;s hard to beat zero. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887253">
				<div id="div-comment-887253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887253">
			January 10, 2011 at 6:35 pm</a>		</div>

		<p>In my experience (not particular to Windows or even to Microsoft) weird little things like this most likely never get cleaned up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887263">
				<div id="div-comment-887263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wishful thinking</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887263">
			January 10, 2011 at 9:33 pm</a>		</div>

		<p>I just want to be able to use the colon characters (:) in a file name. I know never going to happen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887223">
				<div id="div-comment-887223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887223">
			January 10, 2011 at 5:32 pm</a>		</div>

		<p>&gt; Easy: Click a file on the desktop (doesn&#39;t matter which one), hit F2, Ctrl+V, Esc. Bingo: Clipboard cleaned up.</p>
<p>But&#8230; even if the behaviour is fixed, all that I have to do is add a Ctrl+C from sequence. And if I were internal documentation writer, I won&#39;t rely on behaviour that&#39;d probably be fixed in any next version of Windows. (Note that I write on the presumption that organization requires writing operation guide would prefer the documentation be written in safer way, and have someone with more experience to check the documents&#8230; which is not always the case&#8230;)</p>
<div class="post">[<i>Companies complain when we change *anything* that invalidates their training materials, no matter how small the change. And adding Ctrl+Shift+Home, Ctrl+C to the steps is definitely not simple. (A three-key chord is a training nightmare.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887283">
				<div id="div-comment-887283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887283">
			January 11, 2011 at 5:36 am</a>		</div>

		<p>Did any of these sorts of bugs get cleaned up for Win64? There were no ABI or back-compat issues there; it is, by definition, an ABI change. All apps must be compiled anew, and re-tested by their developers. For apps that no longer have source or developers, the old binaries would still run as before in the backwards compatible 32-bit WoW environment. But for new stuff? Oh, the kludges that could be ironed out&#8230;</p>
<div class="post">[<i>There was a massive back-compat issue for Win64: You have hundreds of millions of lines of 32-bit source code that need to keep working when you recompiled as 64-bit. If you&#39;ve never ported code, you don&#39;t understand how big a deal this is. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887293">
				<div id="div-comment-887293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887293">
			January 11, 2011 at 5:54 am</a>		</div>

		<blockquote><p>
  I just want to be able to use the colon characters (:) in a file name. I know never going to happen.
</p></blockquote>
<p>Right. It&#39;s now the same as saying &quot;I just want to be able to use the backslash character () in a file name&quot;. &nbsp;You cannot use it IN a name, because it has been defined as separation BETWEEN name components. &nbsp;</p>
<p>In the case of colon, it separates file name from stream name.</p>
<p>c:temp&gt;echo hello stream &gt;foo:bar</p>
<p>c:temp&gt;more &lt;foo:bar</p>
<p>hello stream</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887303">
				<div id="div-comment-887303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887303">
			January 11, 2011 at 6:20 am</a>		</div>

		<p>@Dylan &quot;It has, in fact, been fixed by win7.&quot;</p>
<p>No, but I can see why you might think this. It only affects the WM_UNITEXT clipboard data, not WM_TEXT, and it doesn&#39;t take ownership of the OLE clipboard. This gives some insight, incidentally, into just how the bug is happening and why it could be easier to modify the clipboard than to not do so.</p>
<p>@Joshua: &quot;Easy. Due to the bug, the rename box trims trailing spaces that are in the clipboard. I can imagine lots of people depending on that by accident. You don&#39;t want a file named &quot;welcome to eight &nbsp;.doc&quot; now do you?&quot; Well, for one thing, if the bug were fixed, it would still do everything it does now, <em>to the pasted text</em> &#8211; the bug is the fact that it actually removes them from the clipboard so if you then go and paste the same clipboard into notepad the characters it didn&#39;t like are gone. Also, this function doesn&#39;t remove trailing spaces &#8211; trailing spaces are removed from filenames [after you hit enter on the rename in explorer, not while you paste] by core win32 functionality that is not a bug, and this does not affect the clipboard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887393">
				<div id="div-comment-887393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887393">
			January 11, 2011 at 9:03 am</a>		</div>

		<p>I don&#39;t buy it. This is a bug, plain and simple. An application should not alter the contents of the clipboard without an explicit cut or copy action from the user (I think you blogged about this in the past). What about all the people who depend on that correct behavior?</p>
<p>By this logic no bugs should ever be fixed. For any bug or feature (or even lack of feature) you can argue that somebody can depend on it. Maybe somebody depends on the name of the OS being Windows 7. Maybe my code grabs the 9th character from the OS name and divides by it, instead if simply using 7. Now you are stuck &#8211; any future versions of Windows must be named Windows 7. Or another example &#8211; there is a buffer overflow bug in Windows Explorer. Some program (a virus) exploits it. You should never fix that because you will break compatibility with the virus.</p>
<div class="post">[<i>You&#39;d be surprised how many programs crash if the OS version is not the exact number they are expecting. This is why compatibility is hard. (And as we&#39;ve already noted, security trumps compatibility.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887503">
				<div id="div-comment-887503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887503">
			January 11, 2011 at 11:35 am</a>		</div>

		<p>My point was that if the criteria of fixing a bug, adding a feature, or removing a feature is &quot;somebody may depend on the current behavior&quot; then you can&#39;t ever do any change beyond version 1.0. Potentially any change can break something. So we would still be using Windows 1.0. (although since security trumps compatibility, we&#39;ll have a very secure Windows 1.0 by now).</p>
<p>Also the formula &quot;Features become candidates for removal when the maintenance costs significantly exceed the benefit + the cost of removing it.&quot; is incomplete. The correct one is &quot;Features become candidates for removal when the maintenance costs + THE BENEFIT OF REMOVING IT significantly exceed the benefit (OF KEEPING IT) + the cost of removing it.&quot; It is true that the benefit of removing a feature is almost zero in most cases. However when you apply the formula to a bug (which you do in this case) then the benefit of removing a buggy feature is definitely not zero. Of course you can argue that &quot;the benefit&quot; in your formula is the difference between &quot;benefit of keeping the feature&quot; and &quot;benefit of removing the feature&quot;. But then in this case it will be a negative value, so it is no longer true that &quot;it is hard to beat zero&quot;. It&#39;s not hard when you start from a negative value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887273">
				<div id="div-comment-887273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887273">
			January 11, 2011 at 3:41 am</a>		</div>

		<p>Not removeing a bug because &quot;someone might depend on it&quot; is good in the short term, but horrible in the long term. It leads to abominations such as Swing in Java, or the seventy billion String types in C++. But it is pretty typical for current economic practices, where one sacrifices long-term stability to be able to buy some more &quot;AAA&quot;-stocks with their inflated bonus.</p>
<p>I do not care about this bug much, but about the practise of keeping bugs because they *might* be useful for *someone*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887523">
				<div id="div-comment-887523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887523">
			January 11, 2011 at 12:08 pm</a>		</div>

		<p>I can&#39;t speak for Unix; I come from the world of Classic Mac OS where you can use any character you can type except the colon. Slashes were fine, both types. (Which still doesn&#39;t fix the problem of not being able to use the colon&#8230; but anyway.)</p>
<p>From my background, the allowed characters in Windows (and Unix, and Linux, and OS X) seem extremely restrictive. And I constantly, constantly, get miffed by the &quot;you can&#39;t use that character&quot; dialog when naming files, because I don&#39;t have the list in my brain like people raised on Windows do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-887573">
				<div id="div-comment-887573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887573">
			January 11, 2011 at 12:53 pm</a>		</div>

		<p>I&#39;m often surprised that filenames can contain parentheses. &nbsp;As a programmer, using parentheses as expression separators, it doesn&#39;t match my expectations that they would be legal in filenames. &nbsp;Oh well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887643">
				<div id="div-comment-887643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kelden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887643">
			January 11, 2011 at 5:04 pm</a>		</div>

		<p>You can use similar unicode characters</p>
<p><a rel="nofollow" target="_new" href="http://www.fileformat.info/info/unicode/char/search.htm?q=%3A&amp;preview=entity" rel="nofollow">http://www.fileformat.info/&#8230;/search.htm</a></p>
<p>FULLWIDTH COLON &nbsp; &nbsp; U+FF1A &nbsp; &nbsp; FULLWIDTH COLON &nbsp; &nbsp; ：</p>
<p>or better</p>
<p>MODIFIER LETTER RAISED COLON &nbsp; &nbsp; U+02F8 &nbsp; &nbsp; MODIFIER LETTER RAISED COLON &nbsp; &nbsp; ˸</p>
<p><a rel="nofollow" target="_new" href="http://www.fileformat.info/info/unicode/char/search.htm?q=" rel="nofollow">http://www.fileformat.info/&#8230;/search.htm</a>&amp;preview=entity</p>
<p>SMALL REVERSE SOLIDUS &nbsp; &nbsp; U+FE68 &nbsp; &nbsp; SMALL REVERSE SOLIDUS &nbsp; &nbsp; ﹨</p>
<p>FULLWIDTH REVERSE SOLIDUS &nbsp; &nbsp; U+FF3C &nbsp; &nbsp; FULLWIDTH REVERSE SOLIDUS &nbsp; &nbsp; ＼</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887453">
				<div id="div-comment-887453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887453">
			January 11, 2011 at 10:35 am</a>		</div>

		<p>Ivo: Changing version numbers is a big problem. Have you ever seen a web browser&#39;s User Agent string? For the past 10+ years almost every major browser has had to put &quot;Mozilla/4.0&quot; or &quot;Mozilla/5.0&quot; in the beginning of their user agent strings. Do you know why?</p>
<p>It&#39;s because back in 1994 when Mosaic Communications started up, the codename for their beta web browser was Mozilla. In order for web sites to use all the fancy features it had, web sites had to sniff the user agent string to look for &quot;Mozilla&quot; and give the fancy pages to the fancy browsers and regular pages to regular browsers. By the time the product was given the name Netscape Navigator, it was too late to change the user agent string because that would cause people who downloaded the newer browser to not get the fancy pages. Not only was Netscape unable to change the internal name of their own product once it was released, every *other* browser was doomed to have to use the same name &#8212; and even the same version numbering system!</p>
<p>Anybody who wanted to make a browser with things like tables and animated GIFs had to put &quot;Mozilla&quot; at the beginning of their user agent strings too, so that web servers would know to serve them the fancy pages. Every so often Netscape would come out with a new browser with fancy new features and increment the version number. This caused every other browser developer to upgrade to the new version number once they implemented whatever features Netscape had in that version.</p>
<p>Apparently they stopped incrementing the version at 5.0 (a version that was never actually released), and there it has stayed since the late &#39;90s. Thus, &quot;Mozilla&quot; was carved in stone over 16 years ago by a beta release and &quot;5.0&quot; was set over 10 years ago by a product that never even saw the light of day. Compatibility may be hard on Windows, but that&#39;s nothing compared to how hard it is for web browsers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887483">
				<div id="div-comment-887483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887483">
			January 11, 2011 at 10:54 am</a>		</div>

		<p>Raymond, you must be getting an influx a lot of new readers or something&#8230; it seems like the backwards compatibility conversation happens every month.</p>
<p>@dave: We understand that there&#39;s a reason you can&#39;t use : in a path, but that doesn&#39;t change the fact that we *want* to use : in a path. For example, to put a time in a filename!</p>
<div class="post">[<i>What do unix people do when they want to use a slash in a file name? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887683">
				<div id="div-comment-887683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887683">
			January 11, 2011 at 9:50 pm</a>		</div>

		<p>@Wishful thinking: Just use Services for Unix (or SUA or whatever it&#39;s called now). Of course you won&#39;t be able to open that file from any program you care about, but that&#39;s a small price to pay for being able to name it whatever you want.</p>
<p>@DWalker59: It&#39;s not like Unix prohibits you from using () in your file names, you just have to escape it in your shell. (Unix filesystems typically allow any character except / and NUL.)</p>
<p>@Kelden: Hard to type and confusion inducing. A perfect suggestion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887743">
				<div id="div-comment-887743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887743">
			January 12, 2011 at 4:04 am</a>		</div>

		<p>Raymond, I&#39;m curious how modifying the clipboard is less work than leaving it alone. As I see it, leaving it alone would be 1) read clipboard, 2) manipulate string; and modifying it would be 1) read clipboard, 2) manipulate string, and 3) write clipboard.</p>
<p>Could you please explain real quick?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-887753">
				<div id="div-comment-887753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887753">
			January 12, 2011 at 6:15 am</a>		</div>

		<p>@John: It has to do with how the clipboard works. Each clipboard format is a GlobalAlloc(GMEM_MOVEABLE) buffer allocated by the clipboard. GetClipboardData simply returns the handle. Normally, the application is supposed to lock the handle, copy the data to its own buffer, and unlock it, but there&#39;s nothing to actually <em>stop</em> the application from modifying it in place while it&#39;s got the handle locked. Once this &#39;clicked&#39; for me, I verified that this is indeed what happens by doing a test to show that CF_TEXT [and other formats] is not modified, only CF_UNITEXT</p>
<p>Which of course means that this <em>is</em> part of someone&#39;s workflow, then &quot;it doesn&#39;t work if i&#39;m pasting into [some non-unicode application]&quot; is a bug from their point of view</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887953">
				<div id="div-comment-887953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcos Marado</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887953">
			January 12, 2011 at 10:37 am</a>		</div>

		<p>I understand the reasons for not having : on filenames, but regarding &quot;What do unix people do when they want to use a slash in a file name?&quot;, the answer is &quot;they just use it&quot;.</p>
<p>(On GNU/Linux:)</p>
<p>&gt;echo Hello &gt;slash∕file</p>
<p>&gt;cat slash∕file</p>
<p>Hello</p>
<p>&gt;</p>
<div class="post">[<i>That&#39;s not the same as a / though. It&#39;s a look-alike character. Most people type &quot;and/or&quot; and not &quot;and∕or&quot;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888043">
				<div id="div-comment-888043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-888043">
			January 12, 2011 at 2:31 pm</a>		</div>

		<p>[Features become candidates for removal when the maintenance costs significantly exceed the benefit + the cost of removing it. (I hope this statement was obvious to most people.) &#8230;]</p>
<p>I appreciate your response, but that seems a little disingenuous. &nbsp;Surely there&#39;s more involved than simple maintenance costs &#8212; you talk a lot about keeping features in place for compatibility, and I&#39;m sure that the number of people using a feature must be considered as well.</p>
<p>My point was just that features with large numbers of active users have been removed from Windows (for better or worse), and yet odd little bugs like this remain. &nbsp;Maybe the problem is my equating &quot;features&quot; and &quot;bugs&quot;; perhaps you have a different view depending on which category we&#39;re dealing with (features are transient, but bugs are forever?).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-887933">
				<div id="div-comment-887933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcos Marado</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110110-00/?p=11793#comment-887933">
			January 12, 2011 at 10:33 am</a>		</div>

		<p>Regarding the &quot;we won&#39;t fix this bug because people might depend on it&quot;&#8230; come on, if you would do that, you wouldn&#39;t fix *any* bug. And I&#39;m not even suggesting, like some would, that you never fix any bugs anyway&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

