<html>
<head>
<title>Why aren't low-level hooks injected?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why aren&#8217;t low-level hooks injected?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 7, 2005 / year-entry #254</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When I described what the HINSTANCE parameter to the SetWindowsHookEx function is for, I neglected to mention why the low-level hooks are not injected. But then again, it should be obvious. The low-level hooks let you see input as it arrives at the window manager. At this low level of processing, the window manager hasn't...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>When I described <a href="http://blogs.msdn.com/oldnewthing/archive/2005/04/25/411741.aspx"> what the HINSTANCE parameter to the <code>SetWindowsHookEx</code> function is for</a>, I neglected to mention why the low-level hooks are not injected.</p>
<p> But then again, it should be obvious. </p>
<p> The low-level hooks let you see input as it arrives at the window manager. At this low level of processing, the window manager hasn't yet decided what window will receive the message. After all, that's the whole point of the low-level hook: to filter the input before the window manager does anything with it. "Deciding what window should get the message" counts as "anything". Consequently, it can't inject the call into the destination window's context even if it wanted to. There is no destination window yet! </p>
<p> So, for lack of a better choice, it uses the context that registered the hook. Of course, all this context-switching does come at a cost. Low-level hooks are consequently very expensive; don't leave them installed when you don't need them. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-304113">
				<div id="div-comment-304113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304113">
			September 7, 2005 at 1:21 pm</a>		</div>

		<p>Nice timing on the subject &#8211; I&#8217;ve been messing with hooks recently. Are you saying that only certain classes of hook are not injected, such as WH_CALLWNDPROC, or do they all behave like this? I guess what I&#8217;m asking is: &#8216;are all hooks low-level hooks&#8217;.</p>
<p>I&#8217;ve been using WH_CBT and the way that bugs in my CBTProc bought the system to its knees made me think this was getting injected into all running processes. I guess it could be the other apps are stalled waiting for my hook procedure to complete though.</p>
<p>By beef with hooking is that console windows are &#8216;special&#8217; in that hooking doesn&#8217;t work for them. There is a KB article on this:</p>
<p><a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/q108232/" rel="nofollow">http://support.microsoft.com/kb/q108232/</a></p>
<p>It contains a (IMHO) weak get-out on the lines of: &#8216;console windows were designed differently form day one and we ain&#8217;t changing them&#8217;. It&#8217;s annoying because it changes a simple hook procedure into one with evil special case hacks so that it can consider console windows too. Why were console windows designed differently to all the other windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-304133">
				<div id="div-comment-304133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304133">
			September 7, 2005 at 3:43 pm</a>		</div>

		<p>Take another look at the linked article. It talks about injection and calls out WH_KEYBOARD_LL and WH_MOUSE_LL as non-injected (LL = low-level).  This entry was an elaboration on the special status the non-injected hooks receive. They are the exceptions, not the rule.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304163">
				<div id="div-comment-304163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304163">
			September 7, 2005 at 5:01 pm</a>		</div>

		<p>Thanks for the RTFA pointer &#8211; it all makes sense now ;) Just those console windows to worry about&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304173">
				<div id="div-comment-304173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasmusic.com' rel='external nofollow' class='url'>Joshua Schaeffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304173">
			September 7, 2005 at 6:03 pm</a>		</div>

		<p>Try doing a shell hook and getting window close events for console windows.  If you get them, you are luckier than I have ever been.  I had to resort to another form of &quot;hook&quot; where you register an event message recipient using an undocumented user32 export. Why is Explorer allowed to know this but not us?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304293">
				<div id="div-comment-304293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cd-MaN</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304293">
			September 8, 2005 at 1:31 am</a>		</div>

		<p>Wow. The chance to ask an expert.</p>
<p>I have a little hobby project: I want to make a console window that is resizable like normal windows. My original idea was to set a new window handler function (subclass) for the console window, handle the appropiate window messages and use the SetConsoleScreenBufferSize to approximate the required window size. However the SetWindowLong (ok, I know I should be using SetWindowLongPtr, but this was for testing :) ) gives me an access denied error. Reading on the web I was told that the window procedures for console windows live in a 16 bit stub or something like that, maybe this could be problem? Then I tried to make a local hook for the window, but the problem is it receives none of the messages (like maximize, size, minmaxinfo, etc). I&#8217;ve tried WH_CALLWNDPROCRET<br />
<br />and WH_CALLWNDPROC. Now I&#8217;m creating an other process, which has a window and places the console window inside it, emulating the different actions. However this is far less elegant and also harder to implement (requires IPC for certain actions, etc). What would your suggestion be?</p>
<p>Thank you for posting interesting information to the blog.</p>
<p>Cd-MaN</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304313">
				<div id="div-comment-304313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304313">
			September 8, 2005 at 4:40 am</a>		</div>

		<p>I&#8217;m pretty sure the console behaviour has nothing to do with 16 bit stubs in the NT bases OSes. My theory, based on the trusty tools of blind guessing and believing random USENET posts, is that it has something to do with the console app&#8217;s window being owned by csrss.exe rather than the console app itself. I believe csrss.exe also maintains the console app&#8217;s message loop too.</p>
<p>Whatever it is the fact that console apps don&#8217;t play nice with hooks really reduces the effectiveness of hooking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304443">
				<div id="div-comment-304443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">daev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304443">
			September 8, 2005 at 12:04 pm</a>		</div>

		<p>A nice thorough detail-oriented article on how consoles work and how the OS handles CUI-subsystem applications would be an unmitigated blessing.  Even Russinovich &amp; Solomon&#8217;s &quot;Windows Internals&quot; says nothing about them.</p>
<p>Raymond, is this your area of expertise?  If so, I&#8217;ll file a suggestion in the box; if not, I&#8217;d appreciate a pointer to more suitable MS blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-304453">
				<div id="div-comment-304453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304453">
			September 8, 2005 at 12:12 pm</a>		</div>

		<p>&quot;Red-headed stepchild&quot; indeed! It&#8217;s not my area of expertise, and to be honest I don&#8217;t know who is the expert here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304493">
				<div id="div-comment-304493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TimK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304493">
			September 8, 2005 at 2:37 pm</a>		</div>

		<p>This thread seems to be focusing on SetWindowsHookEx()-type hooks. SetWinEventHook() can also be used for some things, including getting information about console windows. There are even some events that are specific to consoles; though the usefulness of the console events is somewhat lessened by the fact that they are triggered asynchronously (by csrss.exe).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304643">
				<div id="div-comment-304643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050907-22/?p=34303#comment-304643">
			September 9, 2005 at 9:55 am</a>		</div>

		<p>JamesW: Yes. It&#8217;s true that the console window proc and the message loop for the console is in csrss.exe. The reason for this is that you can have more than one console application that writes to the same console and csrss.exe acts as a &quot;console server&quot;. </p>
<p>Cd-MaN: There is a way to inject a dll into another process (in this case csrss.exe) so you can get rid of &quot;Access denied&quot; errors but in the case of csrss.exe you&#8217;re playing with fire&#8230; Last time I did this I&#8217;ve got a BSOD :). Also, you must be an admin to do this.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

