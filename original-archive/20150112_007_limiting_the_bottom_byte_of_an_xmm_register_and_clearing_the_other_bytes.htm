<html>
<head>
<title>Limiting the bottom byte of an XMM register and clearing the other bytes</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Limiting the bottom byte of an XMM register and clearing the other bytes</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 12, 2015 / year-entry #8</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Suppose you have a value in an XMM register and you want to limit the bottom byte to a particular value and set all the other bytes to zero. (Yes, I needed to do this.) One way to do this is to apply the two steps in sequence: ; value to truncate/limit is in xmm0...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Suppose you have a value in an XMM register
and you want to limit the bottom byte to
a particular value <i>and</i> set all the other
bytes to zero.
(Yes, I needed to do this.)
</p>
<p>
One way to do this is to apply the two steps
in sequence:
</p>
<pre>
; value to truncate/limit is in xmm0

; First, zero out the top 15 bytes
    pslldq  xmm0, 15
    psrldq  xmm0, 15

; Now limit the bottom byte to N
    mov     al, N
    movd    xmm1, eax
    pminub  xmm0, xmm1
</pre>
<p>
But you can do it all in one step
by realizing that
min(<var>x</var>, 0) = 0
for all unsigned values <var>x</var>.
</p>
<pre>
; value to truncate/limit is in xmm0
    mov     eax, N
    movd    xmm1, eax
    pminub  xmm0, xmm1
</pre>
<p>
In pictures:
</p>
<table BORDER=0 STYLE="border-collapse: collapse;
 text-align: center">
<tr>
<td>xmm0</td>
<td></td>
<td>xmm1</td>
<td></td>
<td>xmm0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black; width: 2em">?</td>
<td STYLE="padding: 0px 1ex">min</td>
<td STYLE="border: solid 1px black; width: 2em">0</td>
<td STYLE="padding: 0px 1ex">=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black">?</td>
<td>min</td>
<td STYLE="border: solid 1px black">0</td>
<td>=</td>
<td STYLE="border: solid 1px black">0</td>
</tr>
<tr>
<td STYLE="border: solid 1px black"><var>x</var></td>
<td>min</td>
<td STYLE="border: solid 1px black"><var>N</var></td>
<td>=</td>
<td STYLE="border: solid 1px black">min(<var>x</var>, <var>N</var>)</td>
</tr>
</table>
<p>
In intrinsics:
</p>
<pre>
__m128i min_low_byte_and_set_upper_bytes_to_zero(__m128i x, uint8_t N)
{
 return _mm_min_epi8(x, _mm_cvtsi32_si128(N));
}
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1170893">
				<div id="div-comment-1170893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1170893">
			January 12, 2015 at 3:48 pm</a>		</div>

		<p>Raymond &#8211; what were you working on that needed all of this MMX stuff?</p>
<div class="post">[<em>Writing a CPU emulator, y&#39;know, just for fun. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1170903">
				<div id="div-comment-1170903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1170903">
			January 12, 2015 at 4:06 pm</a>		</div>

		<p>[Writing a CPU emulator, y&#39;know, just for fun. -Raymond]</p>
<p>Well OK then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1170913">
				<div id="div-comment-1170913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1170913">
			January 12, 2015 at 8:31 pm</a>		</div>

		<p>One of my coworkers is implementing a filesystem in node.js, just for fun.</p>
<p>I should probably find something more geeky to work on in my spare time&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1170923">
				<div id="div-comment-1170923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sdfsdfsdfasdfasdfasdfasdfasdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1170923">
			January 12, 2015 at 11:13 pm</a>		</div>

		<p>[Writing a CPU emulator, y&#39;know, just for fun. -Raymond]</p>
<p>Oooh, I can speculate on which CPU it is. 3.2 GHz PowerPC Tri-Core Xenon. For Xbox 360 game emulation on XB1.</p>
<p>You go, Raymond. Show those CPUs who&#39;s the systems engineer</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1170963">
				<div id="div-comment-1170963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1170963">
			January 13, 2015 at 7:43 am</a>		</div>

		<p>@sdf keyboard masher:</p>
<p>The tricky part of console emulation isn&#39;t emulating the CPU. &nbsp;It&#39;s emulating the GPU and timings between CPU/GPU/RAM communication that games can depend on very critically in order to eke out every last bit of performance possible. &nbsp;That&#39;s typically why most systems that provide full backwards compatibility include hardware from the previous generation (which even then can still break a few of the more sensitive games), and why most software high-level emulation often can only provide partial compatibility with previous-gen titles without specific fixes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-zlynx odd alt thread-odd thread-alt depth-1" id="comment-1171003">
				<div id="div-comment-1171003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1171003">
			January 13, 2015 at 3:10 pm</a>		</div>

		<p>Yeah. It is pretty surprising how much CPU is needed to emulate even really old hardware like the C64 and Atari systems. The processor is easy. But then there&#39;s the sound and video chips, and all of their very precise timing behavior. Emulators even need to include things like the CRT beam scan position.</p>
<p>In that regard, current game consoles are pretty far away from &quot;the metal&quot;. &nbsp;Pff, they don&#39;t even need to use a timing loop to flip sprite positions every 30 scan lines. Which was broken if your CPU wasn&#39;t running at exactly 1 MHz.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1171073">
				<div id="div-comment-1171073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1171073">
			January 14, 2015 at 10:57 am</a>		</div>

		<p>I thought it was 1.22 MHz? &nbsp;And that&#39;s assuming you&#39;re using NTSC monitors. &nbsp;PAL was a whole other story and required a completely different CPU.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1171083">
				<div id="div-comment-1171083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Barton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1171083">
			January 14, 2015 at 11:13 am</a>		</div>

		<p>In the case of the Atari 800, the clock frequency was 1/2 of colorburst or about 1.79 MHz.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1171273">
				<div id="div-comment-1171273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150112-00/?p=43173#comment-1171273">
			January 15, 2015 at 9:48 am</a>		</div>

		<p>I never thought emulation was too interesting (how hard can it be to translate some opcodes?) but then I ran across this grand experiment: <a rel="nofollow" target="_new" href="http://andrewkelley.me/post/jamulator.html">andrewkelley.me/&#8230;/jamulator.html</a> &nbsp;The author sets out to write a recompiler for NES games to run natively&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

