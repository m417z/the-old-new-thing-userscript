<html>
<head>
<title>It rather involved being on the other side of this airtight hatchway: Passing invalid parameters from kernel mode to another kernel-mode function corrupts the kernel (who knew?)</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>It rather involved being on the other side of this airtight hatchway: Passing invalid parameters from kernel mode to another kernel-mode function corrupts the kernel (who knew?)</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 24, 2018 / year-entry #95</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You're already deep on the other side.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported a vulnerability in a kernel function,
let's call it <code>kfunc</code>.
</p>
<blockquote CLASS="q">
<p>
The kernel-mode <code>kfunc</code> function doesn't validate any of
the pointers passed to it.
As a result, you can pass anything you want as the output pointer,
and it will blindly try to write to it.
If you pass null, you will crash the kernel.
Or if you pass a pointer to memory you want to corrupt,
you can corrupt an arbitrary 4-byte value.
</p>
<p>
Maybe I can find a way to pass an invalid parameter from user space
all the way down to the <code>kfunc</cODE> function.
</p>
<p>
Please contact us soon regarding this issue!
</p>
</blockquote>
<p>
Okay, first things first.
In the first paragraph, there is no elevation.
The kernel-mode <code>kfunc</code> function is callable only
from kernel mode.
The caller is in kernel mode,
and it is tricking a kernel mode function into writing to
an arbitrary memory location.
But so what?
The caller could just save itself the trouble of using
<code>kfunc</code> as the middle man and just corrupt the
memory directly.
In other words, instead of
</p>
<pre>
void attack_the_kfunc()
{
 kfunc(crazy_pointer_value);
}
</pre>
<p>
you can just do
</p>
<pre>
void attack_the_kfunc()
{
 *crazy_pointer_value = 42;
}
</pre>
<p>
This is even more powerful, because not only do you
get to corrupt the memory at <code>crazy_pointer_value</code>,
you even get to pick what value to corrupt it with!
</p>
<p>
Now, if there were a way to call the <code>kfunc</code> function
with parameters controlled by user mode,
then you would be onto something.
</p>
<p>
Which leads us to the next paragraph,
which boils down to
"Maybe there is a way to call the <code>kfunc</code> function
with parameters controlled by user mode."
In other words, the second paragraph says,
"Maybe I can find a vulnerability."
</p>
<p>
Yeah, maybe you can find a vulnerability.
Let us know if you do.
</p>
<p>
But so far, you haven't found a vulnerability.
All you've said is "Maybe there is somebody who is doing a bad thing."
</p>
<p>
"Industrial paper-cutting machines are dangerous and expensive.
We keep the paper-cutting machine in a special room,
and only people who have gone through training are allowed
in the room.
Maybe there is a way to get somebody who has access to the special room
to put an unauthorized object in the paper-cutting machine and damage it."
</p>
<p>
Yeah, maybe.
If you find such a person, let us know.
Because they're in a lot of trouble.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1334025">
				<div id="div-comment-1334025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334025">
			April 24, 2018 at 7:11 am</a>		</div>

		<p>The paper cutting machine example lacks one point. They aren&#8217;t sending the report to the building&#8217;s security guard, but to the paper cutting machine&#8217;s maker.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1334035">
				<div id="div-comment-1334035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334035">
			April 24, 2018 at 8:37 am</a>		</div>

		<p>I find it hard to believe that programmers believe that there&#8217;s any such thing as security against code loaded into kernel.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-zlynx even depth-2 parent" id="comment-1334065">
				<div id="div-comment-1334065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334065">
			April 24, 2018 at 12:14 pm</a>		</div>

		<p>It would depend on the type of kernel. Micro-kernel designs are supposed to be secure against code in other kernel services. </p>
<p>You should not be able to pass a message between micro-kernel services that will cause bad behavior, just as making a REST call to a web API should not be able to corrupt a database or return unauthorized data.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-3" id="comment-1334085">
				<div id="div-comment-1334085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334085">
			April 24, 2018 at 12:30 pm</a>		</div>

		<p>This wasn&#8217;t a message-pass. Just a straight function call.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1334095">
				<div id="div-comment-1334095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334095">
			April 24, 2018 at 12:40 pm</a>		</div>

		<p>They&#8217;re not. They&#8217;re hardened against accident not against somebody intentionally issuing bad DMA requests or other nasties.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1334705">
				<div id="div-comment-1334705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Patrick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334705">
			April 28, 2018 at 11:59 pm</a>		</div>

		<p>They are (or atleast can be) with IOMMU.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1335565">
				<div id="div-comment-1335565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1335565">
			May 2, 2018 at 8:40 pm</a>		</div>

		<p>Microkernels fell out of favor before IOMMU ever existed. Even so, any device that requires an interrupt handler is going to require a device driver that can cause you a lot of trouble.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1334075">
				<div id="div-comment-1334075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">user</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334075">
			April 24, 2018 at 12:30 pm</a>		</div>

		<p>With these articles, I&#8217;m always curious to know how the engineering team responded.  Did they say &#8220;thanks, we&#8217;ll look into it&#8221; with no more follow up, or &#8220;thanks, but this is not a vulnerability&#8221; which I imagine would lead to a long exchange arguing about whether it is a real vulnerability, or maybe no response at all?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1334185">
				<div id="div-comment-1334185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334185">
			April 25, 2018 at 7:51 am</a>		</div>

		<p>Who knows what they said to the reporter, although Raymond has repeatedly said that every report is investigated, just in case.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1334105">
				<div id="div-comment-1334105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Giedrius</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334105">
			April 24, 2018 at 12:50 pm</a>		</div>

		<p>But that does not follow defense in depth philosophy.<br />
Like internet explorer runs (or used to run) with low rights just because it&#8217;s assumed it will be exploited sooner or later. Why don&#8217;t apply the same rules to the kernel?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1334355">
				<div id="div-comment-1334355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zboot</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334355">
			April 26, 2018 at 7:52 am</a>		</div>

		<p>This doesn&#8217;t make sense. How can the kernel run with &#8220;low rights&#8221;?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1334485">
				<div id="div-comment-1334485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Permish N. Deenide</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334485">
			April 26, 2018 at 3:38 pm</a>		</div>

		<p>x86 has 4 protection levels, ring 3 is typical user-mode, and kernel-mode runs in ring 0, but part of the kernel could be in ring 1, so it would have &#8220;low rights&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev even depth-4 parent" id="comment-1334525">
				<div id="div-comment-1334525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334525">
			April 27, 2018 at 7:08 am</a>		</div>

		<p>x64 only has 2</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1334565">
				<div id="div-comment-1334565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334565">
			April 27, 2018 at 10:27 am</a>		</div>

		<p>Incorrect. It has 4. Chapter 5.5 of System programming Guide has no mention about any such limitation.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1334715">
				<div id="div-comment-1334715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Patrick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334715">
			April 29, 2018 at 12:03 am</a>		</div>

		<p>Apart from rings (which NT doesn&#8217;t use, because it would screw up portability), there&#8217;s also the option of using a hypervisor.<br />
Which is in fact used to make the kernel less-than-omnipotent in recent Windows. See Credentials Guard, Virtualization-Based Security, etc. All these are about making sure there are things even the kernel can&#8217;t do.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse odd alt thread-even depth-1" id="comment-1334115">
				<div id="div-comment-1334115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334115">
			April 24, 2018 at 3:19 pm</a>		</div>

		<p>I&#8217;m sure that people would love running what would essentially be the checked build. Given the backlash when security fixes degrade performance, I can confidently predict that there would be no negative reactions to this! :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1334125">
				<div id="div-comment-1334125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334125">
			April 25, 2018 at 3:07 am</a>		</div>

		<p>This code example criminally doesn&#8217;t call the exploit function pwnz0r :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1334145">
				<div id="div-comment-1334145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334145">
			April 25, 2018 at 6:35 am</a>		</div>

		<p>I&#8217;m wondering what sort of pointer validation they expect.  I suppose the function could check for nulls (though I&#8217;m not sure what it should do if it finds one &#8211; maybe crash the kernel?  Oh wait&#8230;), but how is it supposed to differentiate between a legit pointer vs a &#8220;bad&#8221; pointer to memory that will be corrupted?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1334175">
				<div id="div-comment-1334175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Torsten Kammer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334175">
			April 25, 2018 at 7:32 am</a>		</div>

		<p>Simple: The function should get an additional parameter where you pass the source code of the caller, so it can determine whether the pointer is correct and the caller&#8217;s intentions are pure.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fjeldse odd alt depth-3 parent" id="comment-1334305">
				<div id="div-comment-1334305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334305">
			April 25, 2018 at 9:48 am</a>		</div>

		<p>They can crib the implementation from the RFC for the Evil Bit (<a href="https://www.ietf.org/rfc/rfc3514.txt" rel="nofollow">https://www.ietf.org/rfc/rfc3514.txt</a>). For bonus points, they can add this to all the user-mode interfaces as well to ensure that bad programs don&#8217;t bug users as well!</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1334315">
				<div id="div-comment-1334315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334315">
			April 25, 2018 at 11:46 am</a>		</div>

		<p>All the best RFCs come out in early April.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1334725">
				<div id="div-comment-1334725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180424-00/?p=98585#comment-1334725">
			April 29, 2018 at 2:11 am</a>		</div>

		<p>What is fun is bugs that are non-exploitable and only cause a BSoD. With NTVDM being disabled in Win8 by default there are going to be more of them. Some can BSoD a terminal server and kick everyone off. I wonder if you could blog about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

