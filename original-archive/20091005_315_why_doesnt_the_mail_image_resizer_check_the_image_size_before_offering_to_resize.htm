<html>
<head>
<title>Why doesn't the mail image resizer check the image size before offering to resize?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why doesn&#8217;t the mail image resizer check the image size before offering to resize?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 5, 2009 / year-entry #316</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>70</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Igor lambastes the image resizer dialog that appears when you select Send To Mail Recipient. (And people think I'm the one with the social skills of a thermonuclear device.) This dialog pisses him off so much, he complained about it again. The root of the diatribe appears to be that the image resizer dialog...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Commenter Igor
<a HREF="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#669781">
lambastes the image resizer dialog that appears when you select
Send To Mail Recipient</a>.
(And people think I'm the one with the social skills of a thermonuclear
device.)
This dialog pisses him off so much,
<a HREf="http://blogs.msdn.com/oldnewthing/archive/2007/07/09/3769001.aspx#3818035">
he complained about it again</a>.
</p>
<p>
The root of the diatribe appears to be that the image resizer dialog
appears, even if it turns out the resizer won't do anything.
For example, the resizer dialog appears even if the images are
already small,
or if the files have a .jpg extension but aren't actually JPG images,
Why is it so idiotic that it fails to
check these simple things before offering to do its work?
</p>
<p>
Because checking these simple things before showing the dialog
is even more idiotic.
</p>
<p>
One of the grave errors when doing work with files is accessing the file
before the user asks for it.
This is a grave error because accessing the file can take an
excruciatingly long time
if the file is stored on a server halfway across the
world over a slow network connection,
or if the file has been
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/11/28/497442.aspx">
archived to tape</a>.
</p>
<p>
This particular code path is sensitive to the file access time
because the user has just picked a menu item.
Suppose the dialog box went ahead and opened the files to confirm that,
yes, they really are images, and yes, the dimensions of the image
are larger than what the dialog offers to resize them to.
You select 1000 small images on a slow server, right-click them,
and pick Send To... Mail Recipient.
</p>
<p>
Then you wait 30 minutes while the dialog box goes off and does
something like this:
</p>
<pre>
shouldOfferResize = false;
foreach (file in selection)
{
  if (file.IsJPGThatIsNotCorrupted() &amp;&amp;
      file.IsWorthResizing()) {
    shouldOfferResize = true;
    break; // can early-out the loop once we find something
  }
}
</pre>
<p>
Opening each file, parsing it to verify that it is a valid JPG
file that decodes without error, and extracting its dimensions
takes, say, 2 seconds per file.
(The file is slow to access, say, it's on a network server or
on a slow medium like a CD-ROM or a tape drive.
Or the file is large and it takes 2 seconds to read it off the disk
and parse it to verify that there are no decoding errors.)
</p>
<p>
After about 15 seconds with no response, you give up and say
"I hate computers."
and go off and do something else,
frustrated that you were unable to email your photos.
</p>
<p>
And then in the middle of working in your word processor,
this dialog box suddenly appears:
"Windows can resize the pictures you send in e-mail
so that they transfer faster and are easier to view by the recipient."
</p>
<p>
Gee thanks, Windows, for finally getting around to asking me
about that thing I wanted to do <i>a half hour ago</i>.
</p>
<p>
Idiot.
</p>
<p>
And then when you click No, Windows has to go and decode the files
a second time in order to print them.
(Unless Igor's recommendation is to cache the decoded bits from the first
pass. Then you'd complain that
selecting 1000 files and clicking "Send To...
Mail Recipient"
causes your computer to run out of memory.
As Igor is fond of saying when insulting the Windows team:
"Looks like this feature was designed without any adult supervision.")
</p>
<p>
<b>Sidebar</b>:
A good fraction of these blog entries are just elaborations on
very simple concepts.
When I toss an entry onto the "I should blog this" pile,
it usually gets a short remark of five to ten words
which captures what I want to say.
Then when it floats to the head of the queue,
I expand those ten words into a 300-word entry.
The short version of today's entry:
"That would hit the disk."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (70)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-774393">
				<div id="div-comment-774393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774393">
			October 5, 2009 at 8:09 pm</a>		</div>

		<p>You could do the check on a worker thread that the user could cancel, and see the progress of.</p>
<p>If the files are slow then they could be cached to disk locally, rather than read into memory. Presumably the user hasn&#8217;t selected an absolutely huge amount of files as they&#8217;re going to email them (and if they have a warning could be displayed before going further).</p>
<p>Those things obviously add a lot more work, though. Maybe it&#8217;s not worth it. But it&#8217;s not impossible to solve the problem in a way that still works well, unless I&#8217;ve overlooked something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774433">
				<div id="div-comment-774433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/matthew_van_eerde/' rel='external nofollow' class='url'>Maurits</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774433">
			October 5, 2009 at 9:35 pm</a>		</div>

		<p>Snarky comment: if you would just tweet the ten-word entries, we wouldn&#8217;t need to read the blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774473">
				<div id="div-comment-774473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774473">
			October 5, 2009 at 11:56 pm</a>		</div>

		<p>&quot;early-out&quot; the loop? Is that MS Speak?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774493">
				<div id="div-comment-774493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774493">
			October 6, 2009 at 12:24 am</a>		</div>

		<p>Assuming that the user actually intends to email the selected files, they will have to be read into memory shortly anyway. Thus, the only reason to avoid hitting the disk is to give the user an opportunity to cancel the operation because they really meant to email the 30k thumbnail, not the 300MB TIFF on the server in Australia.</p>
<p>Keep in mind, that probably 90% of the time the user has only selected a single file, the file is on a local disk, and the user does not want to cancel. All other cases are fringe cases which must still work and not frustrate the user, but not annoying the user 90% of the time is a big win.</p>
<p>One possible solution then is to look to see what resolution the file is. If the operation completes quickly, show the resize dialog when the image is bigger than some threshold. If the operation takes longer than, say, 500ms, assume that the file(s) are going to take a while to email and show the dialog.</p>
<p>An alternate possibility is just to add up the size on disk of all the files (which should already be available, or at least cached). If the total size is bigger than some threshold (or any particular file is above some size), show the dialog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774503">
				<div id="div-comment-774503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lawrence</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774503">
			October 6, 2009 at 12:33 am</a>		</div>

		<p>@Leo: Using a worker thread is a great idea. </p>
<p>@Peter: to prevent users forgetting what they asked and clicking again, you could pop up a dialog with a progress bar which says &#8220;Deciding whether to show you a dialog&#8230;Please wait&#8221;</p>
<div class=post>[<i>Alex, is that you? Sounds like you&#8217;re trying to drum up more content for The Daily WTF. &#8220;Please wait while Windows decides whether to show you a dialog&#8221;?!? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774533">
				<div id="div-comment-774533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Watson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774533">
			October 6, 2009 at 1:12 am</a>		</div>

		<p>Is it possible to check ahead of time whether the file is on the server? &nbsp;i.e.:</p>
<p>if (file on local disk &#8211; better yet is latency low)</p>
<p>{</p>
<p>&nbsp; do checks agains file type and sizes</p>
<p>}</p>
<p>else</p>
<p>{</p>
<p>&nbsp; nevermind</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774573">
				<div id="div-comment-774573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774573">
			October 6, 2009 at 1:29 am</a>		</div>

		<p>Why isn&#8217;t there a function that will, given a path, tell you yes or no, in X milliseconds or less, whether it will most likely take longer than Y milliseconds to get the file info open the file and read the first Z bytes of it? (for some suitably small X-Y-Z). It seems like that would be the answer to all the variations on this.</p>
<p>Maybe that&#8217;s too specific a thing to want, and requiring too much behind-the-scenes complexity, to be worth having as a standard function. But do the building blocks for such a thing even exist?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774603">
				<div id="div-comment-774603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774603">
			October 6, 2009 at 1:38 am</a>		</div>

		<p>@Random832</p>
<p>I thought about something like that too, but that&#8217;s a pretty complicated problem. Say your network server is on a very fast connection that usually gives you response times &lt; 100 ms, but that server happens to go down or the network happens to be flooded at the moment. How is this function supposed to know? Are we going to be maintaining connections to this server continually just to see what the latency is? That&#8217;s a lot of resource cost and server load for not a whole lot of benefit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774663">
				<div id="div-comment-774663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774663">
			October 6, 2009 at 3:09 am</a>		</div>

		<p>The other simon is right, Explorer probably already read the file into memory. Also sending 1000 JPGs in a single mail from a slow server is an edge case. The common case is (my estimate) 1-10 pictures from the local disk. It&#8217;s feasible to check 10 pictures!</p>
<p>And yes, Windows should show a progress dialog. That improves usability because then Windows shows an immediate reaction to the users action.</p>
<p>What a cheap answer, Raymond&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774683">
				<div id="div-comment-774683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774683">
			October 6, 2009 at 4:08 am</a>		</div>

		<p>@Simon: &quot;That improves usability because then Windows shows an immediate reaction to the users action.&quot;</p>
<p>It&#8217;s funny how this edge case (lots of files on very slow media) is allowed to determine action for all cases. &nbsp;Why does &quot;This would hit the disk&quot; trump &quot;This would annoy the user&quot;. &nbsp;</p>
<p>A worker thread / and progress dialog with a cancel button would vastly improve the user experience and &#8212; get this &#8212; allow the user to decide what does and doesn&#8217;t take too long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774693">
				<div id="div-comment-774693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gigi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774693">
			October 6, 2009 at 4:11 am</a>		</div>

		<p>How about a &quot;never show this again&quot; checkbox? &nbsp;I always want to send the image unmodified.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774703">
				<div id="div-comment-774703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774703">
			October 6, 2009 at 4:16 am</a>		</div>

		<p>@Simon: The other Simon is right about the other other Simon being right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774723">
				<div id="div-comment-774723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774723">
			October 6, 2009 at 4:40 am</a>		</div>

		<p>seems like the simplest thing is to change the wording of the dialog to something like &quot;resize the image(s) if necessary?&quot;</p>
<p>analyzing the images first, even if it was totally simple, has such a small benefit that it&#8217;s best to just make the message clearer that it doesn&#8217;t know anything about the images yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774733">
				<div id="div-comment-774733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774733">
			October 6, 2009 at 4:41 am</a>		</div>

		<p>What bugs me more about image resizing is interpolating images that shouldn&#8217;t be interpolated when zoomed at four times their size. Or more precisely, not offering an option not to interpolate them (quick view, windows photo gallery).</p>
<p>A related pet peeve of mine is that most picture controls have no option &quot;center if smaller than the control, resize if bigger&quot;.</p>
<p>But I have to admit this has little to do with the Windows shell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774453">
				<div id="div-comment-774453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774453">
			October 5, 2009 at 11:16 pm</a>		</div>

		<p>@Leo Davidson</p>
<p>The post responded to both those possibilities, before you even wrote anything! *</p>
<p>For the worker-thread thing, OK, the system doesn&#8217;t hang while it does its thing &#8211; but if storage access takes time, you get a popup later on, while you&#8217;re working on something else. Worse, many users respond to something not working by clicking on it a few more times. Five minutes later, after everything&#8217;s finished thrashing what with a bunch of threads fighting over the same data, they&#8217;ll get 20 dialog boxes asking them to resize the images. Cue the &quot;why didn&#8217;t I stick with Windows for Workgroups?&quot; complaints.</p>
<p>As for caching, the system should gracefully handle the largest amount possible, and it&#8217;s very simple to do so with as little caching as possible. You&#8217;ve traded better performance in one edge case for problems in another, and the whole thing is more complicated. Given that each side has roughly equal benefits and drawbacks, and one is less complex, the smart design is to go with the less complex option.</p>
<p>*Raymond should probably apply for James Randi&#8217;s famous million dollar prize for demonstrated psychic talent, now that I think about it. He seems to have this uncanny ability to respond to questions before they&#8217;re even asked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774753">
				<div id="div-comment-774753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774753">
			October 6, 2009 at 6:28 am</a>		</div>

		<p>I would argue that image resizing should be a feature of the email client rather than the shell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774773">
				<div id="div-comment-774773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">eel76 (germany)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774773">
			October 6, 2009 at 7:54 am</a>		</div>

		<p>In my understanding, explorer shows the dialog because you are about to send a certain (huge) amount of data over a slow connection. This operation might take too much time (or the sender/recipient is not able to handle too big data properly). So the only relevant information (wether to show a dialog or not) is the overall size of all selected files. This information can be gathered without accessing the files at all. How about an advanced user setting where everyone might adjust his personal preference for &quot;Ask me to compress attached images if overall size exceeds &#8230; bytes&quot;.</p>
<p>However, personally i don&#8217;t see a true reason for this kind of feature at all (-90 points), i am not annoyed about this dialog at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774793">
				<div id="div-comment-774793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774793">
			October 6, 2009 at 8:27 am</a>		</div>

		<p>I really dislike this kind of answer from a software development team.</p>
<p>User: This feature really annoys me.</p>
<p>Developer: I can&#8217;t think of a better way.</p>
<p>User: That doesn&#8217;t annoy me less.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774803">
				<div id="div-comment-774803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Newman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774803">
			October 6, 2009 at 8:31 am</a>		</div>

		<p>Explorer does retrieve the dimensions of images and create thumbnails but only if it happens quickly. If its on a slow medium it does not.</p>
<p>The reality though is that this would be best fixed with a checkbox that says don&#8217;t show this again because the target user is the person who wouldn&#8217;t otherwise know how to or think of resizing the image. They take the picture with their digital camera and now want to email it to someone.</p>
<p>As for the jpg checking, if you truly are storing your zip files with an extension of jpg you are asking for trouble. What possible use case could their be for a zip file to have a .jpg extension?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774583">
				<div id="div-comment-774583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774583">
			October 6, 2009 at 1:33 am</a>		</div>

		<p>Ignoring the check that a .JPG file is actually a JPG file (I have a hard time believing mismatches like this are common), then Explorer has *already* pulled the file size info to local memory. If you point out that file size and image dimension are not the same, then I&#8217;ll counter with the fact that Explorer automatically displays image dimensions when a folder contains nothing but images, and I presume that the windows folks have figured how to do this efficiently (or at least when it can be done quickly). Even if you absolutely have to open a file to determine the dimensions, you only need to read the image header, found within the first few bytes of the file; and while you&#8217;re at it, you can verify that the file really is a JPG! :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774823">
				<div id="div-comment-774823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774823">
			October 6, 2009 at 8:56 am</a>		</div>

		<p>Matt:</p>
<p>I don&#8217;t think that anyone wants to store .jpg files with .zip or other wrong extensions but sometimes they&#8217;re forced to or it happens by accident.</p>
<p>For example, there are image-hosting websites that assume/require everything is .JPG. That can result in apparent oddities like &quot;animated jpegs&quot; and &quot;transparent jpegs&quot; :)</p>
<p>Saying that, I can totally forgive programs that don&#8217;t behave in the ideal way when file extensions are wrong. Assuming the extension is correct is often a sensible optimisation.</p>
<p>(In my own viewers I try to be pragmatic. If the media is considered slow I&#8217;m more likely to take the extension&#8217;s word for it. If the media is fast I might check the file headers as well or instead. Depends on the format/situation.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774833">
				<div id="div-comment-774833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Newman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774833">
			October 6, 2009 at 10:01 am</a>		</div>

		<p>@Leo</p>
<p>I&#8217;d say there is a pretty big difference between a .gif/.png with .jpg extension and a .zip with .jpg extension.</p>
<p>In the case of a gif wearing jpg clothes you can logically wait until you do the resize before checking what type of image you have because you&#8217;ll need to read the file anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774853">
				<div id="div-comment-774853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.anatomicaltravel.com/research' rel='external nofollow' class='url'>Ben L</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774853">
			October 6, 2009 at 10:14 am</a>		</div>

		<p>This is an interesting problem, and I don&#8217;t think there will ever be a cure all solution. &nbsp;The file copy dialog introduced in vista is a good example of how improvements can be made for common tasks. I still believe there are clever solutions to help with this and similar workflows. 1) accumulate as much info as possible to help make decisions (I know the point of the article is this is the problem, so make a check box that opts-out of a preview behavior. 2) allow the user to describe as many of the behaviors at the same time (this includes time-outs, and how to deal with anomalies). &nbsp;3) Highlight potential problems with a template Sanity Check. 4) allow user to customize sanity check 5) report on errors and have ways of correcting these problems without starting over.</p>
<p>There are definitely pitfalls to any of these solutions. &nbsp;But if another software has the feature and it works 95% of the time, you might be chasing the wrong design.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774903">
				<div id="div-comment-774903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774903">
			October 6, 2009 at 11:27 am</a>		</div>

		<p>What about if &nbsp;file.IsWorthResizing() just checked the file&#8217;s length in bytes? Is that information already loaded by explorer?</p>
<p>I agree checking the whole file to see if it&#8217;s a valid JPG is OTT. Just offer the option of any of the images are &#8216;big&#8217; (say 1MB or over).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774713">
				<div id="div-comment-774713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774713">
			October 6, 2009 at 4:34 am</a>		</div>

		<p>A more complete list of slow-disk cases:</p>
<p>* Local but slow media: CD/DVD, HD that is spun down.</p>
<p>* Remote Server with high latency. Note that it may be mapped as a network drive, so StartWith(@&quot;\&quot;) is not enough.</p>
<p>* Server with slow authentication. For example, domain-joined laptop accessing a home computer, thus trying the inaccessible DC first, and failing only after timeout.</p>
<p>* Backup to tape, as mentioned above.</p>
<p>* Stuff added to Shell namespace by 3rd-party extensions. For example, Nokia PC Suite adds your phone to the shell namespace, and it can get quite slow through Bluetooth (USB is faster though). Given that most modern phones have cameras, Send To Mail from there seems like a fairly mainstream case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774943">
				<div id="div-comment-774943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774943">
			October 6, 2009 at 11:51 am</a>		</div>

		<p>The filesize of the image has very little to do with the dimensions of the image. We&#8217;ve all seen the 1600&#215;1200 JPEG in 15k that looks fine because it&#8217;s an easily-compressed image, and we&#8217;ve all seen the 800&#215;600 150k JPEG that looks awful because of compression artifacts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774963">
				<div id="div-comment-774963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774963">
			October 6, 2009 at 12:08 pm</a>		</div>

		<p>Note to self: Don&#8217;t go head-to-head with Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774743">
				<div id="div-comment-774743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774743">
			October 6, 2009 at 5:22 am</a>		</div>

		<p>On the other hand, explorer already DOES pull out the contents of the file when you select it. That preview box in the panel on the left, forgot how it&#8217;s named. There&#8217;s more: when thumbnails are on, it pulls out the whole 1000+ pictures. So it&#8217;s not like it would be something unexpected and new if the explorer decided to pull these things out on another occasion.</p>
<p>And, then again, as already mentioned by many, if one solution works for one case and another works for another, then just use different solutions for different cases. Answering this way is like saying &#8220;I shouldn&#8217;t wear anything at all because wearing only pants or wearing only jacket would certainly seem funny&#8221;. No problem, just wear a full set of clothes.</p>
<p>&#8220;Every feature starts with minus 100 points&#8221; rule might kick in here, but that&#8217;s another story. Nobody sane would argue with that improving something requires work.</p>
<div class=post>[<i>Explorer gets the other data in the background, so it doesn&#8217;t interfere with the primary workflow. But in the picture case, getting the data *is* the primary workflow. While it&#8217;s true that you can use different solutions for different cases, it also introduces complexity and makes the feature harder for users to understand. &#8220;Why do I sometimes get asked if I want to resize large images, but sometimes not?&#8221; And of course as you noted&nbsp;the minus 100 points rule is always in play. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-774983">
				<div id="div-comment-774983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774983">
			October 6, 2009 at 12:40 pm</a>		</div>

		<p>Raymond,</p>
<p>You should really stop dwelling on marginal cases like offline files (and keep in mind that tape support is being phased out, too). GetFileAttributes() tells you that the file is offline, so you can skip pulling those (and I suspect this is what Explorer does). </p>
<p>The software should not make the user unhappy in 99.9% cases at a cost of making him marginally happy in 0.1% cases (offline file will still keep him unhappy anyway).</p>
<p>Listen to the users. Otherwise you will sound like developpers of one (habitualy bashed around) mail client, which they claim is not an email client at all, but a database client, and that for them excuses extremely lousy and inconsistent UI.</p>
<div class=post>[<i>GetFileAttributes hits the disk too. And 0.1% of users is a lot of users, for example, everybody who works at <a href="http://blogs.msdn.com/oldnewthing/archive/2006/11/06/999999.aspx" rel="nofollow">this unnamed large multinational corporation</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775013">
				<div id="div-comment-775013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon (the first one)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775013">
			October 6, 2009 at 12:53 pm</a>		</div>

		<p>It really seems like we&#8217;re losing sight of the original issue. One of the driving UI goals for Windows 7 (and now a marketing tagline) was &quot;fewer clicks,&quot; which is at the heart of the complaint that prompted Raymond to write this entry.</p>
<p>Rephrased for this specific scenario: requiring a user to click through a dialog that asks a non-question and results in the same action regardless of the user&#8217;s response is just plain dumb, and no littany of technical excuses changes that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775033">
				<div id="div-comment-775033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The Other Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775033">
			October 6, 2009 at 1:22 pm</a>		</div>

		<p>&quot;You select 1000 small images on a slow server, right-click them, and pick Send To&#8230; Mail Recipient.&quot;</p>
<p>And sometime shortly later your mail admin and/or your server admin come around and strangle you with DAT tape while explaining why this is really not a good idea.</p>
<p>YMMV</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-774763">
				<div id="div-comment-774763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-774763">
			October 6, 2009 at 7:14 am</a>		</div>

		<p>@Peter,</p>
<p>Your reply to mine is just like Raymond&#8217;s post. Yes, if you solve a problem in a really stupid way then you&#8217;ll create bigger problems.</p>
<p>There&#8217;s more than one way to solve the problem though. Maybe the stupid way you&#8217;ve thought of isn&#8217;t the only way. It wasn&#8217;t what I had in mind, at least.</p>
<p>&quot;For the worker-thread thing, OK, the system doesn&#8217;t hang while it does its thing &#8211; but if storage access takes time, you get a popup later on, while you&#8217;re working on something else.&quot;</p>
<p>I mentioned showing a progress dialog so that the user knew what was happening and could cancel it if they wanted to. That dialog would obviously appear when the worker thread starts (or after 1 second or so, if you want to avoid it appearing for worker threads that finish very quickly), not when it finishes.</p>
<p>Right now you get a dialog as soon as you start the operation. With my suggestion it would be no different, except the dialog would have a worker thread and show progress as it worked out the details of the files. Details it has to work out before the email can be sent anyway.</p>
<p>The user is shown no more dialogs than with the original implementation. They&#8217;re shown them just as quickly. The time when the data is processes, and how the user can interact with that processing, is just moved around so it&#8217;s more intelligent.</p>
<p>&quot;Worse, many users respond to something not working by clicking on it a few more times.&quot;</p>
<p>They wouldn&#8217;t because the progress dialog would appear immediately (based on the simple &quot;are there any .jpg etc. files selected&quot; check that happens now).</p>
<p>&quot;Five minutes later, after everything&#8217;s finished thrashing what with a bunch of threads fighting over the same data, they&#8217;ll get 20 dialog boxes asking them to resize the images.&quot;</p>
<p>&quot;</p>
<p>I never said that all the image files should be processed in parallel. I never said that each file should be treated individually instead of as a batch, either. Both would be stupid when the purpose is attachment to an email.</p>
<p>&quot;You&#8217;ve traded better performance in one edge case for problems in another&quot;</p>
<p>What problems?</p>
<p>The only problems are if you implement my suggestion in a really dumb way. If you do things properly then you get something that works very well in both cases and doesn&#8217;t annoy the user with a dumb UI like it does now.</p>
<p>&quot;and the whole thing is more complicated&quot;</p>
<p>Obviously, but that&#8217;s programming. I said it was more work to do this and some may not consider it worth it. The reason for my reply was to point out that Raymond&#8217;s post seemed to be saying it was *impossible* to improve on the thing that was criticised without making it worse, which I feel is not true. It&#8217;s perfectly possible.</p>
<p>&quot;He seems to have this uncanny ability to respond to questions before they&#8217;re even asked.&quot;</p>
<p>Funny, I tohught that about my own post when reading your reply.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775063">
				<div id="div-comment-775063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775063">
			October 6, 2009 at 2:25 pm</a>		</div>

		<p>In general, yes, you don&#8217;t want to read a file before it needs to be read. &nbsp;But, as someone pointed out, if the file is going to get inlined into the e-mail message anyway, then it has to be read in. &nbsp;Even if it has been archived to tape. &nbsp;</p>
<p>So I don&#8217;t see what the point here is. &nbsp;A good argument for NOT asking the question goes along the lines of &#8230; &quot;And now, to demonstrate our superior intelligence, we will proceed to ask you a question you can&#8217;t answer&quot;. &nbsp;Well, that&#8217;s not exactly parallel, but it&#8217;s not a good idea to ask questions that you don&#8217;t NEED to ask. &nbsp;</p>
<p>&quot;One of the grave errors when doing work with files is accessing the file before the user asks for it.&quot; &nbsp;But the user HAS asked for it. &nbsp;The user has asked for the file to be sent in an e-mail message. &nbsp;So that is an error, but it doesn&#8217;t apply to this case. &nbsp;</p>
<p>The answer many people will come up with to the &quot;should Windows resize the file&quot; question is &quot;I don&#8217;t know&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775073">
				<div id="div-comment-775073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gdrprivate.blogspot.com/' rel='external nofollow' class='url'>Leif Strand</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775073">
			October 6, 2009 at 2:28 pm</a>		</div>

		<p>I think Raymond is reaching to far for an explanation here. &nbsp;I doubt the originators of this dialog gave any thought to network servers or tape drives. &nbsp;That gives them way too much credit. &nbsp;Sounds more like a feature advertising itself:</p>
<p><a rel="nofollow" target="_new" href="http://www.joelonsoftware.com/items/2003/06/20.html" rel="nofollow">http://www.joelonsoftware.com/items/2003/06/20.html</a></p>
<p>If this is the case, either resize the images or don&#8217;t (maybe with a checkbox buried in the prefs somewhere), but don&#8217;t interrupt what I&#8217;m doing to ask me about it.</p>
<p>I&#8217;m perplexed by the idea that we are apparently talking about Explorer. &nbsp;If true, commenter Brian has said all that needs to be said.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775123">
				<div id="div-comment-775123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wilfried Wieser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775123">
			October 6, 2009 at 3:32 pm</a>		</div>

		<p>There are two conflicting requirements:</p>
<p>(1) immediate feedback</p>
<p>(2) avoiding clicks</p>
<p>The current behavior can be described (using EBNF) as follows:</p>
<p>ask_user show_progress {[shrink_file] attach_file}</p>
<p>The feedback is immediate, but the &quot;ask_user&quot; dialog is not optional in case there are any images in the selection data. In order to avoid asking the user, one needs to start attaching files as long as there is no shrinkable image encountered:</p>
<p>show_progress {attach_file} [ask_user] {[shrink_file] attach_file}</p>
<p>In case a shrinkable image has been seen (and the progress dialog has not been canceled), the &quot;ask_user&quot; dialog has to be displayed, then (if this dialog does not get canceled) the remaining files have to be attached, now possibly shrinking images.</p>
<p>The second version is more complicated to implement.</p>
<p>The &quot;Mail Service&quot; object is implemented by the sendmail.dll, this has not necessarily to be considered a part of explorer itself. It works even if the mail client does not support compressing images.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775143">
				<div id="div-comment-775143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775143">
			October 6, 2009 at 3:55 pm</a>		</div>

		<p>[GetFileAttributes hits the disk too. And 0.1% of users is a lot of users, for example, everybody who works at this unnamed large multinational corporation. -Raymond]</p>
<p>Before GetFileAttributes hit the disk, FindFirstFile/FindNextFile loop in the file open dialog already went through all the directory entries. They&#8217;re now cached. Moreover, ShGetFileInfo retrieved file icons for them (not reading actual icons from OFFLINE exe files, too). You&#8217;re not saving anything. You&#8217;re reading the files, anyway, to attach them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775153">
				<div id="div-comment-775153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775153">
			October 6, 2009 at 4:03 pm</a>		</div>

		<p>@Ben L</p>
<p>&#8220;The file copy dialog introduced in vista is a good example of how improvements can be made for common tasks.&#8221;</p>
<p>It&#8217;s a good example how a good intention can be screwed up. It seems fixed in Win7, though. Why does it have to tell me in the window title &#8220;Calculating time required&#8221;, instead of just saying &#8220;Copying files&#8221; without time estimate? Why does it sometimes come up with absolutely ridiculous times? And why it was slower than XP? Not that XP file copy is ideal; for some reason it seems to work slower (or miscalculates time estimation) when the progress dialog is in the background. Was it intentional? Did marketroids think that I want to watch the damn progress bar for a large copy, to make it as fast as possible?</p>
<div class=post>[<i>I&#8217;m always baffled by the people who immediately assume that everything they don&#8217;t like is some sort of conspiracy. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775253">
				<div id="div-comment-775253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mpbk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775253">
			October 6, 2009 at 5:20 pm</a>		</div>

		<p>This is easy. &nbsp;There should be a &quot;Send To&#8230; &nbsp;Mail Recipient&quot; and &quot;Send To&#8230; &nbsp;Mail Recipient (with image resize)&quot;</p>
<p>Now you don&#8217;t have to guess at what the user wants or whether they expect to wait on a slow network connection to get the resizing done.</p>
<p>Simple. &nbsp;Problem solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775263">
				<div id="div-comment-775263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775263">
			October 6, 2009 at 5:37 pm</a>		</div>

		<p>&quot;Simple. &nbsp;Problem solved.&quot;</p>
<p>Great. Next on &quot;the old new thing&quot; &#8211; why do I have to have so many cluttered menus? Why does every command come with a different menu for a bunch of different options that I don&#8217;t care about? Can&#8217;t you just have a dialog? Simple. Problem solved.</p>
<p>In the real world, if you care that damned much about having a perfect user experience, go use Linux, and then you have the power to implement all the &quot;simple&quot; solutions you want. If you want to use Windows, you need to appreciate that when you have a hundred million users, it is actually not possible to have a perfect design that is customised for every last one of them.</p>
<p>Even if you stick in a configuration dialog with twenty thousand pages and five hundred options per page, someone will complain because they can&#8217;t find the option they care about and someone else will complain about having a terabyte of hard drive space devoted to code for all the options they don&#8217;t personally use.</p>
<p>And then some bastard in a country we&#8217;ve never even heard of will complain about a gramatically incorrect translation in some obscure combination of options.</p>
<p>The &quot;solution&quot; is for some complainers to grow up. Simple. Problem solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775273">
				<div id="div-comment-775273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775273">
			October 6, 2009 at 5:38 pm</a>		</div>

		<p>[I&#8217;m always baffled by the people who immediately assume that everything they don&#8217;t like is some sort of conspiracy. -Raymond]</p>
<p>The slowdown is not a result of conspiracy, but, as usual, a bad result of good intentions. &quot;Let&#8217;s make sure the background copy process doesn&#8217;t impede I/O of the foreground process&quot;. I&#8217;m quite sure that was the case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775283">
				<div id="div-comment-775283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mitalia.net/' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775283">
			October 6, 2009 at 6:00 pm</a>		</div>

		<p>[I would argue that image resizing should be a feature of the email client rather than the shell.]</p>
<p>I completely agree; the e-mail client <em>have</em> to access the files in order to send them, so while reading them it can check if they can be optimized.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775303">
				<div id="div-comment-775303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andres</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775303">
			October 6, 2009 at 6:19 pm</a>		</div>

		<p>Doesn&#8217;t explorer get the file when I right-click on it?</p>
<p>In my computer, it seems every time I right-click a file in a remote server, it takes a really long time until it shows the menu.</p>
<p>Or maybe this is some shell extension I have installed?</p>
<p>Do you know of any tools I can use to determine if a shell extension is responsible for slowing down my right-click menu, so I can get rid of them?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775313">
				<div id="div-comment-775313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775313">
			October 6, 2009 at 6:32 pm</a>		</div>

		<p>@Andres</p>
<p>A shell extension installed by a well known ZIP program seems to parse files (such as self-extracting archives) to see if it can show a custom menu for them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775323">
				<div id="div-comment-775323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775323">
			October 6, 2009 at 8:07 pm</a>		</div>

		<p>Why not bring up the dialog window, then start looking at the images in the background, and take down the dialog window if they&#8217;re all small enough they don&#8217;t need resizing? &nbsp;In the normal case where it&#8217;s 1/10th of a second to check (because the start of the file is already in memory) you won&#8217;t even see it.</p>
<div class=post>[<i>Short answer: &#8220;Because that would require work.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775383">
				<div id="div-comment-775383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775383">
			October 6, 2009 at 10:15 pm</a>		</div>

		<p>As a complex webapp developer, I gotta say that I&#8217;m baffled by some of the things being said here, including the post itself.</p>
<p>First off, Peter&#8217;s response:</p>
<p>&quot;Worse, many users respond to something not working by clicking on it a few more times. Five minutes later, after everything&#8217;s finished thrashing what with a bunch of threads fighting over the same data, they&#8217;ll get 20 dialog boxes asking them to resize the images. Cue the &quot;why didn&#8217;t I stick with Windows for Workgroups?&quot; complaints.&quot;</p>
<p>I&#8217;m trying to think of the last time I had to program something that was straightforward for a client that didn&#8217;t involve dozens of edge cases and things that I as a developer had to worry about that would never occur to the client unless they saw it malfunction and then would cry out that it&#8217;s &quot;obviously broken&quot;. These range from minor nuisance to plain old unusable (e.g. dynamically drive &quot;required&quot; select box which can have one or zero items).</p>
<p>The point being: queueing to a worker thread, and dealing with that queue is multi-tasking 101. Anytime I animate an interface action (be it in Cocoa or Ajax), I have to do a bunch of bookkeeping that makes it so that fading in and then fading out before the animation elapses does the right thing (stopping and flushing the queue, resuming from where the previous animation left off).</p>
<p>All this to say, in raymond&#8217;s ten words: it&#8217;s not rocket science to make a worker thread work properly.</p>
<p>And for Raymond&#8217;s post: hitting the disk. I&#8217;ve seen many examples, even in Windows, that handle this case very well. Select 50 files in Explorer, right click and hit &quot;print&quot;, and explorer will respond with &quot;Are you sure you want to do that? It might take a while&quot;.</p>
<p>So, why not just warn that attaching a the contents of a CD to an email is not a good idea instead of saying &quot;might hit the disk&quot; and dismissing it.</p>
<p>I gotta say that I fully agree with Igor on this one. Sometimes, the solution isn&#8217;t obvious and sometimes it&#8217;s internally &#8216;ugly&#8217;, but externally, it&#8217;s the Right Thing &#8482; to do. This is the thing I learn and re-learn the more I gain experience working for my clients: they are often right. Even if I think it&#8217;s a &quot;stupid&quot; thing to do, or if I think it&#8217;s &quot;ugly&quot;, they are often right. Being annoying by a message box is a problem requiring solving.</p>
<p>My 2 c.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775393">
				<div id="div-comment-775393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775393">
			October 6, 2009 at 10:48 pm</a>		</div>

		<p>Sounds like a case where the user experience is being penalized to accommodate an edge case. </p>
<p>Seriously, a server &#8216;half way across the world&#8217;? A file on tape? &nbsp;Yes! I know these are exaggeration to illustrate a point. &nbsp;But everything is slow in that case. I mean, did you try this? &nbsp;It does take a long time to attach file to a mail, and I think they may be copied over locally already.</p>
<p>I&#8217;m filing this one as optimizing-for-edge-case. </p>
<div class=post>[<i>It&#8217;s not &#8220;optimized for&#8221; the edge case so much as accommodating it. You have to be careful you don&#8217;t over-engineer your solution. Besides, &#8220;Send to email recipient&#8221; was clearly a quick feature (it has the feel of a powertoy), and probably no more than 1 day of development time was budgeted for it. If you make it too complicated, it&#8217;ll go over budget and get cut. If a simple solution addresses both cases, then that&#8217;s a good trade-off. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775293">
				<div id="div-comment-775293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wilfried Wieser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775293">
			October 6, 2009 at 6:06 pm</a>		</div>

		<p>@mpbk [There should be a &quot;Send To&#8230; &nbsp;Mail Recipient&quot; and &quot;Send To&#8230; &nbsp;Mail Recipient (with image resize)&quot;]:</p>
<p>How would commenter Igor comment on your second option if the current selection is a file containing a *small* image?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775423">
				<div id="div-comment-775423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lawrence</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775423">
			October 7, 2009 at 1:48 am</a>		</div>

		<p>Memet: &quot;I&#8217;ve seen many examples, even in Windows, that handle this case very well. Select 50 files in Explorer, right click and hit &quot;print&quot;, and explorer will respond with &quot;Are you sure you want to do that? It might take a while&quot;.</p>
<p>Memet, what you&#8217;re saying &quot;works very well&quot; is precisely the same situation that Raymond&#8217;s described here which you are arguing against! Explorer doesn&#8217;t check to see how long it would actually take to print all those items!</p>
<p>(@Raymond: no, I&#8217;m not Alex, but I love that site)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775453">
				<div id="div-comment-775453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">luca</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775453">
			October 7, 2009 at 3:06 am</a>		</div>

		<p>why does the image need to be resized? it&#8217;s funny how people create unexistent problems&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775473">
				<div id="div-comment-775473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymuos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775473">
			October 7, 2009 at 4:10 am</a>		</div>

		<p>What it can do is show a log file or dialog box showing errors that occured during resizing. Image 010.jpg was smaller than the specified size, Image 011 was not a valid image and so on. I&#8217;m sure the sender won&#8217;t be mad for an additional dialog or balloon popup being shown to him but be grateful that the shell notified him of errors that occurred for particular files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775483">
				<div id="div-comment-775483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymuos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775483">
			October 7, 2009 at 4:16 am</a>		</div>

		<p>&quot;I&#8217;ve seen many examples, even in Windows, that handle this case very well. Select 50 files in Explorer, right click and hit &quot;print&quot;, and explorer will respond with &quot;Are you sure you want to do that? It might take a while&quot;.</p>
<p>Btw if you are current with Windows, you&#8217;d realize that only happened till the great Windows XP. Vista and Windows 7 deny any context menu action outright for 15+ files instead of giving choice to the user. Another shell annoyance. Please bring the old behavior back and LET THE USER DECIDE whether he wants to do the operation on dozens of files using the GUI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775493">
				<div id="div-comment-775493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymuos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775493">
			October 7, 2009 at 4:22 am</a>		</div>

		<p>Update: It looks like the feature already shows errors that occurred but not all other issues like the file size was already smaller so it didn&#8217;t resize.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775503">
				<div id="div-comment-775503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymuos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775503">
			October 7, 2009 at 4:32 am</a>		</div>

		<p>One more thing it can do is remember the last setting the user used. If he used &quot;Original/Unmodified&quot; make that the default the next time the user wants to resize so he can just click OK, Continue or Attach right away. Also, why is the resizing eXPerience when doing &quot;Send to Mail Receipient&quot; not the same as the Resize powertoy shell extensions (which contains additional options like setting a custom size, Make pictures smaller but not larger, Resize the originals)??</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775553">
				<div id="div-comment-775553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775553">
			October 7, 2009 at 9:21 am</a>		</div>

		<p>Raymonds&#8217; expounding on how an idea formed within his own mind eventually travels into his blog as an entry reminds me a bit of how a photon formed within the Sun eventually finds its way to Earth.</p>
<p>Truly spectacular.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775803">
				<div id="div-comment-775803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775803">
			October 7, 2009 at 6:21 pm</a>		</div>

		<p>[&#8220;Hitting the disk&#8221; is the #1 cause of Explorer hangs. Strange but true. -Raymond]</p>
<p>1. Not just hitting the disk. Badly written shell extensions hitting the disk.</p>
<p>2. Another source is Explorer doing mysterious housekeeping, thrashing the disk around, at the user&#8217;s login. Or that&#8217;s an antivirus?</p>
<p>The whole topic of trying to fing an excuse for a lousy featurerather than saying plainly it&#8217;s lousy, stinks big time. The picture resizing does really belong to the email client, not to Explorer. The email client fetches the files (&#8220;hits the disk&#8221; in Raymond&#8217;s parlance) anyway. What&#8217;s the point then?</p>
<p>And, of course, there is FILE_FLAG_OPEN_NO_RECALL to prevent fetching those dreaded offline files (which are not supported anymore, anyway, in 2008R2). </p>
<div class=post>[<i>I don&#8217;t believe I claimed that the current interface is good; just that the proposed alternative (checking all the files before displaying the dialog) is worse. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775823">
				<div id="div-comment-775823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775823">
			October 7, 2009 at 6:49 pm</a>		</div>

		<p>&quot;As Igor is fond of saying when insulting the Windows team: &quot;Looks like this feature was designed without any adult supervision.&quot;</p>
<p>Hey, that&#8217;s the saying <em>I</em> &quot;borrowed&quot; from Dr. Joe M. Newcomer. He&#8217;s much grumpier than I.</p>
<p>And this saying is true. Many times it seems the code was checked in without a senior programmer review. Then the junior programmer writes to the MS internal forum or asks Raymond directly &quot;what&#8217;s wrong with it?&quot;. And annnoys the hell out of Raymond, making him write another blog entry about that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775783">
				<div id="div-comment-775783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775783">
			October 7, 2009 at 4:56 pm</a>		</div>

		<p>@Lawrence: I think you didn&#8217;t get the point I was making. Explorer doesn&#8217;t warn users unconditionally that it might take long. It warns them if a certain constant number is exceeded. (unless I&#8217;m really wrong and it&#8217;s actually divining that it might be slow).</p>
<p> The point was that:</p>
<p>a) given that emails are not a good medium to send 50 files over to begin with</p>
<p>b) that a worker thread *can* be made to do this kind of work</p>
<p>I can say that with the protection against a), I can make a reasonably well performing b) and in the process deal with 98% of usage patterns.</p>
<p> In this entire discussion, just keep in mind that webmail is more and more the defacto interface by which people do emailing. And accidentally including a CD worth of files on a webapp is just not a possibility. Yet, people seem to be using things like gmail more and more. So, it would seem that anecdotally, people&#8217;s tape drives starting up unbeknownst to them isn&#8217;t as pervasive an issue as we might be imagining here on this blog.</p>
<p> The only real issue we have to watch out for is the user committing a self inflicted DOS attack by selecting 200 files and instantly warning them that this might not be a good idea. The rest is, imo, completely banal interface design mechanics.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775793">
				<div id="div-comment-775793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775793">
			October 7, 2009 at 5:06 pm</a>		</div>

		<p>PS. I&#8217;m generally keen on hearing people with years of experience in software design and the little things they&#8217;ve figured out over the years. But seriously, &#8220;would hit the disk&#8221; is not acceptable for me. It really isn&#8217;t.</p>
<p>And I really don&#8217;t need to bring out the heavy artillery here. Just look at why OSX is winning over Windows &#8211; again, imo &#8211; it is stuff like spotlight and quicksilver. Instant response UIs are the things that blew XP out of the water. Yet, spotlight isn&#8217;t doing anything crazy. It is something *basic* that, for some reason, Microsoft refused to do for ages.</p>
<p>It&#8217;s a whole can of worms topic, but the gist is: I, as a user, don&#8217;t care if my results aren&#8217;t initially complete or correct, I want *instant* results as a user. Just like I don&#8217;t really mind if by the time I&#8217;ve gone to the 20th page on a google search, the contents of the 15th page have changed slightly.</p>
<p>This antiquated kind of &#8220;would hit the disk&#8221; thinking is really reminiscent of Motown way of building cars.</p>
<p>Disk tapes? Yes, let&#8217;s demand ever more powerful computers to power our ever more resource hungry operating systems while totally unexplainably supporting legacy hardware from the past century and expecting that regular users will scan through terabytes of backed up data that is likely stored in bangladesh. </p>
<p>I&#8217;m kind of bewildered that my tone is likely going to come off as aggressive here.</p>
<div class=post>[<i>&#8220;Hitting the disk&#8221; is the #1 cause of Explorer hangs. Strange but true. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-775833">
				<div id="div-comment-775833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775833">
			October 7, 2009 at 6:50 pm</a>		</div>

		<p>&gt;&gt;The root of the diatribe appears to be that the image resizer dialog appears, even if it turns out the resizer won&#8217;t do anything.&lt;&lt;</p>
<p>No &#8212; the root problem is that there is *no option to disable it* if I don&#8217;t want it to offer me the resizing option at all.</p>
<p>&gt;&gt;Because checking these simple things before showing the dialog is even more idiotic. &lt;&lt;</p>
<p>You could modify a dialog to include a progress bar, an estimate, and a &quot;Skip checking&quot; button.</p>
<p>&gt;&gt;One of the grave errors when doing work with files is accessing the file before the user asks for it.&lt;&lt;</p>
<p>Shows what I know huh? And I thought that right-clicking on a file and selecting &quot;Send To|Mail Recipient&quot; counts as *asking for a file operation*, because, you know, you clicked on a *FILE* in the first place and _asked_ Windows Explorer to *do* something with it.</p>
<p>&gt;&gt;&#8230;accessing the file can take an excruciatingly long time if the file is stored on a server halfway across the world over a slow network connection, or if the file has been archived to tape.&lt;&lt;</p>
<p>You know, there is this paradigm in programming called *timeout*, not to mention that in a &quot;modern operating system&quot; there should be a way to determine whether some file is stored locally or not, and act accordingly.</p>
<p>Btw, your pseudo-code is wrong &#8212; dimensions should be checked first because they are in the image file header.</p>
<p>If the image is small (or the header is corrupted), you don&#8217;t need to verify further nor to offer a resize &#8212; instead just pass it through to the email client.</p>
<p>Moreover, what was considered big before, now it is not because of ever-growing broadband speeds. If you are offering some functionality you need to make it *functional*, like check for the Internet link speed and then decide what may be too big for sending.</p>
<p>Bottom line &#8212; if you cannot bother to do it right, then please don&#8217;t include such half-assed hacks, especially not without making them optional.</p>
<p>Igor</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775923">
				<div id="div-comment-775923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775923">
			October 8, 2009 at 3:50 am</a>		</div>

		<p>Igor, why do you even use Send To | Mail Recipient? &nbsp;That feature isn&#8217;t for you.</p>
<p>I don&#8217;t mean generally, I mean that feature is not for YOU, specifically.</p>
<p>I may not be clear enough: during the design meeting for this, brief as it was, someone said &quot;Igor would want to skip this dialog&quot; and there was actually a long discussion and investigation into it, and it was decided that you weren&#8217;t the target of the feature. Literally tens of millions are, but it was specifically decided that when Igor used this feature and got upset, that was OK.</p>
<p>This is great news, don&#8217;t use it. Use your email client. Done!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-776173">
				<div id="div-comment-776173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.net/' rel='external nofollow' class='url'>Igor Levicki</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776173">
			October 8, 2009 at 1:16 pm</a>		</div>

		<p>&gt;&gt;Igor, why do you even use Send To | Mail Recipient? &nbsp;That feature isn&#8217;t for you.&lt;&lt;</p>
<p>I will ignore your rather unsuccessfull puns and tell you that I use it because it is more accessible. Here is some pseudo-code for you to prove the point:</p>
<p>if (NotOpen(email_client)) {</p>
<p>&nbsp; &nbsp;email_client = OpenEmalClient();</p>
<p>}</p>
<p>if (MinimizedToTray(email_client)) {</p>
<p>&nbsp; &nbsp;RestoreFromTray(email_client);</p>
<p>}</p>
<p>CreateNewMessage();</p>
<p>if (Impaired(user) || ShittyTouchPad(computer)) {</p>
<p>&nbsp; &nbsp;AttachFilesButton(images, email_client);</p>
<p>&nbsp; &nbsp;BrowseForFiles(); // slow</p>
<p>} else {</p>
<p>&nbsp; &nbsp;DragDrop(images, email_client); // requires precision</p>
<p>}</p>
<p>Contrast the above with:</p>
<p>SelectFiles();</p>
<p>RightClick();</p>
<p>@Gabe:</p>
<p>Your point is moot &#8212; the person who is sending the files should know the netiquette and not send large files to other people unless they ask for them or otherwise agree to receive them. It is not your computer&#8217;s responsibility to know the speeds of other people&#8217;s internet connections.</p>
<p>All I am saying is that if it is so impossible to implement this in a better and less obrtusive way, then it shouldn&#8217;t be implemented at all.</p>
<div class=post>[<i>What if you actually want to shrink the pictures? Most email clients don&#8217;t have a &#8220;shrink this attachment&#8221; feature. (BTW, feel free to write your own &#8220;Igor-friendly&#8221; version of this feature. Sorry you don&#8217;t like it. Other people do.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-775963">
				<div id="div-comment-775963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-775963">
			October 8, 2009 at 8:44 am</a>		</div>

		<p>To properly implement Igor&#8217;s feature of checking the Internet link speed before email a file, the computer would need to check the link speed not only of the user sending the file, but also of *all* the recipients.</p>
<p>The fact that MS has failed to implement such a feature that takes so few words to describe means that they must have not done so on purpose.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-776433">
				<div id="div-comment-776433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lawrence</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776433">
			October 9, 2009 at 1:52 am</a>		</div>

		<p>Igor: &quot;No &#8212; the root problem is that there is *no option to disable it* if I don&#8217;t want it to offer me the resizing option at all.&quot;</p>
<p>Umm, the very first option for the search term &quot;disable image resize dialog on Send To&quot; in Bing will give you instructions (like most things, just a registry key). I&#8217;m sure this took me less than a tenth of the time it took you to write your psuedo code on why it&#8217;s so bad. &quot;Don&#8217;t be helpless&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-776653">
				<div id="div-comment-776653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://me.me' rel='external nofollow' class='url'>Me</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776653">
			October 9, 2009 at 4:33 pm</a>		</div>

		<p>&gt;&gt;What if you actually want to shrink the pictures?&lt;&lt;</p>
<p>I&#8217;ll do it by using the &#8220;Resize&#8221; option in any of the gazillion free image viewers available on the Internet and get a better picture quality and finer control over the file size.</p>
<div class=post>[<i>News flash: Most people are not control freaks who say, &#8220;You know, for this message, I want to use JPG compression quality 62.&#8221; Hey, how about this: If you don&#8217;t want to shrink the pictures, then open a new email message, and then drag/drop your pictures into it.</i>]</div>
<p>&gt;&gt;(BTW, feel free to write your own &#8220;Igor-friendly&#8221; version of this feature.&gt;&gt;</p>
<p>Now you sound like a true open-source evangelist &#8212; you offer me to fix the problem myself.</p>
<div class=post>[<i>Oh, the &#8220;you can fix it yourself&#8221; excuse doesn&#8217;t work any more? Then why do people keep using it? -Raymond</i>]</div>
<p>Sure, right after I finish writing my own &#8220;Igor-friendly&#8221; version of Windows operating system. :)</p>
<p>&gt;&gt;Sorry you don&#8217;t like it. Other people do.&lt;&lt;</p>
<p>Do you have any statistics that go with this claim?</p>
<p>@Lawrence:</p>
<p>Why yes, changing MIME datatypes to blank values in the registry thus affecting the whole system is really *much* better than patching the DLL to disable the check which is what I did looong time (like 3 years?) ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-776693">
				<div id="div-comment-776693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lawrence</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776693">
			October 9, 2009 at 11:56 pm</a>		</div>

		<p>@Me: My point was that Igor was claiming there was no way to circumvent this dialog. You and I have already identified two ways, although admittedly neither are perfect, but the fact is that Send To is not the only way to send email with an image attachment [not even the most common!], there are dozens of others) so I just don&#8217;t see the big deal.</p>
<p>And you don&#8217;t have to write your own solution. As you say you&#8217;re already using &quot;one of the gazillion free image viewers available&quot;, most of them have replacement &quot;Send&quot; functionality in their menus anyway. Just use that!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-776743">
				<div id="div-comment-776743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.net/' rel='external nofollow' class='url'>Igor Levicki</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776743">
			October 10, 2009 at 11:17 am</a>		</div>

		<p>&gt;&gt;News flash: Most people are not control freaks who say, &#8220;You know, for this message, I want to use JPG compression quality 62.&#8221;&lt;&lt;</p>
<p>News-flash: We were talking about *RESIZING* as in *RESAMPLING*, not changing compression ratio.</p>
<p>Compression ratio applies only to JPEG images, other image types (GIF, BMP, PNG) can be resized only by _resampling_ or by recoding to JPEG.</p>
<p>Btw, even MSPaint has resize option (it is in Image menu, and it is called Stretch), you don&#8217;t even need 3rd party programs.</p>
<p>&gt;&gt;Hey, how about this: If you don&#8217;t want to shrink the pictures, then open a new email message, and then drag/drop your pictures into it.&lt;&lt;</p>
<p>As I said, drag/drop is an accessibility nightmare when you are working with touchpad, not to mention if you have only keyboard at your disposal.</p>
<p>Furthermore, current functionality is discriminating &#8212; those who want it get the most convenient way to insert attachments, and those who don&#8217;t need resizing have to do everything manually as you suggested.</p>
<p>I am horrified by sheer idiocy of the algorithm used which can be described as follows:</p>
<p>if (FileIsImage()) { // regardless of content</p>
<p>&nbsp; &nbsp;TryToReduceSize(); // even if it is small</p>
<p>} else {</p>
<p>&nbsp; &nbsp;IDontCare(); // if it is 10GB ZIP</p>
<p>}</p>
<p>What about other file types? Why not repacking ZIP into RAR or 7Z? They offer better compression than ZIP. And StuffIt can pack JPEG files by additional 30% losslessly.</p>
<p>&gt;&gt;My point was that Igor was claiming there was no way to circumvent this dialog&lt;&lt;</p>
<p>There is no legitimate way (as in GUI option or group policy), nor a safe way (changing MIME types and patching OS files doesn&#8217;t count as safe) so in effect there is no way to circumvent resizing other than not using the Send To which is otherwise really convenient feature especially when accessibility is concerned.</p>
<p>&gt;&gt;most of them have replacement &#8220;Send&#8221; functionality in their menus anyway. Just use that!&lt;&lt;</p>
<p>That means one more program to start in addition to Windows Explorer or Total Commander.</p>
<p>That also means special-casing:</p>
<p>if (SendingImages()) {</p>
<p>&nbsp; &nbsp;StartImageViewer();</p>
<p>&nbsp; &nbsp;NavigateToFiles();</p>
<p>&nbsp; &nbsp;SelectThemAndSendUsingViewer();</p>
<p>} else {</p>
<p>&nbsp; &nbsp;UseSendTo();</p>
<p>}</p>
<p>I am telling you &#8212; you simply cannot find a good excuse for a poor design. Resistance is futile.</p>
<div class=post>[<i>You&#8217;re the one who said &#8220;get a better picture quality and finer control over the file size.&#8221; To me this says &#8220;control freak.&#8221; (I do keyboard-only drag/drop a lot. Ctrl+C, then switch to the email message and Ctrl+V.) It occurred to me that I got suckered into this discussion. The issue I was addressing was &#8220;Why does it ask if you want to resize the images before checking their sizes (items #3 and #4)?&#8221; In the comments to this posting, on the other hand, you appear to be questioning the value of the feature at all. That&#8217;s not the issue that I&#8217;m addressing in this article. Maybe I&#8217;ll get around to that topic in a few years. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-776813">
				<div id="div-comment-776813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.net/' rel='external nofollow' class='url'>Igor Levicki</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776813">
			October 10, 2009 at 6:38 pm</a>		</div>

		<p>&gt;&gt;You&#8217;re the one who said &#8220;get a better picture quality and finer control over the file size.&#8221;&lt;&lt;</p>
<p>I was just pointing out that the feature is redundant.</p>
<p>&gt;&gt;&#8230;you appear to be questioning the value of the feature at all.&lt;&lt;</p>
<p>I do because random people are saying that the feature has value even in such a broken shape &#8212; I have the right to disagree with them, no?</p>
<div class=post>[<i>The issue was not whether this is a worthwhile feature. The issue is why the feature behaves the way it does (i.e., whether the feature is worthwhile is, for the purpose of the discussion, a foregone conclusion). Whether the feature has value is not the topic for the article.</i>]</div>
<p>The only value I see is the ability to quickly attach files unless they are images. If there was an option not to discriminate images, or if the resize feature has been done right, then it would be an all-around usefull feature even for me. This way it sucks.</p>
<p>&gt;&gt;Ctrl+C, then switch to the email message and Ctrl+V.&lt;&lt;</p>
<p>That also requires opening email client and creating a new message beforehand.</p>
<div class=post>[<i>So? You said it couldn&#8217;t be done &#8211; I showed you that it can. It may be more cumbersome (keyboard interfaces usually are for operations involving direct manipulation), but it&#8217;s still doable.</i>]</div>
<p>As for the source code, I was under impression that DragQueryFile() is for drag/drop operations, not for shell context menu extensions like sendmail.dll for which the source code was asked.</p>
<div class=post>[<i>DragQueryFile is is for accessing HDROPs. You can get HDROPs from many places, not just from the WM_DROPFILES message. Sounds like you need to become more familiar with Win32 programming. I&#8217;m not going to bother looking it up, but I get the impression this is not the first time one of your complaints is based on a false assumption. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-776753">
				<div id="div-comment-776753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://me.me' rel='external nofollow' class='url'>Me</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776753">
			October 10, 2009 at 12:06 pm</a>		</div>

		<p>&gt;&gt;Oh, the &#8220;you can fix it yourself&#8221; excuse doesn&#8217;t work any more?&lt;&lt;</p>
<p>No, it doesn&#8217;t work if we are paying for the product &#8212; it is your¹ job to fix it, not ours.</p>
<p>Btw, feel free to give me the source code for sendmail.dll so I don&#8217;t have to rewrite it from scratch and I will fix it for you free of charge.</p>
<p>¹- not literally.</p>
<div class=post>[<i>If you don&#8217;t want to do any manipulation of the contents, then it&#8217;s trivial. DragQueryFile to get the number of files, create a MapiMessage with nFileCount=the number of files, then in a loop, call DragQueryFile to get the file name and put it in the MapFileDesc. Then call MapiSendMail. Here I wrote it for you: </p>
<pre>MapiMessage message = { 0 };
message.nFileCount = DragQueryFileA(hdrop, 0xFFFFFFFF, NULL, 0);
message.lpFiles = calloc(message.nFileCount, sizeof(MapiFileDesc));
char *files = malloc(message.nFileCount * MAX_PATH);;
for (i = 0; i &lt; message.nFileCount, i++) {
  DragQueryFileA(hdrop, i, message.lpFiles[i].lpszPathName = files + i * MAX_PATH, MAX_PATH);
}
MapiSendMail(0, hwnd, &amp;message, MAPI_DIALOG | MAPI_LOGON_UI, 0);
free(message.lpFiles);
free(path);
</pre>
<p>Fill in some error checking, clean up the readability, and you&#8217;re set. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-776833">
				<div id="div-comment-776833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.net/' rel='external nofollow' class='url'>Igor Levicki</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776833">
			October 11, 2009 at 2:50 pm</a>		</div>

		<p>&gt;&gt;The issue is why the feature behaves the way it does&lt;&lt;</p>
<p>So in essence, I was asking why the &#8220;feature&#8221; is SO BADLY BROKEN while proving it with disassembly and analysis, and you are telling us 3 years later that it is &#8220;by design&#8221;?</p>
<p>Truth to be told, I wasn&#8217;t expecting you to sink this low.</p>
<p>Instead of looking for a better solution or at least admitting that the current solution sucks, you are actively defending it as if it is the only right thing to do.</p>
<p>As for the HDROP, last shell extension I wrote which was using it was written in January 2004 so you will excuse me if after 5.5+ years I do not remember the details, after all it is your area of expertise, not mine.</p>
<p>I bet you don&#8217;t know x86 instructions as well as I do, but I still don&#8217;t go around rubbing your nose with that fact.</p>
<p>Can you please discuss this without being condescending, without giving irrational examples (such as users sending 1,000 files by email), and without ad hominem attacks?</p>
<div class=post>[<i>As I&#8217;ve explained probably three times by now, the issue under discussion in the article is not whether the feature is a good feature or not. The issue is how the feature should be implemented, ignoring whether it&#8217;s a good feature or not. You do realize that Windows has to work even when people do irrational things. I have the hang reports to support this point. (Or maybe you&#8217;re saying it&#8217;s okay to hang when people do irrational things? Man, that would make my job a lot easier.) But fine, here&#8217;s a non-irrational example: You visit a network share. While deciding which picture to send, somebody unplugs the server. You select ONE picture to send via email. Boom, hang. (By the way, you&#8217;re the one who started with the ad hominem attacks months ago; I ended up having to add a new Ground Rule just for you.) -Raymond (P.S. I miss the days when I could assume my readers knew what an HDROP was and where to get one.)</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-776923">
				<div id="div-comment-776923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091005-00/?p=16493#comment-776923">
			October 12, 2009 at 8:59 am</a>		</div>

		<p>&quot;You visit a network share. While deciding which picture to send, somebody unplugs the server. You select ONE picture to send via email. Boom, hang.&quot;</p>
<p>There are, like, thousand places in Explorer where it has to read a file attributes and header. It&#8217;s a routine operation for a file management GUI. The &quot;hang&quot; can happen in all those scenarios. Consider it a cost of doing business with network files. Trying to optimize it out of a single particular rare scenario is a case of preliminary optimization, which, as you know, is a root of all evils.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

