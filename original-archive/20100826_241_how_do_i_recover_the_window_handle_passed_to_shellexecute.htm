<html>
<head>
<title>How do I recover the window handle passed to ShellExecute?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I recover the window handle passed to ShellExecute?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 26, 2010 / year-entry #242</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer had the following question: I'm using the ShellExecute function to launch a new process and am passing the handle to my application's main window as the hwnd parameter. From the new process, I want to get information from the old process, and to do that, I need the window handle. How can I...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer had the following question:</p>
<blockquote class="q"><p> I'm using the <code>ShellExecute</code> function to launch a new process and am passing the handle to my application's main window as the <code>hwnd</code> parameter. From the new process, I want to get information from the old process, and to do that, I need the window handle. How can I recover that window handle from the new process? </p>
</blockquote>
<p> You can't. </p>
<p> That window handle is used by the <code>ShellExecute</code> function only to host any user interface operations that occur as a result of the attempt to execute the program. For example, it is the owner window used for any error dialogs. The <code>ShellExecute</code> function does not pass the window handle to the launched process. (It couldn't even if it wanted to: There is nowhere to pass it. There is no window handle among the parameters to <code>CreateProcess</code> nor is there a window handle in the <code>STARTUPINFO</code> structure.) </p>
<p> If you want to pass this information to the process being launched, you'll have to come up with your own mechanism for transferring this information. For example, you can pass it <a href="http://blogs.msdn.com/oldnewthing/archive/2003/12/10/56028.aspx"> on the command line</a>, or if you have a lot of information to pass, you can <a href="http://blogs.msdn.com/oldnewthing/archive/2003/12/11/56043.aspx"> use a shared memory block</a>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-857283">
				<div id="div-comment-857283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Mol</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857283">
			August 26, 2010 at 7:40 am</a>		</div>

		<p>Command line, shared memory, named pipe&#8230;there are a lot of IPC mechanisms available.</p>
<p>For kicks, I once pondered setting up 9 named events to simulate an 8-bit parallel line plus clock. The bits would be non-auto-reset, and the clock line would be auto-reset. I never did do it, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-857293">
				<div id="div-comment-857293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darkstar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857293">
			August 26, 2010 at 7:41 am</a>		</div>

		<p>This should be known to anyone who ever tried to program his own screensaver. The Win95-like preview in the small &quot;monitor&quot; icon uses the same mechanism (it passes something like &quot;/h:&lt;handle&gt;&quot; to the .scr file)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-857303">
				<div id="div-comment-857303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857303">
			August 26, 2010 at 9:19 am</a>		</div>

		<p>I think that passing pid might be better than handle of the parent process, because if the child process does not inherit the handles of its parent, the passed handle would be invaild. You can get a handle of a process by pid at any time. Is that right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-857313">
				<div id="div-comment-857313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857313">
			August 26, 2010 at 9:57 am</a>		</div>

		<p>@Archer:</p>
<p>Window handles are desktop-global. They are not &quot;inherited&quot; like kernel object handles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-857323">
				<div id="div-comment-857323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857323">
			August 26, 2010 at 12:18 pm</a>		</div>

		<p>@Archer</p>
<p>One problem with using process IDs is: What happens if the parent process dies? &nbsp;Either intentionally or due to a crash. &nbsp;Suddenly then, depending on timing, you could potentially have a process ID that refers to a completely unrelated process, since these IDs can generally be reclaimed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000300008195987d odd alt thread-odd thread-alt depth-1" id="comment-857333">
				<div id="div-comment-857333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Spire' rel='external nofollow' class='url'>Spire</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857333">
			August 26, 2010 at 1:27 pm</a>		</div>

		<p>Another problem with using process IDs for this purpose is that processes can have more than one window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-857353">
				<div id="div-comment-857353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard Russell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857353">
			August 26, 2010 at 3:05 pm</a>		</div>

		<p>There&#39;s a useful list of IPC mechanisms at <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/aa365574.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/aa365574.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-857383">
				<div id="div-comment-857383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857383">
			August 26, 2010 at 4:43 pm</a>		</div>

		<p>@Alexandre Grigoriev:</p>
<p>Oh, I omitted that it is Windows Handle, not Process Handle. Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-857393">
				<div id="div-comment-857393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857393">
			August 26, 2010 at 5:05 pm</a>		</div>

		<p>just implement and register a singleton COM object in the EXE you&#39;ve launched. &nbsp;after you launched it, Call CoCreateInstance and then you can pass whatever information you want via whatever interface you want. &nbsp;that is why COM was created!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-857413">
				<div id="div-comment-857413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100826-00/?p=13033#comment-857413">
			August 27, 2010 at 4:25 am</a>		</div>

		<p>@Anonymous</p>
<p>Windows handles are also reused.</p>
<p>Suddenly then, depending on timing, you could potentially have a windws handle that refers to a completely different window, since these HWNDs can generally be reclaimed.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

