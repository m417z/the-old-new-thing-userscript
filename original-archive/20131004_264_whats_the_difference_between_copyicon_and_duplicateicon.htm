<html>
<head>
<title>What's the difference between CopyIcon and DuplicateIcon?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What&#8217;s the difference between CopyIcon and DuplicateIcon?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 4, 2013 / year-entry #265</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There are two functions that can be used to create one icon that is identical to another. One of them is Copy­Icon. The other is Duplicate­Icon. What's the difference? There isn't any difference. Both functions clone an icon. In fact, their implementations are basically line-for-line identical. Originally, there was just one function to clone an...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>There are two functions that can be used to create one icon that is identical to another. One of them is <code>Copy&shy;Icon</code>. The other is <code>Duplicate&shy;Icon</code>. What's the difference?</p>
<p> There isn't any difference. Both functions clone an icon. In fact, their implementations are basically line-for-line identical. </p>
<p> Originally, there was just one function to clone an icon: <code>Copy&shy;Icon</code>. </p>
<p> Windows&nbsp;3.0 introduced Program Manager, and the developers of Program Manager wrote their own function called <code>Duplicate&shy;Icon</code>. Why? I have no idea. My guess is that they didn't realize that such a function already existed, so they inadvertently reinvented the wheel. </p>
<p> Windows NT&nbsp;3.1 came along, and the team that ported Program Manager to 32-bit Windows also ported the <code>Duplicate&shy;Icon</code> function, and they figured, "This function is so useful, we'll export it for anybody to use!" </p>
<p> Meanwhile, the original <code>Copy&shy;Icon</code> function is sitting there saying, "What am I, chopped liver?" </p>
<p> Anyway, it's a sad story, but that's how we ended up with two functions that do exactly the same thing. Personally, I would recommend using the <code>Copy&shy;Icon</code> function. It's in <code>user32.dll</code>, which you are almost certainly already linked to if you're doing anything with icons in the first place, so the incremental cost is much lower. </p>
<p> <b>Update</b>: Joshua points out that the two functions are not identical. <code>Duplicate&shy;Icon</code> takes an extra instance handle parameter. Now it makes sense. The shell version is an enhancement to the user version in that it can also transfer icon ownership to another module. (Hence the new first parameter.) This was important in 16-bit Windows because <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/10/02/10453564.aspx"> icons were resources which were associated with modules</a>. If you wanted to use an icon after the module was unloaded, you needed to copy it and transfer ownership. But this ownership transfer step is not needed in Win32 because, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/10/03/10453905.aspx"> as we saw yesterday</a>, icons are no longer tied to the underlying resources. So the functions started out different but now they're the same. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1081023">
				<div id="div-comment-1081023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081023">
			October 4, 2013 at 7:09 am</a>		</div>

		<p>If they&#39;re identical, shouldn&#39;t one function simply be an export redirect to the other? After all, Shell32.DLL already references User32.DLL&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1081033">
				<div id="div-comment-1081033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081033">
			October 4, 2013 at 7:19 am</a>		</div>

		<p>Developer: &quot;I tried creating a function named CopyIcon&quot;, but the compiler is telling me there is a name collision in user32.dll.&quot;</p>
<p>Manager: &quot;Just name it &#39;DuplicateIcon&#39; instead.&quot;</p>
<p>Developer: &quot;OK. Thanks, boss.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1081043">
				<div id="div-comment-1081043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081043">
			October 4, 2013 at 7:19 am</a>		</div>

		<p>It can&#39;t be a redirect because DuplicateIcon takes an extra first argument. I checked the Wine sources. The code is identical. hInstance is listed as not used in the MSDN docs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes odd alt thread-odd thread-alt depth-1" id="comment-1081053">
				<div id="div-comment-1081053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081053">
			October 4, 2013 at 8:12 am</a>		</div>

		<p>This is hardly the first time someone has reinvented the wheel because they didn&#39;t know something already existed. It&#39;s a whole lot better to do it out of ignorance instead of due to not-invented-here syndrome.</p>
<p>It would be interesting if both functions had the same results, but achieved them via very different approaches.</p>
<p>Now that the damage is done, I&#39;d probably re-implement DuplicateIcon() by calling CreateIcon() and deprecate DuplicateIcon() while maintaining for compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1081063">
				<div id="div-comment-1081063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081063">
			October 4, 2013 at 10:12 am</a>		</div>

		<p>&quot;My guess is that they didn&#39;t realize that such a function already existed, so they inadvertently reinvented the wheel.&quot;</p>
<p>Or, perhaps they thought they would need some additional functionality that CreateIcon() didn&#39;t provide, but by the end didn&#39;t need it, and then it was too late in the schedule to go back and change all the source code and re-test.</p>
<div class="post">[<em>Actually, now it makes sense. The shell version takes an extra instance handle parameter because it copied the icon and transferred ownership to another module. This became meaningless in Win32 because icons are no longer owned by modules. So aha, it made sense at one point, but now it&#39;s pointless. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hardon odd alt thread-odd thread-alt depth-1" id="comment-1081113">
				<div id="div-comment-1081113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/gdalsnes' rel='external nofollow' class='url'>gdalsnes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081113">
			October 6, 2013 at 4:25 pm</a>		</div>

		<p>It&#39;s a bad design that shell32 export any functionality at all, because ideally, the shell should replaceable without any apps knowing. I guess it&#39;s because of a war between user and shell team, where user team refused to add functionality required by shell team, and as revenge, shell team implemented and exported those functions. Too bad I wasn&#39;t there to prevent it.</p>
<div class="post">[<em>What if shell32 were called &quot;explorerhelper.dll&quot;? Would that clear up the confusion? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1081123">
				<div id="div-comment-1081123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jolyon.smith_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jolyon.smith@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081123">
			October 6, 2013 at 5:08 pm</a>		</div>

		<p>&quot;Re-invented the wheel&quot; is one of if not _the_ most over and inappropriately used idiom imho. &nbsp;As much as &quot;Not Invented Here&quot; is an excuse for doing [potentially] unnecessary work, &quot;Not re-inventing the wheel&quot; is all too often simply an excuse for not doing proper design.</p>
<p>Nobody *ever* re-invents a wheel (although they may end up duplicating an existing design of one).</p>
<p>What we do do &#8211; all the time &#8211; is design a wheel best suited to the particular wheel-demanding job at hand. &nbsp;You can&#39;t even simply take a wheel from a family sedan and just bolt it to an F1 car even though both are just &quot;wheels on a car&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1081143">
				<div id="div-comment-1081143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081143">
			October 7, 2013 at 1:40 am</a>		</div>

		<p>No, but if you&#39;re trapped in a post-apocalyptic wasteland, struggling to put together a crude cart from scraps of wreckage, you&#39;re not going to care if one of your wheels comes from a sedan and another from an F1 car, as long as they&#39;re roughly similar in size.</p>
<p>That may be a bit of a stretch as an analogy, but here&#39;s one that&#39;s closer. You know you have to have a wheel of a certain minimum size and strength. You could build your own out of available materials, or you could buy one. There are a bunch of wheel salesmen around, most of whom advertise highly adaptable wheels that can magically grow or shrink to fit anything from a child&#39;s tricycle to an 18-wheel truck and can each support the weight of an entire building. You&#39;re a bit dubious about some of these claims, especially when all the salesmen gloss over the actual process of getting the wheel to be the way you want it, but you know it&#39;ll probably take you quite a while to build one yourself. Now what&#39;s your best course of action? What do you do if your manager gets all excited about the chrome finish advertised by one supplier and wants you to use their product, even if on closer reading the wheel they&#39;re selling doesn&#39;t look like it&#39;ll fit on your car very well?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1081303">
				<div id="div-comment-1081303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131004-00/?p=3033#comment-1081303">
			October 7, 2013 at 4:48 pm</a>		</div>

		<p>&gt; What if shell32 were called &quot;explorerhelper.dll&quot;? Would that clear up the confusion</p>
<p>Wouldn&#39;t it have to have been called something like &quot;exphel32.dll&quot; for 8.3 compatibility and naming consistency?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

