<html>
<head>
<title>How come the technique for launching an unelevated process from an elevated process doesn't work?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How come the technique for launching an unelevated process from an elevated process doesn&#8217;t work?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 18, 2015 / year-entry #126</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>40</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer was following the Execute in Explorer sample to launch an unelevated process from an elevated process. (A sample which I rehashed some time ago.) The customer reported that the resulting process was still elevated. Upon closer inspection, the customer had disabled User Account Control (UAC). If UAC is disabled, then the ability for...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer was following the <a href="http://msdn.microsoft.com/library/dd940355"> Execute in Explorer</a> sample to launch an unelevated process from an elevated process. (A sample which <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/11/18/10468726.aspx"> I rehashed some time ago</a>.) The customer reported that the resulting process was still elevated.</p>
<p> Upon closer inspection, the customer had disabled User Account Control (UAC). </p>
<p> If UAC is disabled, then the ability for an administrative user to launch an unelevated process no longer exists. </p>
<p> Since people like tables, here are some tables. </p>
<p> In the classical world without UAC, administrators are administrators, and standard users are standard users. In other words, processes run by administrators are always elevated, and processes run by standard users are always non-elevated. </p>
<table border="1" bordercolor="black" cellpadding="3" style="border-collapse: collapse">
<tr>
<th colspan="3">UAC disabled</th>
</tr>
<tr>
<th rowspan="2">User type</th>
<th colspan="2">Process type</th>
</tr>
<tr>
<td align="center">Elevated     </td>
<td align="center">Non-elevated </td>
</tr>
<tr>
<td>Administrator</td>
<td align="center">&#9679;</td>
<td align="center"></td>
</tr>
<tr>
<td>Standard</td>
<td align="center"></td>
<td align="center">&#9679;</td>
</tr>
</table>
<p> UAC added a new option to the table: The administrator who voluntarily relinquishes administrative privilege and runs a process non-elevated. </p>
<table border="1" bordercolor="black" cellpadding="3" style="border-collapse: collapse">
<tr>
<th colspan="3">UAC enabled</th>
</tr>
<tr>
<th rowspan="2">User type</th>
<th colspan="2">Process type</th>
</tr>
<tr>
<td align="center">Elevated     </td>
<td align="center">Non-elevated </td>
</tr>
<tr>
<td>Administrator</td>
<td align="center">&#9679;</td>
<td align="center">&#9733;</td>
</tr>
<tr>
<td>Standard</td>
<td align="center"></td>
<td align="center">&#9679;</td>
</tr>
</table>
<p> In words: In the classic non-UAC world, an administrative user can run processes elevated, and a standard user can run processes un-elevated. If UAC is enabled, then a new combination becomes available: An administrative user can run a process non-elevated. </p>
<p> If you disable UAC, then you are back in the classic world, where there is no such thing as an administrative user running a non-elevated process. It's therefore no surprise that when you try to run the process unelevated, it still runs elevated. </p>
<p> You can look at this issue another way: If UAC is disabled, then Explorer runs elevated. And therefore, if you ask Explorer to run a process, that process runs elevated too. </p>
<p> It turns out that the customer turned off UAC because they didn't want to see any UAC prompts; they wanted their program to elevate silently, yet launch child processes unelevated. From a security-theoretical point of view, this is not an interesting configuration: If you allow silent elevation, then those child processes can just silently elevate themselves, and your attempt to run them unelevated accomplished nothing. </p>
<p> If you disable UAC, then the only way to get both elevated processes and unelevated processes is to run the elevated processes as one user (an administrator) and the unelevated processes as another user (a standard user). </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (40)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241276">
				<div id="div-comment-1241276" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241276">
			June 18, 2015 at 7:06 am</a>		</div>

		<p>Called it from just seeing the title.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241266">
				<div id="div-comment-1241266" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241266">
			June 18, 2015 at 7:08 am</a>		</div>

		<p>At the risk of starting another fight, silent elevation is what you get if you try to turn off UAC in W8. Really turning it off is possible but non-ovbious. For the one box I had to run that way I had to call MS for activation as the normal routine didn&#39;t work.</p>
<p>I suppose one could force non-elevated from elevated by making the reduced token (change Administrators group to deny only &#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241256">
				<div id="div-comment-1241256" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241256">
			June 18, 2015 at 7:29 am</a>		</div>

		<p>So, to translate this into Unix terms, if you turn off sudo, the real and saved uid/gid tokens vanish, leaving only the effective uid.</p>
<p>Wait, that doesn&#39;t make sense. &nbsp;I guess this one just doesn&#39;t translate, since Unix and Windows have entirely different security models.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241246">
				<div id="div-comment-1241246" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241246">
			June 18, 2015 at 7:31 am</a>		</div>

		<p>This was a very interesting and helpful article, Raymond. Your explanation, especially with the tables, was very clear and interesting. Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241236">
				<div id="div-comment-1241236" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241236">
			June 18, 2015 at 7:38 am</a>		</div>

		<p>And if you eliminated the ability to disable UAC entirely, this problem would vanish.</p>
<p>It would be replaced by other problems, all of which could be solved by saying &quot;Company X just makes insecure crap, you should try another company.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1221751">
				<div id="div-comment-1221751" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio &amp;#39;Grijan&amp;#39;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1221751">
			June 18, 2015 at 7:51 am</a>		</div>

		<p>@Anon: the problem is not with *unsecure* programs. No. the real problem are *legacy* programs designed for previous versions of Windows with no security (95/98/Me) or that everybody outside corporate environments ran always as administrator (NT/2000/XP). UAC does its best to allow those legacy programs to work, but it&#39;s at least reasonable not having to dismiss an elevation dialog on a tool you launch fifty times a day. I&#39;m not saying it&#39;s a good idea &#8211; I&#39;m saying that, in those cases, the users may have a point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari even thread-even depth-1" id="comment-1241226">
				<div id="div-comment-1241226" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241226">
			June 18, 2015 at 7:51 am</a>		</div>

		<p>Anon: Unfortunately &quot;Company X makes $(whatever-type) crap&quot; rarely goes down well with customers. &nbsp;Especially if you&#39;re Microsoft; then they just see it as Microsoft being crap and blaming someone else. &nbsp;The fact that you&#39;re shifting the blame to where it belongs doesn&#39;t matter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241216">
				<div id="div-comment-1241216" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241216">
			June 18, 2015 at 8:21 am</a>		</div>

		<p>What I&#39;m still not clear about: Is UAC a &quot;security feature&quot; now or not?</p>
<p>Obviously, from a security standpoint I shouldn&#39;t run as an administrator/root. Under Unix, you just run as a standard user and su(do) on an as-needed basis. In older windows versions, almost everybody ran as administrator, even though it&#39;s inadvisable, because too many programs misbehaved. But they really should have run as a standard user.</p>
<p>But what&#39;s the situation now? Should I run as a standard user, now that UAC forced programs to behave better, or is it ok to run as a non-elevated administrator and rely on UAC to separate privileges. I&#39;m asking this because there seems to be different opinions if bugs that allow administrators to elevate without interaction count as &quot;local privilege escalation&quot; or as non-security bugs, because &quot;UAC is not a security feature&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241206">
				<div id="div-comment-1241206" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241206">
			June 18, 2015 at 8:29 am</a>		</div>

		<p>&quot;If UAC is disabled, then the ability for an administrative user to launch an unelevated process no longer exists.&quot;</p>
<p>Of course this ability exists: RUNAS.EXE /TrustLevel:&quot;standard user&quot; &lt;command line&gt;</p>
<p>resp. its equivalent using</p>
<p>SaferCreateLevel(SAFER_SCOPEID_USER, SAFER_LEVELID_NORMALUSER, 0L, &amp;saferlevel, NULL)</p>
<p>SaferComputeTokenFromLevel(saferlevel, NULL, &amp;token, 0L, NULL) and finally</p>
<p>CreateProcessAsUser(token, &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241186">
				<div id="div-comment-1241186" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241186">
			June 18, 2015 at 9:12 am</a>		</div>

		<p>Was this reported as &quot;I found a security vulnerability!&quot;? :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241176">
				<div id="div-comment-1241176" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241176">
			June 18, 2015 at 9:36 am</a>		</div>

		<p>@AC: The whole class of bugs that was reported as the cryptbase.dll hole will never be fixed. Ergo, no real security benefit for UAC unless set to the highest level (that almost noone can tolerate). Which is why I say screw it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1241166">
				<div id="div-comment-1241166" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nacimota</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241166">
			June 18, 2015 at 10:01 am</a>		</div>

		<p>It seems really silly to me that people justify turning off UAC by saying elevation prompts inconvenience them, but are apparently willing to suffer countless other inconveniences as a direct result of making that change. Modern apps no longer working is probably the one I hear about the most.</p>
<p>It boggles my mind that people (power users especially) are still so resistant to UAC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd even thread-even depth-1" id="comment-1241156">
				<div id="div-comment-1241156" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241156">
			June 18, 2015 at 10:09 am</a>		</div>

		<p>@Joshua You disabled UAC completely, rather than setting it to &quot;Always Prompt&quot;, because the default setting is not &quot;Always Prompt&quot;? Why not set it to the secure &quot;Always Prompt&quot;, since you were already there?</p>
<p>Postscript: You can find source code, and a sample application, that demonstrates how to silently elevate to an administrator [here](<a rel="nofollow" target="_new" href="http://www.pretentiousname.com/misc/win7_uac_whitelist2.html">http://www.pretentiousname.com/&#8230;/win7_uac_whitelist2.html</a>). It only works when you are an administrator running as a standard user, and you&#39;re running UAC at the default setting, on Windows 7 or later. </p>
<p>Windows Vista was not susceptible to the issue, as it did not have a white-list. You can close the vulnerability by setting UAC to the highest setting (&quot;Always Prompt&quot;). This will return you to the default Windows Vista-style behavior. [Mark Russinovich also talked about the Windows 7 UAC vulnerability](<a rel="nofollow" target="_new" href="https://technet.microsoft.com/en-us/magazine/2009.07.uac.aspx">technet.microsoft.com/&#8230;/2009.07.uac.aspx</a>) in a Technet article.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241146">
				<div id="div-comment-1241146" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241146">
			June 18, 2015 at 10:33 am</a>		</div>

		<p>@IanBoyd: It&#39;s not about me. It never was. It&#39;s about grandma. She hasn&#39;t got a clue. I will care when a solution that isn&#39;t trivially bypassed is tolerable to most users.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241136">
				<div id="div-comment-1241136" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241136">
			June 18, 2015 at 10:43 am</a>		</div>

		<p>&#8230;and once again a UAC blog post leads to flame wars in the comments.</p>
<p>Getting tired of it yet, Raymond?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1241126">
				<div id="div-comment-1241126" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darran Rowe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241126">
			June 18, 2015 at 11:50 am</a>		</div>

		<p>@Joshua:</p>
<p>The problem I actually feel is here isn&#39;t about grandma or anything, but you seem to be against UAC.</p>
<p>The thing to remember about the UAC settings is that those ways to get around UAC when it isn&#39;t set to maximum should actually be a non-issue, this is because that setting was introduced with a huge * next to it. The UAC settings page quite clearly says &quot;Recommended if you use familiar applications and visit familiar websites.&quot;</p>
<p>The intended use case for this is the &quot;regular user&quot; like your grandma. The user who is only interested in checking emails and watching funny cat videos. In fact, for that kind of regular user, I would even go as far as not even giving the user account any kind of administrative rights at all, just create it as a limited user and all of these issues go away. For the people that I have installed Windows for and set up like this, I have yet to hear any kind of complaint.</p>
<p>If there is a need to regularly run an application which prompts, there is a better way. It involves using a service to do the elevation. In general though, disabling UAC is not needed IMO.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241106">
				<div id="div-comment-1241106" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241106">
			June 18, 2015 at 12:32 pm</a>		</div>

		<p>I don&#39;t know, I&#39;ve habitually run with UAC maxed, and it hasn&#39;t given me hives or cancer or whatever it is that makes people insist they have to turn it off. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241096">
				<div id="div-comment-1241096" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241096">
			June 18, 2015 at 12:40 pm</a>		</div>

		<p>@Kevin: &nbsp;I&#39;d hardly call these comments a flame war. &nbsp;&quot;Mildly heated discussion on a cool afternoon&quot; would be more accurate.</p>
<p>UAC represents, for better or worse, a pretty fundamental shift in Windows&#39; security paradigm. &nbsp;It&#39;s also highly visible and was implemented as a series of technical and security tradeoffs. &nbsp;All that adds up to a topic bound to drive discussion.</p>
<p>Thanks for the post, Raymond. &nbsp;However, I actually don&#39;t like tables &#8212; can you please represent these thing using formal set notation instead? &nbsp;Thanks! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1221741">
				<div id="div-comment-1221741" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1221741">
			June 18, 2015 at 1:20 pm</a>		</div>

		<p>The UAC whitelist hole is a nice example of being on the *wrong* side of the airtight hatch and still being able to escape.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241086">
				<div id="div-comment-1241086" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241086">
			June 18, 2015 at 1:39 pm</a>		</div>

		<p>I like UAC. &nbsp;It is the equivalent of sudo in UNIX. &nbsp;If the prompt appears I can make a decision to back out of it, especially if I didn&#39;t expect it to be the case (use to happen when I browsed the web but web browsers have gotten so much better at sandboxing activity).</p>
<p>My account is not an administrative account, so UAC is great for letting me know that I&#39;m doing something that requires more privileges. &nbsp;As a developer I try to reduce the number of items that require elevation to as minimal as possible, so that other people don&#39;t require administrative privilege to use what I develop. &nbsp;Seems like other developers don&#39;t care and have no problem writing everything to require your account to run as an administrator. &nbsp;I wonder if these are the same developers that run around touting how superior Linux security is (when the reality is that they have poor habits on Windows).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241076">
				<div id="div-comment-1241076" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241076">
			June 18, 2015 at 2:08 pm</a>		</div>

		<p>UAC whitelisting was DEMANDED by the same people complaining about UAC whitelisting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241066">
				<div id="div-comment-1241066" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241066">
			June 18, 2015 at 2:11 pm</a>		</div>

		<p>@Nicholas: No it is not. That&#39;s an incredibly important thing to understand: UAC is NOT a security boundary. If you tell Microsoft about a way to get around UAC they won&#39;t consider it a security flaw. The reason we got UAC was to force developers to get their act together and to stop writing software that made bad assumptions.</p>
<p>Here, there&#39;s Larry Osterman amongst many others (I&#39;m sure Raymond made it too in the past) summarizing this very succinctly: <a rel="nofollow" target="_new" href="https://channel9.msdn.com/Forums/Coffeehouse/473037-UAC-controversy-the-last-episode/773c9d79f8df4fa8bc489deb00e05c3d">channel9.msdn.com/&#8230;/773c9d79f8df4fa8bc489deb00e05c3d</a> </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241056">
				<div id="div-comment-1241056" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241056">
			June 18, 2015 at 2:11 pm</a>		</div>

		<p>@Antonio &#39;Grijan&#39; All versions of NT had the same security. Win95 and 98 had similar security standards.</p>
<p>Terrible programmers never followed instructions, which is why Microsoft decided to beat them with the standards.</p>
<p>Unfortunately, the devs cowered and said &quot;We&#39;re sorry,&quot; which of course convinced MS to back down completely and give them a nigh-infinite number of loopholes, including the part where they simply tell customers to disable all the security features built into the OS.</p>
<p>We wonder why things aren&#39;t secure, then we NEVER enforce even the most basic level of security. I don&#39;t know why anyone bothers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rat odd alt thread-odd thread-alt depth-1" id="comment-1241046">
				<div id="div-comment-1241046" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/hacksoncode' rel='external nofollow' class='url'>hacksoncode</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241046">
			June 18, 2015 at 2:22 pm</a>		</div>

		<p>@AC: &quot;What I&#39;m still not clear about: Is UAC a &quot;security feature&quot; now or not?&quot;</p>
<p>Personally, I would consider it more of a convenience feature than a security feature.</p>
<p>I mean, you could always have run as a standard user all the time. It&#39;s just a huge hassle if you ever have to do something that modifies the system.</p>
<p>But running as admin all the time makes it very easy to accidentally do something that you didn&#39;t intend (or for some app to do it without you knowing). </p>
<p>So you run as admin, with all the security holes that implies, but you are asked to do things that people commonly accidentally do.</p>
<p>Or you run as a standard user, and if you have to do something elevated you can enter an admin&#39;s credentials for just that task. </p>
<p>It&#39;s not ideal, but it&#39;s definitely more about convenience that security. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1241036">
				<div id="div-comment-1241036" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CSharp Fan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241036">
			June 18, 2015 at 2:26 pm</a>		</div>

		<p>I have a machine that has Windows 8 with UAC disabled, &nbsp;yet still when I launch cmd I don&#39;t get &#39;Administrator&#39; in the title, &nbsp;for that I need to do right-mouse, launch as Administrator, same issue with Visual Studio, if I don&#39;t run as Administrator I can&#39;t connect to IIS. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241026">
				<div id="div-comment-1241026" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241026">
			June 18, 2015 at 2:32 pm</a>		</div>

		<p>@CSharp Fan</p>
<p>Turn UAC on.</p>
<p>Problem solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241016">
				<div id="div-comment-1241016" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241016">
			June 18, 2015 at 3:08 pm</a>		</div>

		<p>@voo: Very interesting link. &nbsp;However, what are you trying to say? &nbsp;If UAC prompts me and I click &quot;No&quot; the action can happen anyway? &nbsp;If not then what do you call that if you don&#39;t call it security? &nbsp;At minimum it has to be some level of protection.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241006">
				<div id="div-comment-1241006" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1241006">
			June 18, 2015 at 3:39 pm</a>		</div>

		<p>@Darran Rowe: Oh no you don&#39;t I&#39;m not going to get backed into that flamewar.</p>
<p>UAC as the UI presents itself to be is a good idea. UAC as actually implemented needs serious work and isn&#39;t getting it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1240996">
				<div id="div-comment-1240996" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240996">
			June 18, 2015 at 7:24 pm</a>		</div>

		<p>@Stefan Kanthak: About to post something similar. I remember Process Explorer in has option to &quot;run as standard user&quot; in the days of WinXP too, where UAC obviously is not there.</p>
<p>I didn&#39;t know the programatic way to do it, although it&#39;s not difficult to find out in search engine either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1240986">
				<div id="div-comment-1240986" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240986">
			June 18, 2015 at 10:48 pm</a>		</div>

		<p>@Nicholas A security feature may not be circumvented by a malicious program, a normal feature doesn&#39;t have this requirement. So it&#39;s just like the &quot;do you really rant to delete this file?&quot; dialog &#8211; it can stop you from accidentally doing something, but if someone wants to delete the file it won&#39;t stop them</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1240976">
				<div id="div-comment-1240976" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darran Rowe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240976">
			June 19, 2015 at 1:08 am</a>		</div>

		<p>@Joshua:</p>
<p>Flame war? I apologise if it came across as that.</p>
<p>All I meant to do was to give counter examples as to how working with UAC on works very well for those of limited technical experience.</p>
<p>Well, I have no intention of taking this any further.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1240966">
				<div id="div-comment-1240966" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240966">
			June 19, 2015 at 2:31 am</a>		</div>

		<p>Clearly, half of you have no clue what UAC is actually for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow even thread-even depth-1" id="comment-1240956">
				<div id="div-comment-1240956" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240956">
			June 19, 2015 at 4:45 am</a>		</div>

		<p>@Nick:</p>
<p>I think the confusion came from a comparison of UAC vs sudo, which turned into &quot;UAC != Security&quot;.</p>
<p>I think UAC is like sudo, which implies that sudo is not a security feature because it&#39;s like UAC. In other words, the following statements cannot all be true:</p>
<p>1. sudo == security</p>
<p>2. UAC != security</p>
<p>3. UAC == sudo</p>
<p>At least one of these statements is false, and I&#39;d like to know which one. I&#39;m inclined to believe it&#39;s the first one. The impression I get from the above fla- (ahem) &quot;discussion&quot; is that many people believe it&#39;s the 3rd one. I&#39;d be interested to know more about that.</p>
<p>Discuss, in a non-fire-based manner.</p>
<p>(Yeah, I know, this is the internet so I may as well have asked for gnomes and unicorns).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow odd alt thread-odd thread-alt depth-1" id="comment-1240946">
				<div id="div-comment-1240946" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240946">
			June 19, 2015 at 4:47 am</a>		</div>

		<p>BTW, I realised half a second after posting that that it reads like it&#39;s totally directed at Nick and I&#39;m accusing him of flaming. That was not my intention. The first paragraph was in response to Nick&#39;s post.</p>
<p>The rest was not specifically directed at Nick. </p>
<p>Apologies. I&#39;ll just go hide in a corner now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1221731">
				<div id="div-comment-1221731" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1221731">
			June 19, 2015 at 6:38 am</a>		</div>

		<p>@John Ludlow: There&#39;s been only a single argument about sudo not being a security feature and that was by one person who already admitted to not knowing that UAC wasn&#39;t a security feature. </p>
<p>But yes, if you need clarification: UAC is not a security feature because MS doesn&#39;t consider it one (there are lots of ways to circumvent it in the wild which are accepted as wont-fix by MS), while sudo *is* one because any privilege escalation you manage to find in it will definitely get a whole lot of attention and get fixed.</p>
<p>So the wrong statement there is #3, very simple.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1240936">
				<div id="div-comment-1240936" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240936">
			June 19, 2015 at 6:44 am</a>		</div>

		<p>Convenience and security are often at odds. There&#39;s plenty of users who think password prompts are inconvenient and would love to be able to turn them off if the option existed&#8230;but if they could, would we join them in complaining about those mean old passwords or would we laugh in their face when their account gets hijacked and used towards malicious ends? UAC is often annoying, but it was a case of Microsoft deciding to throw up &quot;This application is dumb and insecure and wants to do dumb insecure things&quot; messages in an attempt to force applications to behave better, just like so many of us have always dreamed of. Instead, though, the vendors simply ignored it entirely and let the obnoxious behavior stand, and instead of complaining about the software companies continuing to behave badly even when it hurts users, we just complain about Microsoft bothering us with all those popups about poor application behavior when we&#39;re just trying to get something done!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1240926">
				<div id="div-comment-1240926" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240926">
			June 19, 2015 at 6:57 am</a>		</div>

		<p>@John Ludlow</p>
<p>People frequently say that UAC isn&#39;t a security boundary, which is true.</p>
<p>Many of them also imply that UAC isn&#39;t a security feature, which is false. UAC combines multiple security features in order to present a secure dialog so that you can approve a request for higher permissions. That&#39;s a lot of security components for it to not be involved in securing the machine.</p>
<p>sudo is similarly not a security boundary, and similarly combines security features. However, they don&#39;t work on the same principles.</p>
<p>Aside: if a Microsoft Representative wants to make an official statement regarding UAC not being any sort of security feature, in their official capacity, with the full force of official policy at Microsoft, in an authoritative medium, great. </p>
<p>Otherwise, forum posts and blogs aren&#39;t official statements, they aren&#39;t official documentation. If they were, this blog would have a lot less informative posts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1240916">
				<div id="div-comment-1240916" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240916">
			June 19, 2015 at 7:04 am</a>		</div>

		<p>Second aside:</p>
<p>NTLM has been trivially-vulnerable since the dawn of time.</p>
<p>Who wants to make the statement that NTLM isn&#39;t a security feature because it has unpatched vulnerabilities?</p>
<p>The presence of a method to bypass a security feature doesn&#39;t make a security feature not a security feature. It only makes it insecure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1240886">
				<div id="div-comment-1240886" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240886">
			June 19, 2015 at 7:16 am</a>		</div>

		<p>Microsoft promoted UAC as a security feature until they got scared by all the negative press Vista got because Explorer&#39;s implementation of UAC was so terrible. Therefore, it&#39;s not a security feature any more.</p>
<p>(of course fixing Explorer was never on the cards)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1240656">
				<div id="div-comment-1240656" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150618-00/?p=45351#comment-1240656">
			June 19, 2015 at 12:28 pm</a>		</div>

		<p>@Anon True about NTLM. What does stop making something a security feature is if the vendor explicitly states that they don&#39;t consider it such.</p>
<p>Take for example the SHA256 hash in git. Does it have security implications? Yes, actually quite strong ones. But is it a security feature? No, because the git developers don&#39;t consider it as such.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

