<html>
<head>
<title>The great thing about URL encodings is that there are so many to choose from</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The great thing about URL encodings is that there are so many to choose from</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 31, 2010 / year-entry #101</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The phrase URL encoding appears to mean different things to different people. First, Tim Berners-Lee says that URLs are encoded by using %xx to encode "dangerous" characters, or to suppress the special meaning that would normally be assigned to characters such as / or ?. For example, the URL http://server/why%3F/?q=bother is a request to the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The phrase <i>URL encoding</i> appears to mean different
things to different people.
</p>
<p>
First,
<a HREF="http://tools.ietf.org/html/rfc3986">
Tim Berners-Lee says</a>
that URLs are encoded by using <code>%xx</code> to
encode "dangerous" characters, or to suppress
the special meaning that would normally be assigned
to characters such as <tt>/</tt> or <tt>?</tt>.
For example, the URL
<tt>http://server/why%3F/?q=bother</tt>
is a request to the server <tt>server</tt>
with the path <tt>/why?/</tt> and with
the query string <tt>q=bother</tt>.
Notice that by escaping the question mark,
we prevent it from being interpreted as the
start of the query portion of the URL.
</p>
<p>
Now, it so happens that when a form is submitted
via <code>GET</code>, then the contents of the form
are encoded (by default)
into the query according to a set of rules
laid out in
<a HREF="http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1">
the HTML 4.01 specification</a>:
The query string takes the basic form of
<code>var=value&amp;var=value&amp;...</code>.
If a variable name or a value contains
a "dangerous" character or a special character
like <tt>=</tt> or <tt>&amp;</tt>,
then it must be %-escaped.
For example,
<tt>co=AT%26T</tt> says that the variable <code>co</code>
has the value <code>AT&amp;T</code>.
Encoding the ampersand prevents it from being interpreted
as a separator.
</p>
<p>
And here is the special additional rule that confuses
a lot of people:
When submitting a form via <code>GET</code>,
the form data is encoded into the query portion of a URL,
and under the default encoding,
<a HREF="http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type">
the character U+0020 (space) is encoded as U+002B (plus sign)</a>.
This special use of the plus sign applies only to the query portion
of the URL.
Sometimes people get confused and think that
<a HREF="http://blogs.msdn.com/brandonturner/archive/2008/03/06/url-encoding-it-s-not-just-for-breakfast-anymore.aspx">
it applies to URLs in general</a>.
</p>
<p>
Example:
</p>
<pre>
<span STYLE="border: solid .75pt black; background: #C0C0FF">http://example.com/embedded%20space.html</span
>?<span STYLE="border: solid .75pt black; background: #E0FFFF">key=apple+pie</span
>#<span STYLE="border: solid .75pt black; background: #C0C0FF">result%20panel</span>
</pre>
<p>
The base URL and fragment (colored in blue) use the <code>%20</code>
sequence to encode the embedded space, whereas the query
(colored in green) uses the plus sign.
</p>
<p>
You'd think that would be the end of the story,
but in fact it's just the beginning,
because now we get to throw in all sorts of
nonstandard URL encoders.
</p>
<p>
The PHP function <code>urlencode</code>
treats the entire string as if it were a value (or variable name)
in a query string, encoding spaces as a plus sign and being careful
to escape all other punctuation.
Not to be confused with <code>rawurlencode</code> which encodes
everything (even characters like <tt>/</tt>).
</p>
<p>
JScript comes with a whole bucketload of functions for URL encoding.
There's <code>escape()</code>, which encodes almost everything
but leaves the slash and&mdash;bafflingly&mdash;the plus sign
unencoded.
And then there's the
<code>encodeURI()</code> function which leaves a few more
characters unencoded (including the colon (U+003A),
and question mark (U+003F)).
But wait, there's also <code>encodeURIComponent()</code>
which goes to the effort of encoding slashes too.
It's a total mess,
but
<a HREF="http://xkr.us/articles/javascript/encode-compare/">
this site<a> tries to make some sense out of the whole thing.
</p>
<p>The ASP.Net function
<a HREF="http://msdn.microsoft.com/en-us/library/ms525738.aspx">
Server.UrlEncode</a>
behaves the same way as the PHP <code>urlencode</code> function.
</p>
<p>
There are probably a dozen other functions which purport to perform
some form of URL encoding.
You have to read the documentation on each one carefully to see
whether it does the type of encoding you want.
</p>
<p>
But wait, you're not done yet.
There are URL encodings which are built on top of
the basic URL encoding.
</p>
<p>
The
<a HREF="http://www.rfc-editor.org/rfc/rfc3492.txt">
punycode</a> encoding
is used to encode Unicode characters in domain names,
which have an even more limited character set than URLs.
</p>
<p>
When auto-generating a URL from a string, different Web sites
use different algorithms.
This isn't really an encoding in the URL encoding sense;
it's just a convention for generating names for Web pages.
The result of these conversion algorithms still need to be
URL encoded.
</p>
<p>
For example, Wikipedia's URL auto-generation algorithm
changes spaces to underscores.
It leaves most punctuation marks unchanged, which means
that once you've gone through Wikipedia's auto-generation
algorithm,
you still have to go back and escape all the characters
which require escaping according to RFC3986.
</p>
<p>
As another example,
it is popular with many blog software packages
to change spaces to
hyphens when auto-generating a URL from the title of
a blog post.
The handling of special characters varies.
Some packages simply omit them; others try to encode them,
resulting in a double-encoded string if the encoding
uses characters for which RFC3986 requires encodings!
</p>
<p>
So if somebody asks a question about URL encoding,
before you answer,
make sure you understand what sense of the phrase
"URL encoding" is being used.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-823683">
				<div id="div-comment-823683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823683">
			March 31, 2010 at 9:07 am</a>		</div>

		<p>If anybody reading this hasn&#8217;t had the pleasure of doing web development, let me just make it clear that every aspect of web development is exactly like this example! Every single aspect.</p>
<p>Baffling standards, wrongly-implemented, woefully incomplete for real-world use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-823723">
				<div id="div-comment-823723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">webdev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823723">
			March 31, 2010 at 1:10 pm</a>		</div>

		<p>@James Schend</p>
<p>Couldn&#8217;t agree more. Web development is 95% compensating for bad frameworks/browsers, and 5% being productive/creative.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-823733">
				<div id="div-comment-823733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alvaro.es/' rel='external nofollow' class='url'>&#193;lvaro G. Vicario</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823733">
			March 31, 2010 at 1:57 pm</a>		</div>

		<p>Last but not least, we have the &quot;it works in my browser so it must be valid&quot; school of thought :)</p>
<p>A nice and instructive article. Nuff said.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-823753">
				<div id="div-comment-823753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mgk.ro' rel='external nofollow' class='url'>Aram Hăvărneanu</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823753">
			March 31, 2010 at 3:15 pm</a>		</div>

		<p>How do you know all this stuff since you do rather low-level C stuff?</p>
<p>I imagine you needed to do some quick web think and was hit by the pain&#8230;</p>
<div class=post>[<i>Sorry, didn&#8217;t realize I was allowed to know about only one thing. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-823783">
				<div id="div-comment-823783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823783">
			March 31, 2010 at 3:48 pm</a>		</div>

		<p>Douglas Crockford, inventor of JSON: &quot;The Web is broken and we need to fix it. &nbsp;&#8230; the Web is so poorly specified. &nbsp;The specifications were incomplete and were largely misinterpreted and many of those misinterpretations have become part of the canon.&quot; &nbsp;From his interview in the book <em>Coders at Work</em>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-823793">
				<div id="div-comment-823793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823793">
			March 31, 2010 at 3:51 pm</a>		</div>

		<p>I&#8217;ve done quite a bit of web scripting in my time, and in my opinion the people who came up with that standard, as well as those who followed it and left us with the mess we&#8217;re in today, should be shot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-823803">
				<div id="div-comment-823803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://henning.makholm.net/' rel='external nofollow' class='url'>Henning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823803">
			March 31, 2010 at 4:39 pm</a>		</div>

		<p>And woe is unto anybody whose users type non-English letters into form text fields. The browser will, in its infinite wisdom, choose some way to convert the non-English text into bytes, percent-encode those bytes, and then happily neglect to tell the server which charset it used.</p>
<p>The only decoding that seems to work in practice is that if the bytes look like a valid UTF-8 encoding, then it&#8217;s very likely UTF-8; otherwise it is probably ISO-8859-1 or possibly Windows-1252, and if the user types one of those (not very common) glyph sequences whose 8859-1 representations happen to be valid UTF-8 encodings of something else, then he may or may not deserve what he gets.</p>
<p>Of course there are probably other corner cases that this heuristic does not catch&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-823813">
				<div id="div-comment-823813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823813">
			March 31, 2010 at 6:51 pm</a>		</div>

		<p>There&#8217;s a standard that says it has to be UTF-8 regardless of the encoding being used for content. So any browser still using the system codepage for it is wrong.</p>
<p>There was also a proposal floating around for a while to use %uXXXX via UTF-16 &#8211; javascript escape() does this, I don&#8217;t know that anything else does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-823843">
				<div id="div-comment-823843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.goldwatches.com' rel='external nofollow' class='url'>Watches</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823843">
			March 31, 2010 at 9:45 pm</a>		</div>

		<p>This is why so many security vulnerabilities exist in which protection methods are bypassed by encoding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-823883">
				<div id="div-comment-823883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823883">
			March 31, 2010 at 11:24 pm</a>		</div>

		<p>I think ASP.NET does %uXXXX too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-823823">
				<div id="div-comment-823823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jalf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-823823">
			March 31, 2010 at 7:17 pm</a>		</div>

		<p>And then of course, there are gems such as the RFC for IRC, which leaves the encoding **entirely unspecified**.</p>
<p>It&#8217;s up to the individual client which encoding they&#8217;d like to use, and there is absolutely no mechanism for even telling other clients (or the server) which encoding to expect.</p>
<p>But yes, URL encodings are fun times too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-824223">
				<div id="div-comment-824223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grumpy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-824223">
			April 3, 2010 at 6:29 am</a>		</div>

		<blockquote><p>
  I&#8217;ve done quite a bit of web scripting in my time, and in my opinion the people who came up with that standard, as well as those who followed it and left us with the mess we&#8217;re in today, should be shot.
</p></blockquote>
<p>Goes for EVERYONE who has ever done work on a &quot;standard&quot;. I&#8217;ve recently been slimed by a standard for document management and it&#8217;s&#8230; well&#8230; crap. Too much thought, too little reality. These fellers need to get out into the world and face reality once in a while. I realize this may reduce them to a pile of dust but no pain, no gain.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-824263">
				<div id="div-comment-824263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">html</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-824263">
			April 3, 2010 at 12:32 pm</a>		</div>

		<p>@Grumpy</p>
<p>This was what motivated the HTML5 standard. The previous committees had abstracted away the simplicity and reality of the web.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-824313">
				<div id="div-comment-824313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://Http://brandonlive.com' rel='external nofollow' class='url'>Brandon Paddock</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100331-00/?p=14443#comment-824313">
			April 4, 2010 at 2:28 pm</a>		</div>

		<p>It doesn&#8217;t help that there are multiple RFCs covering this, and that the common practices have changed over time. &nbsp;It also doesn&#8217;t help that the most popular RFC to follow varies by protocol (i.e. file: vs HTTP).</p>
<p>The space-to-plus conversion isn&#8217;t even part of the protocol RFCs and is instead part of the HTML spec, offering further inconsistency and potential for confusion since it&#8217;s only relevant to form submissions.</p>
<p>Another major trap people fall into is the desire to call a function like UrlEscape and expect it to magically make your URL &quot;right.&quot; In reality such a function would truly have to be magical. &nbsp; Not only do you need to encode each value individually with the proper mechanism, but you need to truly understand your clients and the encoding function(s) you&#8217;re relying on. &nbsp;Woe to thee with the task of consuming URLs from arbitrary sources, then parsing them for display and submission to arbitrary clients. &nbsp;I had this pleasure during Win7 development and probably jump-started the greying of my hair in the process. &nbsp; &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

