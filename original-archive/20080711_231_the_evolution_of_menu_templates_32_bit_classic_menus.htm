<html>
<head>
<title>The evolution of menu templates: 32-bit classic menus</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The evolution of menu templates: 32-bit classic menus</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 11, 2008 / year-entry #232</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Now that we've got a handle on 16-bit classic menu templates, we can move on to the next evolutionary step, namely 32-bit classic menu templates. The 32-bit classic menu template is in fact nearly identical to the 16-bit classic menu template. The only change is that the menu text is now a Unicode string instead...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Now that we've got a handle on
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2008/07/09/8711897.aspx">
16-bit classic menu templates</a>,
we can move on to the next evolutionary step,
namely 32-bit classic menu templates.
</p>
<p>
The 32-bit classic menu template is in fact nearly identical to the
16-bit classic menu template.
The only change is that the menu text is now a Unicode string instead
of an ANSI string.
Consequently, the discussion below will be rather brief
when there is nothing new being introduced.
</p>
<p>
The 32-bit classic menu template begins with the same header,
and the fields have the same meaning.
</p>
<pre>
struct MENUHEADER32 {
 WORD wVersion;
 WORD cbHeaderSize;
 BYTE rgbExtra[cbHeaderSize];
};
</pre>
<p>
Actually, there's a bonus wrinkle:
Whereas the <code>cbHeaderSize</code> is always zero in practice
for 16-bit menu templates, the 32-bit <code>cbHeaderSize</cODE>
<i>must be</i> zero if you intend your menu template to be used
on the Windows&nbsp;95 series of Windows operating systems.
</p>
<p>
Why must the value be zero on Windows&nbsp;95?
I just discovered this now doing the research for this series of
articles.
It's a bug in the code that converts between 32-bit and 16-bit resources!
When converting from a 32-bit menu template to a 16-bit menu template,
the conversion code dutifully copies the <code>cbHeaderSize</code> and
uses it to skip ahead in the 32-bit menu template, but it neglects
to skip ahead the same amount in the 16-bit menu template.
Fortunately, nobody ever sets this value to anything other than zero,
so the bug never manifests itself in practice.
(I suspect I'm the first person ever to notice this bug.
First, because nobody generates menu templates at runtime;
everybody uses the resource compiler or some other tool,
and those tools all set the field to zero.
And second, because those extra bytes aren't used for anything,
so there's no reason for the count to be nonzero.)
</p>
<p>
Even if you don't care about Windows&nbsp;95, the <code>cbHeaderSize</code>
must still be an even number so that the menu item templates are suitably
aligned.
</p>
<p>
The rest of the 32-bit classic menu template is just stuff
you've seen before.
We have a packed array of menu item templates,
either a <code>POPUPMENUITEM32</code> if the menu item is
a pop-up submenu, or a <code>NORMALMENUITEM32</code> if not:
</p>
<pre>
struct NORMALMENUITEM32 {
 WORD wFlags;       // menu item flags (MFT_*, MFS_*)
 WORD wID;          // menu item ID
 WCHAR szText[];    // null terminated Unicode string
};

struct POPUPMENUITEM32 {
 WORD wFlags;       // menu item flags (MFT_*, MFS_*)
 WCHAR szText[];    // null terminated UNICODE string
};
</pre>
<p>
Aside from changing <code>CHAR</code> to <code>WCHAR</code>,
everything is exactly the same.
Let's use that same resource script we used to illustrate
the 16-bit classic menu template and convert it to a 32-bit
classic menu template instead.</p>
<pre>
1 MENU
BEGIN
  POPUP "&amp;File"
  BEGIN
    MENUITEM "&amp;Open\tCtrl+O", 100
    MENUITEM SEPARATOR
    MENUITEM "&amp;Exit\tAlt+X",  101
  END
  POPUP "&amp;View"
  BEGIN
    MENUITEM "&amp;Status Bar", 102, CHECKED
  END
END
</pre>
<p>
Compiling this as a 32-bit classic menu template would result
in something like this:
</p>
<pre>
// MENUHEADER32
0000  00 00      // wVersion = 0
0002  00 00      // cbHeaderSize = 0
</pre>
<p>
After the header come the top-level menu items:
</p>
<pre>
// POPUPMENUITEM32 for top-level menu
0004  10 00     // wFlags = MF_POPUP
                // no wID
0006  26 00 46 00 69 00 6C 00 65 00 00 00
                // "&amp;File" + null terminator
</pre>
<p>
Since we have a pop-up submenu, the contents of the
submenu come next, and we put the top-level menu items on hold.
</p>
<pre>
// NORMALMENUITEM32 for nested menu
0012  00 00     // wFlags = MFT_STRING
0014  64 00     // wID = 100
0016  26 00 4F 00 70 00 65 00 6E 00 09 00
      43 00 74 00 72 00 6C 00 2B 00 4F 00 00 00
                // "&amp;Open\tCtrl+O" + null terminator
</pre>
<p>
For the separator, we can either do it the formally correct way:
</p>
<pre>
// NORMALMENUITEM32 for nested menu - separator
0030  00 08     // wFlags = MFT_SEPARATOR
0032  00 00     // wID = 0
0034  00 00     // ""
</pre>
<p>
or we can use the
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2008/07/10/8714471.aspx">
alternate compatibility form</a>:
</p>
<pre>
0030  00 00     // wFlags = 0
0032  00 00     // wID = 0
0034  00 00     // ""
</pre>
<p>
The last item on the submenu has the
<code>MF_END</code> flag.
</p>
<pre>
// NORMALMENUITEM32 for nested menu - last item
0036  80 00    // wFlags = MFT_STRING | MF_END
0038  65 00    // wID = 101
003A  26 00 45 00 78 00 69 00 74 00 09 00
      41 00 6C 00 74 00 2B 00 58 00 00 00
               // "&amp;Exit\tAlt+X" + null terminator
</pre>
<p>
We now pop back to the top-level menu, whos second item
and final item is another pop-up submenu.
</p>
<pre>
// POPUPMENUITEM for top-level menu
0052  90 00     // wFlags = MF_POPUP | MF_END
                // no wID
0054  26 00 56 00 69 00 65 00 77 00 00 00
                // "&amp;View" + null terminator
</pre>
<p>
And finally, the contents of that last pop-up submenu.
</p>
<pre>
0060  88 00    // wFlags = MFT_STRING | MFS_CHECKED | MF_END
0062  65 00    // wID = 102
0064  26 00 53 00 74 00 61 00 74 00 75 00
      73 00 20 00 42 00 61 00 72 00 00 00
                // "&amp;Status Bar" + null terminator
</pre>
<p>
And that's all there is to it.
A pretty straightforward extension of the 16-bit classic
menu template to a 32-bit Unicode version.</p>
<p>
After a short break, we'll look at the extended menu templates.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-645973">
				<div id="div-comment-645973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.koroirc.com/' rel='external nofollow' class='url'>Koro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-645973">
			July 11, 2008 at 11:11 am</a>		</div>

		<p>Ah, Windows 95 and it&#8217;s resource loader. I remember the lengthy warning in the LoadBitmap documentation about it not being able to load bitmaps larger than 64K without some special padding&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646033">
				<div id="div-comment-646033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jama Ar Warum</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646033">
			July 11, 2008 at 1:20 pm</a>		</div>

		<p>So your versioning system goes back all the way to at least 1995? Impressive!</p>
<p>And why weren&#8217;t the WORDs changed into DWORDs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-646063">
				<div id="div-comment-646063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646063">
			July 11, 2008 at 1:54 pm</a>		</div>

		<p>Menu ids are WORDS not DWORD. &nbsp;I wonder why it stayed that way&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646073">
				<div id="div-comment-646073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646073">
			July 11, 2008 at 3:49 pm</a>		</div>

		<p>It must be great to be able to refer to the Windows source code to find out how things really work.</p>
<p>However, knowing this blog, he probably didn&#8217;t refer to the source code. He probably found the bug by testing and found its cause by using a debugger.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-646093">
				<div id="div-comment-646093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.henning.makholm.net/' rel='external nofollow' class='url'>Henning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646093">
			July 11, 2008 at 7:04 pm</a>		</div>

		<p>According to MSDN, there&#8217;s a LoadMenuIndirectA function, which however still expects to get a menu template with Unicode strings in it. What&#8217;s up with that &#8212; one of those bugs-turned-compatibility-feature things?</p>
<p>The Hungarian prefix in &quot;rgbExtra&quot; is also intriguing. Perhaps a hint of what someone once thought that extra space might be useful for?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646103">
				<div id="div-comment-646103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M Hotchin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646103">
			July 11, 2008 at 7:09 pm</a>		</div>

		<p>rgbExtra &#8211; &quot;RanGe of Bytes&quot; Extra.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-646113">
				<div id="div-comment-646113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.henning.makholm.net/' rel='external nofollow' class='url'>Henning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646113">
			July 11, 2008 at 7:28 pm</a>		</div>

		<p>Ah. More boring than I expected. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646123">
				<div id="div-comment-646123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646123">
			July 11, 2008 at 8:57 pm</a>		</div>

		<p>&quot;rgX&quot; was Simonyi&#8217;s prefix for &quot;array of X&quot;. I can&#8217;t remember seeing it used much outside of MS (if at all). &quot;a&quot; is far more common and the prefix that I use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-646153">
				<div id="div-comment-646153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646153">
			July 12, 2008 at 4:16 pm</a>		</div>

		<p>&quot;According to MSDN, there&#8217;s a LoadMenuIndirectA function, which however still expects to get a menu template with Unicode strings in it.&quot;</p>
<p>This is for portability reasons, MS decided there would be only one version of the resources, instead of separate Unicode and ANSI versions. Win9x and Win32s converts Unicode strings to ANSI when loading 32-bit resources.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646163">
				<div id="div-comment-646163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.henning.makholm.net/' rel='external nofollow' class='url'>Henning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080711-00/?p=21653#comment-646163">
			July 12, 2008 at 7:17 pm</a>		</div>

		<p>What I wondered about was not that there&#8217;s no Ansi version of menu templates, but that the function exists in A and W variants that apparently differ neither in which argument they take nor in which result they produce.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

