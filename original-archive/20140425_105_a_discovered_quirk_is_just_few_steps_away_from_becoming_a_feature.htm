<html>
<head>
<title>A discovered quirk is just few steps away from becoming a feature</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>A discovered quirk is just few steps away from becoming a feature</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 25, 2014 / year-entry #106</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>24</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Cherry wonders who invented all those strange syntaxes, like set " to show all environment variables, including the hidden ones. An interesting historical note is the origin of the convention in unix that files whose names begin with a dot are hidden by default (here's the relevant portion). That article highlights how a discovered...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Commenter Cherry wonders
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/10/11/10073890.aspx#10074245">
who invented all those strange syntaxes</a>,
like <code>set "</code> to show all environment variables,
including the hidden ones.
</p>
<p>
An interesting historical note is
<a HREF="https://plus.google.com/u/0/101960720994009339267/posts/R58WgWwN9jp">
the origin of the convention in unix that files whose names begin with a
dot are hidden by default</a>
(<a HREF="http://xahlee.info/UnixResource_dir/writ/unix_origin_of_dot_filename.html"
>here's the relevant portion</a>).
That article highlights how a discovered quirk
is just a few steps away from becoming a feature.
</p>
<p>
As
<a HREF="https://www.youtube.com/watch?v=kFnFr-DOPf8">
Master Yoda</a> might put it:
Discovery leads to dissemination.
Dissemination leads to adoption.
Adoption leads to entrenchment.
Entrenchment creates a compatibility constraint.
</p>
<p>
As I've noted many times,
the batch language was not designed.
It simply evolved
out of the old CP/M program <code>SUBMIT</code>,
which was an even more rudimentary batch processor.
(The original
<code>SUBMIT.COM</code> didn't have conditional branches.
It merely ran every line in your batch file one after another.)
</p>
<p>
One of the consequences of something that old is that any quirk,
once discovered, can turn into a feature, and from there it becomes
a support burden and compatibility constraint.
We've seen this many times before:
Counting the number of lines in a file by
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/25/10200026.aspx">
exploiting a
buffer underflow bug in <code>FIND.COM</code></a>.
Update the last-modified time of a file by
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/07/10/10432879.aspx">
using
a magic sequence of punctuation marks</a>.
Echoing a blank line by
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/10/11/10073890.aspx#10074507">
typing <code>ECHO.</code></a>.
All of these were accidental discovered behaviors
(just like unix dot files)
which became entrenched.
Even when the underlying program was completely rewritten,
these special quirks had to be
specifically detected and painstakingly reproduced because
so many programs (<i>i.e.</i>, batch files) relied on them.
</p>
<p>
For
<code>set "</code>,
it's a case of taking advantage of two quirks in the implementation:
The first quirk is that a missing close-quotation mark is forgiven.
That means that <code>set "</code> is logically equivalent to
<code>set ""</code>.
</p>
<p>
You are therefore asking for a filtered
list of environment variables, but passing the
logical equivalent of no filter.
Specifically, you're asking for all environment variables which
begin with the empty string, and it so happens that every string
begins with the empty string.
The second quirk is that when an explicit filter is applied,
the <code>set</code> command disables its default filter of
"Hide environment variables whose names begin with an equals sign."
</p>
<p>
In other words, the code goes like this:
</p>
<pre>
foreach (var entry in Environment.GetEnvironmentVariables()) {
 if (prefixFilter != null ?
     entry.Key.StartsWith(prefixFilter) :
     !entry.Key.StartsWith("=")) {
  Console.WriteLine("{0}={1}", entry.Key, entry.Value);
 }
}
</pre>
<p>
Perhaps this is a bug,
and it should have been written like this:
</p>
<pre>
foreach (var entry in Environment.GetEnvironmentVariables()) {
 if (!entry.Key.StartsWith("=") &amp;&amp;
     (prefixFilter == null || entry.Key.StartsWith(prefixFilter))) {
  Console.WriteLine("{0}={0}", entry.Key, entry.Value);
 }
}
</pre>
<p>
But it's too late to fix it now.
People have discovered the quote trick,
so it's now a feature and therefore a compatibility constraint.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1121823">
				<div id="div-comment-1121823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121823">
			April 25, 2014 at 7:29 am</a>		</div>

		<p>It might be argued that set &quot; is a quirk NOT because of any of the above&#8230; but because &#39;&quot;&#39; is not an empty string. &quot;&#39;&#39;&quot; is. &#39;&quot;&#39; is just a quotation mark.</p>
<p>It might further be argued that this was intentional behaviour, as there&#39;s no other way to get &quot;set&quot; to produce a full list of environment variables, it was just not documented at the time.</p>
<div class="post">[<em>There is no indication in the code that this behavior is intentional. It just looks like a bug to me. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121833">
				<div id="div-comment-1121833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121833">
			April 25, 2014 at 8:21 am</a>		</div>

		<p>You&#39;d have to imagine that if somebody were designing the SET command to have a way to show all variables, they would just create a parameter like SET /A or SET /ALL rather than have some secret backdoor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1121843">
				<div id="div-comment-1121843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Herbie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121843">
			April 25, 2014 at 8:59 am</a>		</div>

		<p>I was unaware of this quirk until today. Now I will use it everywhere I can&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121853">
				<div id="div-comment-1121853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121853">
			April 25, 2014 at 9:26 am</a>		</div>

		<p>[There is no indication in the code that this behavior is intentional. It just looks like a bug to me. -Raymond]</p>
<p>Unless the purpose was to escape being discovered before release.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1121863">
				<div id="div-comment-1121863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121863">
			April 25, 2014 at 9:31 am</a>		</div>

		<p>what is the meaning of the &#39;=::=::&#39; at the start of the environment? &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121873">
				<div id="div-comment-1121873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121873">
			April 25, 2014 at 9:51 am</a>		</div>

		<p>Out of curiosity, I just tried it in a DOSBox window. &nbsp;Doesn&#39;t work. &nbsp;WAHHHHH! &nbsp;Incompatibility! &nbsp;(Yes, I do know that DOSBox is not a Microsoft product AND doesn&#39;t promise full compatibility. &nbsp;Still &#8211; it&#39;s like they&#39;re not even trying! &nbsp;;) &nbsp;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1121893">
				<div id="div-comment-1121893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121893">
			April 25, 2014 at 10:47 am</a>		</div>

		<p>@Marc &#8212; I still use 4NT for my command prompt at work and it doesn&#39;t work there either. In fact I forgot that 4NT would handle the set command and was wondering why I didn&#39;t have any hidden environment entries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121903">
				<div id="div-comment-1121903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121903">
			April 25, 2014 at 11:20 am</a>		</div>

		<p>@Marc: Given its purpose and the purpose of the hidden variables, DOS wouldn&#39;t have it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1121933">
				<div id="div-comment-1121933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dominic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121933">
			April 25, 2014 at 12:42 pm</a>		</div>

		<p>@anonymous: since the next entry tracks the currently logged directory for the C drive, I expect that &quot;=::&quot; somehow controls the default directory for drives you haven&#39;t logged onto yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121943">
				<div id="div-comment-1121943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Curran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121943">
			April 25, 2014 at 1:16 pm</a>		</div>

		<p>I&#39;d say the current winner in this category is JavaScript, where the abuse of an implementation detail (functions as first class objects) has allowed it to considered an &quot;Object-oriented&quot; programming language.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-amroamroamro even thread-even depth-1" id="comment-1121953">
				<div id="div-comment-1121953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/amroamroamro' rel='external nofollow' class='url'>amroamroamro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121953">
			April 25, 2014 at 3:01 pm</a>		</div>

		<p>@anonymous: those variables whose name start with an equal sign are used as a trick to pass the current working directory to a newly created process</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121963">
				<div id="div-comment-1121963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121963">
			April 25, 2014 at 3:10 pm</a>		</div>

		<p>@amroamroamro:</p>
<p>=ExitCode does only contain =00000000, not any directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1121973">
				<div id="div-comment-1121973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121973">
			April 25, 2014 at 3:13 pm</a>		</div>

		<p>@James Curran: Can you expand on that a bit? What is the particular bit of abuse[0] you are referring to, and what particular facet of &quot;Object-oriented&quot; programming languages do you consider so vital[1] that without it JS would otherwise fail to qualify?</p>
<p>[0] If there&#39;s one thing JS doesn&#39;t lack, it&#39;s abuse ;-)</p>
<p>[1] If there&#39;s one thing OO theory doesn&#39;t lack, it&#39;s facets like typing, encapsulation, data hiding, interface inheritance, implementation inheritance, etc&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-amroamroamro odd alt thread-odd thread-alt depth-1" id="comment-1121983">
				<div id="div-comment-1121983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/amroamroamro' rel='external nofollow' class='url'>amroamroamro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121983">
			April 25, 2014 at 3:23 pm</a>		</div>

		<p>@640K: I was referring to variables like &quot;=C:&quot; and &quot;=D:&quot;</p>
<p>see this post:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2010/05/06/10008132.aspx">blogs.msdn.com/&#8230;/10008132.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1121993">
				<div id="div-comment-1121993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dominic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1121993">
			April 25, 2014 at 3:35 pm</a>		</div>

		<p>@Karellen: JS&#39;s object model is based on calling a function (the constructor) which adds function references to its activation record (this) and returns a reference to the activation record. In that respect it very closely follows Simula 67&#39;s approach, and Eich probably didn&#39;t do it by accident, and if he did he probably wasn&#39;t surprised by the implications which are widely known in the lisp/scheme community.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1122003">
				<div id="div-comment-1122003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122003">
			April 25, 2014 at 7:34 pm</a>		</div>

		<p>An example in HTML is legacy color parsing. I personally figured out where legacy color parsing is in the Netscape classic source: <a rel="nofollow" target="_new" href="http://stackoverflow.com/questions/8318911/why-does-html-think-chucknorris-is-a-color/12630675#12630675">stackoverflow.com/&#8230;/12630675</a></p>
<p>It is so subtle even Netscape&#39;s own Gecko rewrite did not get it completely right the first time: <a rel="nofollow" target="_new" href="https://bugzilla.mozilla.org/show_bug.cgi?id=121738">bugzilla.mozilla.org/show_bug.cgi</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122013">
				<div id="div-comment-1122013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122013">
			April 26, 2014 at 1:03 am</a>		</div>

		<p>One quirk that got *not* reproduced was that in MS-DOS 6 and Windows 9x executing</p>
<p>&nbsp; &nbsp;dir.exe</p>
<p>was the same as</p>
<p>&nbsp; &nbsp;dir *.exe</p>
<p>which was a nice shortcut saving three keystrokes, but it doesn&#39;t work in NT-based Windows.</p>
<div class="post">[<em><a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/12/17/6785519.aspx" rel="nofollow">Yup</a>. Because otherwise how would you deal with a file called &quot;.exe&quot;? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122033">
				<div id="div-comment-1122033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122033">
			April 27, 2014 at 5:13 pm</a>		</div>

		<p>@Dominic: Eich did it, because he was forbidden from implement a &quot;serious&quot; language by management (source: an interview in Coders At Work, but I doubt he only said that once) but still wanted something resembling an useful language (conjecture). </p>
<p>A prototype based approach was pretty much the best he could do in that situation, but really it makes optimizing JavaScript needlessly complicated and if you actually use the features offered by prototyping that you don&#39;t easily get with a class-based approach you end up with a pretty hard to maintain mess in my &#8211; limited &#8211; experience. Also did I mention that it makes writing an optimizing VM for JS even worse than it already is?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-1122053">
				<div id="div-comment-1122053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122053">
			April 28, 2014 at 9:49 am</a>		</div>

		<p>To see all variables, I just type SET in a command box. &nbsp;I never knew about this &#39;&#39; or &quot; thing. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122063">
				<div id="div-comment-1122063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122063">
			April 28, 2014 at 9:55 am</a>		</div>

		<p>I enjoy these types of posts the most. Keep em coming Raymond! </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122113">
				<div id="div-comment-1122113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">evacchi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122113">
			April 28, 2014 at 2:10 pm</a>		</div>

		<p>@Dominic: </p>
<p>&gt;In that respect it very closely follows Simula 67&#39;s approach, and Eich probably didn&#39;t do it by accident, and if he did he probably wasn&#39;t surprised by the implications which are widely known in the lisp/scheme community.</p>
<p>Do you have references I could lookup both about how Simula implements object constructors, and these &quot;implications&quot; in the Lisp/Scheme community you speak of? I would like to read more on that! thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122123">
				<div id="div-comment-1122123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dominic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122123">
			April 28, 2014 at 4:03 pm</a>		</div>

		<p>Regarding Simula, see these lecture slides:</p>
<p><a rel="nofollow" target="_new" href="http://carlstrom.com/stanford/cs242/WWW-03/slides/simula-smalltalk.pdf">carlstrom.com/&#8230;/simula-smalltalk.pdf</a></p>
<p>Regarding Scheme/Lisp, see &quot;Structure and Interpretation of Computer Programs&quot; chapter 3</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122133">
				<div id="div-comment-1122133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122133">
			April 28, 2014 at 8:16 pm</a>		</div>

		<p>Sometimes you run into a &quot;feature&quot; so bad, your only reaction is &quot;Thank God they finally removed &quot;THAT&quot; feature&quot; </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122423">
				<div id="div-comment-1122423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">e.vacchi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140425-00/?p=1143#comment-1122423">
			April 30, 2014 at 1:01 pm</a>		</div>

		<p>@Dominic </p>
<p>thanks for the pointers, those were enlightening in many ways!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

