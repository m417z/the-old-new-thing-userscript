<html>
<head>
<title>How do I get the current directory for a non-current drive?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I get the current directory for a non-current drive?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 12, 2017 / year-entry #91</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>43</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">GetFullPathName will tell you.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
As we learned some time ago,
each drive has its own current directory
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563">
for backward-compatibility with DOS 1.0</a> (which predates
the concept of directories).
This is simulated internally by
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133">
magic environment variables</a>.
But those magic environment variables are internal
and are therefore not contractual.
</p>
<p>
What is the supported way of finding out the current directory
for a non-current drive?
</p>
<p>
One approach I've seen is to perform this sequence of operations:
</p>
<pre>
GetCurrentDirectory(ARRAYSIZE(originalDirectory), originalDirectory);
SetCurrentDirectory(TEXT("X:"));
GetCurrentDirectory(ARRAYSIZE(currentDirectoryOnX), currentDirectoryOnX);
SetCurrentDirectory(originalDirectory);
</pre>
<p>
One problem with this approach is that it may not be able to
return to the original directory if the original directory
was deleted or is otherwise not settable.
</p>
<p>
Another problem with this approach is that it applies a global
solution to a local problem:
The current directory is a process-wide resource,
so if there is another thread that is performing an operation
that depends on the current directory,
you just messed up that thread.
</p>
<p>
The supported way to get the current directory for
a non-current drive is to call
<code>Get&shy;Full&shy;Path&shy;Name</code> and pass just
the drive letter and a colon.
This will resolve the drive letter to the current directory
for that drive.
</p>
<pre>
TCHAR buf[BUFFERSIZE];
TCHAR *file;
GetFullPathName(TEXT("X:"), BUFFERSIZE, buf, &amp;file);
</pre>
<p>
Assuming the call succeeds, the result in the buffer
is the current directory for drive <code>X:</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (43)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-archangelpip even thread-even depth-1 parent" id="comment-1292127">
				<div id="div-comment-1292127" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292127">
			April 12, 2017 at 7:32 am</a>		</div>

		<p>This is a really nice tip because it is very unobvious how to do this.<br />
It is just a shame that the documentation for this function doesn&#8217;t make it clearer that it can do this. When the first parameter is named file name and there is nothing stating that you can put in a volume and you will get out the current directory, it takes a lot of reading between the lines to notice this.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1292155">
				<div id="div-comment-1292155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292155">
			April 12, 2017 at 9:05 am</a>		</div>

		<p>The funny thing is that to me it was totally obvious that &#8220;X:&#8221; refers to the current directory on drive X. If you do &#8220;copy somefile X:&#8221; it goes into the current directory on drive X:. If you do &#8220;dir X:&#8221; you get the current directory on drive X.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-3 parent" id="comment-1292175">
				<div id="div-comment-1292175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292175">
			April 12, 2017 at 11:06 am</a>		</div>

		<p>Yeah, but if you are writing that in a program then the API has differences and you will be in that mindset. It is also not as if the Win32 API has a precedence for this in the first place.<br />
Like if you wrote<br />
CopyFileW(srcFile, L&#8221;X:&#8221;, FALSE);<br />
Would you expect that to succeed? I wouldn&#8217;t, I would expect that to fail because you are trying to copy the file to a volume name. (And it does fail with access denied.)<br />
In the copy file documentation the second parameter is given to be the new file name, and nothing in the description hints at you being able to use a path in there.<br />
The same is true with GetFullPathName, the first parameter is file name, and nothing hints at you being able to use a path or volume name (to refer to the current directory) in there in just the description. You have to go through the remarks section to come across the things related to the shares to even get a hint at this.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4" id="comment-1292265">
				<div id="div-comment-1292265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292265">
			April 12, 2017 at 2:30 pm</a>		</div>

		<p>The parameter to CopyFileW is a file name, and &#8220;X:&#8221; is not a file name. But &#8220;X:Foo&#8221; would work. And GetFullPathName works with directories as well as files. It produces the full path. Could be the full path to a file, or the full path to a directory. And &#8220;X:&#8221; is a directory. The documentation for GetFullPathName needs to be clearer that the first parameter can be either a file or directory.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1292135">
				<div id="div-comment-1292135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292135">
			April 12, 2017 at 7:34 am</a>		</div>

		<p>Would &#8220;X:.&#8221; (driver letter, colon, period), with the period to explicitly reference the current directory of the drive in question, work?</p>
<p>FWIW, the &#8220;Remarks&#8221; section of the MSDN documentation for GetFullPathName()[0] explicitly mentions the &#8220;X:&#8221; case (although it uses &#8220;U:&#8221;) and implies that it will return the root directory of the specified drive, as opposed to the current directory. Of course, it will return the root directory if the current directory of the drive is the root directory, but that is not explicit, and is (IMHO) not the most straightforward reading of the text.</p>
<p>[0] <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364963(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa364963(v=vs.85)</a>.aspx</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1292236">
				<div id="div-comment-1292236" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://english.rejbrand.se/' rel='external nofollow' class='url'>Andreas Rejbrand</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292236">
			April 12, 2017 at 2:22 pm</a>		</div>

		<p>In that example, U: is a network mapped drive.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1292336">
				<div id="div-comment-1292336" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292336">
			April 13, 2017 at 3:59 am</a>		</div>

		<p>So? Do mapped network drives not have a &#8220;current directory&#8221;?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-even depth-1 parent" id="comment-1292146">
				<div id="div-comment-1292146" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292146">
			April 12, 2017 at 9:02 am</a>		</div>

		<p>&#8220;The current directory is a process-wide resource.&#8221;</p>
<p>Which raises the question of why it is so, by the way. One would expect the current directory to be thread-specific (or if compatibility demands it, thread-specific for threads that ask for it, like with SetThreadLocale()).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle even depth-2 parent" id="comment-1292225">
				<div id="div-comment-1292225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292225">
			April 12, 2017 at 12:10 pm</a>		</div>

		<p>The current directory is just another way of saying the working directory, isn&#8217;t it?  And considering the implications of DLL loading on the active working directory, I suspect that making the working directory thread-global instead of process-global could have unsettling implications when attempting to load DLLs in your program&#8217;s working directory.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1292285">
				<div id="div-comment-1292285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292285">
			April 12, 2017 at 8:28 pm</a>		</div>

		<p>You shouldn&#8217;t be loading DLLs from the working directory anyway, that&#8217;s how you get DLL hijack vulnerabilities.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1292307">
				<div id="div-comment-1292307" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silverbacknetworks.tech' rel='external nofollow' class='url'>Joshua Bowman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292307">
			April 13, 2017 at 2:07 am</a>		</div>

		<p>We&#8217;ll just fire up the time machine and fix that&#8230;.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1292315">
				<div id="div-comment-1292315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292315">
			April 13, 2017 at 2:15 am</a>		</div>

		<p>Please don&#8217;t, that&#8217;s how DirectX / Glide wrappers work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1293216">
				<div id="div-comment-1293216" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1293216">
			April 20, 2017 at 12:38 am</a>		</div>

		<p>Performing SetDllDirectory(&#8220;&#8221;) does this. (See:  <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms686203(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/ms686203(v=vs.85)</a>.aspx)</p>
<p>@xcomcmdr: This all is about the current directory, not the startup directory. As noted in MSDN in the topic &#8220;Dynamic-Link Library Search Order&#8221;, the directory from which the application loaded is always searched first.<br />
So you should be able to place your DirectX / Glide wrapper DLLs in the directory of the respective executable.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1292186">
				<div id="div-comment-1292186" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292186">
			April 12, 2017 at 11:35 am</a>		</div>

		<p>How do you get the current directory for a non-current drive in a thread-safe manner, since GetFullPathNameW is not thread-safe?</p>
<p>Would it work to use CreateFile2 with FILE_FLAG_BACKUP_SEMANTICS to open &#8220;X:&#8221; as a directory handle then GetFinalPathNameByHandleW on that handle?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1292195">
				<div id="div-comment-1292195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292195">
			April 12, 2017 at 11:48 am</a>		</div>

		<p>The documentation makes it semi-clear that the reason why the function is not multi-thread safe is because the current directory is not multi-thread safe. You ask for the current directory on drive X: and immediately after the OS fill your buffer but before the function returns, another thread changes the current directory. You now have invalid, out of date information.</p>
<p>(IOW, a non-absolute path in a multi-threaded application is ill-defined.)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1292226">
				<div id="div-comment-1292226" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292226">
			April 12, 2017 at 12:53 pm</a>		</div>

		<p>I wish that the Win32 API had a way to open a file relative to an open directory handle rather than a process-wide current directory.  Linux supports this through openat() and friends.  The underlying Windows NT API also supports this feature (see OBJECT_ATTRIBUTES::RootDirectory of <a href="https://msdn.microsoft.com/en-us/library/bb432380(v=vs.85).aspx" rel="nofollow">NtCreateFile</a>), but Win32 doesn&#8217;t give a way to access it.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1292295">
				<div id="div-comment-1292295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292295">
			April 12, 2017 at 8:32 pm</a>		</div>

		<p>You can use the directory handle to list the contents of the directory, including the file IDs, and then use OpenFileById.  Awkward, though, and there are limitations &#8211; you can&#8217;t delete a file that way, for example.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-5" id="comment-1292365">
				<div id="div-comment-1292365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292365">
			April 13, 2017 at 6:52 am</a>		</div>

		<p>FileDispositionInfo can be used to delete. Symlinks seem to be problematic when walking a tree by fileids though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1292495">
				<div id="div-comment-1292495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292495">
			April 13, 2017 at 6:00 pm</a>		</div>

		<p>@skSdnW, if the handle was opened with OpenFileById the file system won&#8217;t let you set the delete flag.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-4" id="comment-1293165">
				<div id="div-comment-1293165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1293165">
			April 19, 2017 at 8:14 am</a>		</div>

		<p>Use GetFinalPathNameByHandle to retrieve the path to the directory, then you can open a file relative to that. <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364962(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa364962(v=vs.85)</a>.aspx</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1292276">
				<div id="div-comment-1292276" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292276">
			April 12, 2017 at 5:24 pm</a>		</div>

		<p>No it isn&#8217;t. Most applications don&#8217;t change their current directory after startup. Of course for those that do you are pretty much right.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fredericmagnyf odd alt depth-4" id="comment-1292305">
				<div id="div-comment-1292305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292305">
			April 13, 2017 at 1:09 am</a>		</div>

		<p>And most applications that do, do so without knowing it, thanks to an OPENFILENAME. Even OFN_NOCHANGEDIR doesn&#8217;t actually prevent this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-4" id="comment-1292375">
				<div id="div-comment-1292375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292375">
			April 13, 2017 at 7:05 am</a>		</div>

		<p>I&#8217;ve seen a printer driver that decided it would be fine to change the current directory of the process it was loaded in.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt depth-3 parent" id="comment-1292556">
				<div id="div-comment-1292556" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292556">
			April 14, 2017 at 7:42 am</a>		</div>

		<p>I am afraid (based on what is written in the MSDN article) that the hazard of <b>GetFullPathName()</b> (or <b>GetCurrentDir()</b>, even) in a multithreaded process is much more serious than receiving a not-up-to-date response. The docs explain that the current directory data is stored in a <i>not thread safe</i> global variable for the whole process, and an unlucky <b>SetCurrentDir()</b> in a parallel thread could cause data corruption.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-4 parent" id="comment-1292595">
				<div id="div-comment-1292595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292595">
			April 14, 2017 at 9:32 am</a>		</div>

		<p>I think that paragraph is being overly-cautious. From what I can tell, the calls themselves are thread-safe, but of course it&#8217;s hard to use them in a thread-safe manner because anybody can change the current directory at any time. I will double-check and revise the documentation as appropriate.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1292615">
				<div id="div-comment-1292615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Cohn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292615">
			April 14, 2017 at 11:05 am</a>		</div>

		<p>Thanks</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1292325">
				<div id="div-comment-1292325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292325">
			April 13, 2017 at 3:32 am</a>		</div>

		<p>DOS does not &#8220;predate the concept of directories&#8221;.  CP/M didn&#8217;t implement directories, but directories-in-a file-system concept was 15 years old before CP/M existed.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1292345">
				<div id="div-comment-1292345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292345">
			April 13, 2017 at 5:28 am</a>		</div>

		<p>Nitpickers&#8217; corner, eh ?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1292355">
				<div id="div-comment-1292355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292355">
			April 13, 2017 at 5:45 am</a>		</div>

		<p>It&#8217;s not nitpicking to point out that &#8220;X hadn&#8217;t been invented&#8221; is categorically different from &#8220;We didn&#8217;t implement X because we didn&#8217;t think it was important&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1292505">
				<div id="div-comment-1292505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292505">
			April 13, 2017 at 9:54 pm</a>		</div>

		<p>It seems to me to be nitpicking to interpret &#8220;preceded the concept of X&#8221; as &#8220;X hadn&#8217;t been invented yet&#8221; when the intended meaning in context was clearly &#8220;this particular operating system didn&#8217;t have the concept of X&#8221;.  :-)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1292685">
				<div id="div-comment-1292685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://Ä' rel='external nofollow' class='url'>Martin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292685">
			April 15, 2017 at 3:05 pm</a>		</div>

		<p>Typical calling names just because you&#8217;re 15 years late to the party.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1292735">
				<div id="div-comment-1292735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292735">
			April 16, 2017 at 4:34 pm</a>		</div>

		<p>Calling names?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-4" id="comment-1293405">
				<div id="div-comment-1293405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1293405">
			April 20, 2017 at 4:16 pm</a>		</div>

		<p>During the DOS 1.0 days, directories really <em>weren&#8217;t</em> an important feature.  The original IBM PC was a floppy-only system with a maximum disk capacity of 320 KB.  You&#8217;d have at most a few dozen files on a disk, and if you wanted to &#8220;organize&#8221; them, you&#8217;d move some of the files to another floppy.  It was the introduction of hard drives (which could hold a whopping 20 MB or so) in DOS 2.0 that made a hierarchical &#8220;directory&#8221; structure useful for PCs.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1292445">
				<div id="div-comment-1292445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292445">
			April 13, 2017 at 9:11 am</a>		</div>

		<p>&#8220;Predates the introduction of directories.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1292645">
				<div id="div-comment-1292645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292645">
			April 14, 2017 at 11:36 pm</a>		</div>

		<p>Am I the only one who wonders why anybody would want to do this?</p>
<p>The concept of &#8220;current directory on a drive&#8221; is long since deprecated. Why would anyone rely on it?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1292655">
				<div id="div-comment-1292655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292655">
			April 15, 2017 at 7:21 am</a>		</div>

		<p>If you are implementing a component that accepts paths, you don&#8217;t get to control what kinds of paths people will pass you.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1292695">
				<div id="div-comment-1292695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292695">
			April 15, 2017 at 3:12 pm</a>		</div>

		<p>Every application choses what they accept as a valid path. &#8220;Current dir on another drive&#8221; is not important to support, most users are not aware of this unexpected feature from the DOS age, it usually makes more sense to interpret it as an invalid path or relative to the root folder, that&#8217;s actually what many applications do anyway, as a user you cannot trust that this feature works anyway.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4" id="comment-1292715">
				<div id="div-comment-1292715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292715">
			April 15, 2017 at 3:52 pm</a>		</div>

		<p>If you are a library component, you probably need to support anything that can be passed to &#8220;CreateFile&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-4" id="comment-1292725">
				<div id="div-comment-1292725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292725">
			April 16, 2017 at 4:28 pm</a>		</div>

		<p>I think I&#8217;ve encountered a few command-line tools that don&#8217;t handle relative drive-letter paths properly, but not many.  It is such a useful feature, regardless of its historical origins, that it is certainly worth supporting whenever possible.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1292705">
				<div id="div-comment-1292705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292705">
			April 15, 2017 at 3:22 pm</a>		</div>

		<p>This is actually somewhat useful, due to NT&#8217;s futile attempt to prevent the current dir on the current drive from being removed (with a useless handle), a work a round is to change the current drive, remove the folder, and change the current drive back. Now you have an open handle to a non-existing folder, precisely as in w9x.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alexcohn even depth-2" id="comment-1292925">
				<div id="div-comment-1292925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1292925">
			April 18, 2017 at 9:35 am</a>		</div>

		<p>I wonder what happens if another process removes or renames the directory that is marked as current on drive X: for my process. Will my process now point into the air? Will it follow the renamed/moved path?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1293215">
				<div id="div-comment-1293215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1293215">
			April 20, 2017 at 12:20 am</a>		</div>

		<p>&#8220;a work a round is to change the current drive, remove the folder, and change the current drive back..&#8221;<br />
That is not possible: As soon as you change &#8220;the current drive&#8221;, you are changing the one and only real current directory of the process. This changes the handle that is used to lock the current directory.<br />
After you removed the previous-current directory, you are unable to change back to that. (The old cwd does no longer exists, so how do you expect the kernel to perform this, and in addition, give the process an &#8220;open handle to a non-existing folder&#8221; at that point?)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1293655">
				<div id="div-comment-1293655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gert van den Berg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170412-00/?p=95946#comment-1293655">
			April 23, 2017 at 6:41 am</a>		</div>

		<p>I&#8217;m assuming this applies per drive letter, not necessarily per partition, if non-letter mountpoints are used&#8230; (They probably don&#8217;t have seperate current directories?)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

