<html>
<head>
<title>What if my application is really two applications bundled into a single file, and I want them collected into two groups on the taskbar in Windows 7?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What if my application is really two applications bundled into a single file, and I want them collected into two groups on the taskbar in Windows 7?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 17, 2012 / year-entry #192</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to prevent multiple copies of their program from being grouped on the taskbar. They didn't give an explanation why, but let's assume that they are doing this for honorable purposes rather than as a way to annoy the user. For example, maybe their program is really multiple applications bundled inside a single...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to prevent multiple copies of their program
from being grouped on the taskbar.
They didn't give an explanation why,
but let's assume that they are doing this for honorable purposes
rather than as a way to annoy the user.
For example, maybe their program is really multiple applications
bundled inside a single EXE file for convenience.
</p>
<p>
The information you need to do this is in MSDN under
<a HREF="http://msdn.microsoft.com/en-us/library/dd378459(v=VS.85).aspx">
Application User Model IDs</a>,
specifically in the
<a HREF="http://msdn.microsoft.com/en-us/library/dd378459(v=VS.85).aspx#where">
<i>Where to assign an AppUserModelID</i></a> section.
I'll assume you've read the guidance there, and I'm just going to dive
into the implementation.
</p>
<p>
Suppose our scratch program can serve
<a HREF="http://snltranscripts.jt.org/75/75ishimmer.phtml">
both as a floor wax and as a dessert topping</a>.
It decides on the mode based on a command line switch.
</p>
<pre>
<font COLOR=blue>#include &lt;shlobj.h&gt;</font>

int WINAPI WinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPSTR lpCmdLine, int nShowCmd)
{
    MSG msg;
    HWND hwnd;

    g_hinst = hinst;

    if (!InitApp()) return 0;

    <font COLOR=blue>BOOL fDessert = strcmp(lpCmdLine, "-dessert") == 0;
    SetCurrentProcessExplicitAppUserModelID(fDessert ?
            L"Contoso.LitWare.DessertTopping" :
            L"Contoso.LitWare.FloorWax");</font>

    if (SUCCEEDED(CoInitialize(NULL))) {/* In case we use COM */
        hwnd = CreateWindow(
            TEXT("Scratch"),                /* Class Name */
            <font COLOR=blue>fDessert ? TEXT("Dessert topping") : TEXT("Floor wax"),</font>
            WS_OVERLAPPEDWINDOW,            /* Style */
            CW_USEDEFAULT, CW_USEDEFAULT,   /* Position */
            CW_USEDEFAULT, CW_USEDEFAULT,   /* Size */
            NULL,                           /* Parent */
            NULL,                           /* No menu */
            hinst,                          /* Instance */
            0);                             /* No special parameters */

    ...
}
</pre>
<p>
Run this program a few times, some with the
<code>-dessert</code> switch and some without.
Observe that the dessert versions and non-dessert versions
group separately.
</p>
<p>
The next level of fancy-pants behavior is to give different
AppIDs to different windows within a single process.
You might do this if your combination floor wax/dessert topping
program actually runs both modes inside the same process.
Something like this:
</p>
<pre>
<font COLOR=blue>#include &lt;shellapi.h&gt;
#include &lt;propkey.h&gt;
#include &lt;propvarutil.h&gt;
#include &lt;shlobj.h&gt;</font>

<font COLOR=blue>int g_cWindows = 0;</font>

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
  <font COLOR=blue>++g_cWindows;</font>
  return TRUE;
}

void
OnDestroy(HWND hwnd)
{
  <font COLOR=blue>if (--g_cWindows == 0)</font> PostQuitMessage(0);
}

<font COLOR=blue>HWND
CreateTaskWindow(BOOL fDessert, int nShowCmd)
{
  HWND hwnd = CreateWindow(
      TEXT("Scratch"),                /* Class Name */
      <font COLOR=blue>fDessert ? TEXT("Dessert topping") : TEXT("Floor wax"),</font>
      WS_OVERLAPPEDWINDOW,            /* Style */
      CW_USEDEFAULT, CW_USEDEFAULT,   /* Position */
      CW_USEDEFAULT, CW_USEDEFAULT,   /* Size */
      NULL,                           /* Parent */
      NULL,                           /* No menu */
      g_hinst,                        /* Instance */
      0);                             /* No special parameters */
  if (hwnd) {
    IPropertyStore *pps;
    HRESULT hr = SHGetPropertyStoreForWindow(hwnd, IID_PPV_ARGS(&amp;pps));
    if (SUCCEEDED(hr)) {
      <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx">IPropertyStore_SetValue</a>(pps, PKEY_AppUserModel_ID,
            fDessert ?
            L"Contoso.LitWare.DessertTopping" :
            L"Contoso.LitWare.FloorWax");
      pps-&gt;Release();
    }
    ShowWindow(hwnd, nShowCmd);
  }
  return hwnd;
}

void
OnChar(HWND hwnd, TCHAR ch, int cRepeat)
{
    switch (ch) {
    case 'd': CreateTaskWindow(TRUE, SW_SHOWNORMAL); break;
    case 'f': CreateTaskWindow(FALSE, SW_SHOWNORMAL); break;
    }
}

    HANDLE_MSG(hwnd, WM_CHAR, OnChar);</font>

int WINAPI WinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPSTR lpCmdLine, int nShowCmd)
{
    MSG msg;
    HWND hwnd;

    g_hinst = hinst;

    if (!InitApp()) return 0;

    <font COLOR=blue>BOOL fDessert = strcmp(lpCmdLine, "-dessert") == 0;</font>
    <font COLOR=red><strike>// SetCurrentProcessExplicitAppUserModelID(...);</strike></font>

    if (SUCCEEDED(CoInitialize(NULL))) {/* In case we use COM */
        hwnd = <font COLOR=blue>CreateTaskWindow(fDessert, nShowCmd);</font>

        <font COLOR=red><strike>// ShowWindow(hwnd, nShowCmd);</strike></font>
    ...
}
</pre>
<p>
This time, instead of setting the application ID globally,
we set it on a per-window basis.
When you run this program, you can press "f" to open a new floor wax window
or "d" to open a new dessert topping window.
As before, observe that the two types of windows group separately.
</p>
<p>
The last detail is setting the <code>System.AppUserModel.ID</code>
property on the shortcuts used to launch these programs.
You can do this from MSI by adding an entry to your
<code>Msi&shy;Shortcut&shy;Property</code> table,
or if you create your shortcuts programmatically, you do this by
setting the property yourself:
</p>
<pre>
 CComPtr&lt;IShellLink&gt; spsl;
 spsl.CoCreateInstance(CLSID_ShellLink);
 spsl-&gt;SetPath(TEXT("C:\\Path\\to\\scratch.exe"));
 <font COLOR=blue>CComQIPtr&lt;IPropertyStore&gt; spps(spsl);
 IPropertyStore_SetValue(spps, PKEY_AppUserModel_ID,
                         L"Contoso.LitWare.FloorWax");
 spps-&gt;Commit();</font>
 CComQIPtr&lt;IPersistFile&gt;(spsl)-&gt;Save(L"LitWare Floor Wax.lnk", TRUE);
</pre>
<p>
Next time, we'll look at another reason you might want
to customize how your application group on the taskbar
in Windows&nbsp;7.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1005733">
				<div id="div-comment-1005733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1005733">
			August 17, 2012 at 7:45 am</a>		</div>

		<p>Considering that every feature starts with -100 points, I&#39;m extremely surprised that someone took the time to actually implement this stuff. I assume VMs use this API for unity mode (well VMWare calls it that; basically every program inside VM gets a taskbar entry in the host)?</p>
<p>Other than that I don&#39;t really see where this would be used in practice</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-1005743">
				<div id="div-comment-1005743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1005743">
			August 17, 2012 at 7:46 am</a>		</div>

		<p>And some end user control over it: 7+ Taskbar Tweaker (<a rel="nofollow" target="_new" href="http://rammichael.com/7-taskbar-tweaker" rel="nofollow">rammichael.com/7-taskbar-tweaker</a>)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1005763">
				<div id="div-comment-1005763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Uh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1005763">
			August 17, 2012 at 7:51 am</a>		</div>

		<p>If only there was the option &quot;Group explorer windows but never other applications&quot; I will be in heaven.</p>
<p>(Ok I would be in heaven after the above item and office apps &#8211; excel in particular &#8211; started behaving like SDI apps).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1005783">
				<div id="div-comment-1005783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1005783">
			August 17, 2012 at 8:02 am</a>		</div>

		<p>I believe LibreOffice makes use of this feature. I think I saw a commit there doing something with AppUserModelID, and I believe they do something related in the registry too.</p>
<p>LibreOffice is a good example of the kind of program where this feature makes sense; it would allow the Writer windows to be grouped separate from the Calc windows, and so on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1005873">
				<div id="div-comment-1005873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BZ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1005873">
			August 17, 2012 at 9:47 am</a>		</div>

		<p>I think some web browsers segregate developer windows from actual web pages in this way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1005883">
				<div id="div-comment-1005883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1005883">
			August 17, 2012 at 9:56 am</a>		</div>

		<p>I wish the grouping behavior was more directly under control of the user.</p>
<p>Many applications today are web-based. &nbsp;I see no reason why the browser instance I have open for email (er, webmail) should be glommed to the browser instance where I do my MSDN searches, the one I use for accessing the bug database, or the one where I read blogs during long compiles. &nbsp;The only way to handle this today is to use a different browser for each task.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1005923">
				<div id="div-comment-1005923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1005923">
			August 17, 2012 at 11:24 am</a>		</div>

		<p>There was a manager who decided: &quot;Users should never be able to pin SDK/DDK documentation viewer on the taskbar.&quot; So he applied all his influence to make a special case for a shortcut with &quot;Documentation&quot; in it. Never mind -100 points. I guess they have things they could use to bully devs around at MS.</p>
<div class="post">[<i>Um, no, that&#39;s not what happened. Documentation links are filtered because <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/06/15/3301004.aspx" rel="nofollow">the same code that does Start menu filtering also does Taskbar filtering</a>. I like how you assume that something you don&#39;t like is the result of a conspiracy. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1005973">
				<div id="div-comment-1005973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1005973">
			August 17, 2012 at 12:31 pm</a>		</div>

		<p>For anyone who doesn&#39;t like grouped icons, remember that a two-row-high taskbar gives you a lot more room for taskbar icons. &nbsp;I set the option to disallow grouping completely, and I like it that way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1006003">
				<div id="div-comment-1006003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1006003">
			August 17, 2012 at 1:26 pm</a>		</div>

		<p>@voo,</p>
<p>If you read through the examples &#8212; Java and Silverlight, for example, each use a single executable to run multiple programs. &nbsp;The program is determined by which JAR/XAP is loaded. &nbsp;Going down that line, you have Python, Ruby, WSH, etc. that also work that way (one host app, but many different real applications running under it).</p>
<p>Similarly, there are times when you might use multiple apps &#8212; for example one way to deal with a hybrid console/windows app is to compile the app as a console app and compile the app as a Windows app, and have the console app launch the Windows app when required. &nbsp;Or maybe you want to have a patcher that runs before a game, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006043">
				<div id="div-comment-1006043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1006043">
			August 17, 2012 at 8:31 pm</a>		</div>

		<p>OK Dumb Question: How do I set task button by API call rather than COM interop to some library that calls in 100MB of dependencies for .NET applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1006073">
				<div id="div-comment-1006073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1006073">
			August 18, 2012 at 7:45 am</a>		</div>

		<p>@joshua,</p>
<p>Microsoft&#39;s shell folks are deathly allergic to C#. &nbsp;If they even use managed c++, they will have hives for a month. &nbsp;As a result, typically all shell, dwm, etc. involves interop. &nbsp;Additionally, the dev div guys have painted a line down the center of the hall, and if a shell guy crosses the line, then they run screaming to Ballmer. &nbsp;It&#39;s as annoying as the almost but not quite COM utilized by windows media that requires a wrapper library to work. &nbsp;Some of these are available in the windows 7 API pack on codeplex (on my phone right now and can&#39;t easily pull the URL), which is a volunteer effort by people on the API teams, as well as others, to cover managed code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006103">
				<div id="div-comment-1006103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1006103">
			August 18, 2012 at 6:38 pm</a>		</div>

		<p>If Microsoft hadn&#39;t seriously messed-up their C libraries, I&#39;d just build a native DLL to do the P/Invoke to COM inversion, but too bad really.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1006113">
				<div id="div-comment-1006113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1006113">
			August 19, 2012 at 11:27 am</a>		</div>

		<p>[Um, no, that&#39;s not what happened. Documentation links are filtered because the same code that does Start menu filtering also does Taskbar filtering. I like how you assume that something you don&#39;t like is the result of a conspiracy. -Raymond]</p>
<p>The KB 282066 was conveniently retired from circulation. Thanks, Microsoft, for deciding what we don&#39;t need anymore. Meanwhile, MS DOS 5.0 articles are still there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1006163">
				<div id="div-comment-1006163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120817-00/?p=6833#comment-1006163">
			August 20, 2012 at 10:48 am</a>		</div>

		<p>@alegr1: A quick (your favorite search engine) search to get the complete URL to the old article, followed by a Wayback archive searc (at <a href="http://www.archive.org" rel="nofollow">http://www.archive.org</a>) yielded the following historical snapshot of the page you&#39;re complaining about being missing:</p>
<p><a rel="nofollow" target="_new" href="http://web.archive.org/web/20081014014731/http://support.microsoft.com/kb/282066" rel="nofollow">web.archive.org/&#8230;/282066</a></p>
<p>Wayback is your friend.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

