<html>
<head>
<title>How do I disable the press-and-hold gesture for my window?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I disable the press-and-hold gesture for my window?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 27, 2017 / year-entry #52</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170227-00/?p=95585</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Digging back into ancient history.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had a program which responded to left mouse clicks,
but they found that when used with a touch screen,
when users touched the screen, the
<code>WM_LBUTTON&shy;DOWN</code> message didn't arrive
until the users lifted their fingers from the screen.
They wanted to know whether this was by design,
and also whether there was a way to get the
<code>WM_LBUTTON&shy;DOWN</code> message as soon as
the finger touches the screen.
</p>
<p>
Yes, this behavior is by design.
The system is waiting to see whether the user is making
a press-and-hold gesture.
If so, then the touch events are converted to
right-mouse-button messages
(<code>WM_RBUTTON&shy;DOWN</code>
and
<code>WM_RBUTTON&shy;UP</code>).
But if the finger does not remain in contact for a long time,
then the touch events are converted to left-mouse-button messages
(<code>WM_LBUTTON&shy;DOWN</code>
and
<code>WM_LBUTTON&shy;UP</code>).
</p>
<p>
The customer's program was targeting Windows&nbsp;7,
so they were looking for solutions that would work
on that platform.
</p>
<p>
Take our
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20030723-00/?p=43073">
scratch program</a>
and add the following:
</p>
<pre>
<font COLOR="blue">#include &lt;strsafe.h&gt; // StringCchPrintf
#include &lt;tpcshrd.h&gt; // WM_TABLET_QUERYSYSTEMGESTURESTATUS</font>

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
  <font COLOR="blue">g_hwndChild = CreateWindow(TEXT("listbox"), NULL,
        LBS_HASSTRINGS | WS_CHILD | WS_VISIBLE | WS_VSCROLL,
        0, 0, 0, 0, hwnd, NULL, g_hinst, 0);</font>
  return TRUE;
}

void
OnSize(HWND hwnd, UINT state, int cx, int cy)
{
    if (g_hwndChild) {
        MoveWindow(g_hwndChild, 0, 0, cx, <font COLOR="blue">cy/2</font>, TRUE);
    }
}


LRESULT CALLBACK
WndProc(HWND hwnd, UINT uiMsg, WPARAM wParam, LPARAM lParam)
{
  ...
  <font COLOR="blue">case WM_LBUTTONDOWN:
  case WM_LBUTTONUP:
  case WM_RBUTTONDOWN:
  case WM_RBUTTONUP:
  {
    TCHAR buffer[80];
    StringCchPrintf(buffer, 80, TEXT("%04x %d %d"), uiMsg,
                    GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam));
    ListBox_AddString(g_hwndChild, buffer);
  }
  break;

  case WM_TABLET_QUERYSYSTEMGESTURESTATUS:
    return TABLET_DISABLE_PRESSANDHOLD;</font>
  ...
}
</pre>
<p>
Most of this code is just creating a logging window so we can
see the message traffic.
(Note that we divide <code>cy</code> by 2 in the <code>OnSize</code>
function so that there is room at the bottom of the window for
touch activity.)
</p>
<p>
The interesting part is adding a handler for the
<code>WM_TABLET_QUERY&shy;SYSTEM&shy;GESTURE&shy;STATUS</code>
message and responding that we want to disable press-and-hold.
</p>
<p>
This successfully disables the press-and-hold gesture on Tablet PC
(remember that?),
allowing the left-button messages to be generated immediately
upon contact.
But it doesn't help for Windows 7 and above.
For that, we need something else:
</p>
<pre>
BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
  g_hwndChild = CreateWindow(TEXT("listbox"), NULL,
        LBS_HASSTRINGS | WS_CHILD | WS_VISIBLE | WS_VSCROLL,
        0, 0, 0, 0, hwnd, NULL, g_hinst, 0);

  <font COLOR="blue">GESTURECONFIG config;
  config.dwID = 0;
  config.dwWant = 0;
  config.dwBlock = GC_ALLGESTURES;
  SetGestureConfig(hwnd, 0, 1, &amp;config, sizeof(config));</font>

  return TRUE;
}
</pre>
<p>
This time, we disable all gestures using
<code>Set&shy;Gesture&shy;Config</code>.
This takes care of Windows 7 and higher.
</p>
<p>
So there are your options:
There's a "Windows XP and Windows Vista" solution,
and there's a
"Windows 7 and higher" solution.
Or you can just play it safe and use both.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1286485">
				<div id="div-comment-1286485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170227-00/?p=95585#comment-1286485">
			February 27, 2017 at 7:30 am</a>		</div>

		<p>It seems to me surprising that the new touchscreen features weren&#8217;t made to take advantage of the (admittedly few) existing things written for Tablet PC. I assume there&#8217;s a good reason for this (perhaps there were even fewer things written for it than I&#8217;m imagining so that it just wasn&#8217;t worth the time, or perhaps adding support caused more trouble than it&#8217;s worth)? Can anyone shed some light on this?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1286515">
				<div id="div-comment-1286515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170227-00/?p=95585#comment-1286515">
			February 27, 2017 at 9:10 am</a>		</div>

		<p>Apps written for XP-era Tablet PC are backwards compatible.  The new APIs simply expose more functionality.  SetGestureConfig was a new API for Win7 that allowed you to block ALL gestures of certain types rather than having to respond to each attempt to make a gesture.  Similarly, Windows 8 introduced WM_POINTER to replace the older WM_TOUCH model (and whatever API XP Tablet Mode used &#8211; I&#8217;ve forgotten), but apps coded against those old models will still function.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1286605">
				<div id="div-comment-1286605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170227-00/?p=95585#comment-1286605">
			February 28, 2017 at 2:37 am</a>		</div>

		<p>&gt;Apps written for XP-era Tablet PC are backwards compatible. The new APIs simply expose more functionality. </p>
<p>Raymond appears to be suggesting that old Tablet PC apps will only successfully disable press-and-hold on XP &amp; not Windows 7. Which I wouldn&#8217;t consider very compatible.</p>
<p>&#8220;This successfully disables the press-and-hold gesture on Tablet PC (remember that?), allowing the left-button messages to be generated immediately upon contact. But it doesn&#8217;t help for Windows 7 and above. For that, we need something else:&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1286655">
				<div id="div-comment-1286655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170227-00/?p=95585#comment-1286655">
			February 28, 2017 at 8:24 am</a>		</div>

		<p>It is a bit unclear, but I think what is happening is that the touch-and-hold gesture that existed in XP Tablet edition IS disabled.  However, other gestures remain enabled, so the decision that a touch is translated to a mouse event again has to be delayed to allow for gesture detection.</p>
<p>It&#8217;s not &#8220;disabling touch-and-hold&#8221; that fails on 7 and later, it&#8217;s the consequent behavior of event generation on contact, that no longer happens.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1286615">
				<div id="div-comment-1286615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170227-00/?p=95585#comment-1286615">
			February 28, 2017 at 7:32 am</a>		</div>

		<p>If SetGestureConfig was introduced in Windows 7 (and MSDN confirms that), then calling it won&#8217;t make the app compatible with Windows XP and up: it just won&#8217;t run on Windows XP and Vista.</p>
<p>(Unless you use GetProcAddress to get the function entry-point dynamically, of course.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1288196">
				<div id="div-comment-1288196" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IInspectable</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170227-00/?p=95585#comment-1288196">
			March 9, 2017 at 1:51 pm</a>		</div>

		<p>As I recall, there&#8217;s also the option to set a window property named &#8220;MicrosoftTabletPenServiceProperty&#8221; calling SetProp, that supports the same flags as the WM_TABLET_QUERYSYSTEMGESTURESTATUS message. This seems to be undocumented, with occasional MSDN entries hinting at it (like <a href="https://msdn.microsoft.com/en-us/library/ms812373.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/ms812373.aspx</a>). Unless my memory betrays me, this did work for Windows 7 as well.<br />
I&#8217;m wondering what&#8217;s the historic background, and why it isn&#8217;t documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1288265">
				<div id="div-comment-1288265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IInspectable</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170227-00/?p=95585#comment-1288265">
			March 10, 2017 at 1:11 am</a>		</div>

		<p>As I recall, there&#8217;s also the option to set a window property named &#8220;MicrosoftTabletPenServiceProperty&#8221; calling SetProp, that supports the same flags as the WM_TABLET_QUERYSYSTEMGESTURESTATUS message. This seems to be undocumented, with occasional MSDN entries hinting at it (like <a href="https://msdn.microsoft.com/en-us/library/ms812373.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/ms812373.aspx</a>). Unless my memory betrays me, this did work for Windows 7 as well.<br />
I&#8217;m wondering what&#8217;s the historic background, and why it isn&#8217;t documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

