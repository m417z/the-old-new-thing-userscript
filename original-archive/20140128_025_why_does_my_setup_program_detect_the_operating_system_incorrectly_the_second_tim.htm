<html>
<head>
<title>Why does my setup program detect the operating system incorrectly the second time I run it?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does my setup program detect the operating system incorrectly the second time I run it?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 28, 2014 / year-entry #26</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>65</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer reported that when their application called the Get­Version­Ex function, it sometimes reported incorrect values. Specifically, the logs collected from clients shows that the first time the program was run on a Windows 7 machine, the operating system was correctly reported as 6.1.7600 (Windows 7), but the second time it was run, the operating system was...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer reported that when their application called the <code>Get&shy;Version&shy;Ex</code> function, it sometimes reported incorrect values. Specifically, the logs collected from clients shows that the first time the program was run on a Windows&nbsp;7 machine, the operating system was correctly reported as 6.1.7600 (Windows&nbsp;7), but the second time it was run, the operating system was erroneously reported as 6.0.6000 (Windows Vista).</p>
<p> This was definitely strange behavior, and upon further questioning, the customer admitted that their application was a setup program. </p>
<p> The fact that it was a setup program was the missing ingredient. </p>
<p> What happened is that the setup program ran, correctly detected the version as Windows&nbsp;7, and then started installing its pre-requisite components. The installer for one of the pre-requisites failed, causing the entire setup to fail. </p>
<p> The <a href="http://msdn.microsoft.com/en-us/library/bb756937.aspx"> Program Compatibility Assistant</a> noticed that the initial attempt to install the program failed, and it guessed (based on its internal heuristics) that the problem was that the program had an incorrect operating system version check. After the first setup failed, the Program Compatibility Assistant puts up a dialog box saying, "Hey, I think I know what went wrong. This setup program has a bad operating system version check. Do you want to give it another shot?" If the client says, "Go for it", then it will run the setup program again, but with a false operating system version. </p>
<p> Unfortunately, the heuristic that the Program Compatibility Assistant used was a false positive in this case, so saying "Go for it" was the wrong answer. (Not like the client had any idea. This was a case of the computer <a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/04/26/120193.aspx"> asking the user a question they cannot answer</a>.) </p>
<p> The fix is to add a manifest to the setup program specifying whether it needs to run as administrator. It doesn't matter what the manifest says as its requirements; the fact that the manifest said anything at all means that the setup program understands the new rules introduced in Windows Vista and doesn't need the Program Compatibility Assistant's help. </p>
<p> (You can read <a href="http://msdn.microsoft.com/en-us/library/bb756937.aspx"> the <i>Excluding Programs from PCA</i> section</a> for other ways to disable the Program Compatibility Assistant for a program.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (65)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1102803">
				<div id="div-comment-1102803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102803">
			January 28, 2014 at 7:04 am</a>		</div>

		<p>Public service announcement: prefer using VerifyVersionInfo <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms725492(v=vs.85).aspx">msdn.microsoft.com/&#8230;/ms725492(v=vs.85).aspx</a> or the helper functions like IsWindows7OrGreater() <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/dn424959(v=vs.85).aspx">msdn.microsoft.com/&#8230;/dn424959(v=vs.85).aspx</a> rather than GetVersionEx().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1102833">
				<div id="div-comment-1102833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102833">
			January 28, 2014 at 7:55 am</a>		</div>

		<p>Actually, this only works on Vista. On Windows 7, just adding the manifest is not sufficient, you must also add the specific OS version to the manifest. (And apparently you&#39;ll need to continue updating your manifest with each OS release)</p>
<p>Win7 reference:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/cjacks/archive/2009/03/27/manifesting-for-compatibility-on-windows-7.aspx">blogs.msdn.com/&#8230;/manifesting-for-compatibility-on-windows-7.aspx</a></p>
<p>Win 8.1 reference:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/dn302074.aspx">msdn.microsoft.com/&#8230;/dn302074.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1102873">
				<div id="div-comment-1102873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102873">
			January 28, 2014 at 8:22 am</a>		</div>

		<p>In fact, you should always add a manifest with that entry to all your Win32 executables. We had problems with non-setup executables being detected as setup executables, which broke them. Disabling the bogus auto-detection and marking it explicitly (either as a setup or non-setup executable) is always better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1102883">
				<div id="div-comment-1102883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102883">
			January 28, 2014 at 8:28 am</a>		</div>

		<p>So, GetVersionEx is now tainted.</p>
<p>If MS doesn&#39;t undo that brain-damage, I&#39;m going to have to start reading the version number of kernel32.dll.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1102893">
				<div id="div-comment-1102893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102893">
			January 28, 2014 at 8:28 am</a>		</div>

		<p>&quot;(And apparently you&#39;ll need to continue updating your manifest with each OS release)&quot;</p>
<p>Well of course. If you don&#39;t update on every release there is no reason to assume you have re-tested on the new release, so there is no reason for the heuristics to exempt you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1102903">
				<div id="div-comment-1102903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Farnsworth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102903">
			January 28, 2014 at 8:33 am</a>		</div>

		<p>@Billy O&#39;Neal</p>
<p>It makes sense to say that you should update your manifest with each new tested OS release; that way, when Microsoft release a new Windows version, it can know that you tested against Windows 7 but not against Windows 8.1. This lets the new version limit which shims PCA considers; if you marked it as Windows 7 tested only, it can consider all shims for apps that worked on Windows 7 (excluding shims that don&#39;t make sense if you didn&#39;t use Windows 8 features), while if you mark it as tested against 8.1, it can consider all shims for apps that work on Windows 8.1, ignoring ones that fix up the differences between Windows 7 and Windows 8.1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1102913">
				<div id="div-comment-1102913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">George</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102913">
			January 28, 2014 at 8:36 am</a>		</div>

		<p>Ugh. Why does the OS need to lie about its age? It is not a middle-aged lady on a dating site.</p>
<p>There are often legitimate needs to know the real version. Sometimes different components need to be installed depending on the version. Sometimes the code needs to behave differently to work around known bugs in specific versions. A manifest is not always an option. If you have a DLL that is loaded in an unknown EXE (like if you are a shared component or a shell extension) then you are at the mercy of the hosting process.</p>
<p>For example I had a self-registering DLL that had to set different registry keys depending on the version. GetVersion tells lies because regsvr32 doesnât have a manifest. I had to resort to undocumented ways of getting to the truth (I shall not mention them here).</p>
<p>Maybe Vista telling old programs that they are running on XP was warranted, because there was a big difference between the two OSs. But since then the changes have been mostly evolutionary. Even differences between Windows 7 and Windows 8 were not that big for desktop APIs. So there can be a new function GetVersionNoLiesPlease, which only programs written post-Vista would know about.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1102933">
				<div id="div-comment-1102933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102933">
			January 28, 2014 at 8:51 am</a>		</div>

		<p>&quot;The fix is to add a manifest to the setup program specifying whether it needs to run as administrator.&quot;</p>
<p>Can you please provide the sample snippet of such manifest? Thank you!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1102943">
				<div id="div-comment-1102943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102943">
			January 28, 2014 at 8:59 am</a>		</div>

		<p>@George, if you&#39;re not sure why Windows lies about the version number, read this Old New Thing article <a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/02/13/72476.aspx">http://blogs.msdn.com/b/oldnewthing/archive/2004/02/13/72476.aspx</a> .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1102953">
				<div id="div-comment-1102953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio &amp;#39;Grijan&amp;#39;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102953">
			January 28, 2014 at 9:02 am</a>		</div>

		<p>#George: To maintain backwards compatibility, of course! Windows has to lie about its version because of the myriads of (setup) programs that do not check correctly. Windows 5.x (2000 and XP) had been around for about seven years (from late 1999 to late 2006), and many programmers that have forgotten there would be a later version got used to write their version checks as (dwMajorVersion == 5), instead of (dwMajorVersion &gt;= 5). When Windows 6.x (Vista, 7, 8, 8.1) came, those checks started failing, and those programs crashed telling they needed at least Windows 2000! The solution? Detect those programs and lie to them, tell them they are running Windows XP (5.1). The program now runs correctly, and the customer is happy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1102963">
				<div id="div-comment-1102963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">George</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102963">
			January 28, 2014 at 9:21 am</a>		</div>

		<p>@Rick &#8211; sure, let GetVersion lie, particularly about 5 vs 6 (it&#39;s its own fault for returning the bytes in the wrong order). I personally do MAKEWORD(HIBYTE(ver),LOBYTE(ver)) and use the version as a single number.</p>
<p>But why should GetVersionEx lie? Or why not have a new function that tells the truth?</p>
<div class="post">[<em>People test the version number with GetVersionEx incorrectly also. And what is the value of telling you &quot;You are running a version of Windows from the future&quot;? You don&#39;t know what to do with that information. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103003">
				<div id="div-comment-1103003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">technets</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103003">
			January 28, 2014 at 10:03 am</a>		</div>

		<p>There are often legitimate needs to know the real version. Sometimes different components need to be installed depending on the version. Sometimes the code needs to behave differently to work around known bugs in specific versions. A manifest is not always an option. If you have a DLL that is loaded in an unknown EXE (like if you are a shared component or a shell extension) then you are at the mercy of the hosting process.</p>
<p><!-- p>Welcome to Blog Business World


<p><a href="http://www.technets.info/" rel="nofollow" target="_new">http://www.technets.info/</a></p>




<div class="post">[<em>That explains why the installer needs to know past version numbers, but that doesn&#39;t explain future version numbers. Suppose you have a component with three versions: 4, 5, 6. You call GetVersion and it says 7. What do you do? Also, I deleted the spam link. -Raymond</em>]</div>


</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103013">
				<div id="div-comment-1103013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103013">
			January 28, 2014 at 10:16 am</a>		</div>

		<p>One perfectly legitimate (and perhaps the best) reason to need the actual OS version is for diagnostics. You don&#39;t want your telemetry to tell you that most users are on Vista when really they&#39;re on Win7, or that the crashes that all seem to be happening on Win7 are actually due to Win8 differences!</p>
<div class="post">[<em>This I accept since the program is not actually acting on the information, just reporting it. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103023">
				<div id="div-comment-1103023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103023">
			January 28, 2014 at 10:17 am</a>		</div>

		<p>[And what is the value of telling you &quot;You are running a version of Windows from the future&quot;? You don&#39;t know what to do with that information. -Raymond]</p>
<p>Don&#39;t bet on it.</p>
<div class="post">[<em>In practice, what happens is that the program puts up an error message that says &quot;This program is not supported on your version of Windows. You lose.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103033">
				<div id="div-comment-1103033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103033">
			January 28, 2014 at 10:47 am</a>		</div>

		<p>It seems to me that the situation boils down to &quot;should there be a compatibility mode on Windows version N that offers the application an environment that looks like a specific version less than N?&quot;</p>
<p>If the answer to that is &quot;yes&quot;, then of course the application should be told it&#39;s running on the less-than-N version. Otherwise it&#39;s in some bizarre nowhere-land that in some places resembles version N, in other places version less than N.</p>
<p>My answer to &quot;should there be&#8230;&quot; is &quot;no, let the damn app programmer fix their bugs&quot;. &nbsp;But this attitude probably explains why I don&#39;t have a few billion dollars in the bank.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103043">
				<div id="div-comment-1103043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103043">
			January 28, 2014 at 11:12 am</a>		</div>

		<p>[In practice, what happens is that the program puts up an error message that says &quot;This program is not supported on your version of Windows. You lose.&quot; -Raymond]</p>
<p>Bad programmer. Only display that error message if you know it&#39;s not going to work.</p>
<p>[This I accept since the program is not actually acting on the information, just reporting it. -Raymond]</p>
<p>So now we can imagine the tech support call. How do I write an API call to check the current Windows version to report it that does not fail on future Windows. In the Windows 2000 era, it would have gone GetVersionInfoEx. I wonder how it would go now. GetFileVersionInfo(&quot;kernel32.dll&quot;) starts to look attractive.</p>
<div class="post">[<em>&quot;Bad programmer.&quot; And that fixes the problem how? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hardon even thread-even depth-1" id="comment-1103063">
				<div id="div-comment-1103063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/gdalsnes' rel='external nofollow' class='url'>gdalsnes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103063">
			January 28, 2014 at 12:30 pm</a>		</div>

		<p>Bad logic in pca. If the problem was setup denying install because of incorrect version check, the the version check would be immediately followed by a message box saying so, and then terminating. In this case the installer does no such thing.</p>
<div class="post">[<em>PCA does not have natural language processing. It doesn&#39;t know how to read the error message and interpret it. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103073">
				<div id="div-comment-1103073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103073">
			January 28, 2014 at 12:58 pm</a>		</div>

		<p>We&#39;ve given up on GetVersionExW and now use a bunch of VerifyVersionInfoW calls to determine the OS version if we need it. &nbsp;For survey-type information, we use WMI, which doesn&#39;t lie; however, such information is never used to make decisions by the programs themselves, only to provide us statistical information, because future Windows versions&#39; compatibility fixes would not help our program run on those new versions.</p>
<p>I recently caught an open source product (libcurl) using VerifyVersionInfoW incorrectly right after they committed the change and asked them to change it. &nbsp;Thankfully, they did. =)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1103083">
				<div id="div-comment-1103083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103083">
			January 28, 2014 at 1:15 pm</a>		</div>

		<p>&gt; use a bunch of VerifyVersionInfoW calls to determine the OS version if we need it</p>
<p>Why a bunch? Why not one?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103093">
				<div id="div-comment-1103093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103093">
			January 28, 2014 at 2:20 pm</a>		</div>

		<p>Maurits, one possible reason is that &quot;To verify a range of system versions, you must call VerifyVersionInfo twice. For example, to verify that the system version is greater than 5.0 but less than or equal to 5.1, first call VerifyVersionInfo to test that the major version is 5 and the minor version is greater than 0, then call VerifyVersionInfo again to test that the major version is 5 and the minor version is less than or equal to 1.&quot;</p>
<p>I don&#39;t know that you&#39;d want to specifically do this but it&#39;s the first thing that comes to mind.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103103">
				<div id="div-comment-1103103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103103">
			January 28, 2014 at 3:11 pm</a>		</div>

		<p>[&quot;Bad programmer.&quot; And that fixes the problem how? -Raymond]</p>
<p>Taking it away from everybody because somebody misused it just causes other problems.</p>
<p>Just be glad nobody&#39;s written an installer that says &quot;GetVersionInfoEx lies! Giving up.&quot;</p>
<div class="post">[<em>Given that there are problems no matter how you slice it, the question is which set of problems is worse. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes odd alt thread-odd thread-alt depth-1" id="comment-1103113">
				<div id="div-comment-1103113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103113">
			January 28, 2014 at 3:17 pm</a>		</div>

		<p>I&#39;ve come to respect the lengths and measures Raymond and the rest of Microsoft take to fix compatibility issues. Having made a few compatibility hacks on some of my own projects, I know how challenging and frustrating this can be.</p>
<p>Perhaps the solution is to focus on an API for version comparison, rather than providing a multiple-piece version number. Something along the lines of:</p>
<p>int WindowsVersionGreaterThanMinimal( VERSION_INFO minimal );</p>
<div class="post">[<em>This is such a great idea, we <a href="http://msdn.microsoft.com/library/ms725492">added that API 14 years ago</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1102823">
				<div id="div-comment-1102823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102823">
			January 28, 2014 at 7:29 am</a>		</div>

		<p>When i read the solution (use an assembly manifest with a **requestedExecutionLevel** attribute), i instinctively wanted to up-vote the correct answer.</p>
<p>Bonus Chatter: [GetVersionEx](<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms724451.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms724451.aspx</a>) is deprecated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103123">
				<div id="div-comment-1103123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103123">
			January 28, 2014 at 3:30 pm</a>		</div>

		<p>@RickC, @Maurits:</p>
<p>This will call VerifyVersionInfo a bunch of times, and legitimately so:</p>
<p>HRESULT RunProgramInAwesomeSandbox(VARIOUS_PARAMETERS* params)</p>
<p>{</p>
<p> &nbsp;if(IsWindows8OrLater()) </p>
<p> &nbsp; &nbsp;return RunProgramUsingAppContainerAndUACLockdown(params);</p>
<p> &nbsp;if(IsWindowsVistaOrLater()) </p>
<p> &nbsp; &nbsp;return RunProgramUsingUACPermissionRestrictions(params);</p>
<p> &nbsp;else</p>
<p> &nbsp; &nbsp;return JustRunTheDamnProgram();</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1103133">
				<div id="div-comment-1103133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103133">
			January 28, 2014 at 3:35 pm</a>		</div>

		<p>Sure, something like that makes sense. I would add that a general approach would be to check for the existence of the specific features that you&#39;re using in a more direct fashion, rather than inferring the existence of the features from the OS version.</p>
<p>I was worried that they were doing something like</p>
<p>DWORD dwRealMajorVersion, dwRealMinorVersion;</p>
<p>for (each combination of major, minor) { VerifyVersionInfo(&#8230;); }</p>
<p>return dwRealMajorVersion, dwRealMinorVersion;</p>
<p>Doing so would miss the point of why GetVersionEx was deprecated in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1103153">
				<div id="div-comment-1103153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103153">
			January 28, 2014 at 3:53 pm</a>		</div>

		<p>What is fun about VerifyVersionInfo BTW is with things like XP SP2/Server 2003 SP1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103163">
				<div id="div-comment-1103163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dylan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103163">
			January 28, 2014 at 4:24 pm</a>		</div>

		<p>Honestly I don&#39;t think this is a case of asking the user a question they cannot answer. &nbsp;If the user was asked up front whether to fake the version number, that&#39;s clearly a question they couldn&#39;t answer. &nbsp;But here the intent of the question is &quot;do you want to try again with some weird settings that might help?&quot;. &nbsp;The user is able to answer that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103173">
				<div id="div-comment-1103173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103173">
			January 28, 2014 at 4:27 pm</a>		</div>

		<p>[Given that there are problems no matter how you slice it, the question is which set of problems is worse. -Raymond]</p>
<p>Do you really want do encourage people to not trust the APIs in the first place?</p>
<p>If this is how MS is going to play, than the guy who detected NT by looking at an obscurity in memory mapped files was doing it right.</p>
<div class="post">[<em>You trust the API. If the API lies to you, go along with the lie. Because the API is telling you &quot;Windows is emulating version N for this process.&quot; So you should do things the N way. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103183">
				<div id="div-comment-1103183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103183">
			January 28, 2014 at 4:54 pm</a>		</div>

		<p>@Yuhong: I checked for 8.1 because I needed to use rdgsbase. &nbsp;It led to finding a Visual Studio compiler bug, where it generated incorrect assembly code for rdgsbase &gt;.&lt;</p>
<p>I have a feeling that the reason Windows 7 is NT 6.1 rather than NT 7.0 is because of too many programs &quot;checking&quot; for UAC by looking for dwMajorVersion == 6 rather than &gt;= 6, like that incorrect libcurl commit I mentioned. &nbsp;Too many programs would think Windows 7 isn&#39;t Vista, even though most of the time they&#39;d be better off assuming it were.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1102973">
				<div id="div-comment-1102973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102973">
			January 28, 2014 at 9:32 am</a>		</div>

		<p>&nbsp; &quot;checks as (dwMajorVersion == 5), instead of (dwMajorVersion &gt;= 5)&quot;</p>
<p>Hmm. Yes, that&#39;s pretty much what it would take but &#8230; I&#39;ve been writing Windows version checks for a couple of decades now and I *still* can&#39;t believe that significant numbers of programmers are *that* stupid. I mean, to know that the past happened (and therefore a version check is required) but to not know that the future will happen (so &gt;= is the correct operator)? Really? Are these people constantly surprised to see the Sun rising *every* morning?</p>
<p>On the other hand, presumably MS have the data and I certainly haven&#39;t. So just how prevalent is this problem? And is it many isolated instances of idiocy, or did someone manage to slip &quot;==&quot; into a major application framework? And is it still happening in today&#39;s world, where fairly high-profile browser vendors issue major version updates on a seemingly weekly basis?</p>
<div class="post">[<em>The more common mistake is <code>if (dwMajorVersion &gt;= 5 &amp;&amp; dwMinorVersion &gt;= 1) /* test for 5.1 or higher */</code>. Browsers don&#39;t have this issue as much because most people don&#39;t check the browser minor version. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1102993">
				<div id="div-comment-1102993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1102993">
			January 28, 2014 at 10:00 am</a>		</div>

		<p>[The more common mistake is if (dwMajorVersion &gt;= 5 &amp;&amp; dwMinorVersion &gt;= 1) /* test for 5.1 or higher */. Browsers don&#39;t have this issue as much because most people don&#39;t check the browser minor version. -Raymond]</p>
<p>History repeating itself. IIRC, this was the same reason that Windows 95 didn&#39;t report its version as 4.00, because of the same kind of bad check for Windows 3.1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103053">
				<div id="div-comment-1103053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103053">
			January 28, 2014 at 11:28 am</a>		</div>

		<p>The compatibility shims aren&#39;t really for the programmer&#39;s benefit, but the *user&#39;s*. If you&#39;re trying to use a 10-year-old program it doesn&#39;t matter why the program suddenly stopped working in Windows version Y, but simply that it did. And if a user wants to force your program into thinking that it&#39;s running in Windows 95, you shouldn&#39;t second-guess them!</p>
<p>(Similar issues happen in pure virtualization environments too: when I run a VM in VirtualBox it hides the fact that my CPU has SSE4.1 and 4.2 because there are currently issues when those are used. Should I use them because I know they&#39;re there?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1103143">
				<div id="div-comment-1103143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103143">
			January 28, 2014 at 3:42 pm</a>		</div>

		<p>[The more common mistake is if (dwMajorVersion &gt;= 5 &amp;&amp; dwMinorVersion &gt;= 1) /* test for 5.1 or higher */. Browsers don&#39;t have this issue as much because most people don&#39;t check the browser minor version. -Raymond]</p>
<p>What is funny is that if Win7 was actually NT 7.0 and Win8 was actually NT 8.0, people would need to check the minor version less often. And how many programs are testing for Win8.1 right now?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103213">
				<div id="div-comment-1103213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103213">
			January 29, 2014 at 2:39 am</a>		</div>

		<p>As another example of this, Firefox used to owner-draw its own title bar. If you installed the desktop experience on Windows Server 2003 then Firefox would draw incorrectly because it only special-cased Windows XP. Fortunately when they switched to using VerifyVersionInfo two months ago they made the test !IsVistaOrLater().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103223">
				<div id="div-comment-1103223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103223">
			January 29, 2014 at 2:49 am</a>		</div>

		<p>@George: there can never be any sort of GetVersionNoLiesPlease, because people would start (mis)using it instead of GetVersionEx (which can lie). Then future versions of Windows would have to lie in GetVersionNoLiesPlease for backward compatibility, and then what? GetVersionNoLiesPleaseNoReally? GetTheRealVersionExExEx? GimmieDaVershunNoSh_t?</p>
<p>It already happened several times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103233">
				<div id="div-comment-1103233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103233">
			January 29, 2014 at 5:34 am</a>		</div>

		<p>Walls and Ladders is such a nice game &#8230;</p>
<p>Just frustrating for the API-maintainer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103203">
				<div id="div-comment-1103203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103203">
			January 28, 2014 at 10:40 pm</a>		</div>

		<p>Apparently, Joshua just refuses to accept the fact that Windows always comes with sorta-kinda &quot;emulators&quot; of its previous versions that are turned on automatically, and are pretty much unconfigurable. I&#39;d assume there is no such thing in the *nix ecosystem (I vaguely recollect that some minor version changes of Linux kernel broke binary compatibility, though I am not sure about it) â and if there is some OS-level trait which is not in *nix, and is in Windows, some people will automatically declare it &quot;stupid&quot;, or &quot;evil&quot;.</p>
<p>And &quot;Only display that error message if you know it&#39;s not going to work&quot; is&#8230; well. What&#39;s worse: </p>
<p>a) Launch the installation of a program, see &quot;Installed successsfully!&quot;, try to launch the program and oops, it crashes/terminates instantly without saying a thing â now what?</p>
<p>b) Launch the installation of a program, see &quot;The OS version is so far from the future that I am afraid to install this&quot;, re-launch the installation again with &quot;Run in Windows XP compatibility mode&quot;, &#8230; and hopefully it will work (BTW, will the installed exe-s be marked with the same compatibility flags?). If not, well, apparently the current Windows can&#39;t emulate Windows XP accurately enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103243">
				<div id="div-comment-1103243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103243">
			January 29, 2014 at 7:03 am</a>		</div>

		<p>@Joker_vd: I have 100% reliability of the emulator NOT working for my code. It would be better if I could tag my code &quot;never apply compatibility fixes&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103263">
				<div id="div-comment-1103263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103263">
			January 29, 2014 at 7:25 am</a>		</div>

		<p>I remember my old Mustek scanner, &nbsp;when you tried to install it would say &quot;Requires XP SP2&quot;. &nbsp;Of course I was running SP3 by then. &nbsp;I seem to remember I reinstalled XP, applied service pack 2, &nbsp;installed the driver then installed service pack 3 and everything was happy again. &nbsp;I think I was over due a reinstall anyway so it wasn&#39;t a huge issue for me. &nbsp;Today the scanner would go in the bin.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103273">
				<div id="div-comment-1103273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RP7</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103273">
			January 29, 2014 at 7:34 am</a>		</div>

		<p>It&#39;s something of a disgrace how many developers are incapable of checking version numbers correctly.</p>
<p>It&#39;s not a new problem. &nbsp;I heard that a lot of the difficulties people had with MS-DOS 4.0 arose because developers had got used to checking whether the DOS version number equalled 3. &nbsp;With DR DOS, a major feature was that by default the OS reported itself to applications as being DOS 3.31 (or 3.41, I forget). &nbsp;With MS-DOS 5 Microsoft added the ability to lie to MS-DOS.</p>
<p>Similarly when Vista was introduced, loads of people had trouble because imbecilic developers were checking whether the Windows version was 5. &nbsp;The problem was so severe that ever since, Microsoft hasn&#39;t dared increase the Windows version number, and so Vista, Win7, Win8 and Win8.1 have the version numbers 6.0, 6.1, 6.2, and 6.3 respectively.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103283">
				<div id="div-comment-1103283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103283">
			January 29, 2014 at 7:37 am</a>		</div>

		<p>In any case, having the ability to lie to an application about the version of the OS is nothing new: DOS had it for years in the setver.exe program: <a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/96767">support.microsoft.com/&#8230;/96767</a>. Which leads me to believe that Santayana&#39;s quote that &quot;Those who forget the lessons of history are doomed to repeat it&quot; applies equally well to programming as to other vocations!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd odd alt thread-odd thread-alt depth-1" id="comment-1103303">
				<div id="div-comment-1103303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103303">
			January 29, 2014 at 7:51 am</a>		</div>

		<p>It&#39;s my understanding (and Raymond can always correct me given he&#39;s closer to the source) that the reason why Windows 7 is version 6.1 (which should be Vista SP1) is because so many applications broke when ran as a non-admin (which was way more feasible to do on Vista than on XP), that app installers started checking the upper bounds of the OS version info. They didn&#39;t want to run on Vista+1 without double checking on their side that everything worked. This of course screwed up the Windows teams backwards compatibility checks because apps were no longer installing internal builds of Windows 7, so they had to roll the major version back to 6 to do back compat testing.</p>
<p>Also, does VerifyVersionInfo work if you check for Windows 8.1 without the manifest declaration? I ask because if you don&#39;t declare the 8.1 Guid in the exe manifest, GetVersionEx would return the values for 8.0. </p>
<p>Is there a .Net version of VerifyVersionInfo?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1103333">
				<div id="div-comment-1103333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103333">
			January 29, 2014 at 8:46 am</a>		</div>

		<p>Now, Raymond, tell me please, why does Windows 7, when a program crashes UNDER VISUAL STUDIO DEBUGGER, invokes the compatibility dialog?</p>
<div class="post">[<em>You seem to assume that I know the answer. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103343">
				<div id="div-comment-1103343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 81947228</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103343">
			January 29, 2014 at 9:14 am</a>		</div>

		<p>jader3rd,</p>
<p>The closest that comes to mind is System.Environment.OSVersion which returns a System.Version object based on GetVersionEx. The System.Version class is Comparable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103353">
				<div id="div-comment-1103353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103353">
			January 29, 2014 at 9:22 am</a>		</div>

		<p>Let me be That Guy and tell a Linux story&#8230;</p>
<p>Some years ago, the Linux kernel had two branches: the &quot;even&quot; branches were stable (2.0.x, 2.2.x, 2.4.x, and 2.6.x), and the &quot;odd&quot; branches were unstable (2.1.x, 2.3.x, and 2.5.x). Due to a new workflow enabled by the use of a DVCS, they ended up with a single stable branch (2.6.x).</p>
<p>One day, Linus decided to change the version scheme. The versions were in the 2.6.30+ range already, and everyone could see there wouldn&#39;t be a 2.7.x or 2.8.x anymore. So the version was changed to 3.x (starting with 3.0).</p>
<p>Readers to this blog can guess there was some breakage; the Linux kernel had been at the 2.x.y version for way too long (I started using Linux the last millennium, and it was already a 2.x.y kernel). One I recall was the Python build system, which used &quot;linux2&quot; as the operating system in the build scripts, and was not prepared to deal with a &quot;linux3&quot; (later versions fixed it to use just plain &quot;linux&quot;). As is common in the open source/free software world, the wrong parties are the ones which get fixed, so the kernel kept the 3.x version and the userspace programs got fixed.</p>
<p>Except, of course, for binary-only programs ;-) For these, a personality flag was added to the kernel, which when enabled for a process changes the reported version to be &quot;2.6.(40+x)&quot; instead of &quot;3.x&quot;.</p>
<p>So, yeah, even Linux has a built-in &quot;version lie&quot;. Only that it&#39;s manual instead of automatic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103383">
				<div id="div-comment-1103383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103383">
			January 29, 2014 at 9:38 am</a>		</div>

		<p>&gt;It&#39;s something of a disgrace how many developers are incapable of checking version numbers correctly.</p>
<p>Makes you wonder about the quality of the rest of the code, doesn&#39;t it?</p>
<p>Rule of thumb: if the installer is that screwed up, you probably don&#39;t want whatever it is refusing to install.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103453">
				<div id="div-comment-1103453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103453">
			January 29, 2014 at 12:33 pm</a>		</div>

		<p>[You seem to assume that I know the answer. -Raymond]</p>
<p>I do. The PCA is too stupid to check if a debugger is attached. Turning on fault tolerant heap on newly compiled applications running under the debugger is brain-damaged, but PCA does so anyway. If anytime you want to crash on heap corruption, this is it.</p>
<div class="post">[<em>I have no inside knowledge of the PCA. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1103473">
				<div id="div-comment-1103473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103473">
			January 29, 2014 at 3:39 pm</a>		</div>

		<p>&gt; does VerifyVersionInfo work if you check for Windows 8.1 without the manifest declaration?</p>
<p>Yes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103513">
				<div id="div-comment-1103513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103513">
			January 30, 2014 at 1:18 am</a>		</div>

		<p>@Engywuck: how else do you think the developer could charge you to run his program on your newfangled OS?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103503">
				<div id="div-comment-1103503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103503">
			January 29, 2014 at 10:43 pm</a>		</div>

		<p>Most insidious are the setup programs that don&#39;t even work with all sort of shims attached that pretend the version to be XP. We had to replace an older PC with some Simatic software on it and the installer not only refused to be run at a 64bit OS but also on Win7-32bit, because &quot;this version of windows is not supported, please upgrade&quot;. I managed to convince the setup program to start installing, but somewhere in the middle of it it broke again with &quot;hey, I checked, you lied, it&#39;s a nonsupported version&quot; &#8211; that&#39;s when I gave up. I would have understood if it shows a &quot;not supported&quot; warning, but not even *trying* to work&#8230; </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103743">
				<div id="div-comment-1103743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103743">
			January 30, 2014 at 12:19 pm</a>		</div>

		<p>No it doesn&#39;t. &nbsp;The dialog is more along the lines of &quot;Did this application install correctly?&quot; &nbsp;The user is either sitting there thinking &quot;Duh! Of course it did!&quot; &nbsp;or &quot;Duh! Of course it didn&#39;t!&quot; &nbsp;A little &quot;Details&quot; link &nbsp;that explains what the PCA found would be helpful for the more advanced users&#8230;or the Help Desk staff the less advanced users call because of the message.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103773">
				<div id="div-comment-1103773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103773">
			January 30, 2014 at 12:30 pm</a>		</div>

		<p>&quot;You trust the API. If the API lies to you, go along with the lie. Because the API is telling you &quot;Windows is emulating version N for this process.&quot; So you should do things the N way.&quot;</p>
<p>I once found a backup application was failing because it was marked with &quot;Run this program in compatibility mode for Windows Vista&quot;. &nbsp;It was getting the Vista version back and trying to do things the Vista way. &nbsp;Once the setting was removed, it started doing things the Windows 7 way and worked. &nbsp;I doubt that Windows is actually able to back up its version lies with full emulation of version N. &nbsp;Maybe in the future it&#39;ll be able to run all the old versions transparently in VMs, but it&#39;s not doing anything like that today.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd even thread-even depth-1" id="comment-1103793">
				<div id="div-comment-1103793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103793">
			January 30, 2014 at 1:36 pm</a>		</div>

		<p>I just finished coding up my first sample program using VerifyVersionInfo (in C# btw), and what a royal pain. No wonder most developers don&#39;t use it. I&#39;m sure most of the time devs just want to know if they&#39;re running at least a certain version of the OS. But VerifyVersionInfo is trying to solve every possible version gymnastics that anyone might ever stumble across. While I understand the technical purpose behind the dwlConditionMask, it starts to feel like it&#39;s more of then problem than the solution.</p>
<p>If Windows wants developers to only check for minimum version info they write a IsOsVersionAtLeast(DWORD major, DWORD minor, DWORD build, DWORD whateverThisFourthOneIs). That way I can just call IsOsVersionAtLeast(6,3,0,0) to find out if the program is running on Windows 8.1 or something greater.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd odd alt thread-odd thread-alt depth-1" id="comment-1103803">
				<div id="div-comment-1103803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103803">
			January 30, 2014 at 1:40 pm</a>		</div>

		<p>I just read Maurits&#39;s &quot;or the helper functions &quot; part of his comment. Sweet, I&#39;m glad that IsWindowsVersionOrGreater exists.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103933">
				<div id="div-comment-1103933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1103933">
			January 31, 2014 at 7:10 am</a>		</div>

		<p>This is also irreversible in many cases without requiring Users to MANUALLY REMOVE ALL OF THE CREATED ENTRIES FROM THE REGISTRY.</p>
<p>Frankly, unless the target application was written pre-WinXP, &quot;Compatibility Mode&quot; is garbage for garbage software written by garbage developers., and it does nothing but break working software.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104023">
				<div id="div-comment-1104023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104023">
			January 31, 2014 at 10:31 am</a>		</div>

		<p>@Anon:</p>
<p>As for second paragraph: First part is LOL, still have things to see&#8230; Second part: Garbage is certain comment not what it describes&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104073">
				<div id="div-comment-1104073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104073">
			January 31, 2014 at 12:40 pm</a>		</div>

		<p>@Klimax</p>
<p>I&#39;ve yet to encounter an application &quot;fixed&quot; with AppCompat that was not poorly written.</p>
<p>VERY few of the AppCompat shims are anything more than emulations of bugs or the poor security model of previous Windows versions. Developers abusing these issues should never be allowed near an IDE. They&#39;re the reason Windows has a garbage reputation for security in the first place.</p>
<p>The primary difference between Windows, OSX, and *n*x-alikes is that Windows developers are unwilling to outright tell third-party devs when they&#39;re writing garbage code.</p>
<div class="post">[<em>It doesn&#39;t matter if you tell them that they are writing garbage code. They don&#39;t care. They got their money from the contract job and are off doing something else now. The guy holding the bag is the corporation who paid a contractor to develop some in-house software. They have no in-house expertise to maintain the software (because that&#39;s why they hired the contractor after all). -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104173">
				<div id="div-comment-1104173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104173">
			February 1, 2014 at 9:02 am</a>		</div>

		<p>For some reason GetThemeBackgroundContentRect isn&#39;t telling me what the border width of a edit field is on Windows 7. I keep wondering whether I should do a version check&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104203">
				<div id="div-comment-1104203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104203">
			February 3, 2014 at 5:58 am</a>		</div>

		<p>@Raymond, your assumption that we don&#39;t know what to do with future versions of Windows is quite unimaginative, not to say condescendingly depreciative.</p>
<p>Here&#39;s a legitimate version check in a setup program without a manifest. Assume that the program was made in the year 2000, so it uses GetVersionEx. When it runs, it looks at the operating system&#39;s version. Then, it downloads on-demand the full installation package for this version of Windows, and runs it.</p>
<p>What could possibly go wrong?</p>
<p>Now, imagine any program which may download a component on demand. It doesn&#39;t have to be a setup program, it could be e.g. a service you run in a cluster. To be shimmed, it only has to have, anywhere in its name, one of the strings &quot;setup&quot; &quot;install&quot; &quot;patch&quot; &quot;update&quot; et al. So, I can&#39;t just name my programs as I want, e.g. mail-queue-dispatcher.exe. Or I must include a manifest.</p>
<p>But from Windows 8.1 on, I have to include the GUIDs of all Windows versions, and keep updating every time a new version of Windows is released, just because.</p>
<p>Quite frankly, this version shim seems completely arbitrary. It smells like Microsoft doesn&#39;t love desktop developers anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104213">
				<div id="div-comment-1104213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Katie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104213">
			February 3, 2014 at 6:14 am</a>		</div>

		<p>@John Doe</p>
<p>Those shims are only added once the PCA sees something that makes it think the installation has failed, and has had the user confirm that it should try with new settings. If your installer and your mail-queue-dispatcher program run properly, then that won&#39;t happen, and everything will work like it should.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104233">
				<div id="div-comment-1104233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104233">
			February 3, 2014 at 7:20 am</a>		</div>

		<p>@Katie, the simple fact that the program has &quot;setup&quot; or &quot;patch&quot; in its name is enough to ask the user for credentials to install something even before the program runs.</p>
<p>In the first case, the heuristic wins. But then, the program doesn&#39;t have a Windows 8.1 GUID in the manifest, because it doesn&#39;t have a manifest. So Windows 8.1 will lie to it. By what you&#39;re saying, if the installation fails, the next time it&#39;ll ahve shims for an older version of Windows.</p>
<p>In the second case, it&#39;s quite bad, because the program doesn&#39;t even purport to &quot;install&quot; anything in the sense of registering what it fetches to appear in Control Panel&#39;s &quot;Add or Remove Programs&quot; or &quot;Programs and Features&quot; (or whatever the name).</p>
<p>But note that I&#39;m quite more upset about the GetVersionEx issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104273">
				<div id="div-comment-1104273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Katie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104273">
			February 3, 2014 at 7:57 am</a>		</div>

		<p>@John Doe</p>
<p>I don&#39;t think it will lie to it that first time around, even without a manifest &#8211; the version lie is one of the shims that gets put in place if Windows thinks the install failed and pops up a dialog asking the user if they want to try with some compatibility settings in place. Note that in this article, the customer noted that it detected the version properly on the first run.</p>
<p>I don&#39;t know what all can trigger the failed installation detection, I know I&#39;ve seen plenty of false positives there. It&#39;s annoying, but it does at least make sure the user approves of applying the compatibility settings.</p>
<p>I had forgotten about the automatic UAC trigger, and I can see that being problematic on systems with older software with the right executable names. However, there does seem to be a little more intelligence to it &#8211; I just played around with renaming a file. Although things with &quot;patch&quot; in them trigger it, &quot;dispatch&quot; seems to disable it again. As long as you have a manifest saying it doesn&#39;t need to run as administrator the system will honor it &#8211; that doesn&#39;t need to be updated with each version of the OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104323">
				<div id="div-comment-1104323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104323">
			February 3, 2014 at 8:45 am</a>		</div>

		<p>@Katie</p>
<p>There is no intelligence to it. &quot;Setup&quot; is enough to trigger it, but many &quot;setup&quot; programs are simply self-extracting installers.</p>
<p>Just like determining file contents by file extension, this is a thing that shouldn&#39;t exist in the 21st century.</p>
<p>I also have several setup programs here that, when forced to run as non-admin via manifest, fail because PCA tries to elevate them anyway and collapses in on itself because the system doesn&#39;t allow it. That means that, for our installation program, we have to be careful not to use ANY indicator that it installs or sets up software, or we run the risk of file permissions and ownership being set improperly, security holes, the inability to install/update in a non-Admin environment, the inability to see mapped network shares during setup, [&#8230;]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104373">
				<div id="div-comment-1104373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104373">
			February 3, 2014 at 9:42 am</a>		</div>

		<p>@Katie, I&#39;m sure that was done with the best of intentions. It seems &quot;dispatch.exe&quot; and &quot;dispatcher.exe&quot; are hard-coded exceptions. Anything else will fall in the &quot;patch&quot; case, e.g. &quot;dispatching.exe&quot;, &quot;foo-dispatch.exe&quot;, &quot;dispatch-foo.exe&quot;.</p>
<p>As for the version shim, I think there are two separate subjects here: the failed installation shim and the Windows 8.1 shim for the lack of the Windows 8.1 GUID in the manifest. I think you&#39;re talking about the former. I was talking about the latter, then the former.</p>
<p>That is, a &quot;setup.exe&quot; without a manifest (remember, it was the year 2000) executed in Windows 8.1 will call GetVersionEx, which tells &quot;this is Windows 8&quot; due to the latter. Then, it&#39;ll proceed to download files for Windows 8 and run them. When Windows asks if the installation was successful and the user says &quot;no&quot;, the former shim will lower GetVersionEx&#39;s answer. In effect, &quot;setup.exe&quot; will never really succeed, even if it doesn&#39;t error or if the user says &quot;yes&quot;, because it didn&#39;t download and install the Windows 8.1 specific binaries.</p>
<p>To be fair, I haven&#39;t actually tested this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104423">
				<div id="div-comment-1104423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Katie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140128-00/?p=1943#comment-1104423">
			February 3, 2014 at 10:38 am</a>		</div>

		<p>@John Doe</p>
<p>Ah, that clears things up &#8211; I didn&#39;t realize that 8.1 lied about the version automatically unless there is a manifest. Now I see that the there has been a decent amount of discussion above related to that. I know I read it all when it was posted, so I&#39;m blaming my misunderstanding on trying to jump into the discussion on a Monday morning.</p>
<p>For a newer projct, you could make something that takes requirements from the server and passes them to VerifyVersionInfo in order to determine which installer to download, but of course there would have been no reason to expect GetVersionEx to lie back in 2000 for your example.</p>
<p>I do agree with everyone that the auto-UAC for setup programs is annoying and a hackish solution, but not including it would also cause problems for end users that aren&#39;t aware of compatibility settings. I&#39;m not sure why it wasn&#39;t implemented the same way as the failed installation shim.</p>
<p>Generally in these cases I tend to give Microsoft the benefit of the doubt, due to the pains they go through to ensure backwards compatibility as documented in many posts on this blog. </p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

