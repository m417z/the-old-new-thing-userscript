<html>
<head>
<title>On the unanswerability of the maximum number of user interface objects a program can create</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>On the unanswerability of the maximum number of user interface objects a program can create</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 1, 2006 / year-entry #298</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The answer to the question "What is the maximum number of window classes a program can register?" is not a number. Most user interface objects come from a shared pool of memory known as the "desktop heap". Although one could come up with a theoretical maximum number of window classes that can fit in the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The answer to the question "What is the maximum number of window classes a program can register?" is not a number.</p>
<p> Most user interface objects come from a shared pool of memory known as the "desktop heap". Although one could come up with a theoretical maximum number of window classes that can fit in the desktop heap, that number is not achievable in practice because the desktop heap is shared with all other user interface objects on the desktop. For example, menus and windows go into the desktop heap, as well as more obscure objects like active window enumerations, window positioning handles used by <code>DeferWindowPos</code>, and even how many threads have attached input queues (either implicitly done by having cross-thread parent/owner relationships or explicitly by calling the <code>AttachThreadInput</code> function). The more windows and menus you have, the less space available for other things like registered window classes. </p>
<p> Typically, when somebody asks this question, the real problem is that they designed a system to the point where desktop heap exhaustion has become an issue, and they need to redesign the program so they aren't so wasteful of desktop heap resources in general. (One customer, for example, was registering thousands of window classes in their program, which is excessive.) In the same way that somebody asking for the <a href="http://blogs.msdn.com/oldnewthing/archive/2005/07/29/444912.aspx"> maximum number of threads a process can create</a> is an indication that their program is in need of a redesign, a program that registers thousands of window classes needs to be given another look. After all, even just creating a thousand windows is excessive&mdash;any UI that shows the user a thousand windows is too confusing to be usable. </p>
<p> (Pre-emptive link: <a href="http://support.microsoft.com/?scid=126962"> Q126962: On the desktop heap</a>.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-415993">
				<div id="div-comment-415993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carrie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-415993">
			September 1, 2006 at 10:47 am</a>		</div>

		<p>The dread desktop heap!</p>
<p>A couple browser windows (any browser), outlook, visual studio, photoshop and 3dsmax opened together and you are 100% sure in hitting the default limit in less than 3 hours of work :( Folders start to open without icons or even they don&#8217;t open at all.</p>
<p>Seriously, this is one of those things that give the impression of instability when working on windows, even if the system was actually behaving in a stable way.</p>
<p>:(<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416003">
				<div id="div-comment-416003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin Dente</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416003">
			September 1, 2006 at 11:00 am</a>		</div>

		<p>Why is there a special, finite desktop heap anyways? Has this changed in Vista?</p>
<p>Like the previous poster, I&#8217;ve had machines where a half a dozen apps exhaust the DH for some reason. Very frustrating.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-416013">
				<div id="div-comment-416013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416013">
			September 1, 2006 at 11:18 am</a>		</div>

		<p>A lot of programmers, particularly .NET programmers, see one graphic == one control (which to a Win32 programmer == one window). If every file in a folder display was its own window, you&#8217;d blow the desktop heap pretty quickly.</p>
<p>Even if you&#8217;re coding your own control&#8217;s drawing, this way of coding is still simpler than having a single window drawing surface with lots of graphics objects on it. There isn&#8217;t really any problem coding your big surface to manage a collection of local objects, passing on painting requests and clicks to those objects, it&#8217;s just that developers don&#8217;t think of it.</p>
<p>One of my colleagues is developing something like this right now. I&#8217;ve told him he&#8217;s doing it wrong but right now it&#8217;s &#8216;just a prototype.&#8217; I really hope this isn&#8217;t a prototype that gets put into production.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416023">
				<div id="div-comment-416023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Naive Newbie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416023">
			September 1, 2006 at 12:05 pm</a>		</div>

		<p>Raymond: What&#8217;s preventing a program from using all available memory in the PC to register window classes? I thought heap space consideration was only necessary in win16/win9x? </p>
<p>Mike: So you are reinventing widgets? I thought that was thing of the last millennium. <br />Nowdays such stuff should be in a library/toolbox ready to use, no need to code that yourself.</p>
<div CLASS=post>[<i>Address space is not interchangeable. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416053">
				<div id="div-comment-416053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416053">
			September 1, 2006 at 12:29 pm</a>		</div>

		<p>&lt;&lt;One customer, for example, was registering thousands of window classes in their program, which is excessive.&gt;&gt;</p>
<p>It feels excessive to me, to you, and to others.<br />
<br />Starting programming in the DOS/memory segments/Win 3.0 time, I am used not to waste.<br />
<br />But I don&#8217;t remember seeing anyware a guideline of what is excessive and what is not.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416063">
				<div id="div-comment-416063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416063">
			September 1, 2006 at 1:26 pm</a>		</div>

		<p>Ok, let me put things together <br />Q: What is the maximum number of window classes a program can register? </p>
<p>A: Thousands of window classes [&#8230;] is excessive. </p>
<p>So there is no real known limit but the reasonable limit seems &#8220;thousands&#8221;. So maybe this answer would satisfy them&#8230; </p>
<div CLASS=post>[<i>Thousands is clearly excessive. Hundreds is also excessive. I would recommend not more than a dozen. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jeffdav even thread-even depth-1" id="comment-416073">
				<div id="div-comment-416073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jeffdav</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416073">
			September 1, 2006 at 1:35 pm</a>		</div>

		<p>No, a reasonable answer is &quot;tens&quot;. &nbsp;Internet Explorer registers less than ten. &nbsp;IE does, however, tend to eat up desktop heap. &nbsp;This is why you can generally only have about 40-60 IE windows open at a time&#8230; after that we run out of desktop heap. &nbsp;:-/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416083">
				<div id="div-comment-416083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416083">
			September 1, 2006 at 3:36 pm</a>		</div>

		<p>Did anyone every check the number of objects iTune takes. &nbsp; It takes about 1400 handles here, even if you run in mini mode. &nbsp;So basically if you have that, and one of Visual Studio and 3DSMax, Maya or XSI it can blow up very rapidly. &nbsp;I have a theory that iTune will never be fixed, since it makes the rest of windows look bad.</p>
<p>About the number of classes registered&#8230; &#8216;ten&#8217; is only good for trivial application. &nbsp;Look again at Max, Maya, XSI, these applications are like an office suite in one application, and they have dozens of custom controls, different views (graphs, shader tree, 3D viewports, property editors), etc. It&#8217;s not sloppy programming like a folder view where each item is an individual window. &nbsp;It&#8217;s really what it takes.<br />
<br />Of course these applications are the exception to the rule, I will concede that, there&#8217;re probably the worse case scenario.</p>
<p>Visual Studio 2005 also seems like pig.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000300008195987d even thread-even depth-1" id="comment-416093">
				<div id="div-comment-416093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Spire' rel='external nofollow' class='url'>Spire</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416093">
			September 1, 2006 at 4:29 pm</a>		</div>

		<p>I remember back when I used to run Internet Explorer under Windows 98.</p>
<p>Opening a large Slashdot discussion thread was like playing Russian roulette; if you&#8217;d happened to have been assigned &quot;moderator&quot; status that day, you&#8217;d be greeted by a page filled with hundreds of comboboxes. It was a sure-fire way to bring the entire system to its knees.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416103">
				<div id="div-comment-416103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jamie Lorentz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416103">
			September 1, 2006 at 4:42 pm</a>		</div>

		<p>J. Edward, are you sure that /. effect wasn&#8217;t intentional?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416123">
				<div id="div-comment-416123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416123">
			September 1, 2006 at 5:25 pm</a>		</div>

		<blockquote><p>
  &gt; J. Edward, are you sure that /. effect wasn&#8217;t intentional? </p>
<p>&gt;&gt; I have a theory that iTune will never be fixed, since it makes the rest of windows look bad. </p>
<p>I once had opened a website on absurd cospiracy theories, but I couldn&#8217;t see the icons !! Sure it was a plot of the webmaster to make me feel more stupid.</p>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416163">
				<div id="div-comment-416163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goplat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416163">
			September 1, 2006 at 11:12 pm</a>		</div>

		<p>When I used Windows 98, I&#8217;d often be unable to open the Options dialog in mIRC when other programs were running. Turned out it had hundreds of child windows in it, and they all had to be created even though only a few dozen were visible at a time. </p>
<p>Seems hardly anyone cares about efficiency any more. Firefox is probably the worst offender among programs I use. It leaks memory like crazy but the devs just don&#8217;t care, they&#8217;d rather implement some vector graphics format nobody uses.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416113">
				<div id="div-comment-416113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.winstep.net' rel='external nofollow' class='url'>Jorge Coelho</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416113">
			September 1, 2006 at 5:00 pm</a>		</div>

		<p>Ah-ah! I&#8217;ve been waiting for a long time for something like this to come up so I can ask two questions :-) :</p>
<p>1 &#8211; I like to have my XP system running for as long as possible, and frequently have many, many applications open at the same time (with 1GB of RAM this shouldn&#8217;t be an issue).</p>
<p>However, I&#8217;ve found out that after some time, I start having problems where folders and owner drawn menus do not display icons, windows do not open, the screen can no longer be captured via PRTSCR, etc&#8230; Something is obviously leaking.</p>
<p>The problem is that I am unable to indentify the culprit using Task Manager! Handles, GDI Objects, User Objects, NP Pool, Paged Pool, VM Size, Mem Usage, they all indicate &#8216;normal&#8217; values for the various applications.</p>
<p>I guess the problem here has something to do with the Desktop Heap, but since MS does not seem to provide an indicator for that, how do I (and any other normal user) indentify the &#8216;leaking&#8217; application?</p>
<p>2 &#8211; Possibly related, I&#8217;ve mentioned this before in the first suggestion box (I&#8217;ll cut &amp; paste, but it&#8217;s a bit long, sorry):</p>
<p>I&#8217;m the developer of NextSTART at Winstep Software Technologies.</p>
<p>One of the things NextSTART does is to &#8216;replace&#8217; the Windows startbar with it&#8217;s own version, capturing the Windows systray (or tray notification area, if you prefer) into it. The systray is very difficult to handle without replacing Explorer as the shell since there is no API to manipulate it, therefore a lot of &#8216;tricks&#8217; must be applied in order to make it behave properly. </p>
<p>One of the nicer tricks is to capture the Windows systray into the NextSTART startbar and render its background transparent (adding a drop shaddow to the icons in the process). For this I must capture an image of the systray into a bitmap in memory and work on it in order to make a &#8216;mask&#8217; Region, which is then applied to a container form. This must be done whenever there is a change in the systray (i.e.; icons are added or removed from it). Since the systray window does not have a persistent bitmap, before XP I was forced to show the whole systray in the desktop for a brief moment, including the background, in order to capture the contents &#8211; this caused an annoying flicker.</p>
<p>With XP&#8217;s PrintWindow API, the systray window no longer needs to be visible on the screen for me to capture the contents. However, because the container form still has the previous Region applied to it (and PrintWindow respects this), I&#8217;m still forced to temporarilly move the systray out of the container form and back onto the desktop. I do this by making the desktop the parent of the systray with Setparent while moving it *outside* the visible desktop area with SetWindowPos. I then capture the systray image with PrintWindow, move the systray back into the container with SetParent and re-adjust it&#8217;s position with SetWindowPos. </p>
<p>So far so good. The problem is that, after a while (like a couple of hours running!), moving the systray back to the container form with SetParent makes the CPU peak to 100% usage for nearly half a second &#8211; in other words, every time the systray gets updated, the whole system literally pauses. </p>
<p>Any idea what might be causing SetParent to induce such a high CPU usage and/or how to prevent this from happening? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416203">
				<div id="div-comment-416203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416203">
			September 2, 2006 at 5:54 am</a>		</div>

		<blockquote><p>
  &gt; Firefox is probably the worst offender among programs I use.</p>
<p>Do you really use only firefox and notepad ?!<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416253">
				<div id="div-comment-416253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cd ..</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416253">
			September 2, 2006 at 12:05 pm</a>		</div>

		<p>If an application could manage it&#8217;s resources itself in the available memory, the system should not have any problem either to do so.</p>
<p>We all know windows has fundamental resource handling problems. Nothing new to see here, move along.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416263">
				<div id="div-comment-416263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asmguru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416263">
			September 2, 2006 at 7:01 pm</a>		</div>

		<p>If we look at the contents of WNDCLASS &#8211; we will see that only class style is really what distinguish class from class. The rest of members are provided by the window procedure. The background can be drawn in WM_ERASEBKGND. The cursor can be set in WM_SETCURSOR. Icons and menus are also set dynamically at any point when HWND is ready. In conclusion, the application should register class names, like: &quot;AppName-XXXXXXXX&quot;, where XXXXXXXX is a hexadecimal value of class style.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416423">
				<div id="div-comment-416423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416423">
			September 4, 2006 at 2:39 pm</a>		</div>

		<p>Btw, in order to be able to run iTune, VC++ 2003 and one or two more apps without starting to menus, buttons, font, bitmaps, etc, I&#8217;ve modified the desktop heap size in the registry as the KB article in the blog entry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416443">
				<div id="div-comment-416443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416443">
			September 4, 2006 at 4:23 pm</a>		</div>

		<p>I would /really/ love to be able to watch the usage of the desktop heap. &nbsp;Many of my users have three or four monitors, so they run with dozens of windows open. &nbsp;After a few days, programs can&#8217;t create new windows, users can&#8217;t pop up menus, sometimes the whole desktop starts blinking violently. &nbsp;We bumped the limit in the registry from 3072 to 4096 and the problem seemed to reduce, but it feels bad to be groping about in the dark, randomly changing settings.</p>
<p>Raymond, do you know of any tools that can shed some light on the desktop heap usage?</p>
<div CLASS=post>[<i>Did you at least try searching for the answer yourself? It&#8217;s the number one hit on <a HREF="http://search.msn.com/results.aspx?q=desktop%20heap" rel="nofollow">MSN Search</a> and number three on <a HREF="http://www.google.com/search?q=desktop+heap" rel="nofollow">Google</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416473">
				<div id="div-comment-416473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416473">
			September 4, 2006 at 6:36 pm</a>		</div>

		<p>asmguru62&gt; Yeah, I got there a while back. &nbsp;In fact, I also noticed that most of the useful class styles (e.g. CS_HREDRAW and CS_VREDRAW) can be trivially simulated by the window procedure, too. &nbsp;So most of my programs register a single window class with CS_DBLCLKS and a window procedure that picks up an object based on the contents of GWL_USERDATA and calls methods in that based on the type of event being processed. &nbsp;Everything else is down to the event handlers to sort out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416483">
				<div id="div-comment-416483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416483">
			September 4, 2006 at 7:30 pm</a>		</div>

		<p>Goplat: make sure to set config.trim_on_minimize to 1, the firefox devs are doing something really inane as a workaround:</p>
<p><a rel="nofollow" target="_new" href="https://bugzilla.mozilla.org/show_bug.cgi?id=300689" rel="nofollow">https://bugzilla.mozilla.org/show_bug.cgi?id=300689</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416853">
				<div id="div-comment-416853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-416853">
			September 6, 2006 at 5:46 am</a>		</div>

		<blockquote><p>
  Did you at least try searching for the answer yourself?</p>
<p>Yes, I did look. &nbsp;I Googled and Googled, I raised it with Microsoft contacts (one of whom actually sent me a crufty script that claimed to do the job but didn&#8217;t), I looked all over. &nbsp;But this was a couple of years ago; perhaps dheapmon was released since then? &nbsp;Perhaps it should be mentioned on Q126962?</p>
<p>Bryan<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-419533">
				<div id="div-comment-419533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-419533">
			September 13, 2006 at 4:48 am</a>		</div>

		<p>The reason old Internet Explorers blow up on pages like slashdots article page with moderation is that they use normal controls for the form controls. A well-visited article could have hundreds of comments, each of which gets a drop-down list and each one would create a window.</p>
<p>Newer versions of IE use custom controls that look like the normal ones, but care is taken to avoid creating separate windows, just to combat this problem.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-419803">
				<div id="div-comment-419803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060901-11/?p=29883#comment-419803">
			September 13, 2006 at 5:05 pm</a>		</div>

		<p>If by &quot;newer&quot; you mean &quot;IE7&quot;, then you&#8217;re right. &nbsp;But any released version of IE (that is, 6SP1 and 6SP2) still uses a new window for every &lt;select&gt; element&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

