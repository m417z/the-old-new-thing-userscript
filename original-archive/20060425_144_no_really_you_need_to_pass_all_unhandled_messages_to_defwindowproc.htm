<html>
<head>
<title>No, really, you need to pass all unhandled messages to DefWindowProc</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>No, really, you need to pass all unhandled messages to DefWindowProc</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 25, 2006 / year-entry #145</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Earlier I had discussed that you have to return the special value BROADCAST_QUERY_DENY if you want to deny a device removal query because too many programs thought that they had covered "all" the Windows messages and just returned zero for the others. Since then, there have been lots of other window messages added to the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Earlier I had discussed that <a href="http://blogs.msdn.com/oldnewthing/archive/2003/12/05/55936.aspx"> you have to return the special value <code>BROADCAST_QUERY_DENY</code> if you want to deny a device removal query</a> because too many programs thought that they had covered "all" the Windows messages and just returned zero for the others. Since then, there have been lots of other window messages added to the system, many of which contain nontrivial processing in <code>DefWindowProc</code>. Yet, every so often, I run into another program that assumed that "Microsoft will never enhance the window manager" and simply returned zero for all the messages they didn't handle.</p>
<p> Indeed, often these programs don't even cover all the existing messages! One program had a helper window that handled just a few messages and returned zero for the rest. As a result, you couldn't shut down the computer because returning zero in response to the <code>WM_QUERYENDSESSION</code> message means, "No, don't shut down." I guess the people who wrote that program assumed you would shut down their program manually. (Programs are not supposed to fail a shutdown unless the decision came from the user, typically by clicking "Cancel" in response to a "Do you want to exit without saving?") Custom keyboard buttons like the volume control buttons didn't work either (if focus was on this helper window), because it neglected to pass the <code>WM_APPCOMMAND</code> message to the <code>DefWindowProc</code> function. </p>
<p> Therefore, once again, I implore you: If you don't handle a message in your window procedure, pass it to the <code>DefWindowProc</code> function. Your customer base thanks you. </p>
<p> (Note for people who take what I say too literally: If you are using a framework, then follow that framework's protocol for indicating that you want default message processing to occur. For example, dialog procedures do not pass unhandled messages to the <code>DefWindowProc</code> function; they merely return <code>FALSE</code> to indicate that default processing should take place.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-373193">
				<div id="div-comment-373193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373193">
			April 25, 2006 at 11:16 am</a>		</div>

		<p>Yes, ofcourse (I do that). But using DefWindowProc is always a little bit creepy because so much things that I don&#8217;t know about, so I implement more WM handlers then I&#8217;d actually need, just to ensure a proper state and nice handling instead of ignoring it and let Windows figure it out by itself, which cannot possibly know how my program would best handle it so just does a &quot;safety measure&quot; to ensure nothing breaks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-373243">
				<div id="div-comment-373243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373243">
			April 25, 2006 at 12:53 pm</a>		</div>

		<p>I wonder if some of the problem comes from people who confuse dialog box handling with regular window handling&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-373273">
				<div id="div-comment-373273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373273">
			April 25, 2006 at 1:55 pm</a>		</div>

		<p>I mean &quot;because it does so many things&quot;&#8230; funny I got errors when trying to post this correction.. hmm</p>
<p>&lt;title&gt;Error&lt;/title&gt;<br />
<br />&lt;meta name=&quot;GENERATOR&quot; content=&quot;Microsoft Visual Studio .NET 7.1&quot;&gt;</p>
<p>Clever self-aware program ;*)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-373313">
				<div id="div-comment-373313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.workmatesreunited.co.uk/userinfo.cgi?g=CFE165F6-300B-11D8-9647-A0E8FAADEDCE' rel='external nofollow' class='url'>Rowland Shaw</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373313">
			April 25, 2006 at 4:26 pm</a>		</div>

		<p>It&#8217;s not just old applications that continue to report failiure in response to WM_QUERYENDSESSION:<br />
<br /><a rel="nofollow" target="_new" href="http://lab.msdn.microsoft.com/ProductFeedback/viewfeedback.aspx?feedbackid=d6dc37dc-13b6-4f88-aff8-2ec7f035d9b8" rel="nofollow">http://lab.msdn.microsoft.com/ProductFeedback/viewfeedback.aspx?feedbackid=d6dc37dc-13b6-4f88-aff8-2ec7f035d9b8</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-373383">
				<div id="div-comment-373383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373383">
			April 25, 2006 at 8:43 pm</a>		</div>

		<blockquote><p>
  For example, dialog procedures do not pass<br />
  <br />&gt; unhandled messages to the DefWindowProc<br />
  <br />&gt; function; they merely return FALSE to<br />
  <br />&gt; indicate that default processing should take<br />
  <br />&gt; place.)</p>
<p>100% true, but seeing it in this context an idea has popped up. &nbsp;To programmers who are less skilled, and/or who copy sample code without noticing that the source and destination contexts differ in this way, it might not be obvious that dialog procs and window procs differ in this way. &nbsp;Also is there some possibility that the documentation of dialog procs might have been less clear in the past than it is now? &nbsp;Or maybe wizards generated bad code, somewhat like Visual Studio 2005 still generating bad code for winmain functions? &nbsp;If it&#8217;s not always the programmer&#8217;s fault then I wish something could be done to help, though in this situation it seems pretty difficult to help.</p>
<p>Um, by the say, why isn&#8217;t it CallWindowProc(DefWindowProc, &#8230;, &#8230;, &#8230;)?<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-373423">
				<div id="div-comment-373423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.georg-rottensteiner.de' rel='external nofollow' class='url'>Endurion</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373423">
			April 26, 2006 at 3:08 am</a>		</div>

		<p>I deem it weird that anyone can return 0 to all unhandled messages and not notice that he&#8217;s having A) massive displaying problems and B) massive behaviour problems with that particular window.</p>
<p>Unless a &quot;lucky&quot; constellation of handled messages and two blind eyes&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-373393">
				<div id="div-comment-373393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373393">
			April 25, 2006 at 8:57 pm</a>		</div>

		<p>Detection of bad handling should be fairly simple though:<br />
<br />1) Have a dummy message, WM_QUERYPROPERHANDLING for instance and make it clear in the docs that *only* DefWindowProc can properly handle this message. For added reliability, you could just use a random unassigned message ID.<br />
<br />2) Have DefWindowProc return a pseudo-random magic value for this message. The value should be as unpredictable as possible and the algorithm to generate it should change in every single version and edition of Windows.</p>
<p>Then, periodically send the dummy message to all applications. See which ones respond correctly. For applications that do not, ignore their responses to WM_QUERYENDSESSION and other &nbsp;messages where returning 0 can be bad for the user.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-373443">
				<div id="div-comment-373443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373443">
			April 26, 2006 at 6:09 am</a>		</div>

		<p>I like the ideas of Stu and Luc Rooijakkeers. &nbsp;In fact it would be nice for any debug version of a program (with or without a debug version of Windows) to get killed on an Assert when it misbehaves this way. &nbsp;This assert won&#8217;t fix old programs but it will help fix new ones.</p>
<p>My previous comment has a bug. &nbsp;I asked if the documentation of dialog procs used to be less clear in the past, but the correct question would be if the documentation of window procs used to be less clear in the past. &nbsp;If anyone copied code from a dialog proc into a window proc, they could be in bad shape, same as if they used window proc code generated by some automated wizards.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-373413">
				<div id="div-comment-373413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Luc Rooijakkeers</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373413">
			April 26, 2006 at 2:44 am</a>		</div>

		<p>Stu: What you suggest would be possible I guess, but the problem is compounded by the fact that a program may have multiple message-handling loops (think modal dialogs, for example).</p>
<p>Personally, I&#8217;d feel safer if every such &quot;bad if not handled properly&quot; message would be *immediately* preceded by such a &quot;test default handling&quot; message. It&#8217;s not like they are that frequent (i.e. many times per second) anyway&#8230;</p>
<p>Reserving a certain range for the random message id would be best, I think, to discourage developers from just adding a single case WM_QUERYPROPERHANDLING: to their message handling code. And of course this *would* need to be documented properly and added to message tracing code etc. Perhaps using a pseudo-registered window message would work for this?</p>
<p>Is it actually even possible to look up the name of a registered window message?</p>
<p>Finally, to make this probing message really work for developers, the debug version of windows (or even better, any program being debugged?) should complain when the message ISN&#8217;T being handled properly, preferably with a &quot;never bother me again about this particular version of this particular executable&quot; option (where &quot;particular version&quot; should include version numbers and file date/time to account for continuing development).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-373473">
				<div id="div-comment-373473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373473">
			April 26, 2006 at 10:32 am</a>		</div>

		<p>What&#8217;s up with the Windows XP caption bar messages?</p>
<p><a rel="nofollow" target="_new" href="http://groups.google.com/group/microsoft.public.win32.programmer.ui/browse_thread/thread/39f679322067d1f1/90cb0e2fe2b5141c?tvc=2" rel="nofollow">http://groups.google.com/group/microsoft.public.win32.programmer.ui/browse_thread/thread/39f679322067d1f1/90cb0e2fe2b5141c?tvc=2</a></p>
<p>My windowproc also just returns 0 on them. Iirc it goes like this (shortened):</p>
<p>UINT msg = message|1;<br />
<br />if (msg == 0xAF) return 0;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-373563">
				<div id="div-comment-373563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373563">
			April 26, 2006 at 11:35 am</a>		</div>

		<p>&quot;It&#8217;s not just old applications that continue to report failiure in response to WM_QUERYENDSESSION&quot;</p>
<p>Wow! &nbsp;It&#8217;s almost funny that Rowland Shaw&#8217;s link points to a product feedback on the brand-spanking-new SQL Server 2005, which aborts a shutdown request before the user even answers the &quot;save or abandon&quot; dialog box. </p>
<p>Almost funny, but not quite.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-msdnarchive odd alt thread-odd thread-alt depth-1" id="comment-373623">
				<div id="div-comment-373623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MSDN Archive</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373623">
			April 26, 2006 at 1:23 pm</a>		</div>

		<p>Rowland, you are evil!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-373673">
				<div id="div-comment-373673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://demosaic.blogspot.com' rel='external nofollow' class='url'>Mike Fried</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373673">
			April 26, 2006 at 3:35 pm</a>		</div>

		<p>So if DefWindowProc is so important, and this issue is common, then why not have a compatability flag to change the behavior around calling the Window with specific messages. Basically, when you call the WndProc, and it returns that it didn&#8217;t handle the message, check if the DefWindowProc was called. This is simply a matter of having something like so:</p>
<p>threadGlobalWasDefaultProcUsed = false;<br />
<br />result = CallWndProc( &#8230; );<br />
<br />if( compatFlagZZZZ &amp;&amp; messageNeedsDefaultHandling( &#8230; ) &amp;&amp; 0 == result &amp;&amp; !threadGlobalWasDefaultProcUsed )<br />
<br />{<br />
<br /> &nbsp; // The app didn&#8217;t process the message and didn&#8217;t care to ask Windows to process the message<br />
<br /> &nbsp; result = DefWindowProc( &#8230; );<br />
<br />}</p>
<p>How evil is a solution like this? How likely would it be to break existing functionality? Would adding an app compatability flag for this be a bad solution? My guess is that this kind of problem/solution has huge testing problems. I wonder if tools like App Verifier check these kinds of problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-373703">
				<div id="div-comment-373703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373703">
			April 26, 2006 at 5:32 pm</a>		</div>

		<p>Then they could&#8217;ve better not export the DefWindowProc API at all in the first place, and use it internally whenever the window procedure returns 0. (much like the dialog procs)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-373743">
				<div id="div-comment-373743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373743">
			April 26, 2006 at 6:19 pm</a>		</div>

		<p>I like the idea to help debuggers to check for this, but IMHO a lazy programmer will always wreak havoc. You can plug a few critical holes (is this one?), but no amount of code can plug laziness. And by trying you just create a mess for the OS maintainer and a pain for other developers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-373833">
				<div id="div-comment-373833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.1060.org/blogxter/publish/5' rel='external nofollow' class='url'>Steve Loughran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-373833">
			April 27, 2006 at 4:59 am</a>		</div>

		<p>all laptop users must hate apps that dont let you suspend or shutdown, its a mistaken attempt by the app to stop you doing something they feel is misguided or wrong. Office 2000, for example wont let you suspend if you are reading a network file, even if that is one in a folder you&#8217;ve marked as &#8216;available offline&#8217;. There&#8217;s nothing like pulling a laptop out of a bag to find it overhot, battery down to 7% and a dialog saying &quot;you cannot suspend&quot; to make you feel ill will to developers and general.</p>
<p>Windows vista will take the veto of suspend (WM_POWER) out of apps, but not drivers, which peeves me. IMO unsigned drivers shouldnt have the right either, as it means they havent been through WHQL yet. WM_QUERYENDSESSION is the same: system shutdown is too important to let an app veto.</p>
<p>If an app can only save its state on a clean close, then the app is broken. they should go read up on &quot;crash only software&quot; and rethink what they are doing</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-374303">
				<div id="div-comment-374303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-374303">
			April 27, 2006 at 3:56 pm</a>		</div>

		<p>Any way to find out what window is doing this? &nbsp;My laptop will occasionally refuse to shutdown. &nbsp;Never a message telling me why. &nbsp;I typically kill every process I can and it&#8217;ll shut down.</p>
<p>I suppose one of these days when I&#8217;m not in a hurry to leave I&#8217;ll have to kill a process and try a shutdown, kill another and shutdown, etc. &nbsp;It&#8217;d be a pain but at least I might find the misbehaving program that way.</p>
<p>Your entry just got me thinking that maybe I could write a little console program to send that message to every window and tell me which one refused the shutdown.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-375243">
				<div id="div-comment-375243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-375243">
			April 29, 2006 at 7:54 pm</a>		</div>

		<p>I hope all these gems are clearly listed in a Windows Logo certification requirements document somewhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-375323">
				<div id="div-comment-375323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-375323">
			April 30, 2006 at 1:20 pm</a>		</div>

		<p>Neil: I guess I don&#8217;t understand how this proposed &quot;certification requirement&quot; document would be any different from just a list of &quot;common mistakes and how to avoid them&quot; that applies to all programs, not just programs submitted to certification.</p>
<p>In other words, why hide it in the certification requirements? Shouldn&#8217;t it be in the core documentation? Oh wait, it already is: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/windowprocedures/aboutwindowprocedures.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/windowprocedures/aboutwindowprocedures.asp</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-377663">
				<div id="div-comment-377663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-377663">
			May 5, 2006 at 10:02 pm</a>		</div>

		<p>I think Neil&#8217;s idea was that a listing in the requirements wouldn&#8217;t only inform (or hide as the case may be) the requirement to developers, but would also have an effect on testing. &nbsp;That is, to get the logo, programs would have to pass a test that would include testing for this case.</p>
<p>I do wonder how some programs get logos that they pretty obviously aren&#8217;t qualified for. &nbsp;Some such programs aren&#8217;t even made by the company that issues the logos.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-380993">
				<div id="div-comment-380993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michkap/archive/2006/05/15/598548.aspx' rel='external nofollow' class='url'>Sorting It All Out</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-380993">
			May 15, 2006 at 10:45 pm</a>		</div>

		<p>As far back as elementary school, there may have been times when notes were being passed. The note would&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-568053">
				<div id="div-comment-568053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.shugye.com/2007/11/why-do-we-even-have-the-defwindowproc-function-%e4%b8%ba%e4%bb%80%e4%b9%88%e6%88%91%e4%bb%ac%e9%9c%80%e8%a6%81defwindowproc-%e5%87%bd%e6%95%b0-48.html' rel='external nofollow' class='url'>Why do we even have the DefWindowProc function? 为什么我们需要DefWindowProc 函数 &laquo; Cloudsun&#8217;s Daily Review</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060425-16/?p=31413#comment-568053">
			November 17, 2007 at 10:18 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.shugye.com/2007/11/why-do-we-even-have-the-defwindowproc-function-%e4%b8%ba%e4%bb%80%e4%b9%88%e6%88%91%e4%bb%ac%e9%9c%80%e8%a6%81defwindowproc-%e5%87%bd%e6%95%b0-48.html" rel="nofollow">http://www.shugye.com/2007/11/why-do-we-even-have-the-defwindowproc-function-%e4%b8%ba%e4%bb%80%e4%b9%88%e6%88%91%e4%bb%ac%e9%9c%80%e8%a6%81defwindowproc-%e5%87%bd%e6%95%b0-48.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

