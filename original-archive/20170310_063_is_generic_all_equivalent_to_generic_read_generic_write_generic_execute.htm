<html>
<head>
<title>Is GENERIC_ALL equivalent to GENERIC_READ | GENERIC_WRITE | GENERIC_EXECUTE?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Is GENERIC_ALL equivalent to GENERIC_READ | GENERIC_WRITE | GENERIC_EXECUTE?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 10, 2017 / year-entry #64</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Only if the object says so.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to know whether passing
<code>GENERIC_ALL</code>
as an access mask is effectively equivalent to passing
<code>GENERIC_READ | GENERIC_WRITE | GENERIC_EXECUTE</code>.
Specifically, they were interested in the answer to this question
with respect to the <code>Create&shy;File</code> function.
</p>
<p>
Okay, first question first. Is
<code>GENERIC_ALL</code>
effectively equivalent to
<code>GENERIC_READ | GENERIC_WRITE | GENERIC_EXECUTE</code>?
</p>
<p>
The answer is "It depends."
</p>
<p>
Each object decides what these generic access masks mean.
Now, the intended use is that
<code>GENERIC_READ</code>
correspond to whatever "read" access means for an object,
<code>GENERIC_WRITE</code>
correspond to whatever "write" access means for an object,
and
<code>GENERIC_EXECUTE</code>
correspond to whatever "execute" access means for an object.
It's also the intended use that
<code>GENERIC_ALL</code>
represent whatever access makes the most sense for "all access".
</p>
<p>
But that's just the intended use.
There is nothing physically preventing an object from giving
those four generic access masks nonsensical values.
Because
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20080929-00/?p=20733/">
anybody can make up a generic mapping</a>.
Therefore, there's nothing you can guarantee about the
relationship between the generic access masks beyond
"they are what the object decides they are."
</p>
<p>
In practice,
<code>GENERIC_ALL</code>
is at least as big as
<code>GENERIC_READ | GENERIC_WRITE | GENERIC_EXECUTE</code>,
but it can be bigger.
For example, for files (which is probably what
the customer is asking about when they talk about
<code>Create&shy;File</code>), the values are defined
as follows,
in <code>winnt.h</code>:
</p>
<pre>
#define DELETE                           (0x00010000L)
#define READ_CONTROL                     (0x00020000L)
#define WRITE_DAC                        (0x00040000L)
#define WRITE_OWNER                      (0x00080000L)
#define SYNCHRONIZE                      (0x00100000L)

#define STANDARD_RIGHTS_REQUIRED         (0x000F0000L)

#define STANDARD_RIGHTS_READ             (READ_CONTROL)
#define STANDARD_RIGHTS_WRITE            (READ_CONTROL)
#define STANDARD_RIGHTS_EXECUTE          (READ_CONTROL)

#define FILE_READ_DATA            ( 0x0001 )    // file &amp; pipe
#define FILE_LIST_DIRECTORY       ( 0x0001 )    // directory

#define FILE_WRITE_DATA           ( 0x0002 )    // file &amp; pipe
#define FILE_ADD_FILE             ( 0x0002 )    // directory

#define FILE_APPEND_DATA          ( 0x0004 )    // file
#define FILE_ADD_SUBDIRECTORY     ( 0x0004 )    // directory
#define FILE_CREATE_PIPE_INSTANCE ( 0x0004 )    // named pipe


#define FILE_READ_EA              ( 0x0008 )    // file &amp; directory

#define FILE_WRITE_EA             ( 0x0010 )    // file &amp; directory

#define FILE_EXECUTE              ( 0x0020 )    // file
#define FILE_TRAVERSE             ( 0x0020 )    // directory

#define FILE_DELETE_CHILD         ( 0x0040 )    // directory

#define FILE_READ_ATTRIBUTES      ( 0x0080 )    // all

#define FILE_WRITE_ATTRIBUTES     ( 0x0100 )    // all

#define FILE_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x1FF)

#define FILE_GENERIC_READ         (STANDARD_RIGHTS_READ     |\
                                   FILE_READ_DATA           |\
                                   FILE_READ_ATTRIBUTES     |\
                                   FILE_READ_EA             |\
                                   SYNCHRONIZE)

#define FILE_GENERIC_WRITE        (STANDARD_RIGHTS_WRITE    |\
                                   FILE_WRITE_DATA          |\
                                   FILE_WRITE_ATTRIBUTES    |\
                                   FILE_WRITE_EA            |\
                                   FILE_APPEND_DATA         |\
                                   SYNCHRONIZE)

#define FILE_GENERIC_EXECUTE      (STANDARD_RIGHTS_EXECUTE  |\
                                   FILE_READ_ATTRIBUTES     |\
                                   FILE_EXECUTE             |\
                                   SYNCHRONIZE)
</pre>
<p>
Right off the bat, you can see that
of the standard rights,
<code>FILE_ALL_ACCESS</code>
includes <code>STANDARD_RIGHTS_REQUIRED</code>,
whereas the
<code>FILE_GENERIC_*</code> values include only
<code>STANDARD_RIGHTS_*</code>, all of which are
defined as <code>READ_CONTROL</code>.
This means that
<code>FILE_ALL_ACCESS</code>
includes <code>DELETE</code>,
<code>WRITE_DAC</code>,
and
<code>WRITE_OWNER</code>
which are not included in any of the other generic access masks.
(<code>SYNCHRONIZE</code> is explicitly added by all of the
<code>FILE_GENERIC_*</code> access masks.)
</p>
<p>
If you study it a bit more, you'll see that
<code>FILE_ALL_ACCESS</code>
also includes
<code>FILE_DELETE_CHILD</code>,
which is not present in any of the other
generic access masks.
</p>
<p>
So even in the specific case of file access,
we see that
<code>GENERIC_ALL</code> is not equivalent to
<code>GENERIC_READ | GENERIC_WRITE | GENERIC_EXECUTE</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1288355">
				<div id="div-comment-1288355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288355">
			March 10, 2017 at 8:14 am</a>		</div>

		<p>#define STANDARD_RIGHTS_READ             (READ_CONTROL)<br />
#define STANDARD_RIGHTS_WRITE            (READ_CONTROL)<br />
#define STANDARD_RIGHTS_EXECUTE          (READ_CONTROL)</p>
<p>Is that a copy/paste error?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1288365">
				<div id="div-comment-1288365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288365">
			March 10, 2017 at 8:15 am</a>		</div>

		<p>Oh, I suppose not.  Sorry.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-3" id="comment-1288415">
				<div id="div-comment-1288415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288415">
			March 10, 2017 at 11:50 am</a>		</div>

		<p>I know, that is a bit funky. It made me think a lot about it when I first saw it too.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1288375">
				<div id="div-comment-1288375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288375">
			March 10, 2017 at 8:23 am</a>		</div>

		<p>Sometimes these really fine-grained security constraints are useless.</p>
<p>If you give somebody SC_MANAGER_CREATE_SERVICE you gave away the farm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1288385">
				<div id="div-comment-1288385" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DSN</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288385">
			March 10, 2017 at 8:27 am</a>		</div>

		<p>#define STANDARD_RIGHTS_REQUIRED         (0x000F0000L)</p>
<p>Hidden commentary in the header file?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1288426">
				<div id="div-comment-1288426" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Ransom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288426">
			March 10, 2017 at 7:15 pm</a>		</div>

		<p>Raymond, please forgive me for abusing your comment system but it was the best way I knew to contact you about a problem with your blog.</p>
<p>There&#8217;s a 10-year-old blog entry you wrote: <a href="https://blogs.msdn.microsoft.com/oldnewthing/20070516-00/?p=26843/" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20070516-00/?p=26843/</a></p>
<p>The comments are still there, but the body text is missing. The posts around it appear to be fine.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-2 parent" id="comment-1288445">
				<div id="div-comment-1288445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288445">
			March 11, 2017 at 1:27 am</a>		</div>

		<p><a href="https://web.archive.org/web/20100124145141/http://blogs.msdn.com/oldnewthing/archive/2007/05/16/2659903.aspx" rel="nofollow">https://web.archive.org/web/20100124145141/http://blogs.msdn.com/oldnewthing/archive/2007/05/16/2659903.aspx</a></p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1288455">
				<div id="div-comment-1288455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Ransom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288455">
			March 11, 2017 at 4:07 am</a>		</div>

		<p>Thanks! I figured the Wayback machine would have it, but I didn&#8217;t know the correct URL to search for.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1 parent" id="comment-1288766">
				<div id="div-comment-1288766" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1288766">
			March 14, 2017 at 8:48 am</a>		</div>

		<p>It&#8217;s interesting that FILE_GENERIC_WRITE doesn&#8217;t include FILE_DELETE_CHILD, or DELETE.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1289095">
				<div id="div-comment-1289095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170310-00/?p=95705#comment-1289095">
			March 15, 2017 at 12:31 pm</a>		</div>

		<p>That&#8217;s how file permissions work.  Granting &#8220;Write&#8221; access on a file to a user or group grants the write data, append data, write attributes, and write extended attributes permissions.  It does not grant the Delete permission on the file.  Delete is the difference between the Write and Modify permissions.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

