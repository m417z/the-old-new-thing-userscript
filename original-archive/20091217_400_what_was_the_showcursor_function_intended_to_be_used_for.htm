<html>
<head>
<title>What was the ShowCursor function intended to be used for?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What was the ShowCursor function intended to be used for?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 17, 2009 / year-entry #401</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Back in the days when Windows was introduced, a mouse was a fancy newfangled gadget which not everybody had on their machine. Windows acknowledged this and supported systems without a mouse by having keyboard accelerators for everything (or at least that was the intent). But if the design stopped there, you'd have a dead cursor...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Back in the days when Windows was introduced,
a mouse was a fancy newfangled gadget
which not everybody had on their machine.
Windows acknowledged this and supported systems without
a mouse by having keyboard accelerators for everything
(or at least that was the intent).
But if the design stopped there, you'd have a dead cursor
in the middle of your screen all the time,
which you could move around if you had a mouse,
which you didn't.
</p>
<p>
Enter the <code>ShowCursor</code> function.
</p>
<p>
The <code>ShowCursor</code> function takes a parameter
that indicates whether you want to show or hide the cursor.
(It would perhaps be more verbosely named
<code>ChangeCursorShowState</code>.)
If you call <code>ShowCursor(TRUE)</code> then the cursor
show count is incremented by one;
if you call <code>ShowCursor(FALSE)</code> then the cursor
show count is decremented by one.
A cursor is show on the screen if the cursor show count is greater
than or equal to zero.
</p>
<p>
When Windows starts up, it checks if you have a mouse.
If so, then the cursor show count is initialized to zero;
otherwise, it is initialized to negative one.
That way, you don't get an annoying immovable cursor on the screen
if you don't have a mouse.
</p>
<p>
If a program entered a state where it wanted to show the cursor
even on systems without a mouse, it would call
<code>ShowCursor(TRUE)</code> when it entered the state,
and
<code>ShowCursor(FALSE)</code> when it left it.
One such state might be when activating the keyboard interface
for selecting a rectangular region in a document.
Under these conditions, a program naturally is expected to
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2007/07/06/3716170.aspx#3838293">
move the cursor around in response to user actions</a>,
even if the user didn't move the physical mouse hardware.
</p>
<p>
But the most common reason for forcing the cursor to be shown
is in order to show an hourglass cursor because it's busy.
That's right, back in the mouseless days, code to display
an hourglass cursor went like this:</p>
<pre>
HCURSOR hcurPrev = SetCursor(LoadCursor(NULL, IDC_WAIT));
<font COLOR=blue>ShowCursor(TRUE); // force cursor shown on mouseless systems</font>
... perform long operation ...
<font COLOR=blue>ShowCursor(FALSE); // re-hide cursor on mouseless systems</font>
SetCursor(hcurPrev);
</pre>
<p>
Conversely, if a program entered a state where it wanted to hide
the cursor even on systems with a mouse, it would call
<code>ShowCursor(FALSE)</code> when it entered the state,
and
<code>ShowCursor(TRUE)</code> when it left it.
For example, you might do this when showing a slide show.
</p>
<p>
Let's look at how this all worked out in practice.
I use a table because people seem to like tables.
</p>
<table STYLE="border-collapse: collapse">
<tr>
<td STYLE="border: solid .75pt black"></td>
<th STYLE="border: solid .75pt black">Machine with mouse</th>
<th STYLE="border: solid .75pt black">Machine without mouse</th>
</tr>
<tr>
<td STYLE="border: solid .75pt black">Normal</td>
<td ALIGN=right STYLE="border: solid .75pt black">0 (cursor shown)</td>
<td ALIGN=right STYLE="border: solid .75pt black">-1 (cursor hidden)</td>
</tr>
<tr>
<th COLSPAN=3 STYLE="border: solid .75pt black">Enter mode where cursor should be forced shown</th>
</tr>
<tr>
<td STYLE="border: solid .75pt black"><code>ShowCursor(TRUE)</code></td>
<td ALIGN=right STYLE="border: solid .75pt black">1 (cursor shown)</td>
<td ALIGN=right STYLE="border: solid .75pt black">0 (cursor shown)</td>
</tr>
<tr>
<th COLSPAN=3 STYLE="border: solid .75pt black">Exit mode where cursor should be forced shown</th>
</tr>
<tr>
<td STYLE="border: solid .75pt black"><code>ShowCursor(FALSE)</code></td>
<td ALIGN=right STYLE="border: solid .75pt black">0 (cursor shown)</td>
<td ALIGN=right STYLE="border: solid .75pt black">-1 (cursor hidden)</td>
</tr>
<tr>
<th COLSPAN=3 STYLE="border: solid .75pt black">Enter mode where cursor should be forced hidden</th>
</tr>
<tr>
<td STYLE="border: solid .75pt black"><code>ShowCursor(FALSE)</code></td>
<td ALIGN=right STYLE="border: solid .75pt black">-1 (cursor hidden)</td>
<td ALIGN=right STYLE="border: solid .75pt black">-2 (cursor hidden)</td>
</tr>
<tr>
<th COLSPAN=3 STYLE="border: solid .75pt black">Exit mode where cursor should be forced hidden</th>
</tr>
<tr>
<td STYLE="border: solid .75pt black"><code>ShowCursor(TRUE)</code></td>
<td ALIGN=right STYLE="border: solid .75pt black">0 (cursor shown)</td>
<td ALIGN=right STYLE="border: solid .75pt black">-1 (cursor hidden)</td>
</tr>
</table>
<p>
Now that all systems come with a mouse as standard equipment,
this historical information is not of much use,
but there it is in case you were wondering.
(And in a case of <i>everything old is new again</i>,
the growing popularity of touch computing means that
you once again have a class of computers with no mouse.
So maybe this information is useful after all.
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2009/10/28/9913810.aspx">
Just a fluke, I assure you</a>.)
</p>
<p>
Back in the old 16-bit days,
this counter was a global state,
along with other window manager states like the focus window
and the input queue.
During the conversion to Win32,
the cursor show counter became a thread-local state.
(Naturally,
multiple threads could merge their cursor show counters
by attachment.)
Consequently, when a thread calls <code>ShowCursor</code>
it affects the cursor show state only for windows that
belong to that thread.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-796153">
				<div id="div-comment-796153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796153">
			December 17, 2009 at 7:18 am</a>		</div>

		<p>What if a program exited unexpectedly? Did the system reroll the previous changes to cursor state?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-796163">
				<div id="div-comment-796163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796163">
			December 17, 2009 at 7:18 am</a>		</div>

		<p>What happens if you called ShowCursor(FALSE) but then forgot to call ShowCursor(TRUE) and another app called ShowCursor(FALSE)&#8230; but DID remember to call ShowCurstor(TRUE)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-796173">
				<div id="div-comment-796173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796173">
			December 17, 2009 at 7:23 am</a>		</div>

		<p>Sorry my bad, I missed the end bit about thread-specific cursor state.</p>
<p>:D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-796193">
				<div id="div-comment-796193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan_works</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796193">
			December 17, 2009 at 7:28 am</a>		</div>

		<p>Playing with our Surface machine here, I&#8217;ve always wondered why a cursor jumps out every now and then.. (and getting it to go hide again &#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-796213">
				<div id="div-comment-796213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796213">
			December 17, 2009 at 7:52 am</a>		</div>

		<p>Also remember that with Windows 2.03 on a 8086, outputting on the screen without visible cursor and outputting to the screen with visible cursor were very different from the performance perspective! I know some programs and programmers that used ShowCursor() to increase the speed of the output.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-796233">
				<div id="div-comment-796233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796233">
			December 17, 2009 at 9:25 am</a>		</div>

		<p>I can remember writing graphics programs under DOS with a mouse (and an installed mouse driver).</p>
<p>You needed to hide the mouse cursor before drawing to the screen, and then show the mouse cursor when you were done drawing. &nbsp;Otherwise, when you moved the mouse around there would be remnants of the mouse left behind where the application was drawing. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-796243">
				<div id="div-comment-796243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796243">
			December 17, 2009 at 9:30 am</a>		</div>

		<p>This is very interesting. &nbsp;I never thought about those uses of the ShowCursor. &nbsp;I&#8217;ve always thought it was primarily for hiding the cursor when it shouldn&#8217;t be shown, for example, during a slide presentation or video playback.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-796293">
				<div id="div-comment-796293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796293">
			December 17, 2009 at 11:58 am</a>		</div>

		<p>This behavior of course led to the ubiquitous forum thread:</p>
<p>A: &quot;How do I hide the cursor?&quot;</p>
<p>B: &quot;ShowCursor(FALSE)&quot;</p>
<p>A: &quot;I tried that, and it doesn&#8217;t work&quot;</p>
<p>C: &quot;You have to call it in a loop, like this:</p>
<p>while( ShowCursor(FALSE) ) {}&quot;</p>
<p>B: &quot;But [why that&#8217;s bad]&quot;</p>
<p>A: &quot;Thanx, C, that fixed it!&quot;</p>
<p>B: &quot;Aaaaaugh!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-796333">
				<div id="div-comment-796333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796333">
			December 17, 2009 at 12:54 pm</a>		</div>

		<p>&quot;And in a case of everything old is new again, the growing popularity of touch computing means that you once again have a class of computers with no mouse.&quot;</p>
<p>Good grief, even more of these dang 80s fashions are making themselves popular again. &nbsp;I&#8217;m not really looking forward to the shoulder pads and aviator sunglasses, but at least we&#8217;ll get miniskirts back.</p>
<p>Oh, and music might be worth listening to again ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-796373">
				<div id="div-comment-796373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796373">
			December 17, 2009 at 4:10 pm</a>		</div>

		<p>And Windows XP is still very usable without a mouse. Really, it is. When I am typing long stretches of text (code, reports) I often get by just using keyboard shortcuts. The only thing that really sucks without a mouse is the web.</p>
<p>And of course there we get to yet another reason to have the cursor on: the user might be using mouse keys, for example because they&#8217;re disabled and can&#8217;t use the mouse, or like me because I sometimes need to nudge the mouse pointer one pixel and I simply don&#8217;t have the dexterity.</p>
<p>By the way, I tried to turn off mouse keys and unplugged my mouse, but although Windows acknowledged that there was no mouse on the system anymore (ping-bong) it didn&#8217;t hide the mouse pointer. It just sat there, unmovable.</p>
<div class=post>[<i>Dynamic unplug is a bad test, since Windows doesn&#8217;t have a time machine. The initial cursor show value was calculated at boot time. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-796383">
				<div id="div-comment-796383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">prb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796383">
			December 17, 2009 at 5:57 pm</a>		</div>

		<p>Whats the reason for using a counter rather than a simple boolean showhide flag?</p>
<div class=post>[<i>Um, work through the scenarios above with a simple boolean and you&#8217;ll see what goes wrong. (I can&#8217;t believe I had to write that.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-796393">
				<div id="div-comment-796393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796393">
			December 17, 2009 at 6:35 pm</a>		</div>

		<p>@prb:</p>
<p>To quote Raymond: “What if two programs did this?” (back when it was a global state)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-796403">
				<div id="div-comment-796403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796403">
			December 17, 2009 at 10:41 pm</a>		</div>

		<p>Windows CE often has a touch screen, but it really just emulates a mouse. Tapping the screen moves the cursor around.</p>
<p>Which, when you think about it, is kinda handy for giving visual feedback oh where you tapped.</p>
<p>Otherwise you have to provide other kinds of feedback &#8211; see Windows Mobile/Phone.</p>
<p>Then again, touch systems often provide a mouse, for the few times that a developer evaded some programming taxes&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-796503">
				<div id="div-comment-796503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796503">
			December 18, 2009 at 6:34 am</a>		</div>

		<p>How did the system handle switching between applications back when this was a global state &#8211; was this something handled in the default WM_ACTIVATE?</p>
<div class=post>[<i>If the system managed the cursor show count on a per-window basis then it wouldn&#8217;t be a global state any more! The system did nothing about the cursor show count during switching, but if you think about it, that wasn&#8217;t an issue most of the time anyway. (Hint: Co-operative multi-tasking.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-796563">
				<div id="div-comment-796563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796563">
			December 18, 2009 at 7:53 am</a>		</div>

		<p>Right, but that requires each application to know and react appropriately when it&#8217;s being switched, which was why I asked if it was handled in DefWindowProc.</p>
<p>I guess I didn&#8217;t see that as being &#8216;ruled out&#8217; by your statement that the system doesn&#8217;t manage it, since I didn&#8217;t see it as part of &#8220;the system&#8221; if it did.</p>
<p>So each program that messed with the ShowCursor state (other than ones that never yield before reverting the change) had to have its own code to save it and restore it?</p>
<div class=post>[<i>Over 99.99% of the time, programs do not yield before reverting the change. (The only example I can think of in the 0.01% percent is Reversi, and possibly not even Reversi.) Given the constraints, it was probably a fair trade-off. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-796583">
				<div id="div-comment-796583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796583">
			December 18, 2009 at 8:16 am</a>		</div>

		<p>@MarcT: Ow! That&#8217;s painful to read even at 20 years distance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-796663">
				<div id="div-comment-796663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091217-00/?p=15643#comment-796663">
			December 18, 2009 at 10:04 am</a>		</div>

		<p>Random832 has a good point. Programs like screensavers or PowerPoint that need to keep the cursor hidden would have to hide it when they activate and show it again when they deactivate.</p>
<p>I think Raymond is saying, however, that 99.99% of all programs had no need to ever show/hide the cursor except when displaying the hourglass. Since the hourglass only applies while performing a long operation, you would just show the hourglass before starting the operation and hide it afterwards, at which point you would yield control.</p>
<div class=post>[<i>PowerPoint isn&#8217;t even in the 0.01%, because it just does a SetCursor(NULL) in its WM_SETCURSOR handler to avoid having to &#8220;remember&#8221; to manage the cursor on activation changes. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

