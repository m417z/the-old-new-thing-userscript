<html>
<head>
<title>The crazy world of stripping diacritics</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The crazy world of stripping diacritics</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 24, 2014 / year-entry #274</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>25</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program strips diacritics from a Unicode string. Why? Hey, I said that Little Programs require little to no motivation. It might come in handy in a spam filter, since it was popular, at least for a time, to put random accent marks on spam subject lines in order to sneak past keyword filters....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program strips diacritics from a Unicode string.
Why?
Hey, I said that Little Programs require little to no motivation.
It might come in handy in a spam filter, since it was popular,
at least for a time, to put random accent marks on spam subject
lines in order to sneak past keyword filters.
(It doesn't seem to be popular any more.)
</p>
<p>
This is basically a C-ization of
<a HREF="http://www.siao2.com/2005/02/19/376617.aspx"
  _HREF="http://web.archive.org/web/20130620152852/http://blogs.msdn.com/b/michkap/archive/2005/02/19/376617.aspx">
the C# code originally written by Michael Kaplan</a>.
Don't forget to read
<a HREF="http://www.siao2.com/2007/05/14/2629747.aspx"
  _HREF="http://web.archive.org/web/20130620152852/http://blogs.msdn.com/b/michkap/archive/2007/05/14/2629747.aspx">
the follow-up discussion that notes that this can result in strange
results</a>.
</p>
<p>
First, let's create our dialog box.
Note that I intentionally give it a huge font
so that the diacritics are easier to see.
</p>
<pre>
// scratch.h

#define IDD_SCRATCH 1
#define IDC_SOURCE 100
#define IDC_SOURCEPOINTS 101
#define IDC_DEST 102
#define IDC_DESTPOINTS 103

// scratch.rc

#include &lt;windows.h&gt;
#include "scratch.h"

IDD_SCRATCH DIALOGEX 0, 0, 320, 88
STYLE DS_MODALFRAME | WS_POPUP | WS_CAPTION | WS_SYSMENU
Caption "Stripping diacritics"
FONT 20, "MS Shell Dlg"
BEGIN
    LTEXT "Original:", -1, 4, 8, 38, 10
    EDITTEXT IDC_SOURCE, 46, 6, 270, 12, ES_AUTOHSCROLL
    LTEXT "", IDC_SOURCEPOINTS, 46, 22, 270, 12
    LTEXT "Modified:", -1, 4, 40, 38, 10
    EDITTEXT IDC_DEST, 46, 38, 270, 12, ES_AUTOHSCROLL
    LTEXT "", IDC_DESTPOINTS, 46, 54, 270, 12
    DEFPUSHBUTTON "OK", IDOK, 266, 70, 50, 14
END
</pre>
<p>
Now the program that uses the dialog box.
</p>
<pre>
// scratch.cpp

#define STRICT
#define UNICODE
#define _UNICODE
#include &lt;windows.h&gt;
#include &lt;windowsx.h&gt;
#include &lt;strsafe.h&gt;
#include "scratch.h"

#define MAXSOURCE 64

void SetDlgItemCodePoints(HWND hwnd, int idc, PCWSTR psz)
{
  wchar_t szResult[MAXSOURCE * 4 * 5];
  szResult[0] = 0;
  PWSTR pszResult = szResult;
  size_t cchResult = ARRAYSIZE(szResult);
  HRESULT hr = S_OK;
  for (; SUCCEEDED(hr) && *psz; psz++) {
    wchar_t szPoint[6];
    hr = StringCchPrintf(szPoint, ARRAYSIZE(szPoint), L"%04x ", *psz);
    if (SUCCEEDED(hr)) {
      hr = StringCchCatEx(pszResult, cchResult, szPoint, &pszResult, &cchResult, 0);
    }
  }
  SetDlgItemText(hwnd, idc, szResult);
}
</pre>
<p>
The <code>Set&shy;Dlg&shy;Item&shy;Code&shy;Points</code>
function takes a UTF-16 string and prints all the code points.
This is just to help visualize the result;
it's not part of the actual diacritic-removal algorithm.
</p>
<pre>
void OnUpdate(HWND hwnd)
{
  wchar_t szSource[MAXSOURCE];
  GetDlgItemText(hwnd, IDC_SOURCE, szSource, ARRAYSIZE(szSource));
  wchar_t szDest[MAXSOURCE * 4];

  int cchActual = NormalizeString(NormalizationKD,
                                  szSource, -1,
                                  szDest, ARRAYSIZE(szDest));
  if (cchActual &lt;= 0) szDest[0] = 0;

  WORD rgType[ARRAYSIZE(szDest)];
  GetStringTypeW(CT_CTYPE3, szDest, -1, rgType);

  PWSTR pszWrite = szDest;
  for (int i = 0; szDest[i]; i++) {
    if (!(rgType[i] &amp; C3_NONSPACING)) {
      *pszWrite++ = szDest[i];
    }
  }
  *pszWrite = 0;

  SetDlgItemText(hwnd, IDC_DEST, szDest);
  SetDlgItemCodePoints(hwnd, IDC_SOURCEPOINTS, szSource);
  SetDlgItemCodePoints(hwnd, IDC_DESTPOINTS, szDest);
}
</pre>
<p>
Okay, here's where the actual work happens.
We put the source string into Normalization Form KD.
This decomposes the diacritics so that we can identify them
with <code>Get&shy;String&shy;TypeW</code>
and then strip them out.
</p>
<p>
Of course, in real life, you wouldn't hard-code the array sizes
like I did here, but this is just a Little Program,
and Little Programs are allowed to take shortcuts.
</p>
<p>
The rest of the program is just a framework to get into that
function.
</p>
<pre>
INT_PTR CALLBACK DlgProc(HWND hwnd, UINT wm,
                         WPARAM wParam, LPARAM lParam)
{
  switch (wm)
  {
  case WM_INITDIALOG:
    return TRUE;

  case WM_COMMAND:
    switch (GET_WM_COMMAND_ID(wParam, lParam)) {
    case IDC_SOURCE:
      switch (GET_WM_COMMAND_CMD(wParam, lParam)) {
    case EN_UPDATE:
      OnUpdate(hwnd);
      break;
    }
    break;
    case IDOK:
      EndDialog(hwnd, 0);
      return TRUE;
  }
  break;

  case WM_CLOSE:
    EndDialog(hwnd, 0);
    return TRUE;
  }

  return FALSE;
}

int WINAPI wWinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPWSTR lpCmdLine, int nShowCmd)
{
  DialogBox(hinst, MAKEINTRESOURCE(IDD_SCRATCH), nullptr, DlgProc);
  return 0;
}
</pre>
<p>
Okay, let's take this program for a spin.
Here are some interesting characters to try:
</p>
<table BORDER=1 BORDERCOLOR=black
    STYLE="border: solid 1px black; border-collapse: collapse"
    CELLPADDING=3 CELLSPACING=0>
<tr>
<th COLSPAN=3>Original character</th>
<th COLSPAN=3>Resulting character</th>
</tr>
<tr>
<td ALIGN=center>&ordf;</td>
<td>00AA</td>
<td>Feminine ordinal indicator</td>
<td ALIGN=center>a</td>
<td>0061</td>
<td>Latin small letter a</td>
</tr>
<tr>
<td ALIGN=center>&sup1;</td>
<td>00B1</td>
<td>Superscript one</td>
<td ALIGN=center>1</td>
<td>0031</td>
<td>Digit one</td>
</tr>
<tr>
<td ALIGN=center>&frac12;</td>
<td>00BD</td>
<td>Vulgar fraction one half</td>
<td ALIGN=center>1&#x2044;2</td>
<td>0031 2044 0032</td>
<td>Digit one + Fraction slash + Digit two</td>
</tr>
<tr>
<td ALIGN=center>&#x0131;</td>
<td>0131</td>
<td>Latin small letter dotless i</td>
<td ALIGN=center>&#x0131;</td>
<td>0131</td>
<td>Latin small letter dotless i</td>
</tr>
<tr>
<td ALIGN=center>&Oslash;</td>
<td>00D8</td>
<td>Latin capital letter O with stroke</td>
<td ALIGN=center></td>
<td></td>
<td>Disappears!</td>
</tr>
<tr>
<td ALIGN=center>&#322;</td>
<td>0142</td>
<td>Latin small letter l with stroke</td>
<td ALIGN=center>&#322;</td>
<td>0142</td>
<td>Latin small letter l with stroke</td>
</tr>
<tr>
<td ALIGN=center>&#320;</td>
<td>0140</td>
<td>Latin small letter l with middle dot</td>
<td ALIGN=center>l&middot;</td>
<td>006C 00B7</td>
<td>Latin small letter l + middle dot</td>
</tr>
<tr>
<td ALIGN=center>&aelig;</td>
<td>00E6</td>
<td>Latin small letter ae</td>
<td ALIGN=center>&aelig;</td>
<td>00E6</td>
<td>Latin small letter ae</td>
</tr>
<tr>
<td ALIGN=center>&#x0389;</td>
<td>0389</td>
<td>Greek capital letter Eta with tonos</td>
<td ALIGN=center>&Eta;</td>
<td>0397</td>
<td>Greek capital letter Eta</td>
</tr>
<tr>
<td ALIGN=center>&#x0410;</td>
<td>0410</td>
<td>Cyrillic capital letter &#x0410;</td>
<td ALIGN=center>&#x0410;</td>
<td>0410</td>
<td>Cyrillic capital letter &#x0410;</td>
</tr>
<tr>
<td ALIGN=center>&Aring;</td>
<td>00C5</td>
<td>Latin capital letter A with ring above</td>
<td ALIGN=center>A</td>
<td>0041</td>
<td>Latin capital letter A</td>
</tr>
<tr>
<td ALIGN=center>&#xff21;</td>
<td>FF21</td>
<td>Fullwidth Latin capital letter A</td>
<td ALIGN=center>A</td>
<td>0041</td>
<td>Latin capital letter A</td>
</tr>
<tr>
<td ALIGN=center>&#x2460;</td>
<td>2460</td>
<td>Circled digit one</td>
<td ALIGN=center>1</td>
<td>0031</td>
<td>Digit one</td>
</tr>
<tr>
<td ALIGN=center>&#x2780;</td>
<td>2780</td>
<td>Dingbat circled sans-serif digit one</td>
<td ALIGN=center>&#x2780;</td>
<td>2780</td>
<td>Dingbat circled sans-serif digit one</td>
</tr>
<tr>
<td ALIGN=center>&reg;</td>
<td>00AE</td>
<td>Registered sign</td>
<td ALIGN=center>&reg;</td>
<td>00AE</td>
<td>Registered sign</td>
</tr>
<tr>
<td ALIGN=center>&#x24c7;</td>
<td>24c7</td>
<td>Circled Latin capital letter R</td>
<td ALIGN=center>R</td>
<td>0052</td>
<td>Latin capital letter R</td>
</tr>
<tr>
<td ALIGN=center>&#x1d595;</td>
<td>D835 DD95</td>
<td>Mathematical bold Fraktur small p</td>
<td ALIGN=center>p</td>
<td>0070</td>
<td>Latin small letter p</td>
</tr>
<tr>
<td ALIGN=center>&#xff6c;</td>
<td>FF6C</td>
<td>Halfwidth Katakana letter small Ya</td>
<td ALIGN=center>&#x30e3;</td>
<td>30E3</td>
<td>Katakana letter small Ya</td>
</tr>
<tr>
<td ALIGN=center>&#x30e3;</td>
<td>30E3</td>
<td>Katakana letter small Ya</td>
<td ALIGN=center>&#x30e3;</td>
<td>30E3</td>
<td>Katakana letter small Ya</td>
</tr>
<tr>
<td ALIGN=center>&#x30b4;</td>
<td>30B4</td>
<td>Katakana letter Go</td>
<td ALIGN=center>&#x30b3;</td>
<td>30B3</td>
<td>Katakana letter Ko</td>
</tr>
<tr>
<td ALIGN=center>&#x201c;</td>
<td>201C</td>
<td>Left double quotation mark</td>
<td ALIGN=center>&#x201c;</td>
<td>201C</td>
<td>Left double quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x201d;</td>
<td>201D</td>
<td>Right double quotation mark</td>
<td ALIGN=center>&#x201D;</td>
<td>201D</td>
<td>Right double quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x201E;</td>
<td>201E</td>
<td>Double low-9 quotation mark</td>
<td ALIGN=center>&#x201E;</td>
<td>201E</td>
<td>Double low-9 quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x201F;</td>
<td>201F</td>
<td>Double high-reversed-9 quotation mark</td>
<td ALIGN=center>&#x201F;</td>
<td>201F</td>
<td>Double high-reversed-9 quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x2033;</td>
<td>2033</td>
<td>Double prime</td>
<td ALIGN=center>&#x2032;&#x2032;</td>
<td>2032 2032</td>
<td>Prime + Prime</td>
</tr>
<tr>
<td ALIGN=center>&#x2035;</td>
<td>2035</td>
<td>Reverse prime</td>
<td ALIGN=center>&#x2035;</td>
<td>2035</td>
<td>Reverse prime</td>
</tr>
<tr>
<td ALIGN=center>&#x2039;</td>
<td>2039</td>
<td>Single left-pointing angle quotation mark</td>
<td ALIGN=center>&#x2039;</td>
<td>2039</td>
<td>Single left-pointing angle quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x00AB;</td>
<td>00AB</td>
<td>Left-pointing double angle quotation mark</td>
<td ALIGN=center>&#x00AB;</td>
<td>00AB</td>
<td>Left-pointing double angle quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x2014;</td>
<td>2014</td>
<td>Em-dash</td>
<td ALIGN=center>&#x2014;</td>
<td>2014</td>
<td>Em-dash</td>
</tr>
<td ALIGN=center>&#x203C;</td>
<td>203C</td>
<td>Double exclamation mark</td>
<td ALIGN=center>!!</td>
<td>0021 0021</td>
<td>Exclamation mark + Exclamation mark</td>
</tr>
</table>
<p>
There are some interesting quirks here.
Mind you, this is what the Unicode Consortium says,
so if you think they are wrong,
you can take it up with them.
</p>
<p>
The superscript-like characters are converted to their plain
versions.
Enclosed alphabetics are also converted,
but not the &reg; symbol.
Fullwidth forms of Latin letters
are converted to their halfwidth equivalents.
On the other hand, halfwidth Katakana characters are expanded to their
fullwidth equivalents.
But small Katakana does not convert to their large equivalents.
</p>
<p>
The &Oslash; disappears completely! What's up with that?
The character code for &Oslash; is reported as
<code>C3_ALPHA | C3_NONSPACING | C3_DIACRITIC</code>,
and since we are removing nonspacing characters,
this causes it to be removed.
(Why is &Oslash; nonspacing? It occupies space!)
For whatever reason, it does not decompose into
O + Combining Solidus Overlay.
On the other hand, the Polish &#322; remains intact
because it is reported as
<code>C3_ALPHA | C3_DIACRITIC</code>.
Poland wins and Norway loses?
</p>
<p>
The diacritic removal ignores linguistic rules.
The Swedish &Aring; decomposes into a capital A and a combining
ring above,
even though in Swedish, the character is considered nondecomposable.
(Just like the capital letter Q in English
does not decompose into an O and a tail.)
Katakana Go suffers a similar ignoble fate,
<a HREF="http://www.siao2.com/2007/05/14/2629747.aspx"
  _HREF="http://web.archive.org/web/20130530165613/http://blogs.msdn.com/b/michkap/archive/2007/05/14/2629747.aspx">
converting to Katakana Ko</a>,
which is linguistically nonsensical.
But then again, removing diacritics
<i>is already linguistically nonsensical</i>.
Nonsensical operation is nonsensical.
</p>
<p>
There is no attempt to unify look-alike characters from different
scripts.
Look-alike characters in the Greek and Cyrillic alphabets
are not mapped to their Latin doppelg&auml;ngers.
</p>
<p>
The infamous Turkish dotless i does not turn into a dotted i.
(And the lowercase Latin i does not decompose into a combining dot and a dotless i.)
</p>
<p>
Finally, I tried a selection of punctuation marks.
Most of them pass through unchanged,
with the exception of the double prime and double exclamation mark
which each decompose into a pair of singles.
(But double quotation marks do not decompose into a pair of singles.)
</p>
<p>
Okay, but the goal of this exercise was spam detection,
so we are actually interested in mapping as far as possible
all the way down to plain ASCII.
We'd like to convert, for example,
the look-alike characters in the Cyrillic and Greek alphabets
to the Latin characters they resemble.
</p>
<p>
So let's try something else.
If we want to convert to ASCII,
then just convert to ASCII!
</p>
<pre>
#define CP_ASCII 20127
void OnUpdate(HWND hwnd)
{
  wchar_t szSource[MAXSOURCE];
  GetDlgItemText(hwnd, IDC_SOURCE, szSource, ARRAYSIZE(szSource));
  char szDest[MAXSOURCE * 2];
  int cchActual = WideCharToMultiByte(CP_ASCII, 0, szSource, -1,
                              szDest, ARRAYSIZE(szDest), 0, 0);
  if (cchActual &lt;= 0) szDest[0] = 0;

  SetDlgItemTextA(hwnd, IDC_DEST, szDest);
  SetDlgItemCodePoints(hwnd, IDC_SOURCEPOINTS, szSource);
}
</pre>
<p>
We can extend the table above with a new column.
</p>
<table BORDER=1 BORDERCOLOR=black
    STYLE="border: solid 1px black; border-collapse: collapse"
    CELLPADDING=3 CELLSPACING=0>
<tr>
<th COLSPAN=3>Original character</th>
<th COLSPAN=3>KD character</th>
<th COLSPAN=3>ASCII character</th>
</tr>
<tr>
<td ALIGN=center>&ordf;</td>
<td>00AA</td>
<td>Feminine ordinal indicator</td>
<td ALIGN=center>a</td>
<td>0061</td>
<td>Latin small letter a</td>
<td ALIGN=center>a</td>
<td>0061</td>
<td>Latin small letter a</td>
</tr>
<tr>
<td ALIGN=center>&sup1;</td>
<td>00B1</td>
<td>Superscript one</td>
<td ALIGN=center>1</td>
<td>0031</td>
<td>Digit one</td>
<td ALIGN=center>1</td>
<td>0031</td>
<td>Digit one</td>
</tr>
<tr>
<td ALIGN=center>&frac12;</td>
<td>00BD</td>
<td>Vulgar fraction one half</td>
<td ALIGN=center>1&#x2044;2</td>
<td>0031 2044 0032</td>
<td>Digit one + Fraction slash + Digit two</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x0131;</td>
<td>0131</td>
<td>Latin small letter dotless i</td>
<td ALIGN=center>&#x0131;</td>
<td>0131</td>
<td>Latin small letter dotless i</td>
<td ALIGN=center>i</td>
<td>0069</td>
<td>Latin small letter i</td>
</tr>
<tr>
<td ALIGN=center>&Oslash;</td>
<td>00D8</td>
<td>Latin capital letter O with stroke</td>
<td ALIGN=center></td>
<td></td>
<td>Disappears!</td>
<td ALIGN=center>O</td>
<td>004F</td>
<td>Latin capital letter O</td>
</tr>
<tr>
<td ALIGN=center>&#322;</td>
<td>0142</td>
<td>Latin small letter l with stroke</td>
<td ALIGN=center>&#322;</td>
<td>0142</td>
<td>Latin small letter l with stroke</td>
<td ALIGN=center>l</td>
<td>006C</td>
<td>Latin small letter l</td>
</tr>
<tr>
<td ALIGN=center>&#320;</td>
<td>0140</td>
<td>Latin small letter l with middle dot</td>
<td ALIGN=center>l&middot;</td>
<td>006C 00B7</td>
<td>Latin small letter l + middle dot</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&aelig;</td>
<td>00E6</td>
<td>Latin small letter ae</td>
<td ALIGN=center>&aelig;</td>
<td>00E6</td>
<td>Latin small letter ae</td>
<td ALIGN=center>a</td>
<td>0061</td>
<td>Latin small letter a</td>
</tr>
<tr>
<td ALIGN=center>&#x0389;</td>
<td>0389</td>
<td>Greek capital letter Eta with tonos</td>
<td ALIGN=center>&Eta;</td>
<td>0397</td>
<td>Greek capital letter Eta</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x0410;</td>
<td>0410</td>
<td>Cyrillic capital letter &#x0410;</td>
<td ALIGN=center>&#x0410;</td>
<td>0410</td>
<td>Cyrillic capital letter &#x0410;</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&Aring;</td>
<td>00C5</td>
<td>Latin capital letter A with ring above</td>
<td ALIGN=center>A</td>
<td>0041</td>
<td>Latin capital letter A</td>
<td ALIGN=center>A</td>
<td>0041</td>
<td>Latin capital letter A</td>
</tr>
<tr>
<td ALIGN=center>&#xff21;</td>
<td>FF21</td>
<td>Fullwidth Latin capital letter A</td>
<td ALIGN=center>A</td>
<td>0041</td>
<td>Latin capital letter A</td>
<td ALIGN=center>A</td>
<td>0041</td>
<td>Latin capital letter A</td>
</tr>
<tr>
<td ALIGN=center>&#x2460;</td>
<td>2460</td>
<td>Circled digit one</td>
<td ALIGN=center>1</td>
<td>0031</td>
<td>Digit one</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x2780;</td>
<td>2780</td>
<td>Dingbat circled sans-serif digit one</td>
<td ALIGN=center>&#x2780;</td>
<td>2780</td>
<td>Dingbat circled sans-serif digit one</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&reg;</td>
<td>00AE</td>
<td>Registered sign</td>
<td ALIGN=center>&reg;</td>
<td>00AE</td>
<td>Registered sign</td>
<td ALIGN=center>R</td>
<td>0052</td>
<td>Latin capital letter R</td>
</tr>
<tr>
<td ALIGN=center>&#x24c7;</td>
<td>24c7</td>
<td>Circled Latin capital letter R</td>
<td ALIGN=center>R</td>
<td>0052</td>
<td>Latin capital letter R</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x1d595;</td>
<td>D835 DD95</td>
<td>Mathematical bold Fraktur small p</td>
<td ALIGN=center>p</td>
<td>0070</td>
<td>Latin small letter p</td>
<td ALIGN=center>??</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#xff6c;</td>
<td>FF6C</td>
<td>Halfwidth Katakana letter small Ya</td>
<td ALIGN=center>&#x30e3;</td>
<td>30E3</td>
<td>Katakana letter small Ya</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x30e3;</td>
<td>30E3</td>
<td>Katakana letter small Ya</td>
<td ALIGN=center>&#x30e3;</td>
<td>30E3</td>
<td>Katakana letter small Ya</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x30b4;</td>
<td>30B4</td>
<td>Katakana letter Go</td>
<td ALIGN=center>&#x30b3;</td>
<td>30B3</td>
<td>Katakana letter Ko</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x201c;</td>
<td>201C</td>
<td>Left double quotation mark</td>
<td ALIGN=center>&#x201c;</td>
<td>201C</td>
<td>Left double quotation mark</td>
<td ALIGN=center>"</td>
<td>0022</td>
<td>Quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x201d;</td>
<td>201D</td>
<td>Right double quotation mark</td>
<td ALIGN=center>&#x201D;</td>
<td>201D</td>
<td>Right double quotation mark</td>
<td ALIGN=center>"</td>
<td>0022</td>
<td>Quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x201E;</td>
<td>201E</td>
<td>Double low-9 quotation mark</td>
<td ALIGN=center>&#x201E;</td>
<td>201E</td>
<td>Double low-9 quotation mark</td>
<td ALIGN=center>"</td>
<td>0022</td>
<td>Quotation mark</td>
</tr>
<tr>
<td ALIGN=center>&#x201F;</td>
<td>201F</td>
<td>Double high-reversed-9 quotation mark</td>
<td ALIGN=center>&#x201F;</td>
<td>201F</td>
<td>Double high-reversed-9 quotation mark</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x2033;</td>
<td>2033</td>
<td>Double prime</td>
<td ALIGN=center>&#x2032;&#x2032;</td>
<td>2032 2032</td>
<td>Prime + Prime</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
<tr>
<td ALIGN=center>&#x2032;</td>
<td>2032</td>
<td>Prime</td>
<td ALIGN=center>&#x2032;</td>
<td>2032</td>
<td>Prime</td>
<td ALIGN=center>'</td>
<td>0027</td>
<td>Apostrophe</td>
</tr>
<tr>
<td ALIGN=center>&#x2035;</td>
<td>2035</td>
<td>Reverse prime</td>
<td ALIGN=center>&#x2035;</td>
<td>2035</td>
<td>Reverse prime</td>
<td ALIGN=center>`</td>
<td>0060</td>
<td>Grave accent</td>
</tr>
<tr>
<td ALIGN=center>&#x2039;</td>
<td>2039</td>
<td>Single left-pointing angle quotation mark</td>
<td ALIGN=center>&#x2039;</td>
<td>2039</td>
<td>Single left-pointing angle quotation mark</td>
<td ALIGN=center>&lt;</td>
<td>003C</td>
<td>Less-than sign</td>
</tr>
<tr>
<td ALIGN=center>&#x00AB;</td>
<td>00AB</td>
<td>Left-pointing double angle quotation mark</td>
<td ALIGN=center>&#x00AB;</td>
<td>00AB</td>
<td>Left-pointing double angle quotation mark</td>
<td ALIGN=center>&lt;</td>
<td>003C</td>
<td>Less-than sign</td>
</tr>
<tr>
<td ALIGN=center>&#x2014;</td>
<td>2014</td>
<td>Em-dash</td>
<td ALIGN=center>&#x2014;</td>
<td>2014</td>
<td>Em-dash</td>
<td ALIGN=center>-</td>
<td>002D</td>
<td>Hyphen-minus</td>
</tr>
<td ALIGN=center>&#x203C;</td>
<td>203C</td>
<td>Double exclamation mark</td>
<td ALIGN=center>!!</td>
<td>0021 0021</td>
<td>Exclamation mark + Exclamation mark</td>
<td ALIGN=center>?</td>
<td></td>
<td>No conversion</td>
</tr>
</table>
<p>
There are some interesting differences here.
</p>
<p>
Some characters fail to convert to ASCII outright.
This is not unexpected for the Japanese characters,
is mildly unexpected for the
look-alikes in the Cyrillic and Greek alphabets,
and is surprising for some characters like double prime,
double exclamation point,
enclosed alphanumerics,
and vulgar fractions
because they had ASCII decompositions in Normalization Form KD,
but converting directly into ASCII refused to use them.
</p>
<p>
But the dotless i gets its dot back.
</p>
<p>
Another weird thing you might notice is that the &aelig; converts
to just the a.
This goes contrary to the expectations of
American English,
because words which historically use the &aelig; and &oelig;
are largely
respelled in American English to use just the e.
(Encyclop&aelig;dia &rarr; encyclopedia,
f&oelig;tus &rarr; fetus.)
Mysteries abound.
</p>
<p>
If your real goal is to map every character to its nearest ASCII
look-alike,
then all these code page games are just beating around the bush.
The way to go is to use the Unicode Confusables database.
There is a
<a HREF="http://www.unicode.org/Public/security/revision-05/confusables.txt">
huge data file</a>
and
<a HREF="http://www.unicode.org/reports/tr39/#Confusable_Detection">
instructions on how to use it</a>.
There's also
<a HREF="http://unicode.org/cldr/utility/confusables.jsp">
a nice Web site</a>
that lets you explore the confusables database interactively.
</p>
<p>
Or you could just take the sledgehammer approach:
If there are a significant number of characters outside the Latin alphabet
and punctuation and you are expecting English text,
then just reject it as likely spam.
</p>
<p>
&#xca0;_&#xca0;</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1163453">
				<div id="div-comment-1163453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ಠ_ಠ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163453">
			November 24, 2014 at 8:14 am</a>		</div>

		<p>ಠ_ಠ</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163463">
				<div id="div-comment-1163463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163463">
			November 24, 2014 at 8:51 am</a>		</div>

		<p>Looks vaguely like my downmapper from Windows-1252 to ASCII-7 (I forget why I needed it). Oh, and that trailing mark in the article looks like an owl&#39;s eyes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163473">
				<div id="div-comment-1163473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163473">
			November 24, 2014 at 8:53 am</a>		</div>

		<p>Joshua: you need to spend more time on the internet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1163483">
				<div id="div-comment-1163483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163483">
			November 24, 2014 at 8:54 am</a>		</div>

		<p>But how about &quot;coöperation&quot;. Does it get converted to &quot;cooperation&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163493">
				<div id="div-comment-1163493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poizan42</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163493">
			November 24, 2014 at 8:59 am</a>		</div>

		<p>The categories for &#39;Ø&#39; seems to be a bug in Windows. Here is the entry from UnicodeData.txt:</p>
<p>00D8;LATIN CAPITAL LETTER O WITH STROKE;Lu;0;L;;;;;N;LATIN CAPITAL LETTER O SLASH;;;00F8;</p>
<p>That is U+00D8:</p>
<p>1 Name: LATIN CAPITAL LETTER O WITH STROKE</p>
<p>2 General_Category: Lu (Uppercase_Letter)</p>
<p>3 Canonical_Combining_Class: 0</p>
<p>4 Bidi_Class: L (Left_To_Right)</p>
<p>5 Decomposition_Type/Decomposition_Mapping: (none)</p>
<p>6,7,8 Numeric_Type/Numeric_Value: (none)</p>
<p>9 Bidi_Mirrored: N (No)</p>
<p>10 Unicode_1_Name: LATIN CAPITAL LETTER O SLASH</p>
<p>11 ISO_Comment: (none)</p>
<p>12 Simple_Uppercase_Mapping: (none)</p>
<p>13 Simple_Lowercase_Mapping: U+00F8 (&#39;ø&#39;)</p>
<p>14 Simple_Titlecase_Mapping: (none)</p>
<p>I don&#39;t think The Unicode Consortium has ever claimed that &#39;Ø&#39; was nonspacing nor a diacritic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163503">
				<div id="div-comment-1163503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Macrosofter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163503">
			November 24, 2014 at 9:00 am</a>		</div>

		<p>Or as more general sledgehammer approach you could use any good language detection library and reject texts in undetected or unknown to you languages. Of course you will find out that most of such libraries are based on Bayesian filtering which you plan to use for further spam rejection anyway, so language detection becomes sort of redundant. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163513">
				<div id="div-comment-1163513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163513">
			November 24, 2014 at 9:12 am</a>		</div>

		<p>&quot;&#8230; C-ization of the C# code&#8230;&quot; would that be &quot;flattening,&quot; to remove the sharp-ness? I&#39;d go with &quot;dulling&quot; but the source of &quot;Sharp&quot; is music notation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163523">
				<div id="div-comment-1163523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Katie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163523">
			November 24, 2014 at 9:39 am</a>		</div>

		<p>@Nick, &quot;naturalization&quot; would be a good word for it too. Or maybe C is just the result of stripping the diacritic from C#.</p>
<div class="post">[<em>+1 for &quot;naturalization.&quot; It&#39;s a nice double-pun. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1163533">
				<div id="div-comment-1163533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163533">
			November 24, 2014 at 10:41 am</a>		</div>

		<p>&quot;&#8230; C-ization of the C# code&#8230;&quot;</p>
<p>That&#39;s melodic D-major scale for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163543">
				<div id="div-comment-1163543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j b</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163543">
			November 24, 2014 at 11:24 am</a>		</div>

		<p>Re that Norwegian ø:</p>
<p>There has been, since the days of ISO 646, a Norwegian standard for converting ISO 646-60 to iSO 646 IRV (aka ASCII), saying to convert Æ to E, Ø to O and Å to A. (There is another standardard for context allowing a change in string length, with the conversions AE, OE and AA.)</p>
<p>First time I encountered this conversion was when a colleague reportet from an interational conference where only English keyboars where available (we didn&#39;t have personal portables at that time), tellig &quot;Jeg horer på en dame &#8230;.&quot;. The bad thing is that &quot;hore&quot; means &quot;whore&quot; in Norwegian, while &quot;høre&quot; means &quot;listen&quot;. So rather than telling &quot;I am listening to a lady&#8230;&quot; he told us &quot;I am whoring on a lady&#8230;&quot;. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163553">
				<div id="div-comment-1163553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163553">
			November 24, 2014 at 11:47 am</a>		</div>

		<p>In Hebrew, diacritics are optional, so removing them actually does make sense. I think Arabic is the same.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-julioiglesiasphotmail-com odd alt thread-odd thread-alt depth-1" id="comment-1163563">
				<div id="div-comment-1163563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Julio+Iglesias+P%C3%A9rez' rel='external nofollow' class='url'>Julio Iglesias Pérez</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163563">
			November 24, 2014 at 12:23 pm</a>		</div>

		<p>Useful and interesting, thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd even thread-even depth-1" id="comment-1163573">
				<div id="div-comment-1163573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163573">
			November 24, 2014 at 1:10 pm</a>		</div>

		<p>I recently had the fortune to write this function (`RemoveDiacritics(str)`). I used an initial similar step:</p>
<p>&#8211; Normalize string into Decomposed (D) form: &quot;Unicode normalization form D, canonical decomposition. Transforms each precomposed character to its canonical decomposed equivalent. For example, Ä becomes A + ¨&quot;</p>
<p>I then also iterated every code point. But instead i checked if the WCHAR was in the unicode block Combining Diacritical Marks (U+0300..U+036F).</p>
<p>Of the four Unicode normalization forms:</p>
<p>&#8211; NormalizationC = 1; //canonical composition. For example, A + ¨ becomes Ä &nbsp;</p>
<p>&#8211; NormalizationD = 2; //canonical decomposition. For example, Ä becomes A + ¨ &nbsp;</p>
<p>&#8211; NormalizationKC = 5; //compatibility composition. For example, A + ¨ + ﬁ + n becomes Ä + f + i + n &nbsp;</p>
<p>&#8211; NormalizationKD = 6; //compatibility decomposition. For example, Ä + ﬁ + n becomes A + ¨ + f + i + n &nbsp;</p>
<p>i chose the &quot;Canonical Decomposition&quot;, as i didn&#39;t need ligatures decomposed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163583">
				<div id="div-comment-1163583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Spelling Nat'l Socialist</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163583">
			November 24, 2014 at 1:47 pm</a>		</div>

		<p>Fetus wasn&#39;t the best example because it was never correctly spelled using the œ character; that was a mistake introduced sometime between 600 and 1600 AD. I don&#39;t know if it was corrected intentionally or due to Webster&#39;s Americanization efforts, but thankfully the medical world got back to the correct form of the word. Meant more as a fun fact than an actual nitpick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163593">
				<div id="div-comment-1163593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163593">
			November 24, 2014 at 2:18 pm</a>		</div>

		<p>Interesting, but I hope to never have to be responsible for dealing with this kind of functionality. It seems much harder than having to deal correctly with floating point, and I&#39;ve long since given up on that (about once a year I&#39;ll make an attempt to answer what appears to be an easy floating point question on Stackoverflow, and I always end up regretting that decision).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163613">
				<div id="div-comment-1163613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163613">
			November 24, 2014 at 4:36 pm</a>		</div>

		<p>@mikeb: Floating point logic is easy: Everything is always wrong unless you&#39;ve conclusively proved it correct or used an arbitrary-precision library throughout the entire computation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163623">
				<div id="div-comment-1163623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SomeGuyOnTheInternet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163623">
			November 24, 2014 at 4:44 pm</a>		</div>

		<p>Could you please write a Little Program to remove smart quotes from every computer everywhere? I am sick of my customers searching for O&#39;Brien and not finding O’Brien.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163633">
				<div id="div-comment-1163633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Beldantazar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163633">
			November 24, 2014 at 5:10 pm</a>		</div>

		<p>@ SomeGuyOnTheInternet &nbsp;How about instead you fix your search system to actually work correctly and understand unicode apostrophes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163653">
				<div id="div-comment-1163653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163653">
			November 25, 2014 at 1:44 am</a>		</div>

		<p>But I don&#39;t see the need to blunt any code, seeing as you&#39;ve been adding more and more C# examples in what started out as &quot;not actually a .NET blog&quot;.</p>
<div class="post">[<em>This was a case of parallel evolution. After I wrote the program, I realized that Michael Kaplan already wrote it. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163673">
				<div id="div-comment-1163673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163673">
			November 25, 2014 at 7:07 am</a>		</div>

		<p>@Beldantazar: smart quotes have other problems not related to search. &nbsp;See Raymond&#39;s post on the topic: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2009/02/25/9443404.aspx">blogs.msdn.com/&#8230;/9443404.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163693">
				<div id="div-comment-1163693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Viila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163693">
			November 25, 2014 at 9:02 am</a>		</div>

		<p>&quot;But how about &quot;coöperation&quot;. Does it get converted to &quot;cooperation&quot;?&quot;</p>
<p>That&#39;s a good question. What should it convert into? In English ¨ is a diacritic that only modifies the pronunciation, but in Finnish and Swedish Ö and Ä are non-decomposable letters, just like Å. Either way, you&#39;re going to make somebody angry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163813">
				<div id="div-comment-1163813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SomeGuyOnTheInternet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163813">
			November 25, 2014 at 4:59 pm</a>		</div>

		<p>@Beldantazar &#8211; you&#39;re assuming I have source code access to every system the user interacts with. I don&#39;t. The user presses the U+0027 key on the keyboard but does not get a U+0027 character. In fact, user presses the U+0027 key on the keyboard and will get one of three different characters! The user has typed the same sequence of keystrokes in two different apps and gets a different series of characters each time. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1163853">
				<div id="div-comment-1163853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163853">
			November 25, 2014 at 11:26 pm</a>		</div>

		<p>Coöperation simplifies down to co-erperation, obviously.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1163893">
				<div id="div-comment-1163893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1163893">
			November 26, 2014 at 4:35 am</a>		</div>

		<p>Yeah, it can be fun with unicode: <a rel="nofollow" target="_new" href="https://twitter.com/aprilarcus/status/367557195186970624">twitter.com/&#8230;/367557195186970624</a></p>
<p>                        .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164003">
				<div id="div-comment-1164003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141124-00/?p=43553#comment-1164003">
			November 26, 2014 at 9:33 am</a>		</div>

		<p>I am fully of the opinion that this was written simply to be able to end it with that smiley.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

