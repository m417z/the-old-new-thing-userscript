<html>
<head>
<title>Isn't there a race condition in GetFileVersionInfoSize?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Isn&#8217;t there a race condition in GetFileVersionInfoSize?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 21, 2012 / year-entry #71</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In response to my explanation of what the lpdwHandle parameter in Get­File­Version­Info­Size is used for, Steve Nuchia wonders if there's a race condition between the time you get the size and the time you ask for the data. Yes, there is a race condition, but calling the function in a loop won't help because the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>In response to my explanation of <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/31/4138786.aspx"> what the <code>lpdwHandle</code> parameter in <code>Get&shy;File&shy;Version&shy;Info&shy;Size</code> is used for</a>, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/31/4138786.aspx#4149090"> Steve Nuchia wonders if there's a race condition</a> between the time you get the size and the time you ask for the data.</p>
<p> Yes, there is a race condition, but calling the function in a loop won't help because the <code>Get&shy;File&shy;Version&shy;Info</code> function does not report that the buffer is too small to hold all the version data. It just fills the buffer as much as it can and truncates the rest. </p>
<p> In practice, this is not a problem because you are usually getting the versions of files that you expect to be stable. For example, you might be obtaining the version resources of the files your application is using in order to show them in diagnostics. The file can't change because you're preventing them from changing by using them. In the case that the file changes out from under you, then yes, you will sometimes get partial data. </p>
<p> While I'm on the subject of <code>Get&shy;File&shy;Version&shy;Info</code>, I figured I'd mention that there's a good amount of code in <code>Ver&shy;Query&shy;Value</code> to handle the following scenario: </p>
<ul>
<li>On Windows&nbsp;NT 3.1, a program calls     <code>Get&shy;File&shy;Version&shy;Info</code>     to obtain a file version information block. </li>
<li>The program writes the information block to a file. </li>
<li>The file is preserved in amber for millions of years. </li>
<li>A curious scientists discovers the file version information     block, loads it from the file back into memory,     and calls <code>Ver&shy;Query&shy;Value</code>. </li>
</ul>
<p> The modern implementation of <code>Ver&shy;Query&shy;Value</code> still understands the file version information block created by all previous versions of Windows, and if you hand it one of those frozen-in-amber information blocks, it still knows how to extract information from it. It may not be able to do as good a job due to the lack of appropriate buffer space, but it does at least as well as the version of Windows the file version information block was originally generated from. I have no idea whether anybody actually takes advantage of this behavior, but since persisting the file version information block was never explicitly disallowed in the documentation, one could argue that doing so was legal, and the code therefore needs to be ready for it. (Heck, even if it were explicitly disallowed, there would still be a good chance that there's somebody who's doing it.) </p>
<p> What <code>Ver&shy;Query&shy;Value</code> doesn't handle is people who hand it a file version information block <a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/12/26/1365215.aspx"> that never came from  <code>Get&shy;File&shy;Version&shy;Info</code> in the first place</a>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-973843">
				<div id="div-comment-973843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973843">
			March 21, 2012 at 8:05 am</a>		</div>

		<p>Aren&#39;t GetFileVersionInfo and VerQueryValue merely convenience functions? &nbsp;You could implement equivalent logic yourself via FindResource and friends and parse the data yourself. &nbsp;That way you could have the function allocate the memory rather than having the caller need to make two calls with a potential race condition.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-973863">
				<div id="div-comment-973863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EMB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973863">
			March 21, 2012 at 10:28 am</a>		</div>

		<p>Raymond &quot;(Heck, even if it were explicitly disallowed, there would still be a good chance that there&#39;s somebody who&#39;s doing it.)&quot;</p>
<p>Yup. Nature Always Finds A Way. VersionRaptors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-973873">
				<div id="div-comment-973873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jas71_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jas71@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973873">
			March 21, 2012 at 10:38 am</a>		</div>

		<p>Arguably, almost all functions are merely or largely convenience functions, for varying levels of convenience: the Win32 file APIs save you having to create counted strings and call the Native API, the file system itself saves you from having to read and write individual disk sectors or network packets. Memory allocation? You could just grab whole bunches of pages and keep track of which bits you&#39;re using. C structs? You could just use pointer arithmetic in a block of memory&#8230; More relevantly, if you&#39;re going to parse the raw data yourself, you could skip FindResource too and parse the PE file format directly, but it doesn&#39;t have much appeal when a cleaner interface does the same job.</p>
<p>&quot;I have no idea whether anybody actually takes advantage of this behavior, but since persisting the file version information block was never explicitly disallowed in the documentation, one could argue that doing so was legal&quot;</p>
<p>Yes &#8211; not hard to imagine a use case where a bug-reporting or other diagnostic tool walks a list of the DLLs the product cares about, dumping the version info block from each into a diagnostic file for later analysis, which will probably entail using VerQueryValue to unpack the data.</p>
<p>(Even if version compatibility were explicitly disavowed, I can imagine someone poring over a crash dump: &quot;hm, the code croaked trying to decipher this version info structure &#8211; weird, what&#39;s that squirrel noise doing in the middle of the string? Is it corrupt? Let&#39;s try VerQueryValue and see if the structure&#39;s parseable.)</p>
<p>Talking of versions, I had a fun bug report (not my code!) yesterday: something &quot;not appearing properly on IE 7&quot;. Illustrated with a screenshot &#8211; of IE 6. It actually identified itself as being IE 7 in the About dialog &#8211; but it wasn&#39;t: the user had skipped the reboot after installing, so mshtml.dll and co were still the previous version until the delayed MoveFileEx operation could be completed. In this particular case I saw the user&#39;s screen and knew the window was wrong for the version it claimed to be; presumably why Microsoft Office gained a button on the About dialog to launch msinfo32.exe and check the actual versions of things rather than relying on the user&#39;s deductions or assumptions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-973883">
				<div id="div-comment-973883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973883">
			March 21, 2012 at 10:59 am</a>		</div>

		<p>@jas88: &nbsp;If you want to take it that far why stop there? &nbsp;All of these abstractions eventually boil down to moving electrons around. &nbsp;This particular instance is just a Win32 wrapper around other Win32 functions. &nbsp;It was my impression that in general Microsoft doesn&#39;t provide wrapper functions that you can implement yourself. &nbsp;On the other hand I suppose this is more akin to something like LoadBitmap where the raw resource is converted into something more manageable to work with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-973903">
				<div id="div-comment-973903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973903">
			March 21, 2012 at 1:53 pm</a>		</div>

		<p>(OT) Sadly the undocumented VerQueryValueIndex function was removed in Vista just because explorer&#39;s propertysheet was dumbed down&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-973923">
				<div id="div-comment-973923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chentiangemalc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973923">
			March 21, 2012 at 1:57 pm</a>		</div>

		<p>if you are worried about this race condition I feel sorry for you. do you ever complete a software project?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-973933">
				<div id="div-comment-973933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973933">
			March 21, 2012 at 1:58 pm</a>		</div>

		<p>@John: &quot;It was my impression that in general Microsoft doesn&#39;t provide wrapper functions that you can implement yourself.&quot; &nbsp;I think jas88 is right; many Win32 function calls/APIs/COM interfaces ARE just wrapper functions that we COULD implement ourselves if we wanted to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-973943">
				<div id="div-comment-973943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973943">
			March 21, 2012 at 2:31 pm</a>		</div>

		<p>@DWalker: &nbsp;You guys are taking my comments too literally. &nbsp;Why stop at Win32/COM when you have the BIOS, boot loader, file system, kernel, etc? &nbsp;GetFileVersionInfo is probably a bad example because the parsing logic is non-trivial. &nbsp;The point I was trying to make is that if Win32 provides building blocks like OpenStream and DecryptStream it generally doesn&#39;t also provide a convenience wrapper like OpenAndDecryptStream.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-973953">
				<div id="div-comment-973953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973953">
			March 21, 2012 at 5:40 pm</a>		</div>

		<p>So to be sure you&#39;d have to lock the file and the MUI file if any. @chentiangemalc: Some of us develop runtime libraries, language bindings, frameworks, &amp;c. and we have to worry about things like this. Because if something can be fixed by us, the fix is a fix for everyone (or at least, everyone we care about) and in such a scenario fixing it is clearly the right thing to do.</p>
<p>In any case, this should have been implemented as a GetFileVersionInfo / FreeFileVersionInfo pair.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-973973">
				<div id="div-comment-973973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973973">
			March 21, 2012 at 7:43 pm</a>		</div>

		<p>Anon, just because you CAN &quot;fix&quot; it, doesn&#39;t mean that you SHOULD. &nbsp;If 99.999% of your customers don&#39;t care about it, but do care about performance, then you shouldn&#39;t do it, and let the 0.001% that need the information to be exactly current and correct (at least until the call returns, at which point it can be wrong again), then let them handle it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-973963">
				<div id="div-comment-973963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973963">
			March 21, 2012 at 6:21 pm</a>		</div>

		<p>@Raymond&#39;s reply to David Walker @ first link in article: That is the premise of most call-in shows, yes. Otherwise you&#39;d just phone the guy or write him a letter. But a call-in show, like say a blog, is a public forum where the host establishes a topic for people to *** about. Of course, some hosts (especially on Fox) cut off everyone who says something they don&#39;t like. They are asses.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-973993">
				<div id="div-comment-973993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-973993">
			March 22, 2012 at 10:43 am</a>		</div>

		<p>I am still using VerQueryValue on in-memory modules rather than blocks obtained through GetFileVersionInfo. I found that for the kind of files I am doing it on (Office .EXEs and .DLLs) and the kind of information I want (version numbers), it is working ok, while GetFileVersionInfo often does not work. Why? Because it needs a file, but when Application Virtualization is running on the customer&#39;s machine, GetModuleFileName often points to nowhere!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-974013">
				<div id="div-comment-974013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jefito</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-974013">
			March 22, 2012 at 11:25 am</a>		</div>

		<p>@John, re &quot;moving electrons around&quot;: XKCD is there already (per usual); <a rel="nofollow" target="_new" href="http://xkcd.com/378/" rel="nofollow">http://xkcd.com/378/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-974043">
				<div id="div-comment-974043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-974043">
			March 22, 2012 at 6:41 pm</a>		</div>

		<p>I wonder why &quot;cat&quot; is mentioned in the XKCD comics but not &quot;sed&quot;. I think that&#39;s more popular among programmers and fits better in the theme of &quot;editors&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-974063">
				<div id="div-comment-974063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-974063">
			March 22, 2012 at 9:44 pm</a>		</div>

		<p>chentiangemalc:</p>
<blockquote><p>
  if you are worried about this race condition I feel sorry for you. do you ever complete a software project?
</p></blockquote>
<p>What&#39;s your definition of &quot;complete a software project&quot;? To shovel loads of poorly written and buggy code, out the door, as fast as you can?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-974083">
				<div id="div-comment-974083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chentiangemalc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-974083">
			March 22, 2012 at 10:54 pm</a>		</div>

		<p>Re @TC has anyone actually had issues caused by this race condition? To me is this is a theoretical potential problem, not a practical one. Of course with good real world examples will change my mind.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-974113">
				<div id="div-comment-974113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-974113">
			March 23, 2012 at 3:31 am</a>		</div>

		<p>@chentiangemalc</p>
<p>Solid (robust) coding is all about saying: &quot;what if &#39;x&#39; happens?&quot; &#8211; even if &#39;x&#39; is unlikely &#8211; in fact, *especially when* &#39;x&#39; is unlikely!</p>
<p>Your previous comment seemed to say, why bother when the case is rare? My view is, that a careful consideration of rare cases, is what distinguishes solid code, from buggy code.</p>
<p>The solid coder thinks carefully about rare cases! The buggy coder doesn&#39;t :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-974693">
				<div id="div-comment-974693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120321-00/?p=8043#comment-974693">
			March 27, 2012 at 12:49 am</a>		</div>

		<p>I&#39;m with you in general about your distinction between &quot;solid&quot; und &quot;buggy&quot; coders, but you have to draw a line here: When checking file version, the only hazard-free solution would be to provide your process a stable view at any file, by stopping all multi-tasking, or by making the file system(s) at the computer readonly to every other process.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

