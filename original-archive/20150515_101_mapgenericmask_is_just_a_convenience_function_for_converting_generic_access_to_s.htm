<html>
<head>
<title>MapGenericMask is just a convenience function for converting generic access to specific access, according to the instructions you provide</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>MapGenericMask is just a convenience function for converting generic access to specific access, according to the instructions you provide</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 15, 2015 / year-entry #102</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150515-00/?p=45591</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">For some reason, people call the Map­Generic­Mask function in order to calculate what access mask to pass to request access to something. That's not what Map­Generic­Mask is for. The Map­Generic­Mask function is to assist the server side of the access, not the client side. As the documentation says, the Map­Generic­Mask function maps the generic access...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
For some reason,
people call
the <code>Map&shy;Generic&shy;Mask</code> function
in order to calculate what access mask to pass to request
access to something.
That's not what
<code>Map&shy;Generic&shy;Mask</code> is for.
The
<code>Map&shy;Generic&shy;Mask</code> function is to assist
the server side of the access,
not the client side.
</p>
<p>
As the documentation says,
the <code>Map&shy;Generic&shy;Mask</code> function
<a HREF="http://msdn.microsoft.com/en-us/library/windows/desktop/aa379266(v=vs.85).aspx">
maps the generic access rights in an access mask
to specific and standard access rights. 
The function applies a mapping supplied
in a <code>GENERIC_<wbr>MAPPING</code> structure</a>.
</p>
<p>
This is further explained in the remarks:
</p>
<blockquote CLASS=m><p>
After calling the <b>Map&shy;Generic&shy;Mask</b> function,
the access mask pointed to by the <i>Access&shy;Mask</i> parameter
has none of its generic bits
(GenericRead, GenericWrite, GenericExecute, or GenericAll)
or undefined bits&sup1; set, although it can have other bits set.
If bits other than the generic bits are provided on input,
this function does not clear them.
</p>
</blockquote>
<p>
What this function does is take the
<code>Access&shy;Mask</code> parameter
and convert all of the <code>GENERIC_*</code>
bits into object-specific bits,
as defined by the
<code>GENERIC_<wbr>MAPPING</code>.
</p>
<p>
In other words, the code for
the <code>Map&shy;Generic&shy;Mask</code> function
looks basically like this:
</p>
<pre>
void MapGenericMask(
  PDWORD AccessMask,
  PGENERIC_MAPPING GenericMapping
)
{
 if (*AccessMask &amp; GENERIC_READ)
     *AccessMask |= GenericMapping-&gt;GenericRead;

 if (*AccessMask &amp; GENERIC_WRITE)
     *AccessMask |= GenericMapping-&gt;GenericWrite;

 if (*AccessMask &amp; GENERIC_EXECUTE)
     *AccessMask |= GenericMapping-&gt;GenericExecute;

 if (*AccessMask &amp; GENERIC_ALL)
     *AccessMask |= GenericMapping-&gt;GenericAll;

 *AccessMask &amp;= ~(GENERIC_READ | GENERIC_WRITE |
                  GENERIC_WRITE | GENERIC_ALL);
}
</pre>
<p>
The function takes the access mask and sees if any of the
generic access bits are set.
If so, then it replaces them with the corresponding
specific access bits provided by the
<code>Generic&shy;Mapping</code> parameter.
</p>
<p>
Note that this function doesn't tell you anything
you don't already know.
It's just a helper function to make access checks
easier to implement:
If you are a component that manages an object
and you need to perform an access check,
you use
<code>Map&shy;Generic&shy;Access</code>
to
convert all the generic access requests
into specific requests according to the
rules you specified in your
<code>GENERIC_<wbr>MAPPING</code>,
and the rest of your code only needs to deal
with specific requests.
</p>
<p>
For example,
we saw some time ago that
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/09/29/8966821.aspx">
a hypothetical Gizmo object</a>
could map <code>GENERIC_<wbr>READ</code> to operations
that query information from a Gizmo without modifying it,
map <code>GENERIC_<wbr>WRITE</code> to operations
that alter the gizmo properties,
map <code>GENERIC_<wbr>EXECUTE</code> to operations
that enable or disable the Gizmo,
and
map <code>GENERIC_<wbr>ALL</code> to include all
Gizmo operations.
</p>
<p>
And if you needed to do a security check on
a Gizmo, you would do something like this:
</p>
<pre>
BOOL IsGizmoAccessGranted(
 HTOKEN Token,
 PSECURITY_DESCRIPTOR SecurityDescriptor,
 DWORD AccessDesired,
 PDWORD AccessAllowed)
{
 MapGenericMask(&amp;AccessDesired, &amp;GizmoGenericMapping);

 BOOL AccessGranted = FALSE;
 PRIVILEGE_SET PrivilegeSet;
 DWORD PrivilegeSetSize = sizeof(PrivilegeSet);

 return AccessCheck(SecurityDescriptor,
            Token,
            AccessDesired,
            &amp;GizmoGenericMapping,
            &amp;PrivilegeSet,
            &amp;PrivilegeSetSize,
            AccessAllowed,
            &amp;AccessGranted) &amp;&amp; AccessGranted;
}
</pre>
<p>
When somebody wants to access a Gizmo,
you use <code>Map&shy;Generic&shy;Mask</code>
to convert all the
generic requests to specific requests.
You then pass that request to
<code>Access&shy;Check</code>,
along with token for the user making the request
and the security descriptor for the widget.
The <code>Access&shy;Check</code> function does
the heavy lifting of seeing
which ACEs apply to the user specified by the token,
then verifying that all the requested accesses
have an <i>Allow</i> ACE,
and that none of the requested accesses have a
<i>Deny</i> ACE.
It also takes care of the
<code>MAXIMMUM_<wbr>ALLOWED</code> access request
by simply returning all the accesses that are
allowed and not denied.
</p>
<p>
The point of the
<code>Map&shy;Generic&shy;Mask</code> function is
to make life a little easier for the code that
enforces security.
</p>
<p>
On the other hand, the <code>Map&shy;Generic&shy;Mask</code>
function is not particularly useful on the side that is
requesting access.
If you are requesting generic read access,
just pass <code>GENERIC_<wbr>READ</code>.
The code that does the security check will convert the
<code>GENERIC_<wbr>READ</code> into the access masks
that are specific to the object you are trying to access.
(And it will most likely use the
<code>Map&shy;Generic&shy;Mask</code> function to do it.)
</p>
<p>
&sup1; That extra phrase "or undefined bits"
is contradicted by the subsequent sentence
"If bits other than the generic bits
are provided on input, the function does not
clear them."
The second sentence is correct; the extra phrase
"or undefined bits" is incorrect and should be
removed.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1243936">
				<div id="div-comment-1243936" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150515-00/?p=45591#comment-1243936">
			May 15, 2015 at 11:19 pm</a>		</div>

		<p>&gt; MapGenericMask is just a convenience function for converting generic access to specific access,</p>
<p>&gt; according to the instructions you provide</p>
<p>It also looks attractive on the mantelpiece, and is machine-washable.</p>
<p>But seriously, no love for this entry? I&#39;ve been watching it all day on zero comments. I too thought MGM was some sort of server-only &#39;magic&#39; function that made silk purses out of sows&#39; ears, so I learned something.</p>
<p>But then again, I can&#39;t code for excrement.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1243926">
				<div id="div-comment-1243926" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150515-00/?p=45591#comment-1243926">
			May 16, 2015 at 9:15 am</a>		</div>

		<p>@Why am I first?: Because there is not much more to add? The post leaves no unanswered questions and will probably help developers everywhere, the only comment I could think of would be &quot;Thank you&quot;. I don&#39;t know if Raymond can see the number of votes but if I have no comments I just rate the post.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1243916">
				<div id="div-comment-1243916" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150515-00/?p=45591#comment-1243916">
			May 16, 2015 at 1:47 pm</a>		</div>

		<p>skSdnW: The big unanswered question is how does Raymond even know that people call MapGenericMask when requesting access? Do people ask unrelated questions and then somebody notices MGM sitting there unnecessarily? Or do people post questions like &quot;Why is my call to MGM not making a difference?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1243906">
				<div id="div-comment-1243906" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150515-00/?p=45591#comment-1243906">
			May 17, 2015 at 2:26 pm</a>		</div>

		<p>&gt; how does Raymond even know that people call MapGenericMask when requesting access?</p>
<p>I guess he sees it while debugging.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com0003400180b2af1b even thread-even depth-1" id="comment-1243896">
				<div id="div-comment-1243896" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Cube+8' rel='external nofollow' class='url'>Cube 8</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150515-00/?p=45591#comment-1243896">
			May 18, 2015 at 3:03 am</a>		</div>

		<p>Typo in the last line of the code snippet:</p>
<p>*AccessMask &amp;= ~(GENERIC_READ | GENERIC_WRITE |</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;GENERIC_WRITE | GENERIC_ALL);</p>
<p>There are 2 GENERIC_WRITE flags. One of them should be GENERIC_EXECUTE.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

