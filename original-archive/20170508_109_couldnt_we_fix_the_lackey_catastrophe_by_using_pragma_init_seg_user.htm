<html>
<head>
<title>Couldn't we fix the lackey catastrophe by using #pragma init_seg(user)?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Couldn&#8217;t we fix the lackey catastrophe by using #pragma init_seg(user)?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 8, 2017 / year-entry #110</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">That doesn't help, for more than one reason.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The lackey catastrophe is the nickname I gave to
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20160929-00/?p=94415">
a problem</a>
where the lackey hired by the C runtime to destruct global objects
runs too late.
Specifically,
it may run after other DLLs have already shut down,
which means that
you will have a problem if there is an
object whose destructor relies on one of those already-shut-down DLLs.
</p>
<p>
Commenter ZLB remarked,
"<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20160929-00/?p=94415#comment-1266735">One way to fix this</a>
would be to use
<a HREF="https://msdn.microsoft.com/library/7977wcck.aspx">
#pragma init_seg(user)</a>
to force the object to be constucted last and destructed first."
</p>
<p>
The <code>init_seg</code> pragma helps control the order in which
objects within a module are constructed and destructed.
But note the phrase "within a module".
</p>
<p>
The global variables in a module are constructed in three phases.
The "compiler" phase is reserved for the compiler, and its objects
construct first.
The "lib" phase is intended for libraries (and clearly, in this context,
we mean static libraries),
and its objects construct next.
The "user" phase is intended for application variables,
and its objects construct last.
(Destruction is in reverse order of construction.)
</p>
<p>
But all of these phases are internal to the C runtime.
They control the order in which the C runtime constructs
and destructs objects
as part of standard module initialization
and termination.
But they don't have any effect on when the module as a whole
is initialized or terminated.
</p>
<p>
Suppose you have Super Elite status at an airline,
eligible for priority boarding for any flight.
You get to the airport for the 4pm flight to San Francisco,
and the moment they announce that they are commencing boarding,
you saunter up to the gate, flash your Super Elite
status badge,
and stroll right onto the airplane ahead of everybody else.
</p>
<p>
That's great and all, but remember:
You're all on the same airplane.
</p>
<p>
Getting Super Elite priority boarding on the 4pm flight
to San Francisco won't get you to San Francisco ahead of
the 1pm flight. That flight left three hours ago,
and in fact it already landed even before you set foot
on the airplane.
</p>
<p>
Using the <code>init_seg</code> pragma lets you tweak the order
in which objects are constructed and destructed,
relative to other objects in the module.
But the issue here is that the module itself is being terminated
too late.
You're all on the same airplane flight, and that flight takes off
too late.
Nothing you do with your flight is going to get you there
ahead of that other module, because that other module already landed.
</p>
<p>
A more mundane explanation as to why
the <code>init_seg(user)</code> pragma won't help
is that
<code>init_seg(user)</code> is the default initialization segment.
If you don't specify an initialization segment,
then you get <code>user</code>.
Explicitly asking for <code>user</code> doesn't change anything.
That option is provided for completeness.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-archangelpip even thread-even depth-1 parent" id="comment-1295515">
				<div id="div-comment-1295515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1295515">
			May 8, 2017 at 3:43 pm</a>		</div>

		<p>The one thing that I wonder is in Windows 10, does explorer use the universal crt?<br />
If I remember correctly, that problem was caused by everything using msvcrt.dll, including kernel32.dll, that caused the crt unload stuff to happen after just about everything.<br />
If explorer uses the universal crt for its runtime instead of msvcrt, wouldn&#8217;t this problem be non existent again because ucrtbase.dll would unload much earlier. (Unless of course if kernel32.dll also uses the universal crt.)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1295535">
				<div id="div-comment-1295535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1295535">
			May 8, 2017 at 9:44 pm</a>		</div>

		<p>I don&#8217;t think that can have been the problem, because unless you&#8217;re using a dodgy third-party product or a VERY old version of Visual Studio, you don&#8217;t get linked with msvcrt.dll, you get linked with msvcrtNNN.dll.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-3 parent" id="comment-1295545">
				<div id="div-comment-1295545" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1295545">
			May 9, 2017 at 7:12 am</a>		</div>

		<p>A lot of projects <a 0="href="https://en.wikipedia.org/wiki/MinGW#Programming_language_support" rel="nofollow">link to MSVCRT</a>, and this <a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273">causes compatibility problems</a>.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1295637">
				<div id="div-comment-1295637" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1295637">
			May 9, 2017 at 8:37 pm</a>		</div>

		<p>Link tag on &#8220;link to&#8221; is corrupted. I only knew it was there because my mobile device highlighted it even though tapping it went nowhere. Link goes to: <a href="https://en.wikipedia.org/wiki/MinGW#Programming_language_support" rel="nofollow">https://en.wikipedia.org/wiki/MinGW#Programming_language_support</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip even depth-3 parent" id="comment-1295605">
				<div id="div-comment-1295605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1295605">
			May 9, 2017 at 1:48 pm</a>		</div>

		<p>Can you say this is true for the internal Windows components and the build process for Windows?<br />
The thing to remember here is that Windows never shipped with any version of the CRT pre-installed. So on a freshly installed system, there were no files named msvcrNNN.dll available. So that would mean that explorer couldn&#8217;t run, right? But it is the default shell, so it had to somehow run.<br />
Anyway, since the gcc compiler that comes with mingw normally linked against msvcrt.dll, are you calling gcc a dodgy third party product?<br />
Finally, your last sentence is no longer true. Visual Studio 2015 and newer no longer link to a library named msvcrNNN.dll. Probably as an effort to stop so many people from linking against msvcrt.dll, they introduced the universal crt, so new versions of Visual Studio link against ucrtbase.dll.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1295625">
				<div id="div-comment-1295625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1295625">
			May 9, 2017 at 7:01 pm</a>		</div>

		<p>Ah, I misunderstood what you were saying, you&#8217;re talking about the case where Explorer itself is experiencing the lackey problem.  I thought you were talking about third-party applications.  Careless reading on my part, sorry.</p>
<p>MinGW was indeed the dodgy third-party product I was alluding to.  Although I should note that the only reason I consider it dodgy is precisely because it links against msvcrt.dll, so I suppose this could be considered a &#8220;no true Scotsman&#8221; argument. :-)</p>
<p>And yes, I&#8217;m aware that the newer versions of Visual Studio use the uCRT.  I thought that could go without saying.  The important part of the sentence was &#8220;don&#8217;t get linked with msvcrt.dll&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1295965">
				<div id="div-comment-1295965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1295965">
			May 12, 2017 at 2:49 pm</a>		</div>

		<p>No circular reasoning flaw here.<br />
It&#8217;s true that MinGW is dodgy because it uses the dodgy practice of linking to MSVCRT.DLL.<br />
But circular reasoning only kicks in if the argument that linking to MSVCRT.DLL is dodgy is made because only dodgy software does it.  And that&#8217;s not the argument, because there&#8217;s a better one.  Namely, that Microsoft rather officially said something along the lines of &#8220;MSVCRT is for Microsoft and not for thee&#8221;, but then MinGW went and linked to it anyway.  It&#8217;s the ignoring of the API contract that makes it dodgy.</p>
<p>(See Raymond&#8217;s earlier post for links to and explanation of the official statement, which I have only paraphrased <a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273/" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273/</a>)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1296175">
				<div id="div-comment-1296175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1296175">
			May 15, 2017 at 10:30 am</a>		</div>

		<p>Where is the famous time machine? Raymond/ms &#8220;official statement&#8221; was issued long after applications started to link against msvcrt.dll.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1296195">
				<div id="div-comment-1296195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170508-00/?p=96126#comment-1296195">
			May 15, 2017 at 12:03 pm</a>		</div>

		<p>There was no &#8220;official statement&#8221; because none was needed. msvcrt was never part of the Windows SDK. Anybody who was using it was doing so without any documentation. Do you need to make an official statement that you shouldn&#8217;t do undocumented things?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

