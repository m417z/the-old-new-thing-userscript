<html>
<head>
<title>Sure, you can implement your own cryptographic service provider for a standard algorithm, but why would you?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Sure, you can implement your own cryptographic service provider for a standard algorithm, but why would you?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 5, 2018 / year-entry #249</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You are signing up for a very big world of hurt.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to write their own custom implementation
of an existing standard encryption algorithm.
The customer liaison noted that this custom implementation
would presumably produce results identical to the built-in
implementation because it is, after all, a standard.
But if that's the case, there doesn't seem to be much
point to the undertaking.
</p>
<p>
There was some speculation as to why the customer wanted
to reimplement a standard algorithm.
Maybe they thought they could do a better job by taking
advantage of
<a HREF="https://en.wikipedia.org/wiki/AES_instruction_set">
special-purpose instructions in the CPU</a> for encryption
and decryption?
But a member of the security team confirmed that the
built-in providers already take advantage of those instructions
if available.
"Unless your customer wants to use a mode that the built-in
providers don't support,
there is no technical reason for them to write their own
implementation."
</p>
<p>
The customer liaison reported that the customer was trying to close
a deal with a client.
The client wants to be able to
<a HREF="http://technet.microsoft.com/en-us/library/dn554259%28v=exchg.150%29.aspx">
configure Exchange to
use a customized encryption algorithm</a>.
"They might not end up creating such a customized encryption algorithm,
but they want to be sure that it's possible,
so they need a proof-of-concept demonstration."
The customer found the
<a HREF="http://www.microsoft.com/en-us/download/details.aspx?id=30688">
Cryptographic Provider Development Kit</a>
and was working through the sample provider.
</p>
<p>
One person contributed to the discussion with a story from personal
experience:
</p>
<blockquote CLASS="q"><p>
I worked at a company where custom cryptography was a government requirement.
Don't do it.
Developing and supporting custom cryptography
is a multi-year undertaking.
<a HREF="http://www.cryptopro.ru/products/csp">
It is technically possible</a>,
but I don't think your customer is willing to invest so much.
You need to position the solution differently.
</p>
</blockquote>
<p>
<a HREF="https://blogs.msdn.microsoft.com/aaron_margosis/">
Aaron Margosis</a>
agreed.
"Sometimes,
people take technical requirements too literally when they should
be looking at the bigger-picture business requirement,
which can often be met with existing technologies."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-damien_the_unbeliever even thread-even depth-1" id="comment-1369785">
				<div id="div-comment-1369785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Damien_The_Unbeliever' rel='external nofollow' class='url'>Damien_The_Unbeliever</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369785">
			November 5, 2018 at 7:08 am</a>		</div>

		<p>If they want to demonstrate that they can use a custom crypto provider, surely a custom provider for the null algorithm is easier to write than any for a standard algorithm. Or maybe some trivial bit-twiddling just to show it&#8217;s doing something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-koldude odd alt thread-odd thread-alt depth-1" id="comment-1369795">
				<div id="div-comment-1369795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369795">
			November 5, 2018 at 7:09 am</a>		</div>

		<p>I remember looking into this a few years ago when you had to register with Microsoft to even download that SDK because of US case law concerning cryptography and the state department. I quickly came to the conclusion that unless you had a reason to supply this to other companies for use in their own products there was really no legitimate reason to ever do this. Most people using algorithms MS wouldn&#8217;t support would just end up using OpenSSL (this was pre-heartbleed) and call it done, so the only reason to actually do this was to ensure that all applications depending on Schannel could use those custom algorithms as well.</p>
<p>I was just playing around to better understand the algorithms and quickly gave up on using it and just made a scratch program that did basic implementations. I made sure to put a very big warning on the repo that none of the implementations were safe or secure even if they did work because they were indubitably subject to timing and side channel attacks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tomo1k even thread-even depth-1" id="comment-1369805">
				<div id="div-comment-1369805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Richard199' rel='external nofollow' class='url'>Richard199</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369805">
			November 5, 2018 at 7:26 am</a>		</div>

		<p>Surely the best proof-of-concept crypto provider is simply to output the input, unchanged.</p>
<p>Don&#8217;t even try to actually encrypt, just prove that you can accept the inbound data and output it to the proper channel.</p>
<p>Job done, you&#8217;ve proven that it&#8217;s technically possible. Now don&#8217;t do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mzzt odd alt thread-odd thread-alt depth-1" id="comment-1369815">
				<div id="div-comment-1369815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369815">
			November 5, 2018 at 7:52 am</a>		</div>

		<p>If they want a proof of concept, an implementation of rot26 is the way to go.</p>
<p><a href="http://www.rot26.org/" rel="nofollow">http://www.rot26.org/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1 parent" id="comment-1369835">
				<div id="div-comment-1369835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369835">
			November 5, 2018 at 10:20 am</a>		</div>

		<p>As far as the US Government is concerned, publicly available algorithms (such as AES256) are only allowed to protect &#8220;Secret and Below&#8221; and are insufficient for protecting Top Secret data. Any system processing such data needs to use a &#8220;Suite A&#8221; algorithm.</p>
<p>Same thing exists in the UK. I worked on a custom HAIPE box for MoD, in which they wanted to plug in their own custom UKEO algorithm in place of the one specified by NSA.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dougharris odd alt depth-2" id="comment-1369845">
				<div id="div-comment-1369845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DougHarris' rel='external nofollow' class='url'>DougHarris</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369845">
			November 5, 2018 at 1:42 pm</a>		</div>

		<p>&gt;As far as the US Government is concerned, publicly available algorithms (such as AES256) are only allowed to protect “Secret and Below” and are insufficient for protecting Top Secret data</p>
<p>that&#8217;s not what wikipedia says.</p>
<p>&#8220;The design and strength of all key lengths of the AES algorithm (i.e., 128, 192 and 256) are sufficient to protect classified information up to the SECRET level. TOP SECRET information will require use of either the 192 or 256 key length&#8221;</p>
<p><a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard#Security" rel="nofollow">https://en.wikipedia.org/wiki/Advanced_Encryption_Standard#Security</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mjosaarinen even depth-2 parent" id="comment-1369855">
				<div id="div-comment-1369855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/mjosaarinen' rel='external nofollow' class='url'>mjosaarinen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369855">
			November 5, 2018 at 2:22 pm</a>		</div>

		<p>Hi Brian_EE, if you look at the 2015 Commercial National Security Algorithm (CNSA) Suite documents, which replaced older &#8220;Suite B&#8221;, AES-256 is approved up to Top Secret to protect NSS systems.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman odd alt depth-3" id="comment-1369895">
				<div id="div-comment-1369895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369895">
			November 6, 2018 at 7:05 am</a>		</div>

		<p>Suite B is not appropriate for all categories of protected information. It is fact that contracts continue to be issued for systems containing only Suite A algorithms.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-odd thread-alt depth-1 parent" id="comment-1369875">
				<div id="div-comment-1369875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369875">
			November 5, 2018 at 5:06 pm</a>		</div>

		<p>Sometimes they want to use something that Microsoft (or just .NET cryptographic providers) does not provide so they want to roll out their own.</p>
<p>Say, the SHA512/256 algorithm. In the end we have to direct them to use BouncyCastle&#8217;s implementation. At least it&#8217;s better than rolling out their own.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cj-no-one odd alt depth-2" id="comment-1369915">
				<div id="div-comment-1369915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/thedarkfreak' rel='external nofollow' class='url'>thedarkfreak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369915">
			November 6, 2018 at 8:02 am</a>		</div>

		<p>I think the scenario in this issue specifically was that they were making a CSP for an algorithm that WAS implemented by Microsoft.  Obviously, if you need to use something that&#8217;s not in one of Microsoft&#8217;s Providers, you need to roll a custom one(or find one already done), but that&#8217;s not the case here.  Raymand&#8217;s stating here that it&#8217;s far too much of an undertaking to roll your own CSP to implement something _already provided_.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tomlinjim even thread-even depth-1 parent" id="comment-1369885">
				<div id="div-comment-1369885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jstTheOverlord' rel='external nofollow' class='url'>jstTheOverlord</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369885">
			November 6, 2018 at 6:17 am</a>		</div>

		<p>Of course it would be a giant amount of work and you would almost certainly get a lot wrong&#8230;</p>
<p>Bu I can see two cases where it still would be legit to roll-your-own standard encryption:</p>
<p>1. Academic. You are studying encryption and want to write code that works to the standard or you want to take a known-good system and tweak it to see what happens.</p>
<p>2. Embedded (or a moral equivalent). You have a (gasp!) custom/non-Windows system and want standards-compliant encryption on it. It might be useful to test you code in, say, Windows to check correctness.</p>
<p>Sorry for the bloviatingness. I do feel better now. :)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-henke odd alt depth-2 parent" id="comment-1369925">
				<div id="div-comment-1369925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henke37' rel='external nofollow' class='url'>Henke37</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1369925">
			November 6, 2018 at 8:09 am</a>		</div>

		<p>There are easier ways to test a custom implementation of an existing algorithm. Such as a small throwaway console program.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman even depth-3" id="comment-1370225">
				<div id="div-comment-1370225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181105-00/?p=100135#comment-1370225">
			November 8, 2018 at 10:04 am</a>		</div>

		<p>A small throwaway console program doesn&#8217;t demonstrate that you know how to integrate into the Exchange framework. That was the whole premise for the exercise.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

