<html>
<head>
<title>How can I get the list of programs the same way that Programs and Features gets it?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I get the list of programs the same way that Programs and Features gets it?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 30, 2013 / year-entry #345</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>25</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to get the list of programs the same way that the Programs and Features folder gets it. Here, here's an idea: Instead of trying to mimic the Programs and Features folder, just ask the Programs and Features folder for its contents! That way, no matter what changes are made to how the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to get the list of programs the same way that
the
Programs and Features folder gets it.
</p>
<p>
Here, here's an idea:
Instead of trying to mimic the Programs and Features folder,
just ask the Programs and Features folder for its contents!
That way, no matter what changes are made to how the
Programs and Features folder obtains its contents
(and those changes occur pretty often),
your program will always match it,
because you're just showing the same thing.
</p>
<p>
Here's the basic idea, in scripting language since it's quicker:</p>
<pre>
var shell = new ActiveXObject("Shell.Application");
var programsFolder = shell.Namespace(
    "::{26EE0668-A00A-44D7-9371-BEB064C98683}\\8\\" +
    "::{7B81BE6A-CE2B-4676-A29E-EB907A5126C5}");
var items = programsFolder.Items();
for (var i = 0; i &lt; items.Count; i++) {
    var item = items.Item(i);
    WScript.StdOut.WriteLine(item);
    WScript.StdOut.WriteLine("Size = " + item.ExtendedProperty("System.Size"));
    WScript.StdOut.WriteLine("------------");
}
</pre>
<p>
Okay, first of all, how did I get that magic string
for the Programs and Features folder?
I opened the Control Panel
and dragged the <i>Uninstall a program</i>
link onto
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/02/04/10390725.aspx">
the program from a few weeks ago</a>.
</p>
<p>
The program itself is pretty straightforward.
It's the standard
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/01/14/10384593.aspx">
<i>enumerate everything in a folder and print it</i></a>
program we've seen before.
The only trick was finding the folder.
</p>
<p>
As for the C++ version, it should also look familiar, because
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/31/10203215.aspx">
we've done it before</a>
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/01/28/10388715.aspx">
more than once</a>.
The only difference is the way we create the folder
and the details we choose to display.
(For extra credit:
Change this program to
bind to the persisted pidl instead of the parsing name.)
</p>
<pre>
int __cdecl wmain(int argc, wchar_t **argv)
{
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/05/20/135841.aspx">CCoInitialize</a> init;
 CComPtr&lt;IShellItem&gt; spPrinters;
 <font COLOR=blue><a HREF="http://msdn.microsoft.com/en-us/library/windows/desktop/bb762134%28v=vs.85%29.aspx">SHCreateItemFromParsingName</a>(
   L"::{26EE0668-A00A-44D7-9371-BEB064C98683}\\8\\"
   L"::{7B81BE6A-CE2B-4676-A29E-EB907A5126C5}",</font> nullptr,
   IID_PPV_ARGS(&amp;spPrograms));
 CComPtr&lt;IEnumShellItems&gt; spEnum;
 spPrograms-&gt;BindToHandler(nullptr, BHID_EnumItems,
                              IID_PPV_ARGS(&amp;spEnum));
 for (CComPtr&lt;IShellItem&gt; spProgram;
      spEnum-&gt;Next(1, &amp;spProgram, nullptr) == S_OK;
      spProgram.Release()) {
  CComHeapPtr&lt;wchar_t&gt; spszName;
  spProgram-&gt;GetDisplayName(SIGDN_NORMALDISPLAY, &amp;spszName);
  wprintf(L"%ls\n", spszName);
  <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/31/10203215.aspx">PrintDetail</a>(CComQIPtr&lt;IShellItem2&gt;(spProgram), &amp;PKEY_Size, L"Size");</font>
 }
 return 0;
}
</pre>
<p>
Bonus script:
You can even see what verbs are available.
</p>
<pre>
var shell = new ActiveXObject("Shell.Application");
var programsFolder = shell.Namespace(
    "::{26EE0668-A00A-44D7-9371-BEB064C98683}\\8\\" +
    "::{7B81BE6A-CE2B-4676-A29E-EB907A5126C5}");
var items = programsFolder.Items();
for (var i = 0; i &lt; items.Count; i++) {
    var item = items.Item(i);
    WScript.StdOut.WriteLine(item);
    WScript.StdOut.WriteLine("Size = " + item.ExtendedProperty("System.Size"));
    <font COLOR=blue>var verbs = item.Verbs();
    for (var j = 0; j &lt; verbs.Count; j++) {
       var verb = verbs.Item(j);
       WScript.StdOut.WriteLine("Action: " + verb.Name);
    }</font>
    WScript.StdOut.WriteLine("------------");
}
</pre>
<p>
And if you're really ambitious,
you can even call
<code>verb.DoIt</code> to carry out the action.
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/03/20/1915586.aspx">
Don't use this power for evil</a>.
</p>
<p>
<b>Note</b>:
Since we are working with the
Programs and Features folder,
we are necessarily targeting Windows Vista and later,
since that was the version of Windows in which the
Programs and Features folder was introduced.
Therefore, I am free to use
functionality introduced in Windows Vista.
</p>
<p>
I've been doing Little Programs for a year now.
I kind of like it,
so I'm going to continue for another year,
but I'm going to relax the rules a bit:
The Little Programs are now just programs that I think
are interesting for whatever reason.
They don't need to actually solve a problem.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-ietest even thread-even depth-1" id="comment-1096753">
				<div id="div-comment-1096753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/crack+tracker' rel='external nofollow' class='url'>crack tracker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096753">
			December 30, 2013 at 8:16 am</a>		</div>

		<p>this folder view has a column for &quot;last used on&quot; which I imagine that links to System.Software.DateLastUsed, but it comes up blank, any ideas? That also reminds me of another useful property I never was able to fetch from any executable file:</p>
<p>System.Software.TimesUsed</p>
<p>happy holidays!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096763">
				<div id="div-comment-1096763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096763">
			December 30, 2013 at 9:58 am</a>		</div>

		<p>How likely is it that the guid for programs and features might change or disappear in the future, with changes to the implementation? &nbsp;Is this actually the kind of interface that would be treated as a compat surface of the shell, in your astimation?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1096773">
				<div id="div-comment-1096773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096773">
			December 30, 2013 at 10:52 am</a>		</div>

		<p>Adding shell:::{7B81BE6A-CE2B-4676-A29E-EB907A5126C5} (shell:ChangeRemoveProgramsFolder) to Classic Shell&#39;s menu as a custom item cascading menu lets you uninstall programs faster than opening it from Explorer. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096793">
				<div id="div-comment-1096793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096793">
			December 30, 2013 at 11:23 am</a>		</div>

		<p>How about PowerShell scripts from now on instead of jscript?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096803">
				<div id="div-comment-1096803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096803">
			December 30, 2013 at 11:29 am</a>		</div>

		<p>&quot;Here, here&#39;s an idea: Instead of trying to mimic the Programs and Features folder, just ask the Programs and Features folder for its contents! That way, no matter what changes are made to how the Programs and Features folder obtains its contents (and those changes occur pretty often), your program will always match it, because you&#39;re just showing the same thing.&quot;</p>
<p> &#8211; vs &#8211;</p>
<p>&quot;Note: Since we are working with the Programs and Features folder, we are necessarily targeting Windows Vista and later, since that was the version of Windows in which the Programs and Features folder was introduced. Therefore, I am free to use functionality introduced in Windows Vista. &quot;</p>
<p>So in other words, if someone had asked this some time between 95 and 2007(ish), you&#39;d have given him a different &quot;future-proof&quot; solution which probably doesn&#39;t work any more. &nbsp;The problem isn&#39;t that there&#39;s no standard way to do stuff, it&#39;s that the standards change every other release!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096813">
				<div id="div-comment-1096813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096813">
			December 30, 2013 at 11:56 am</a>		</div>

		<p>@MV: Given Microsoft&#39;s religious adherence to backwards compatibility, I find that rather hard to believe. &nbsp;The old way would still be supported, even if it was now &quot;wrong.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096823">
				<div id="div-comment-1096823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyCadley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096823">
			December 30, 2013 at 12:36 pm</a>		</div>

		<p>@MV: If someone had asked in the 95-2006(ish) era, Raymond would probably have scratched his head in confusion, since the question doesn&#39;t make any sense till Programs and Features existed. It&#39;s like asking how you enumerate all the Windows Store apps on Windows 95.</p>
<p>They might have asked about getting the list of programs as seen in the Start Menu (relatively obvious) or as listed in Add/Remove Programs (the uninstall registry key mostly though, as Raymond has covered before, some of it is just heuristics)</p>
<p>It&#39;s great to have a &quot;standard&quot; way of doing things, but it doesn&#39;t negate the need for a time machine if you want that to have existed before anyone thought of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1096853">
				<div id="div-comment-1096853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096853">
			December 30, 2013 at 3:20 pm</a>		</div>

		<p>@Bob: Thumbs up! I second that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1096863">
				<div id="div-comment-1096863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096863">
			December 30, 2013 at 6:41 pm</a>		</div>

		<p>@nksingh: I don&#39;t know, it&#39;s the same as you write script to invoke &quot;&amp;Menuitem1&quot; then &quot;Menusubitem&amp;3&quot; of Foo application. If the names got changed for whatever reason, your program stops working and you need an update.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096873">
				<div id="div-comment-1096873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096873">
			December 30, 2013 at 6:45 pm</a>		</div>

		<p>I used the old &quot;standard&quot; way once, that is enumerate the registry key where uninstallers get written.</p>
<p>The 1.x series of our product had a nasty bug where in-place-upgrades (the only supported kind) would litter the install list with all the old versions ever installed. Running the uninstaller on any of them would break the program&#39;s install rather badly. The 1.x installers used guid-looking names (one for each version installed) and we had no list of the assigned names. So I enumerated, matching on the display text and icon file name. Every one matching got uninstalled by the 2.x series installer (which would then repair the damage by virtue of upgrading to 2.x series).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096903">
				<div id="div-comment-1096903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096903">
			December 30, 2013 at 10:14 pm</a>		</div>

		<p>While it&#39;s great to ask the Programs and Features folder for its contents, my concern would be how to access the Programs and Features folder. The magic string contains the GUID for the Control Panel, then &quot;8&quot;, and then the GUID for Programs and Features.</p>
<p>It just so happens that Programs and Features is in category 8 of the Control Panel, but what if that changes? Well, it so happens that any string I used to replace the &quot;8&quot; still worked, so it doesn&#39;t matter at this point what category it&#39;s in. However, it&#39;s entirely possible that at some point in the future it will matter, and then the program may stop working.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096963">
				<div id="div-comment-1096963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096963">
			December 31, 2013 at 8:56 am</a>		</div>

		<p>Just to pile on here&#8230;</p>
<p>@MV</p>
<p>You can&#39;t future-proof beyond major OS releases, but Vista/7/8 all use the same method.</p>
<p>If this was an iFruit, you couldn&#39;t even count on the same functionality being available over the course of a single year&#39;s upgrades.</p>
<p>Linux, you can&#39;t even guarantee compatibility within the same month.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096973">
				<div id="div-comment-1096973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1096973">
			December 31, 2013 at 8:59 am</a>		</div>

		<p>@Gabe</p>
<p>Programs stop working all the time. Conveniently, code isn&#39;t a permanent document. When things stop working, you can fix them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097013">
				<div id="div-comment-1097013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">George</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097013">
			December 31, 2013 at 11:42 am</a>		</div>

		<p>@Gabe &#8211; When I tried to get the name I got 0 (probably because I used the flat view of the Control Panel). Also slightly less hacky way is to use SHGetKnownFolderItem(FOLDERID_ChangeRemovePrograms).</p>
<p>BTW, to get the version of the program you can use the undocumented property &quot;{0CEF7D53-FA64-11D1-A203-0000F81FEDEE}, 8&quot;. It is weird because other similar properties are documented, like PKEY_Trademarks and PKEY_Software_ProductName.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097093">
				<div id="div-comment-1097093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097093">
			December 31, 2013 at 3:57 pm</a>		</div>

		<p>How do a script perform this enumeration in windows nt/2k/xp, ie using add/remove programs?</p>
<div class="post">[<em>Windows NT/2000/XP doesn&#39;t have a &quot;Programs and Features&quot; folder, so the question is moot. If you mean &quot;enumerate all installed applications&quot;, there&#39;s no built-in way of doing this. You have to mimic what &quot;Add/Remove Programs&quot; does, which is messy because Add/Remove Programs enumerates apps from some places that may not be obvious (like the MSI store). -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097103">
				<div id="div-comment-1097103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097103">
			December 31, 2013 at 4:04 pm</a>		</div>

		<p>@Anon: Enumeration of the installed apps should be a basic OS feature? How hard could it be?</p>
<div class="post">[<em>Since you can install an app via &quot;copy foo.exe C:&quot;, would &quot;enumerating installed apps&quot; mean &quot;enumerating all EXE files&quot;? What about apps that run directly off the network? They aren&#39;t even copied anywhere! -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1097123">
				<div id="div-comment-1097123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097123">
			December 31, 2013 at 10:06 pm</a>		</div>

		<p>@George: {0CEF7D53-FA64-11D1-A203-0000F81FEDEE}, 8 = System.Software.ProductVersion but why a lot of these are missing from the &quot;Property System ReferenceWindows PropertiesSystem&quot; part of MSDN I don&#39;t know but it is listed @ <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/cc251929(v=prot.10).aspx">msdn.microsoft.com/&#8230;/cc251929(v=prot.10).aspx</a> and the legacy mapping table @ <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb776504%28v=vs.85%29.aspx#PSGetPropertyDescriptionByName">msdn.microsoft.com/&#8230;/bb776504%28v=vs.85%29.aspx</a> (By name only)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097153">
				<div id="div-comment-1097153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">immibis_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097153">
			January 1, 2014 at 1:30 am</a>		</div>

		<p>@Raymond: the customer made a reasonable guess that there is some API underneath the Programs and Features folder, which is also accessible to the customer&#39;s program.</p>
<p>Especially if they read this blog, they would not think that searching the P&amp;F folder itself is a good idea. (What happens if the P&amp;F folder is removed, and we go back to having a property window like on Win98?)</p>
<p>@MV: how to enumerate all the Windows Store apps on Windows 95: (I have no idea how Windows Store apps are identified, but let&#39;s pretend)</p>
<p>typedef void (*PFNENUMWINDOWSSTOREAPPSONWINDOWS95)(LPCTSTR pszAppIdentifier);</p>
<p>void EnumWindowsStoreAppsOnWindows95(PFNENUMWINDOWSSTOREAPPSONWINDOWS95 callback)</p>
<p>{</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097293">
				<div id="div-comment-1097293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097293">
			January 2, 2014 at 8:23 am</a>		</div>

		<p>I&#39;m just a dumb user (OK, I&#39;m actually a dev, but I&#39;ve got my &quot;dumb user&quot; hat on), and it seems to me that &quot;the programs and features&quot; folder is just a renaming/revamping of the old &quot;add/remove programs&quot;. &nbsp;I&#39;m sure there&#39;s a million differences and it&#39;s far superior in a dozen different ways, but if I want to uninstall something I go to the control panel and find &quot;add/remove programs&quot; (or &quot;programs and features&quot; in vista+), find the program I want to uninstall, and uninstall it. &nbsp;It serves the same basic function, so whatever it is people are wanting to do with &quot;programs and features&quot; today, they&#39;d have wanted to do the exact same thing with &quot;add/remove programs&quot; a few years back. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097313">
				<div id="div-comment-1097313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097313">
			January 2, 2014 at 9:22 am</a>		</div>

		<p>I&#39;m able to list the content of the Devices and Printer folder. But I&#39;m not able to get the correct icons of the printers. The best I could get was the default icons for printers but not the real icons used for specific printers. Any hints on how to do this?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097333">
				<div id="div-comment-1097333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097333">
			January 2, 2014 at 11:35 am</a>		</div>

		<p>[which is messy because Add/Remove Programs enumerates apps from some places that may not be obvious (like the MSI store). -Raymond]</p>
<p>According to my tests, on XP these still show up if you enumerate the registry key for registering your own uninstallers. The uninstall action is corrupted though so you have to know it&#39;s an MSI action.</p>
<p>[Since you can install an app via &quot;copy foo.exe C:&quot;, would &quot;enumerating installed apps&quot; mean &quot;enumerating all EXE files&quot;?]</p>
<p>No. It&#39;s not wired up to anything. However, (excluding software that chooses to misbehave) it should be able to find anything that is actually installed, that is, shows up as a program rather than the user accessing the EXE file directly to start it.</p>
<div class="post">[<em>Then it all hinges upon your definition of &quot;actually installed.&quot; Suppose a program is copied to your hard drive and a shortcut on the desktop is created to point to it. Is that &quot;actually installed&quot;? If so, how should an operating system detect it? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097363">
				<div id="div-comment-1097363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097363">
			January 2, 2014 at 1:22 pm</a>		</div>

		<p>[Then it all hinges upon your definition of &quot;actually installed.&quot; Suppose a program is copied to your hard drive and a shortcut on the desktop is created to point to it. Is that &quot;actually installed&quot;? If so, how should an operating system detect it? -Raymond]</p>
<p>Well since I hold xcopy install to be no install at all, I don&#39;t think we have any disagreement in fact.</p>
<p>If you wanted to detect stuff like this anyway (and I don&#39;t as what you&#39;ve describe so far sounds to me like user action), the way I&#39;d do it is enumerate desktop, start menu, shell extensions, and any defined place where things can auto-start.</p>
<div class="post">[<em>Okay, so xcopy is not installation. What counts as installation then? It would require applications to register somewhere as having been installed. Which is what we have today. That registration point is the Programs and Features control panel. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097413">
				<div id="div-comment-1097413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097413">
			January 3, 2014 at 5:02 am</a>		</div>

		<p>&quot;That registration point is the Programs and Features control panel. -Raymond&quot;</p>
<p>Soory, but no. (1) A virtual shell view only shows, what is already known to Windows. The &quot;registration point&quot; is some place in the registry. (2) Without a dedicated SETUP/INSTALL program, there is no &quot;installation&quot;. (3) If a SETUP/INSTALL program does not register with Windows, I consider such setup program to be broken.</p>
<p>&quot;You have to mimic what &quot;Add/Remove Programs&quot; does, which is messy because Add/Remove Programs enumerates apps from some places that may not be obvious (like the MSI store)&quot;</p>
<p>Why that? Regardless of the setup procedure, for each software part which can be configured or removed independently from other software parts, there have to be exactly one entry in the registry, and in turn one item shown to the user in &quot;Add/Remove Programs&quot; or &quot;Programs and Features&quot;.</p>
<div class="post">[<em>Whatever you call the registration point, it&#39;s the thing that Programs and Features uses. It sounds like your real problem is that Program and Features collects items from multiple locations. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097493">
				<div id="div-comment-1097493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097493">
			January 3, 2014 at 5:18 pm</a>		</div>

		<p>&quot;Instead of trying to mimic the Programs and Features folder, just ask the Programs and Features folder for its contents!&quot;</p>
<p>I think the reason the &quot;correct&quot; way to solve this problem wouldn&#39;t occur to a lot of people is that it&#39;s a strange inversion of responsibilities to have the shell effectively providing an API. &nbsp;In most systems, you&#39;d build the shell ON TOP of the API, so the right way to get this list would be to go find out what API the shell special folder uses. &nbsp;Microsoft seems to like to do it the other way around: they build UI which is then presented to the user, and because that&#39;s the abstraction that users are familiar with, the &quot;API&quot; becomes &quot;query the UI that the user is familiar with.&quot; &nbsp;I think most programmers who aren&#39;t familiar with the Microsoft way of doing things would expect you to be able to take a system with a bunch of installed programs and enumerate those installed programs even if there was no shell at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097573">
				<div id="div-comment-1097573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131230-00/?p=2233#comment-1097573">
			January 4, 2014 at 11:33 pm</a>		</div>

		<p>TT: Do you have any other examples of APIs that some systems implement &quot;under&quot; their shells but that Microsoft has made available only as an API on top of the shell?</p>
<p>Even so, the fact that MS made the shell accessible via nearly any programming language means it doesn&#39;t matter much that using the API invokes the shell.</p>
<p>I would have to say that in general, MS tends to do a good job of making APIs available to do things that other systems only do via parsing text files. For example, IIS&#39;s configuration has been scriptable for as long as WSH has been around, while I&#39;ve never seen any way to edit Apache configurations programmatically.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

