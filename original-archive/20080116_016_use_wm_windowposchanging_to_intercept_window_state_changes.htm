<html>
<head>
<title>Use WM_WINDOWPOSCHANGING to intercept window state changes</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Use WM_WINDOWPOSCHANGING to intercept window state changes</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 16, 2008 / year-entry #17</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080116-00/?p=23803</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The WM_WINDOWPOSCHANGING message is sent early in the window state changing process, unlike WM_WINDOWPOSCHANGED, which tells you about what already happened. A crucial difference (aside from the timing) is that you can influence the state change by handling the WM_WINDOWPOSCHANGING message and modifying the WINDOWPOS structure. Here's an example that prevents the window from being...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The <code>WM_WINDOWPOSCHANGING</code> message is sent early in the
window state changing process,
unlike
<code>WM_WINDOWPOSCHANGED</code>,
which tells you about what already happened.
A crucial difference (aside from the timing)
is that you can influence the state change
by handling the <code>WM_WINDOWPOSCHANGING</code> message
and modifying the <code>WINDOWPOS</code> structure.
</p>
<p>
Here's an example that prevents the window from being resized.
</p>
<pre>
BOOL OnWindowPosChanging(HWND hwnd, WINDOWPOS *pwp)
{
    pwp-&gt;flags |= SWP_NOSIZE;
    /* Continue with default handling */
    return FORWARD_WM_WINDOWPOSCHANGING(hwnd, pwp, DefWindowProc);
}

HANDLE_MSG(hwnd, WM_WINDOWPOSCHANGING, OnWindowPosChanging);
</pre>
<p>
Before the <code>WM_WINDOWPOSCHANGING</code> message was invented,
programs had to enforce window size constraints
inside their <code>WM_SIZE</code> and <code>WM_MOVE</code> handlers,
but since those messages are sent <i>after</i> the change is complete,
the result was flicker as the window changed to one size,
then the <code>WM_SIZE</code> handler resized it to a better size.
Intercepting the window size change in <code>WM_WINDOWPOSCHANGING</code>
allows you to enforce constraints before the sizing happens, thereby
avoiding flicker.
</p>
<p>
The <code>WM_WINDOWPOSCHANGING</code> and
<code>WM_WINDOWPOSCHANGED</code> pair of messages is just one example
of the more general <code>*CHANGING</code>/<code>*CHANGED</code> pattern.
(Other examples are <code>WM_STYLECHANGING</code>/<code>WM_STYLECHANGED</code>
and <code>LVN_ITEMCHANGING</code>/<code>LVN_ITEMCHANGED</code>.)
The <code>*CHANGING</code> half is sent before
the change takes place, and as a general rule,
you can change the parameters of the notification to enforce some
type of constraint.
After you return from the <code>*CHANGING</code> notification,
the actual change takes place, and then you receive a
<code>*CHANGED</code> to indicate that the change is complete.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-nathan_works even thread-even depth-1" id="comment-590713">
				<div id="div-comment-590713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/nathan_works' rel='external nofollow' class='url'>nathan_works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080116-00/?p=23803#comment-590713">
			January 16, 2008 at 11:06 am</a>		</div>

		<p>That pattern is also used in a number of other MSFT products, such as Sharepoint, if you want event notifications. Useful if, as mentioned, you want to cancel an operation in progress or before it is &#8216;committed&#8217;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590753">
				<div id="div-comment-590753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080116-00/?p=23803#comment-590753">
			January 16, 2008 at 12:13 pm</a>		</div>

		<p>Interesting. &nbsp;In the rare instances where I&#8217;ve need to control a size change, I&#8217;ve responded to WM_GETMINMAXINFO by setting the min and max tracking sizes to the current size. &nbsp;Does that pre-date the WM_WINDOWPOSCHANGING message as well? &nbsp;Are the WM_SIZING and WM_MOVING messages synthesized when the WM_WINDOWPOSCHANGING message goes to the DefaultWinProc?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590803">
				<div id="div-comment-590803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">toomuchwin32</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080116-00/?p=23803#comment-590803">
			January 16, 2008 at 2:02 pm</a>		</div>

		<p>Adrian:</p>
<p>WM_SIZING and WM_MOVING are only sent from the message loop that hancles resizing or moving by the end-user (i.e. when the end-user grabs a corner of the window and resizes). They are not sent when a window&#8217;s position is changed using the SetWindowPos API.</p>
<p>One thing to remember is that the SWP_NOSENDCHANGING flag can be used in the SetWindowPos API to prevent the WM_WINDOWPOSCHANGING message from being generated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590833">
				<div id="div-comment-590833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dustin Long</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080116-00/?p=23803#comment-590833">
			January 16, 2008 at 6:53 pm</a>		</div>

		<p>That&#8217;s pretty cool. Reminds me of the before/after pattern seen in clos / aspect orientated programming. A very useful pattern, indeed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591263">
				<div id="div-comment-591263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">iain</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080116-00/?p=23803#comment-591263">
			January 17, 2008 at 9:00 pm</a>		</div>

		<p>And don&#8217;t forget the value of the WM_ENTERSIZEMOVE and WM_EXITSIZEMOVE messages. Useful if your window contents are dependent on window size but expensive to compute, as they give you a way to defer paints until the end of the resize action. We found WM_WINDOWPOSCHANGING/ED wasn&#8217;t reliable for that purpose.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

