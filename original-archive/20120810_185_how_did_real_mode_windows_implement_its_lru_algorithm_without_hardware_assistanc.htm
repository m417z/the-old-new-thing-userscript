<html>
<head>
<title>How did real-mode Windows implement its LRU algorithm without hardware assistance?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How did real-mode Windows implement its LRU algorithm without hardware assistance?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 10, 2012 / year-entry #186</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>29</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">I noted some time ago that real-mode Windows had to do all its memory management without any hardware assistance. And yet, along the way, they managed to implement an LRU-based discard algorithm. Gabe is really interested in how that was done. As we saw a few months ago, inter-segment calls were redirected through a little...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
I noted some time ago that real-mode Windows had to do all
its memory management without any hardware assistance.
And yet, along the way, they managed to implement an LRU-based
discard algorithm.
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/03/16/10141735.aspx#10142501">
Gabe is really interested in how that was done</a>.
</p>
<p>
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2012/06/22/10322767.aspx">
As we saw a few months ago</a>,
inter-segment calls were redirected through a little stub which
either jumped directly to the target (if it was in memory)
or loaded the target
(possibly discarding other memory to make room)
before jumping to it.
And we saw that the executable format had
<code>INT&nbsp;3Fh</code> instructions baked into it
so that the Entry Table could be loaded directly into memory
for execution.
</p>
<p>
As it happens, Windows didn't take advantage of that feature,
because it wanted to do more.
</p>
<p>
When it came time to load the Entry Table,
the loader did a little rewriting, converting each
</p>
<pre>
    db  flags
    INT 3Fh
    db  entry_segment
    dw  entry_offset
</pre>
<p>
sequence into
</p>
<pre>
    db  flags
    sar byte ptr cs:[xxx], 1
    INT 3Fh
    db  entry_segment
    dw  entry_offset
</pre>
<p>
where the <code>xxx</code> refers to a table of bytes
in the Entry Table preallocated for this purpose,
initialized to 1's.
</p>
<p>
What is "this purpose"?
</p>
<p>
Whenever anybody needed the address of an inter-segment
function, instead of return the address of the <code>int&nbsp;3Fh</code>,
the kernel returned the address of the <code>sar</code> instruction.
The <code>sar</code> instruction stands for <i>shift arithmetic right</i>,
For a byte value, this means to shift the bits right one place,
but keep the high-order bit the same.
</p>
<table STYLE="border-collapse: collapse">
<tr>
<td STYLE="border: solid .75pt black"><code>a</code></td>
<td STYLE="border: solid .75pt black"><code>b</code></td>
<td STYLE="border: solid .75pt black"><code>c</code></td>
<td STYLE="border: solid .75pt black"><code>d</code></td>
<td STYLE="border: solid .75pt black"><code>e</code></td>
<td STYLE="border: solid .75pt black"><code>f</code></td>
<td STYLE="border: solid .75pt black"><code>g</code></td>
<td STYLE="border: solid .75pt black"><code>h</code></td>
</tr>
<tr>
<td><code>&darr;</code></td>
<td><code>&#x2198;</code></td>
<td><code>&#x2198;</code></td>
<td><code>&#x2198;</code></td>
<td><code>&#x2198;</code></td>
<td><code>&#x2198;</code></td>
<td><code>&#x2198;</code></td>
<td><code>&#x2198;</code></td>
</tr>
<tr>
<td STYLE="border: solid .75pt black"><code>a</code></td>
<td STYLE="border: solid .75pt black"><code>a</code></td>
<td STYLE="border: solid .75pt black"><code>b</code></td>
<td STYLE="border: solid .75pt black"><code>c</code></td>
<td STYLE="border: solid .75pt black"><code>d</code></td>
<td STYLE="border: solid .75pt black"><code>e</code></td>
<td STYLE="border: solid .75pt black"><code>f</code></td>
<td STYLE="border: solid .75pt black"><code>g</code></td>
</tr>
</table>
<p>
Okay, so what was the effect of sticking this little
<code>sar</code> instruction at the start of every inter-segment
call?
Since the values in the table were initialized to 1,
a right arithmetic shift changed the 1 to 0.
Therefore, each time an inter-segment call was performed,
the corresponding byte in the table was set to zero.
</p>
<p>
Hooray, a software-implemented Accessed bit!
</p>
<p>
Every 250 milliseconds, Windows scanned and reset the Access bits,
using the data to maintain an LRU-list of all the segments in the
system.
That way, when it was time to discard some memory,
it could discard the least recently used ones first.
</p>
<p>
Today, a timer that runs continuously at 250ms would
incur the wrath of the power management team.
But back in the days of real-mode Windows,
there was no power management.
Like Chuck Norris, PCs ran at only one power level: Awesome.
</p>
<p>
I continue to be amazed at how much Windows&nbsp;1.0 accomplished
with so little.
</p>
<p>
[Raymond is currently away; this message was pre-recorded.]</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (29)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1004403">
				<div id="div-comment-1004403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004403">
			August 10, 2012 at 7:26 am</a>		</div>

		<p>The original Macintosh System (ten years before it was called Mac OS) also did all memory management in software without an MMU (but IIRC, it got a little help from the 68000, which was more advanced than the 8086). Anyway, I agree it&#39;s awesome what the OSes of that time got to do with so little memory (384 Kb of for Windows 1.0, 128 Kb of RAM and 64 Kb of ROM for Macintosh System 1.0). Keep that in mind the next time a moron tells you need 8 GB of RAM to write a letter in Word! :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004413">
				<div id="div-comment-1004413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004413">
			August 10, 2012 at 7:29 am</a>		</div>

		<p>When you said &quot;initialized to 1&#39;s&quot;, I assumed you meant that each entry was all 1&#39;s (0xFF), for which a SAR is a no-op. &nbsp;Took me a bit to figure out you really meant each byte is initialized to the number 1. &nbsp;Neat trick, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004423">
				<div id="div-comment-1004423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004423">
			August 10, 2012 at 7:34 am</a>		</div>

		<p>@Adam Rosenfeld: &nbsp;I had the same confusion. &nbsp;Bytes that are &quot;initialized to 1&#39;s&quot; sound like they are full of FFs, especially when you are talking about bit manipulation in the code. &nbsp;But I get it now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004443">
				<div id="div-comment-1004443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004443">
			August 10, 2012 at 8:10 am</a>		</div>

		<p>I too fell pray to the same confusion about the byte being &quot;initialized to 1&#39;s&quot;. Very neat trick though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1004453">
				<div id="div-comment-1004453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004453">
			August 10, 2012 at 8:37 am</a>		</div>

		<p>@ Adam, David, Martin: Not to be irritating to Raymond, but I&#39;ll be the first to point out that &quot;apostrophe s&quot; does not make the 1 plural. A better wording would have been &quot;&#8230; each initialized to the value one.&quot;</p>
<div class="post">[<i>Back in the old days, the rule for pluralizing numbers written as digits was to use an apostrophe-s. Nowadays, the guidance is to use a plain s, but old habits are hard to break. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004463">
				<div id="div-comment-1004463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004463">
			August 10, 2012 at 8:39 am</a>		</div>

		<p>&quot;Like Chuck Norris, PCs ran at only one power level: Awesome.&quot;</p>
<p>That&#39;s also the level that Raymond writes at.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004473">
				<div id="div-comment-1004473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">prine</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004473">
			August 10, 2012 at 8:51 am</a>		</div>

		<p>Why use SAR though? Something to do with that instruction being faster / taking less code bytes than say, MOV byte ptr [xxx], 0 ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004493">
				<div id="div-comment-1004493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004493">
			August 10, 2012 at 9:10 am</a>		</div>

		<p>Was the format of the executable frozen before the sar mechanism was implemented?</p>
<div class="post">[<i>I thought I answered this in the linked article. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004503">
				<div id="div-comment-1004503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004503">
			August 10, 2012 at 9:26 am</a>		</div>

		<p>It also means you could do something more sophisticated by initialising to a larger number, or by playing with the high bit to mean &quot;always resident&quot; or track different history. &nbsp;Sure, an accessed bit is all you need, but would be interesting to know if anyone did more than that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004513">
				<div id="div-comment-1004513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004513">
			August 10, 2012 at 9:27 am</a>		</div>

		<p>prine: yes, one byte less.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004543">
				<div id="div-comment-1004543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004543">
			August 10, 2012 at 10:30 am</a>		</div>

		<p>@Brian: I&#39;m not sure how that&#39;s relevant here. &nbsp;If &quot;1&#39;s&quot; here were possessive instead of plural, it wouldn&#39;t make any sense (initialized to the <em>what</em> belonging to 1?).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004563">
				<div id="div-comment-1004563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004563">
			August 10, 2012 at 11:02 am</a>		</div>

		<p>[I thought I answered this in the linked article. -Raymond]</p>
<p>Afraid I&#39;m not seeing it. I see INT 3F is in the file so it can be copied into memory and used directly. I see a statement that says the details are different in unimportant ways (which I can see SAR being one). I don&#39;t see anything addressing why INT 3F is the file but SAR (with appropriate padding) is not. If you know you will need both, it doesn&#39;t make sense to me to put in one and not the other.</p>
<p>I&#39;m speculating that INT 3F was added to the file format for the stated reason and then tools and executables were built. Later, it was decided to do LRU and a SAR instruction was required. Rather than change the format and cause a ripple effect on tools and existing executables, it was decided to just rewrite the entry as it was loaded.</p>
<div class="post">[<i>The MS-DOS overlay linker invented the INT 3F format. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004573">
				<div id="div-comment-1004573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004573">
			August 10, 2012 at 11:48 am</a>		</div>

		<p>To those who are worried about the apostrophes, here&#39;s what the Chicago Manual of Style FAQ has to say about it (<a rel="nofollow" target="_new" href="http://www.chicagomanualofstyle.org/CMS_FAQ/Plurals/Plurals20.html" rel="nofollow">http://www.chicagomanualofstyle.org/&#8230;/Plurals20.html</a>):</p>
<hr />
<p>Chicago style omits the apostrophe, but the thing about style is, there is no single great arbiter who makes rules that everyone follows. Different houses use different styles. Following a particular style allows a person to be consistent within a given document, but it really doesn’t matter which style you choose.</p>
<hr />
<p>So everyone&#39;s right! Participation medals all around!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004583">
				<div id="div-comment-1004583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004583">
			August 10, 2012 at 12:26 pm</a>		</div>

		<p>FWIW, my first parse was also &quot;&#8230; a table of bytes [each] initialized to 1s&quot; but the subsequent paragraphs cleared the confusion. &nbsp;sar on a value of FF is a NOP, so each byte must be initialized to a value of 1.</p>
<p>Considering the scope of Windows 1.0, any benefit from using a value other than 1 would probably not be worth the time and OS code to do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004593">
				<div id="div-comment-1004593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004593">
			August 10, 2012 at 12:39 pm</a>		</div>

		<p>Didn&#39;t mean to start a discussion about grammar&#8230; &nbsp;The article is interesting, once I figured out the technique. &nbsp;Thanks, Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004603">
				<div id="div-comment-1004603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chentiangemalc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004603">
			August 10, 2012 at 2:28 pm</a>		</div>

		<p>Well they ran at awesome until you hit the TURBO button, then you got extra awesome!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004613">
				<div id="div-comment-1004613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004613">
			August 10, 2012 at 6:17 pm</a>		</div>

		<p>4 times per second incurs wrath? &nbsp;How often is safe? &nbsp;Once a minute is surely ok, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004623">
				<div id="div-comment-1004623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004623">
			August 10, 2012 at 11:14 pm</a>		</div>

		<p>@Mark:</p>
<p>I&#39;m pretty sure that the goal is to remove as much timed polling as possible so that the CPU can remain in a lower power state. &nbsp;But if you do need to use a timer to poll something, I think the newer coalescing timers are the preferred method (SetWaitableTimer(Ex)).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004633">
				<div id="div-comment-1004633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004633">
			August 11, 2012 at 1:19 am</a>		</div>

		<p>@Mark</p>
<p>The only way to make a battery last a long time is to turn off as many chips as possible. The OS tries very hard to keep all components in the system off as often as possible. Waking up a sleeping CPU isn&#39;t too bad &#8212; just a few microseconds. But waking up a stopped clock takes a few hundred microseconds, and waking up a sleeping motherboard takes a few milliseconds. So each time the system has to transition from sleeping to waking takes several milliseconds, during which time all of the chips on the motherboard are using the battery. If you take several milliseconds to wake up, execute 10 instructions, and then go back to sleep, you used 20 milliseconds of power to do 10 nanoseconds of work. In addition, certain deeper sleep states take even longer to wake up, so the OS won&#39;t go into those sleep states unless the system has been completely idle for say 300 milliseconds.</p>
<p>Bottom line is that something that wakes up 4 times a second makes the motherboard use 80 milliseconds of full power per second, and also completely prevents it from going into the deepest sleep, so it continually uses say 10% of full power always, for a total of 18% power usage when it should have been something like 1% power usage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004653">
				<div id="div-comment-1004653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004653">
			August 12, 2012 at 6:20 am</a>		</div>

		<p>This might be a silly question, but couldn&#39;t the SAR instruction be done by Windows inside the INT 3Fh call?</p>
<div class="post">[<i>That would defeat the <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/06/22/10322767.aspx" rel="nofollow">direct jump optimization</a>. When the segment is in memory, there is no INT 3F, which is exactly the time you want to track usage! (When the segment is not in memory, the usage is clearly zero.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004663">
				<div id="div-comment-1004663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004663">
			August 12, 2012 at 7:37 am</a>		</div>

		<p>Of course. I forgot the INT 3Fh was actually being removed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004683">
				<div id="div-comment-1004683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jolyon.smith_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jolyon.smith@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004683">
			August 12, 2012 at 2:52 pm</a>		</div>

		<p>@Adam, David, Brian and Martin et al &#8230;. &quot;bytes initialized to 1s (or 1&#39;s)&quot; is quite clear to me. &nbsp;It comes down to whether the reader (incorrectly) injects some words into the sentence that aren&#39;t actually there, namely &quot;&#8230; [all the bits of] the bytes&quot;, or replaced the word &quot;initiatialized to&quot; with &quot;with all bits set to&quot;.</p>
<p>Grammar or punctuation isn&#39;t the problem, simple reading comprehension/false assumptions is the issue. &nbsp;;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004693">
				<div id="div-comment-1004693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Y.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004693">
			August 12, 2012 at 7:26 pm</a>		</div>

		<p>@Doug: Thanks, that was rather enlightening! &nbsp;Although, come to think of it, your explanation implies that in this case there seems to be a loophole. &nbsp;If the computer is in sleep mode, we can turn off fancy memory management routines, since no one is using memory. &nbsp;If it&#39;s not in sleep mode, we can afford to run 4 times a second, since we&#39;re awake anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004703">
				<div id="div-comment-1004703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004703">
			August 12, 2012 at 7:46 pm</a>		</div>

		<p>@Mark: Of course, back in the bad old days when Win16 was around, polling wasn&#39;t considered as bad because the computer never went to sleep anyways; the CPU ran in two speeds: 100% and &quot;off&quot; (accomplished by hitting the Big Red Switch).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1004713">
				<div id="div-comment-1004713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny Moules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004713">
			August 13, 2012 at 2:26 am</a>		</div>

		<p>&quot;Keep that in mind the next time a moron tells you need 8 GB of RAM to write a letter in Word! &quot;</p>
<p>But you <em>do</em> need n GB of RAM to write a letter in Word, if you use one for a non-obsolete OS. Don&#39;t shoot the messenger.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1004803">
				<div id="div-comment-1004803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004803">
			August 13, 2012 at 11:50 am</a>		</div>

		<blockquote><p>
  the CPU ran in two speeds: 100% and &quot;off&quot; (accomplished by hitting the Big Red Switch).
</p></blockquote>
<p>Don&#39;t forget the Turbo Switch! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1004823">
				<div id="div-comment-1004823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1004823">
			August 13, 2012 at 1:58 pm</a>		</div>

		<p>Speaking of turbo switch, I had a 33Mhz 486DX and a case that had a two-digit seven-segment display. I figured out how to rewire the display so it read 33 normally and 99 with the turbo switch pressed. All my buddies kept asking me how I got the CPU to run at 100 MHz and were jealous of me. Little did they know&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1005263">
				<div id="div-comment-1005263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1005263">
			August 15, 2012 at 8:01 am</a>		</div>

		<p>If you think 250ms-timers are bad on a single machine, imagine what it&#39;s like on a VM host running dozens of virtual machines!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1005333">
				<div id="div-comment-1005333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">user</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120810-00/?p=6893#comment-1005333">
			August 15, 2012 at 9:46 am</a>		</div>

		<p>Tell us more about Windows 1 and what you were doing back then.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

