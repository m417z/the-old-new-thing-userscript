<html>
<head>
<title>If you're not using the command line interpreter, then the command line interpreter metacharacters mean nothing</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If you&#8217;re not using the command line interpreter, then the command line interpreter metacharacters mean nothing</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 18, 2013 / year-entry #191</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer observed that the parameters passed to Create­Process were not being interpreted correctly. char commandLine[] = "reg.exe query " "HKLM\\SYSTEM\\CurrentControlSet\\" "Enum\\HID\VID_0461^&PID_4D15"; CreateProcess(NULL, commandLine, ...); The process is created successfully, but it prints the message ERROR: The system was unable to find the specified registry key or value.. Why aren't the parameters being parsed correctly...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer observed that the parameters passed to
<code>Create&shy;Process</code> were not being interpreted
correctly.
</p>
<pre>
char commandLine[] = "reg.exe query "
                     "HKLM\\SYSTEM\\CurrentControlSet\\"
                     "Enum\\HID\VID_0461^&amp;PID_4D15";
CreateProcess(NULL, commandLine, ...);
</pre>
<p>
The process is created successfully,
but it prints the message
<tt>ERROR:
The system was unable to find the specified registry key or value.</tt>.
Why aren't the parameters being parsed correctly
by <code>Create&shy;Process</code>?
They work fine if I paste them into a command prompt.
</p>
<p>
This is a variation of the problem we saw a few years ago.
Back then, we had a string with command line redirection metacharacters,
but since we were passing them directly to <code>Create&shy;Process</code>,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2006/05/16/598893.aspx">
the command interpreter never got a chance to interpret them</a>.
Here, we have a string that contains an ampersand,
which has special meaning to the command interpreter,
so we
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2009/10/29/9914426.aspx">
escaped it</a>
so that the command interpreter won't try to treat it as command
separator.
But then we passed it directly to the
<code>Create&shy;Process</code> function
without ever invoking the command processor.
</p>
<p>
It's like exchanging your U.S. dollars for Canadian dollars
because you think you're going to drive through Canada,
and then deciding to take the southern route instead,
and then wondering why the Canadian money doesn't work.
You went to the extra effort of converting the string into
a form that will survive a journey you never sent it on!
</p>
<p>
If you're going to munge the string so that you get the desired
end result after it travels through the command interpreter,
then you need to send it through the command interpreter.
Or more preferably,
cut out the middle man and don't bother munging
it in the first place.
</p>
<p>
If you're going to prepare a string for a journey,
you need to send it on that journey.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1068133">
				<div id="div-comment-1068133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Owen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068133">
			July 18, 2013 at 8:54 am</a>		</div>

		<p>This comes up periodically in Unix circles, too: people passing command lines (with variables, quoting, redirection, and other shell features) to fork+exec wrappers that don&#39;t invoke a shell (such as Python&#39;s subprocess.call function). I feel like the distinction between &quot;OS services&quot; like process creation and &quot;shell services&quot; like command-line processing is lost on a few too many folks&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1068143">
				<div id="div-comment-1068143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068143">
			July 18, 2013 at 9:42 am</a>		</div>

		<p>OK then, to ask the obvious question: if CreateProcess doesn&#39;t work in this context, what is the correct way to programatically execute an arbitrary DOS shell command from the Windows API?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1068153">
				<div id="div-comment-1068153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GrumpyYoungMan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068153">
			July 18, 2013 at 9:56 am</a>		</div>

		<p>@Mason Wheeler</p>
<p>Spawn a command processor instance and feed the shell command to it. &nbsp;Review the command line parameters for cmd.exe for specifics.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1068163">
				<div id="div-comment-1068163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068163">
			July 18, 2013 at 10:22 am</a>		</div>

		<p>The &quot;system&quot; CRT function might be useful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1068183">
				<div id="div-comment-1068183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068183">
			July 18, 2013 at 10:40 am</a>		</div>

		<p>Or just use RegQueryValueEx directly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1068203">
				<div id="div-comment-1068203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068203">
			July 18, 2013 at 12:33 pm</a>		</div>

		<p>@Owen: I&#39;m pretty sure that&#39;s just people who spent too much time mucking about with system(3) and popen(3). &nbsp;The former is a joke because it blocks the calling process and the latter is easily deadlocked if you don&#39;t know what you&#39;re doing, so I&#39;m not quite sure why we teach people about them&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1068243">
				<div id="div-comment-1068243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068243">
			July 18, 2013 at 5:49 pm</a>		</div>

		<p>@Mason: GetEnvironmentVariableW(L&quot;ComSpec&quot;), then use that as the first parameter of CreateProcessW, the executable path. &nbsp;For the second parameter, the command line, initially set it to the same as the first parameter. &nbsp;However, if the executable path has a space, put double quotes around it. &nbsp;To this string, add a space and parameter /c, then add whatever else you want. &nbsp;For example, these:</p>
<p>lpApplicationName = C:WindowsSystem32cmd.exe</p>
<p>lpCommandLine = C:WindowsSystem32cmd.exe /c echo hello batch world</p>
<p>lpApplicationName = C:Program Files (x86)Some Silly Cmd Replacementsillycmd.exe</p>
<p>lpCommandLine = &quot;C:Program Files (x86)Some Silly Cmd Replacementsillycmd.exe&quot; /c echo hello batch world</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1068223">
				<div id="div-comment-1068223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068223">
			July 18, 2013 at 3:11 pm</a>		</div>

		<p>@Kevin: Obviously it&#39;s because C is too hard, so you should let a shell script do the heavy lifting. :-)</p>
<p>I usually see stuff like this happen when people are doing testing in one environment and then take their results and plunk them down in another environment. For example, this happened when I was debugging some low-level networking code that was migrated from old world Mac to new world (the original program didn&#39;t do any ntoh* or hton* stuff because it wasn&#39;t strictly needed there, and the programmer doing the porting didn&#39;t check&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1068273">
				<div id="div-comment-1068273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068273">
			July 19, 2013 at 12:28 am</a>		</div>

		<p>@Kevin system() is fine for exactly one purpose &#8212; &quot;I have a executable which provides exactly the side effects I want, but do not wish to write a function to perform, and only care about the success/failure (and maybe not even that)&quot;. &nbsp;i.e. &quot;Call an executable as if it were a function&quot;. &nbsp;On a well set up machine, it&#39;s a hell of a lot easier to calls system(&quot;mount /dev/myuserfs -o this,that,theotherthing&quot;) than to finagle the mount() syscall.</p>
<p>The bad thing is, it causes people to start writing shell scripts in C, which is usually the worst of both worlds.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1068283">
				<div id="div-comment-1068283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068283">
			July 19, 2013 at 3:53 am</a>		</div>

		<p>You look like you&#39;re querying a mouse device. Are you trying to write a bells and whistles installer that&#39;s going to annoy the hell out of everyone?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1068293">
				<div id="div-comment-1068293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068293">
			July 19, 2013 at 6:21 am</a>		</div>

		<p>&gt;You look like you&#39;re &#8230;</p>
<p>Clippy, is that you?</p>
<p>;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1068303">
				<div id="div-comment-1068303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068303">
			July 19, 2013 at 6:55 am</a>		</div>

		<p>@GWO:mount is setuid-root. Your mount() syscall won&#39;t work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1068393">
				<div id="div-comment-1068393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">baramin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068393">
			July 20, 2013 at 2:34 pm</a>		</div>

		<p>Uff&#8230; No so easy problem. JDK 7u21 was initiated by the expanded interpretation of the syntax for the command file execution. Exactly in CreateÂ­Process. The paradigm of a single executable module per a CreateÂ­Process call is being destroyed if the module &#8211; the script.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1068453">
				<div id="div-comment-1068453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068453">
			July 22, 2013 at 12:44 am</a>		</div>

		<p>@Joshua: I know, that&#39;s what I meant by &quot;finagle the mount() syscall&quot;. &nbsp;system(&quot;mount &#8230;&quot;) does what its supposed to do, providing you&#39;re allowed to do it. &nbsp;It&#39;s much harder (i.e. impossible) to do it in &quot;pure&quot; C.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1068623">
				<div id="div-comment-1068623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130718-00/?p=3773#comment-1068623">
			July 23, 2013 at 12:58 pm</a>		</div>

		<p>baramin: what do you mean? The JDK release notes do not backup what you are saying. Also, the changes there have nothing to do with scripts. Finally, CreateProcess starts only one process, not multiple.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

