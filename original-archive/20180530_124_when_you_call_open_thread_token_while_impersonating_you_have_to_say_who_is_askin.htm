<html>
<head>
<title>When you call Open­Thread­Token while impersonating, you have to say who is asking for the thread token</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>When you call <CODE>Open&shy;Thread&shy;Token</CODE> while impersonating, you have to say who is asking for the thread token</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 30, 2018 / year-entry #124</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180530-00/?p=98875</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>3</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">I am for you.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that
<code>Open&shy;Thread&shy;Token</code> was failing with
the error <code>ACCESS_</code><code>DENIED</code>
and wanted help understanding why.
They shared a code fragment
which operates on an account name <code>test</code>
with no special privileges.
</p>
<pre>
<i>// Code in italics is wrong

int main()
{
  HANDLE hToken = NULL;

  // This succeeds.
  LogonUser(L"test", L".", L"test@123",
    LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,
    &amp;hToken);

  // This also succeeds.
  ImpersonateLoggedOnUser(hToken);

  // During this Sleep, <a HREF="https://processhacker.sourceforge.io/">Process Hacker</a> shows that the thread
  // is impersonating.
  Sleep(10'000);

  // This fails with ERROR_ACCESS_DENIED.
  OpenThreadToken(GetCurrentThread(), TOKEN_QUERY,
    FALSE, &amp;hToken);

  return 0;
}</i>
</pre>
<p>
According to
<a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/aa379296(v=vs.85).aspx">
the documentation for
<code>Open&shy;Thread&shy;Token</code></a>:
</p>
<blockquote CLASS="q">
<p>
<i>OpenAsSelf</i> [in]
</p>
<p>
<b>TRUE</b> if the access check is to be made
against the process-level security context.
</p>
<p>
<b>FALSE</b> if the access check is to be made
against the current security context
of the thread calling the <b>Open&shy;Thread&shy;Token</b> function.
</p>
<p>
The <i>OpenAsSelf</i> parameter allows the caller of this function
to open the access token of a specified thread
when the caller is impersonating a token at
<b>Security&shy;Identification</b> level.
<u>Without this parameter,
the calling thread cannot open the access token on the specified thread 
because it is impossible to open executive-level objects
by using the <b>Security&shy;Identification</b> impersonation level</u>.
</p>
</blockquote>
<p>
Furthermore,
as I discussed
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20160512-00/?p=93447">
some time ago</a>,
</p>
<blockquote CLASS="q">
<p>
When a new kernel object is created,
and you don't provide an explicit security descriptor for the new object,
then the object is given a default security descriptor.
And that default security descriptor
comes from the default DACL of the token
that is in effect at the point of the call.
</p>
<p>
When you apply this rule to tokens,
you find that,
even though the behavior is consistent with other kernel objects,
it also means that it is
<u>very easy to create a token that doesn't have access to itself</u>.
When you impersonate with that token, bad things happen.
</p>
</blockquote>
<p>The code fragment above passes <code>FALSE</code>,
which means that the access check is made against
the current security context,
which is the impersonated test user,
and that user doesn't have access to the token.
</p>
<p>
Note that changing <code>FALSE</code> to <code>TRUE</code>
is only the first step in what may be a long uphill struggle.
One of my colleagues on the security team added that
if you don't have the
<b>Se&shy;Impersonate&shy;Privilege</b> for your process,
you will run into other problems as well.
The customer didn't explain the scenario where they
think impersonation is a step in the solution,
so it's hard to elaborate on what else can go wrong,
because we don't know what they're trying to do.
</p>
<p>
<b>Bonus reading</b>:
<a HREF="https://blogs.msdn.microsoft.com/mithuns/2007/07/03/seimpersonateprivilege/">
Changes to 
<b>Se&shy;Impersonate&shy;Privilege</b> in Windows Vista</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1343575">
				<div id="div-comment-1343575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180530-00/?p=98875#comment-1343575">
			May 30, 2018 at 1:43 pm</a>		</div>

		<p>It looks like the author of this code is going to have to replace everything with CreateProcessWithLogonW.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1343965">
				<div id="div-comment-1343965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180530-00/?p=98875#comment-1343965">
			May 31, 2018 at 7:44 pm</a>		</div>

		<p>Raymond,</p>
<p>Am I correct in assuming that this is just a special case of the more general rule that, by default, nothing works under impersonation?  Or is that a red herring?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1344155">
				<div id="div-comment-1344155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180530-00/?p=98875#comment-1344155">
			June 2, 2018 at 12:17 pm</a>		</div>

		<p>But then, all this kernel support for impersonation would be completely useless. There ia no documentation in MSDN what works with it and what not.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

