<html>
<head>
<title>Color-aware ClearType requires access to fixed background pixels, which is a problem if you don't know what the background pixels are, or if they aren't fixed</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Color-aware ClearType requires access to fixed background pixels, which is a problem if you don&#8217;t know what the background pixels are, or if they aren&#8217;t fixed</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 29, 2015 / year-entry #21</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>47</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">ClearType is a technology that blends text pixels with background pixels with the goal of reducing visual artifacts during text rendering.¹ If you go for the full-meal version of ClearType, it uses knowledge about the physical properties of LCD screens in order to carry out its work. Some time ago, I noted one catch with...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>ClearType is a technology that blends text pixels with background pixels with the goal of reducing visual artifacts during text rendering.&sup1; If you go for the full-meal version of ClearType, it uses knowledge about the physical properties of LCD screens in order to carry out its work. Some time ago, I noted one catch with this model, which is that <a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/06/14/630864.aspx"> overdraw gives the ClearType algorithm the wrong background pixels</a>.</p>
<p> Another gotcha is that if you don't know what the background pixels are at all, then you can't use ClearType. For example, you might be rendering a semi-transparent bitmap that will be drawn on top of other content. If you try to use ClearType to render text onto this bitmap, the ClearType engine will see transparent pixels as the background, and blend accordingly. (My guess is that it will treat them as black pixels.) But when you actually draw this bitmap to the screen, those transparent pixels will allow the pixels below the bitmap to shine through, and those underlying pixels are not transparent. </p>
<p> The result is color fringes because the ClearType engine was given incorrect background pixels. </p>
<p> Another assumption that the ClearType engine makes is that the bitmap will be drawn on exact pixel boundaries without any stretching or shrinking or rotation. Since ClearType is doing math based on the physical LCD, you break the ClearType model if you scale the bitmap, rotate it, or render it on a fractional-pixel boundary because each carefully-crafted ClearType pixel does not end up as a single pixel on the LCD panel. (The mapping of original pixels to transformed pixels is controlled by something called an <i>interpolation mode</i>. For example, Direct2D offers <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/hh447004(v=vs.85).aspx"> a variety of interpolation modes</a>.) </p>
<p> If you break this rule and use ClearType anyway, you will once again get the dreaded color fringes. </p>
<p> Nearly all of these factors come into play on the Windows&nbsp;8 Start screen. </p>
<p> The word <i>Start</i> on that page is rendered onto a transparent bitmap because it needs to overlay on top of your Start background, and most of the Start backgrounds are not fixed; they scroll slowly as you pan through your tiles. </p>
<p> The tiles themselves translate when you pan the Start screen, and they scale when you go into Customize mode or when you press them, and they rotate when you tap on them. This means that any text drawn onto a tile cannot use the color-aware version of ClearType. </p>
<p> These concerns apply more generally to any bitmap that will be scrolled. A bitmap that scrolls with subpixel positioning <a href="http://www.reddit.com/r/microsoft/comments/22qjdy/internet_explorer_another_sign_of_a_faster_more/cgpi9vc"> cannot use the color-aware version of ClearType</a> because ClearType assumes integer-pixel positioning. (This is why Internet Explorer doesn't use color-aware ClearType. Scrolling is performed with <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/hh446969%28v=vs.85%29.aspx"> Direct Manipulation</a>, and Direct Manipulation does subpixel scrolling.) </p>
<p> Now, of course, you could work around this problem. You could design your interface so that it doesn't require transparent bitmaps, say by using fixed backgrounds. And you could design your interface so it doesn't use subpixel positioning, scaling, or rotation. Or you could simply stop pre-rendering text and instead rerender them on-the-fly each time something changes. The first two workarounds impair your design. The second impairs your performance, since moving a bitmap is no longer a simple update of a sprite's coordinates and transformation matrix; you have to go through a full text rendering pass, including a pixel read-back in order to figure out what the current background pixels are. (And pixel read-back from video memory is not cheap since it forces the composition tree to flatten.) </p>
<p> Both trade-offs are pretty expensive, and the cheaper alternative is usually simply to stop using color-aware ClearType. </p>
<p> &sup1; Yes, there are people who don't like ClearType. The point of today's article isn't about whether ClearType is good or bad; it's about ClearType's limitations. I tried to remain neutral on the subject by saying that improved text rendering is the <i>goal</i> of ClearType, making no statement about whether it <i>achieves</i> that goal. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (47)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1173313">
				<div id="div-comment-1173313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M. Dudley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173313">
			January 29, 2015 at 7:35 am</a>		</div>

		<p>Is rotating an LCD equivalent to rotating a ClearType bitmap? I&#39;m thinking in both cases the subpixels are arranged perpendicular to ClearType&#39;s assumed arrangement.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173323">
				<div id="div-comment-1173323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173323">
			January 29, 2015 at 7:39 am</a>		</div>

		<p>It&#39;s a pity that high-quality text rendering is no longer a priority for Microsoft.</p>
<p>Internet Explorer since IE11 i think looks like crap.</p>
<p>Office 2013 looks like crap.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hardon even thread-even depth-1" id="comment-1173333">
				<div id="div-comment-1173333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/gdalsnes' rel='external nofollow' class='url'>gdalsnes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173333">
			January 29, 2015 at 7:44 am</a>		</div>

		<p>To me ClearType always seems to converts the font to a semi bold type. This does not match with the name: Clear = remove stuff. ClearType always adds stuff. A better name would maybe have been FatType.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173343">
				<div id="div-comment-1173343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173343">
			January 29, 2015 at 7:46 am</a>		</div>

		<p>All of this would not be a problem if we could have per-channel alpha, say with an hypothetical RGBXAAAX pixel format.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173373">
				<div id="div-comment-1173373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Juan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173373">
			January 29, 2015 at 8:17 am</a>		</div>

		<p>ClearType is nothing more than font antialiasing. Everybody takes more or less the same approach. They add things to the bitmap based on the color of the background so your eye doesn&#39;t see any sharp edges. With high density screens in phones and monitors antialiasing has improved considerably but the issues they face are the same in Windows than in OS X or Linux. I wouldn&#39;t blame Microsoft to include it since it makes some people life easier and for others they just can deactivate it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173383">
				<div id="div-comment-1173383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christopher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173383">
			January 29, 2015 at 8:30 am</a>		</div>

		<p>@arghhhhhhhhhhh: You might want to try running the ClearType Tuner to see if it can produce something that&#39;s more to your taste. I usually find that the options it offer vary from looking semi-bold to pretty light.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173393">
				<div id="div-comment-1173393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173393">
			January 29, 2015 at 8:37 am</a>		</div>

		<p>@arghhhhhhhhhhh: &quot;This does not match with the name: Clear = remove stuff.&quot;</p>
<p>&quot;Remove stuff&quot; is only one of several related definitions of clear. Another is &quot;easily seen; sharply defined&quot; [Random House Dictionary, via dictionary.com].</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173403">
				<div id="div-comment-1173403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173403">
			January 29, 2015 at 8:45 am</a>		</div>

		<p>Ah yes the ever-present constraint of realtime rendering imposes limits on maximum rendering. Not valid to assume all machines have a fat GPU (or any GPU at all) so &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173413">
				<div id="div-comment-1173413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173413">
			January 29, 2015 at 8:55 am</a>		</div>

		<p>Can we not render text on the GPU already?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173433">
				<div id="div-comment-1173433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jazz Hands</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173433">
			January 29, 2015 at 9:45 am</a>		</div>

		<p>Would the people who feel compelled to opine about how well or poorly ClearType works without referencing the actual technical issues presented in the article please go back and read Raymond&#39;s footnote, say, oh, 100000 times, and then come back and comment? Thanks!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173443">
				<div id="div-comment-1173443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173443">
			January 29, 2015 at 9:50 am</a>		</div>

		<p>The need for subpixel scrolling seems a lot less important than the need for text that&#39;s easier to read. I wonder if anybody suggested a means to limit Direct Manipulation to whole-pixel scrolling to allow scenarios where users want to take full advantage of ClearType.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus odd alt thread-odd thread-alt depth-1" id="comment-1173453">
				<div id="div-comment-1173453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173453">
			January 29, 2015 at 9:58 am</a>		</div>

		<p>Is there a way to re-enable subpixel smoothing in IE/Win8.x?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1173463">
				<div id="div-comment-1173463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173463">
			January 29, 2015 at 10:24 am</a>		</div>

		<p>I wonder who was the wise guy who decided to enable FuzzyType in the Windows DVD Setup (and with the MS generic VGA driver, generally). </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173473">
				<div id="div-comment-1173473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173473">
			January 29, 2015 at 10:26 am</a>		</div>

		<p>Maybe it&#39;s just the hardware I use and the programs I use, but I have always had good luck with ClearType and appreciate the work MSFT did on it.</p>
<p>I hadn&#39;t thought before about how ClearType does its job so I learned something today.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1173483">
				<div id="div-comment-1173483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173483">
			January 29, 2015 at 10:27 am</a>		</div>

		<p>@Juan:</p>
<p>ClearType takes advantage of the fact that RGBRGBRGBRGBRGB arrangement of the color strips on a LCD monitor can be interpreted as RGB RGB RGB, or as GBR GBR GBR, or as BRG BRG BRG. This allows to draw black vertical lines with 1/3 pixel precision.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd odd alt thread-odd thread-alt depth-1" id="comment-1173493">
				<div id="div-comment-1173493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173493">
			January 29, 2015 at 11:54 am</a>		</div>

		<p>Another instance where you don&#39;t know the background color, or if background color changes, is drawing text on non-opaque Glass. </p>
<p>See the question [on Stackoverflow](<a rel="nofollow" target="_new" href="http://stackoverflow.com/questions/4258330/aero-how-to-draw-cleartype-text-on-glass">stackoverflow.com/&#8230;/aero-how-to-draw-cleartype-text-on-glass</a>), which has pretty screenshots demonstrating the issue.</p>
<p>The solutiion is to use `ANTIALIASED_QUALITY` rather than `CLEARTYPE_QUALITY` if you are drawing on partially transparent glass. </p>
<p>A mitigating factor is that starting with Windows 8, you will no longer encounter partially transparent glass in the wild; the user is only able to select opaque glass. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173503">
				<div id="div-comment-1173503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Santokes</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173503">
			January 29, 2015 at 12:05 pm</a>		</div>

		<p>The day Raymond touched on alpha accumulation and texture samplers. &nbsp;This blog has no limits!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173523">
				<div id="div-comment-1173523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173523">
			January 29, 2015 at 12:32 pm</a>		</div>

		<p>@alegr1:</p>
<p>It&#39;s more complicated than that. If you draw a &quot;black vertical line&quot; by dropping all the blue pixels along the line, you actually end up with what appears to be a vertical yellow line. A naÃ¯ve subpixel text renderer will leave the edges of your text full of color fringing.</p>
<p>Most of the math that ClearType does is to allow use of subpixels while maintaining the perceived color.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173533">
				<div id="div-comment-1173533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173533">
			January 29, 2015 at 12:59 pm</a>		</div>

		<p>Ken: I think you misunderstood what alegr1 was saying. He did&#39;t mean that you could draw lines 1/3 pixels thick, just that you can take a vertical line and shift it by 1/3 pixels and still have it be black and 1 pixel thick.</p>
<p>In other words, the standard way to draw a 1-pixel-thick black vertical line is to just take all the RGB values in a column and make them 0, but you could just as easily use GBR or BRG and you&#39;d still get a black line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173543">
				<div id="div-comment-1173543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dmw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173543">
			January 29, 2015 at 2:39 pm</a>		</div>

		<p>Please vote here:</p>
<p><a rel="nofollow" target="_new" href="https://windows.uservoice.com/forums/265757-windows-feature-suggestions/suggestions/6526119-return-subpixel-antialiasing-to-ie-and-modernui-ap">windows.uservoice.com/&#8230;/6526119-return-subpixel-antialiasing-to-ie-and-modernui-ap</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 even thread-even depth-1" id="comment-1173573">
				<div id="div-comment-1173573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173573">
			January 29, 2015 at 3:28 pm</a>		</div>

		<p>@koro: I&#39;m not sure per pixel alpha helps. Cleartype actually needs to know the final colours in order to work ok properly, because it has to mitigate certain colour effects that occur otherwise.</p>
<p>The real solution would be high dpi displays everywhere, because then the need to fake it with tricks like Cleartype would be a lot less.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173353">
				<div id="div-comment-1173353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173353">
			January 29, 2015 at 8:00 am</a>		</div>

		<p>@M. Dudley: You can configure ClearType for an alternate orientation (BGR, vertical RGB or vertical BGR). The problem with LCD rotation is that fonts *need* triple resolution in the X axis much more than in the Y axis.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173363">
				<div id="div-comment-1173363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sockatume</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173363">
			January 29, 2015 at 8:05 am</a>		</div>

		<p>M. Dudley: Yes, that&#39;d be analogous. I think the Cleartype Tuner offers options for the three possible subpixel arrangements in both horizontal *and* vertical stripe arrangements, so if you&#39;ve got an LCD set up vertically you can have Cleartype compensate for it.</p>
<p>On that subject: I noticed that the &quot;modern UI&quot; parts of Windows 8 and its UI didn&#39;t use coloured subpixel rendering quite quickly, but I assumed that was because these newfangled tablets were used in lots of different orientations and it wasn&#39;t worth the overhead to keep up with the changing subpixel geometry. Your explanation didn&#39;t even occur to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1173593">
				<div id="div-comment-1173593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173593">
			January 29, 2015 at 4:51 pm</a>		</div>

		<p>4K displays will make ClearType unnecessary. They will also break some programs that don&#39;t know how to handle high DPI displays. There will have to be another compat shim, to fake an old 2K monitor for them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173603">
				<div id="div-comment-1173603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173603">
			January 29, 2015 at 5:18 pm</a>		</div>

		<p>@Raymond: Read it as &quot;Respect the already existing configuration switches between bilevel, anti-aliased, and ClearType.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173613">
				<div id="div-comment-1173613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173613">
			January 29, 2015 at 7:00 pm</a>		</div>

		<p>dmw: I believe WPF uses a mechanism like you describe. I&#39;m pretty sure I&#39;ve seen WPF render text that&#39;s blurry when animating and sharp when static.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173513">
				<div id="div-comment-1173513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173513">
			January 29, 2015 at 12:17 pm</a>		</div>

		<p>Despite the fact that alegrl1 decided to use a derogatory name, he has an excellent point. ClearType should *not* be enabled at install or recovery time because there is a very good chance the video drivers that would allow scaling to the monitor resolution aren&#39;t available.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-1173623">
				<div id="div-comment-1173623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173623">
			January 29, 2015 at 9:55 pm</a>		</div>

		<p>Are there no user-controllable parameters to tweak the grayscale rendering? The ClearType Tuner built into Windows affects only the color-aware ClearType?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173553">
				<div id="div-comment-1173553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dmw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173553">
			January 29, 2015 at 2:57 pm</a>		</div>

		<p>Regarding the article, I also didn&#39;t expect that, and the Direct Manipulation thing certainly explains why IE11 uses ClearType on Windows 7 but does not on Windows 8.x (it doesn&#39;t pan with DM simply because there is no DM on Windows 7).</p>
<p>I&#39;m okay with no ClearType on Start screen tiles. I find it irritating but it doesn&#39;t matter because I spend &lt; 1 minute per day on Start. But it does matter in Office and in IE. Like Gabe, I don&#39;t see the point of subpixel scrolling; for the little benefit in perceived smoothness *only when scrolling* we pay by giving up crisp font rendering *entirely*. The same goes for all these animations in Modern apps. Of course the animation system could try to be smart and render with ClearType when text doesn&#39;t move and without when animating. (I&#39;ve heard rumors that another big OS vendor employs that technique successfully.) But I&#39;d readily disable those animations entirely if I could get ClearType rendering back.</p>
<p>A large fraction of all text drawn by Office and IE is black, gray or white on opaque background. All this text could benefit from ClearType, as it did in Office 2010 and Windows 7. Both Office and IE have full control over the graphic composition process; it should be possible (if difficult) to determine beforehand whether a particular glyph run will ever be rendered on a transparent background, and to switch ClearType on and off accordingly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173563">
				<div id="div-comment-1173563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173563">
			January 29, 2015 at 3:02 pm</a>		</div>

		<p>Poor, perpetually abused ClearType. People hate it, people love it, but very rarely do people seem to be indifferent about it. Putting stumbling blocks like dynamic backgrounds and bitmap scaling in its way certainly doesn&#39;t help any.</p>
<p>I think it&#39;s amusing that whenever people complain about the inclusion of ClearType, they usually complain of blurry fonts. And whenever people complain about the lack of ClearType, they usually complain of blurry fonts&#8230; The conclusion seems to be that the *existence* of ClearType (rather than any use of it) is the main cause of blurry fonts. Damned if you, damned if you don&#39;t!</p>
<div class="post">[<em>Indeed, I can&#39;t tell from reading the uservoice link whether people are saying &quot;Turn on ClearType to fix the fuzziness!&quot; or &quot;Turn off ClearType to fix the fuzziness!&quot; I think it&#39;s a little of both. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173643">
				<div id="div-comment-1173643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DebugErr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173643">
			January 30, 2015 at 3:25 am</a>		</div>

		<p>Another prominent problem caused by this is drawing text on Aero Glass. You can only use DrawThemeTextEx which uses a different approach to render the text.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173653">
				<div id="div-comment-1173653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dmw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173653">
			January 30, 2015 at 3:26 am</a>		</div>

		<p>I agree that the Uservoice request is not ideally worded, but the demand is clear to me: &quot;&#8230;DirectWrite must use subpixel antialiasing with checkbox is on&quot;, IOW, respect my system settings.</p>
<p>The ClearType wizard has that checkbox called &quot;Activate ClearType&quot; on the first page which toggles between subpixel antialiasing and grayscale antialiasing. Modern UI apps, IE and Office 2013 ignore that setting and always render (parts of) their UI with grayscale antialiasing. The Uservoice request simply demands that this user setting be heeded by everyone.</p>
<div class="post">[<em>As noted, this means that Modern UI apps couldn&#39;t use Direct Manipulation, which means that panning animations will be really slow and jerky since they will require a full render pass on the UI thread at each frame, instead of just moving a sprite. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173663">
				<div id="div-comment-1173663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DebugErr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173663">
			January 30, 2015 at 3:28 am</a>		</div>

		<p>@IanBoyd: Hah, that&#39;s a coincidence, I recently posted on your SO question you linked above with the glass rendering problems (which could be another nice article too, why solid rectangles drawn with GDI bug up), and now I meet you here again :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bob-rao odd alt thread-odd thread-alt depth-1" id="comment-1173633">
				<div id="div-comment-1173633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Vulpini' rel='external nofollow' class='url'>Vulpini</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173633">
			January 29, 2015 at 10:10 pm</a>		</div>

		<p>@alegr1: 4k displays will make ClearType unnecessary *for the people who have them*. Unless you&#39;re proposing dropping support for lower resolutions entirely, or you want to pay for everyone&#39;s high-res display. And then there&#39;s the assumption of either high density or greater distance from the screen &#8212; 4k on a 50&quot; display is a lower PPI than 1920&#215;1080 on 24&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173673">
				<div id="div-comment-1173673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173673">
			January 30, 2015 at 6:50 am</a>		</div>

		<p>@xpclient: There aren&#39;t. That would have gotten me out of trouble ages ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173683">
				<div id="div-comment-1173683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonas Hertzman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173683">
			January 30, 2015 at 6:59 am</a>		</div>

		<p>The big issue and the reason why there are so much complaints here, is that we are not just talking about sub pixel antialiasing vs grey scale antialiasing. The new text rendering algorithm used by Metro apps, the new Internet Explorer and Office, have also started to disregard where on the pixel grid a letter is painted, and the shape of the letter.</p>
<p>As an example, look for a text that has two l after each other and study how each letter is painted. Depending on font and size you will most likely see that an l is sometimes painted as a black line, and sometimes as a grey rectangle. The same error can also be seen on different parts of a single letters, the two vertical lines on a capital H might not be pained with equal thickness, the left one might be two pixels wide while the right one is only one pixel wide.</p>
<p>This is what people complain about when they say text is &quot;blurry&quot; or &quot;fuzzy&quot;, and since the old clear type rendering do not produce these graphical errors, we get these requests to &quot;Return subpixel antialiasing to IE and ModernUI apps&quot;.</p>
<p>I&#39;d say grey scale antialiasing is OK, as long as all occurrences of the same letter are painted identically regardless of where in the text they occur, and as long as all lines that make up the letters are painted identically regardless of what letter they are part of.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173723">
				<div id="div-comment-1173723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dmw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173723">
			January 30, 2015 at 8:03 am</a>		</div>

		<p>@Jonas Hertzman: I think this is called &quot;font hinting&quot;, and yes, I miss that too in Modern UI apps.</p>
<p>WPF applications also have the bad habit of not using hinted fonts by default. Here is a screenshot which points out the difference:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/text/archive/2009/08/24/wpf-4-0-text-stack-improvements.aspx">blogs.msdn.com/&#8230;/wpf-4-0-text-stack-improvements.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1173873">
				<div id="div-comment-1173873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173873">
			January 30, 2015 at 4:47 pm</a>		</div>

		<p>Rendering surface is just half the issue. The other half is ICC profile and font hinting. In passing, dodging or otherwise negotiating these pitfalls one has to deal with the abstract layer of interpretation too; i.e. would you do it like Adobe, Apple or Microsoft?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173923">
				<div id="div-comment-1173923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Sowul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173923">
			February 1, 2015 at 6:30 am</a>		</div>

		<p>Users don&#39;t care about technical reasons &#8212; at the end of the day, text rendering has been impaired for the sake of animation. &nbsp;Do I use Word and Internet Explorer to look at animations, or read text? </p>
<p>As an analog to &quot;kernel-colored glasses&quot; I&#39;ll call this &quot;developer-colored classes&quot; </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173943">
				<div id="div-comment-1173943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stickboy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173943">
			February 1, 2015 at 2:53 pm</a>		</div>

		<p>&gt; &nbsp;Both trade-offs are pretty expensive, and the cheaper alternative is usually simply to stop using color-aware ClearType.</p>
<p>Sorry if I&#39;m being dense, but how are application developers supposed to do that?</p>
<div class="post">[<em>See the first linked article. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173953">
				<div id="div-comment-1173953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dmw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1173953">
			February 1, 2015 at 3:06 pm</a>		</div>

		<p>[As noted, this means that Modern UI apps couldn&#39;t use Direct Manipulation, which means that panning animations will be really slow and jerky since they will require a full render pass on the UI thread at each frame, instead of just moving a sprite. -Raymond]</p>
<p>I am confident there are more options than only &quot;Direct Manipulation&quot; and &quot;slow and jerky&quot;. I&#39;ll have to check whether scrolling in IE 11 &nbsp;on Windows 7 (= no Direct Manipulation) is slow and jerky, but I doubt it. And even Direct Manipulation isn&#39;t set in stone and could be improved for Windows 10. An additional flag to disable subpixel panning has already been suggested. (Note that subpixel panning is almost irrelevant anyway for Office and IE because typical PC screens have a horizontal subpixel layout and almost all scrolling on websites and in Word documents is vertical; it is only in Modern apps that horizontal scrolling is common.) Or Direct Manipulation could render two sprites, one with perfect text rendering and one for animating. And regarding the issue of not knowing the background you render on: the largest fraction of all text ends up being rendered on opaque background, so this case deserves special treatment or additional smarts. Perhaps the render stage which draws text to a buffer could enable ClearType if it also passes in the background color. Anyway, I&#39;m sure you and your colleagues who are more familiar with the rendering process can come up with better ideas.</p>
<p>It isn&#39;t fair to accuse you of &quot;developer-colored glasses&quot; &#8211; after all this is a technical blog, and most readers are here to learn about technical details and not about product politics. But I agree with the rest of Mark Sowul&#39;s sentiment: all the technical details are just an explanation, not an excuse. All the users can see is that font rendering was fine in Windows 7 and Office 2010, and that Windows 8 and Office 2013 break it for no apparent reason.</p>
<div class="post">[<em>It is slow and jerky; that&#39;s why they switched to DirectManipulation. (Try scrolling while a heavy script is running.) DirectManipulation does not do any rendering. All it does is move sprites around. I guess you could have an &#39;integer translations only, if there is no scaling or rotation active&#39; mode for DirectManipulation. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1174103">
				<div id="div-comment-1174103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1174103">
			February 2, 2015 at 12:53 pm</a>		</div>

		<p>I&#39;ve noticed that Windows 8.1, ClearType attempts to do sub-pixel anti-aliasing on text that is rendered by applications that don&#39;t support High DPI and are thus automatically scaled by Windows. &nbsp;The result is awful. &nbsp;ClearType ought to be smart and know that in processes that are in compatibility mode for High DPI, it should only do full-pixel anti-aliasing.</p>
<div class="post">[<em>ClearType was correct at the time it was written. At the time ClearType was written, automatic DPI scaling did not exist. This is a case where advancements in one technology can cause older technologies to behave suboptimally. Do you want to take the compatibility risk of changing how ClearType works? And if so, you just created an unfunded mandate for the ClearType team. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1174113">
				<div id="div-comment-1174113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1174113">
			February 2, 2015 at 3:06 pm</a>		</div>

		<p>There&#39;s a lot of strong opinions regarding ClearType and font smoothing because things started getting forced on users. &nbsp;With IE9 and later, there is no way to disable font smoothing. &nbsp;Then there was WPF, which pushed the problem into 3rd party applicaiton. &nbsp;Eventually WPF added the ability for an individual application to set the text options, but left the default at forced font smoothing. &nbsp;This was a terrible solution because system settings are still ignored and application developers don&#39;t want to bother with the work. </p>
<p>People would be less emotional about ClearType if the options that they set at the system level were honored.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1174143">
				<div id="div-comment-1174143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1174143">
			February 3, 2015 at 12:34 am</a>		</div>

		<p>&gt; Do you want to take the compatibility risk of changing how ClearType works?</p>
<p>Since ClearType can be disabled at any time, those applications should work just fine if ClearType was disabled for them (and either plain anti-aliasing or nothing was used). IMHO that would be a lesser compatibility problem than scaling the window after rendering.</p>
<div class="post">[<em>Consider an app that renders text into different-sized boxes depending on whether ClearType is enabled. If you silently ignored color ClearType requests, then the kerning will be different, and the text may overflow. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1174253">
				<div id="div-comment-1174253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1174253">
			February 3, 2015 at 10:05 am</a>		</div>

		<p>[If you silently ignored color ClearType requests, then the kerning will be different, and the text may overflow. -Raymond]</p>
<p>I was afraid that was going to be the case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1174303">
				<div id="div-comment-1174303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1174303">
			February 4, 2015 at 1:13 am</a>		</div>

		<p>&gt; Consider an app that renders text into different-sized boxes depending on whether ClearType is enabled.</p>
<p>But wouldn&#39;t the app see ClearType as disabled, so this wouldn&#39;t be a problem?</p>
<div class="post">[<em>Many apps do &quot;Get ClearType setting, change setting to X, create a font, restore ClearType setting&quot; to create a font with a specific ClearType setting X. When you run these apps, your system ClearType settings will always be reset to disabled. Then you&#39;d complain &quot;Stupid Windows. Why does it keep resetting my ClearType settings?&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1174523">
				<div id="div-comment-1174523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150129-00/?p=44803#comment-1174523">
			February 5, 2015 at 12:49 am</a>		</div>

		<p>&gt; Many apps do &quot;Get ClearType setting, change setting to X, create a font, restore ClearType setting&quot;&#8230;</p>
<p>Still, most apps don&#39;t do that, and lying about ClearType would only affect the default setting. If the app explicitly requests ClearType, it should still get it, but when it&#39;s running in scaled mode, the default could still be ClearType off.</p>
<div class="post">[<em>I guess I wasn&#39;t clear. The problem isn&#39;t the app changing the setting. The problem is the app <span style="text-decoration:underline;">restoring</span> the setting. Since we lied about whether ClearType is enabled, the app will think it&#39;s restoring ClearType to its original setting, but it&#39;s actually turning it off. So every time you run the app, ClearType gets turned off. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

