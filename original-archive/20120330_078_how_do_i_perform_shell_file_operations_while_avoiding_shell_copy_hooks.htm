<html>
<head>
<title>How do I perform shell file operations while avoiding shell copy hooks?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I perform shell file operations while avoiding shell copy hooks?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 30, 2012 / year-entry #79</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>20</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Okay, the subject line of the article gives away the answer to the puzzle, but here's the puzzle anyway: A customer reported a problem with the SHFile­Operation function: Consider the following program: #include <windows.h> #include <shellapi.h> int main() { SHFILEOPSTRUCT fileStruct = {}; fileStruct.wFunc = FO_RENAME; fileStruct.pFrom = L"C:\\a\0&#8243;; fileStruct.pTo = L"C:\\b\0&#8243;; fileStruct.fFlags= FOF_NO_UI; ::SHFileOperation(&fileStruct);...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Okay, the subject line of the article gives away the answer
to the puzzle,
but here's the puzzle anyway:
A customer reported a problem with the
<code>SHFile&shy;Operation</code> function:
</p>
<blockquote CLASS=q>
<p>
Consider the following program:
</p>
<pre>
#include &lt;windows.h&gt;
#include &lt;shellapi.h&gt;
 
int main()
{
SHFILEOPSTRUCT fileStruct = {};
 
    fileStruct.wFunc = FO_RENAME;
    fileStruct.pFrom = L"C:\\a\0";
    fileStruct.pTo   = L"C:\\b\0";
    fileStruct.fFlags= FOF_NO_UI;
 
    ::SHFileOperation(&amp;fileStruct);
 
    return 0;
}
</pre>
<p>
If "a" is a file, then everything works fine,
but if it's a directory, then Application Verifier raises
the following error:
</p>
<blockquote><p>
Heap violation detected<br>
Memory access operation in the context of a freed block: reuse-after-delete or double-delete
</p>
</blockquote>
<p>
Can you help explain what we're doing wrong?
So far as we can tell, all our parameters are correct.
</p>
</blockquote>
<p>
This is one of those "It doesn't work on my machine" issues,
because the provided sample program runs fine on a freshly-installed
copy of Windows.
We asked the customer to send us a crash dump file,
and from that crash dump the source of the problem was obvious:
</p>
<pre>
eax=00000001 ebx=00000000 ecx=73d34c58 edx=00270001 esi=09fa2ff8 edi=00000000
eip=10001131 esp=0026dea8 ebp=0026df24 iopl=0         nv up ei pl nz na po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010200
Contoso+0x1131:
10001131 8b4604          mov     eax,dword ptr [esi+4] ds:002b:09fa2ffc=????????
 
0:000&gt; k
  *** Stack trace for last set context - .thread/.cxr resets it
ChildEBP RetAddr
WARNING: Stack unwind information not available. Following frames may be wrong.
0026df24 75a3554a Contoso+0x1131
0026df64 75a1b07c ole32!ActivationPropertiesIn::DelegateCreateInstance+0x108
0026dfb8 75a1aff1 ole32!CApartmentActivator::CreateInstance+0x112
0026dfd8 75a1ae16 ole32!CProcessActivator::CCICallback+0x6d
0026dff8 75a1adc7 ole32!CProcessActivator::AttemptActivation+0x2c
0026e034 75a1b0df ole32!CProcessActivator::ActivateByContext+0x4f
0026e05c 75a3554a ole32!CProcessActivator::CreateInstance+0x49
0026e09c 75a352ce ole32!ActivationPropertiesIn::DelegateCreateInstance+0x108
0026e2fc 75a3554a ole32!CClientContextActivator::CreateInstance+0xb0
0026e33c 75a35472 ole32!ActivationPropertiesIn::DelegateCreateInstance+0x108
0026eb18 75a45916 ole32!ICoCreateInstanceEx+0x404
0026eb78 75a45877 ole32!CComActivator::DoCreateInstance+0xd9
0026eb9c 75a45830 ole32!CoCreateInstanceEx+0x38
0026ebcc 75c61fe0 ole32!CoCreateInstance+0x37
0026ee64 75c61354 shell32!_SHCoCreateInstance+0x1ac
0026ee88 75c1b904 shell32!SHExtCoCreateInstance+0x1e
0026eec8 75becbcf shell32!SHExtCoCreateInstanceString+0x43
0026f10c 75beca76 shell32!CreateCopyHooks+0xe1
0026f344 75bec9da shell32!CallCopyHooks+0x4b
0026f370 75bec95b shell32!CallFileCopyHooks+0x29
0026f5bc 75bec8a4 shell32!CFileOperation::CopyHooks+0x119
0026fa3c 75c37955 shell32!CCopyWorkItem::_UpFrontConfirmations+0xb7
0026fc6c 75c378b0 shell32!CCopyWorkItem::ProcessWorkItem+0x83
0026fca0 75c37fda shell32!CRecursiveFolderOperation::Do+0x1d5
0026fce4 75c39a19 shell32!CFileOperation::_EnumRootDo+0x14e
0026fd4c 75c397b9 shell32!CFileOperation::PrepareAndDoOperations+0x27f
0026fd74 75c396c7 shell32!SHFileOperationWithAdditionalFlags+0xe9
</pre>
<p>
The crash is in some third party component named Contoso,
which is running because it is being <code>Co&shy;Create</code>'d.
The call came from <code>Create&shy;Copy&shy;Hooks</code>,
and it doesn't require very much in the way of psychic powers
to conclude that the shell is creating the Contoso object
because it registered as a copy hook.
</p>
<p>
This also explains why the problem occurs only on the customer's
machine:
The customer installed the Contoso shell extension and we didn't.
</p>
<p>
Okay, so the problem is that the Contoso shell extension has
a use-after-free memory corruption bug.
(Some Web searching revealed that a lot of people had encountered
problems with the Contoso shell extension.)
</p>
<p>
The <code>FOFX_<wbr>NO&shy;COPY&shy;HOOKS</code> flag comes in handy here.
Setting this extended flag disables copy hooks for your file operation.
Extended flags cannot be passed to the classic
<code>SHFileOperation</code> function because the
<code>SHFILEOPSTRUCT</code> structure uses a 16-bit <code>WORD</code>
for the <code>fFlags</code> member,
but the
<code>FOFX_<wbr>NO&shy;COPY&shy;HOOKS</code> flag has the numerical
value <code>0x00800000</code> which doesn't fit in a 16-bit integer.
(The "X" at the end of the prefix is another clue.)
The way to set extended flags is to use the
<code>IFileOperation</code> interface.
</p>
<pre>
// Just for fun, I'll use ATL templates instead of raw C++.
HRESULT RenameAtoB()
{
 HRESULT hr;

 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/05/20/135841.aspx">CCoInitialize</a> init;
 hr = init;
 if (FAILED(hr)) return hr;

 CComPtr&lt;IFileOperation&gt; spfo;
 hr = spfo.CoCreateInstance(CLSID_FileOperation);
 if (FAILED(hr)) return hr;

 hr = spfo-&gt;SetOperationFlags(FOFX_NOCOPYHOOKS);
 if (FAILED(hr)) return hr;

 CComPtr&lt;IShellItem&gt; spsi;
 hr = SHCreateItemFromParsingName(L"C:\\a", NULL,
                           IID_PPV_ARGS(&amp;spsi));
 if (FAILED(hr)) return hr;

 hr = spfo-&gt;RenameItem(spsi, L"b", NULL);
 if (FAILED(hr)) return hr;

 hr = spfo-&gt;PerformOperations();
 if (FAILED(hr)) return hr;

 return S_OK;
}
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-975563">
				<div id="div-comment-975563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975563">
			March 30, 2012 at 7:25 am</a>		</div>

		<p>Can you install hooks that cannot be bypassed?</p>
<p>(In case they are really, really important.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975573">
				<div id="div-comment-975573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975573">
			March 30, 2012 at 7:32 am</a>		</div>

		<p>@NB: You just want to escalate an arms race. &nbsp;If someone doesn&#39;t want to run your unbypassable hooks, they could just reimplement the part of SHFileOperation/IFileOperation they need using CreateFile/ReadFile/WriteFile/etc. &nbsp;How do you expect to hook that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-975583">
				<div id="div-comment-975583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975583">
			March 30, 2012 at 7:36 am</a>		</div>

		<p>Just install a rootkit, to ensure your hooks cannot be bypassed</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975633">
				<div id="div-comment-975633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Caron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975633">
			March 30, 2012 at 8:31 am</a>		</div>

		<p>Would it actually be appropriate disable hooks in this case? Sure, Contoso is a piece of crap, everyone knows that. But, most customers don&#39;t have it installed, preferring the LitWare extension instead which provides a valuable service. People would be ticked off knowing that it was being bypassed in this case!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-975643">
				<div id="div-comment-975643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pcooper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975643">
			March 30, 2012 at 8:35 am</a>		</div>

		<p>Is the intention that programs should often/always run operations with the setting to disable hooks? Or is this supposed to be used for some corporate/kiosk deployment with custom software that&#39;s needing to work around the broken hook but still needs the shell extension installed? I guess I&#39;m just wondering when I might want to use this technique.</p>
<div class="post">[<i>The scenario here was some code that just wanted to copy a directory tree and figured they could use the shell copy engine instead of writing a recursive tree copy manually. They didn&#39;t need or wany any UI or other customization; they just wanted <code>CopyFileRecursive</code>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-975663">
				<div id="div-comment-975663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975663">
			March 30, 2012 at 9:33 am</a>		</div>

		<p>And this is why Microsoft should implement blacklisting to actively disable faulty third-party code. And a shamelist: &quot;The Contoso extension was found to cause Explorer crashes. It&#39;s disabled for now. Contact the vendor for the update.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-975683">
				<div id="div-comment-975683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975683">
			March 30, 2012 at 10:13 am</a>		</div>

		<p>@alegr1: vendor X has gone out of business and/or quit supporting Contoso but it&#39;s crucial for my business with vendor Y&#39;s application which we have a 3-year contract on, please have microsoft send me the update codes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975693">
				<div id="div-comment-975693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975693">
			March 30, 2012 at 10:19 am</a>		</div>

		<p>@Skyborne: That&#39;s why these things have overrides.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-975703">
				<div id="div-comment-975703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975703">
			March 30, 2012 at 11:11 am</a>		</div>

		<p>I think this behavior is completely unacceptable for Contoso software. These guys must pay MS millions to have their name dropped all over the place in sample projects and documentation. The least they can do is not reflect badly on Microsoft with bug-ridden software.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975713">
				<div id="div-comment-975713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975713">
			March 30, 2012 at 11:41 am</a>		</div>

		<p>@JM: Contoso switched to Google Apps April 1st 2011, so they&#39;ll probably be writing buggy Google Apps from now on ;) &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-975723">
				<div id="div-comment-975723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ebraminio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975723">
			March 30, 2012 at 11:47 am</a>		</div>

		<p>For readers that don&#39;t know mean of Contso, it is used here as a placeholder name for a real product. I put that on Contoso article of English Wikipedia :)</p>
<div class="post">[<i>This is hardly the first time I&#39;ve used Contoso as a placeholder name. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975733">
				<div id="div-comment-975733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kawahee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975733">
			March 30, 2012 at 1:16 pm</a>		</div>

		<p>At work when customers report crashes in our application our support team gets memory dumps and I !analyze them (and that&#39;s about where my knowledge of WinDbg ends). More often than not its code in our app; three or four times it&#39;s been a shell extension.</p>
<p>Are these developer support cases chargeable? Or unlimited as per some contract? It sounds like Microsoft&#39;s willing to do my job for me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-975593">
				<div id="div-comment-975593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975593">
			March 30, 2012 at 7:50 am</a>		</div>

		<p>@Adam Rosenfield &#8211; I&#39;d *suspect* sarcasm from NB here &#8211; if they&#39;re a regular reader, it&#39;s the obvious next level to go to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975743">
				<div id="div-comment-975743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975743">
			March 30, 2012 at 4:12 pm</a>		</div>

		<p>I find it odd that users wouldn&#39;t notice Explorer crashing when copying files. Was there something specificly strange about the files copied? A possible downside of passing the flag could be that you might be bypassing source control, logging, auditing, &#8230; As I understand it, it was fine for this customer, but this flag really isn&#39;t for general use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-975753">
				<div id="div-comment-975753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975753">
			March 30, 2012 at 6:21 pm</a>		</div>

		<p>Is there any builtin Windows utility that uses this flag? Seems like it could be handly support tips.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975763">
				<div id="div-comment-975763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975763">
			March 30, 2012 at 8:29 pm</a>		</div>

		<p>I build networking apps. &nbsp;Our code has a built-in scanner that checks for the presence of McAfee, Symantec, and Norton firewall software if it encounters some should-not-occur networking error. &nbsp;A lot of the time it&#39;s that lot. &nbsp;So having to modify your app to work around another vendors&#39; bugs isn&#39;t that far-fetched.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-975783">
				<div id="div-comment-975783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">whoop</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975783">
			March 31, 2012 at 4:12 am</a>		</div>

		<p>Why not use console command move or xcopy instead ?</p>
<p>Isn&#39;t this an example of recreating the wheel poorly ?</p>
<p>oh well</p>
<p>[This comment system really do love to eat my comments. Raymond, doesn&#39;t anyone want to fix it or is it &#39;by design&#39; ?]</p>
<div class="post">[<i>Every few months, the people who run the servers send out email saying &quot;We will be using our maintenance window to install a patch that will hopefully fix the comments problem.&quot; Seventh time&#39;s a charm, right? (Note: I made up the number 7.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975793">
				<div id="div-comment-975793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975793">
			March 31, 2012 at 9:15 am</a>		</div>

		<p>Dave &#8211; I write .NET framework apps and also have had to work around a lot of third-party garbage screwing with the network stack and causing weird errors in the bowels of the framework networking code. &nbsp;Lots of time wasted trying to find out what &quot;I&quot; had done wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-975803">
				<div id="div-comment-975803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">metafonzie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975803">
			March 31, 2012 at 12:18 pm</a>		</div>

		<p>@Mark S</p>
<p>Do you mean the third party LSPs? They are indeed horrible (esp Ponjour from Abble). But the worst offenders are shitty (mostly USB &amp; Wireless) drivers that increase system DPC latency thus guaranteeing a horrible audio experience. Its ironic that I bought this several-thousand-dollar Zony Hiyo ( ;-) ) laptop from a MS store in Bellevue which was &quot;MS Signature&quot; branded (i.e. no bloatware) and it came with the worst possible drivers. I continue to get horrible DPC latency spikes even after a fresh W7 install with minimal drivers from Zony&#39;s website.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-975813">
				<div id="div-comment-975813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120330-00/?p=7963#comment-975813">
			March 31, 2012 at 2:45 pm</a>		</div>

		<p>[Every few months, the people who run the servers send out email saying &quot;We will be using our maintenance window to install a patch that will hopefully fix the comments problem.&quot; Seventh time&#39;s a charm, right? (Note: I made up the number 7.) -Raymond]</p>
<p>It will get fixed when it crosses Raymond&#39;s annoyance threshold and he does something about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

