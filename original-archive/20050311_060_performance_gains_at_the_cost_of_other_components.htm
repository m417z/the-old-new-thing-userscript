<html>
<head>
<title>Performance gains at the cost of other components</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Performance gains at the cost of other components</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 11, 2005 / year-entry #61</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>64</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In the operating systems group, we have to take a holistic view of performance. The goal is to get the entire system running faster, balancing applications against each other for the greater good. Applications, on the other hand, tend to have a selfish view of performance: "I will do everything possible to make myself run...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>In the operating systems group, we have to take a holistic view of performance.  The goal is to get the entire system running faster, balancing applications against each other for the greater good.</p>
<p> Applications, on the other hand, tend to have a selfish view of performance: "I will do everything possible to make myself run faster. The impact on the rest of the system is not my concern." </p>
<p> Some applications will put themselves into the Startup group so that they will load faster. This isn't really making the system run any faster; it's just shifting the accounting. By shoving some of the application startup cost into operating system startup, the amount of time between the user double-clicking the application icon and the application being ready to run has been reduced. But the total amount of time hasn't changed. </p>
<p> For example, consider the following time diagram. The "*" marks the point at which the user turns on the computer, the "+" marks the point at which Explorer is ready and the user double-clicks the application icon, and the "!" marks the point at which the application is ready. </p>
<table bordercolor="black" border="1" cellpadding="3" cellspacing="0" style="border: 0pt">
<tr>
<td style="border: none">*</td>
<td width="40%" style="background: lavender">OS Startup</td>
<td style="border: none">+</td>
<td width="60%" style="background: pink">Application Startup</td>
<td style="border: none">!</td>
</tr>
</table>
<p> The application developers then say, "Gosh, that pink 'Application Startup' section is awfully big. What can we do to make it smaller?  I know, let's break our application startup into two pieces... </p>
<table bordercolor="black" border="1" cellpadding="3" cellspacing="0" style="border: 0pt; border-collapse: collapse">
<tr>
<td style="border: none">*</td>
<td width="40%" style="background: lavender">OS Startup</td>
<td style="border: none">+</td>
<td width="30%" style="background: pink">Application Startup&nbsp;1</td>
<td width="30%" style="background: pink">Application Startup&nbsp;2</td>
<td style="border: none">!</td>
</tr>
</table>
<p> "... and put part of it in the Startup group. </p>
<table bordercolor="black" border="1" cellpadding="3" cellspacing="0" style="border: 0pt; border-collapse: collapse">
<tr>
<td style="border: none">*</td>
<td width="40%" style="background: lavender">OS Startup</td>
<td width="30%" style="background: lavender">Application Startup&nbsp;1</td>
<td style="border: none">+</td>
<td width="30%" style="background: pink">Application Startup&nbsp;2</td>
<td style="border: none">!</td>
</tr>
</table>
<p> "Wow, look, the size of the pink bar (which represents how long it takes for our application to get ready after the user double-clicks the icon) is much shorter now!" </p>
<p> The team then puts this new shorter value in their performance status report, everybody gets raises all around, and maybe they go for a nice dinner to celebrate. </p>
<p> Of course, if you look at the big picture, from the asterisk all the way to the exclamation point, nothing has changed. It still takes the same amount of time for the application to be ready from a cold start.  All this "performance" improvement did was rob Peter to pay Paul. The time spent doing "Application Startup&nbsp;1" is now charged against the operating system and not against the application. You shuffled numbers around, but the end user gained nothing. </p>
<p> In fact, the user <strong>lost</strong> ground. For the above diagrams assume that the user wants to run your application at all!  If the user didn't want to run your application but instead just wanted to check their email, they are paying for "Application Startup&nbsp;1" even though they will reap none of the benefits. </p>
<p> Another example of applications having a selfish view of performance came from a company developing an icon overlay handler.  The shell treats overlay computation as a low-priority item, since it is more important to get icons on the screen so the user can start doing whatever it is they wanted to be doing. The decorations can come later. This company wanted to know if there was a way they could improve their performance and get their overlay onto the screen <strong>even before the icon shows up</strong>, demonstrating a phenomenally selfish interpretation of "performance". </p>
<p> Performance is about getting the user finished with their task sooner.  If that task does <strong>not</strong> involve running your program, then your "performance improvement" is really a performance impediment. I'm sure your program is very nice, but it would also be rather presumptuous to expect that every user who installs your program thinks that it should take priority over everything else they do. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (64)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-262773">
				<div id="div-comment-262773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wesha</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262773">
			March 11, 2005 at 1:57 pm</a>		</div>

		<p>That&#8217;s what I call &quot;sweeping the dust underneath the carpet&quot;, something the software industry loves to do. Instead of fixing the problem, let&#8217;s hide the symptoms!</p>
<p>BTW longer startup is not the only impact. It&#8217;s a waste of [virtual] memory as well &#8212; the app that has been launched during system startup, needs to store its data somewhere, after all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-262783">
				<div id="div-comment-262783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan McCarty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262783">
			March 11, 2005 at 2:14 pm</a>		</div>

		<p>I can only read your post with the wryest of smiles, knowing that MS is one of the worst offenders in this area.  I hope you wrote it tongue in cheek as well.</p>
<p>Remember how the IE team made their app load faster than Netscape&#8217;s?  I think that a healthy dose of your advice is in order: &quot;assume that the user wants to run your application at all!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262803">
				<div id="div-comment-262803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rotd.org/' rel='external nofollow' class='url'>Andreas Magnusson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262803">
			March 11, 2005 at 2:25 pm</a>		</div>

		<p>Ironically I found that the only thing in my Startup folder was Microsoft Office.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-262823">
				<div id="div-comment-262823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Johan Ericsson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262823">
			March 11, 2005 at 2:45 pm</a>		</div>

		<p>In being the devil&#8217;s advocate,</p>
<p>Isn&#8217;t it possible that the user doesn&#8217;t care how slow the startup code is? The user may only perform the startup once every few days, whereas they will launch the application much more often.</p>
<p>Doesn&#8217;t pre-loading an application, in that case, help the user &quot;finish their task sooner&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262833">
				<div id="div-comment-262833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262833">
			March 11, 2005 at 2:50 pm</a>		</div>

		<p>Reminds me of handling out-of-memory conditions in kernel mode.  You know the system is going down &#8212; but if you can hang in there a little longer then another vendor&#8217;s driver is at the top of the blue screen.  It&#8217;s about support costs for little companies.  If Microsoft gets the call from slow system startup, then we hold onto a little more revenue.  Maybe we get a raise or a nice dinner.  So true.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-262853">
				<div id="div-comment-262853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262853">
			March 11, 2005 at 3:05 pm</a>		</div>

		<p>I had this experiance when I moved from 2000 to XP. The desktop (start menu) showed up faster than win2k but when I clicked on the shortcut, the application did not start until all the services are started. I had to use msconfig and disable all the unnecessary services and applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262863">
				<div id="div-comment-262863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262863">
			March 11, 2005 at 3:06 pm</a>		</div>

		<p>I for one don&#8217;t like it when applications pre-load like this.  When I can do so without breaking the application I always remove these entries.  AutoRuns by SysInternals is the best utility for this! :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-262873">
				<div id="div-comment-262873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Provoker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262873">
			March 11, 2005 at 3:10 pm</a>		</div>

		<p>Also interesting: Because ms do bundle it&#8217;s webbrowser with the os, it is installed before mozilla. The transfer rate of an ordinary HD is about 2-3 times faster at the beginning compared to the end of the disk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262893">
				<div id="div-comment-262893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.nowcom.com' rel='external nofollow' class='url'>Robert Kozak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262893">
			March 11, 2005 at 3:15 pm</a>		</div>

		<p>Raymond,</p>
<p>As you demontrated, total startup time has not changed but it is not taking into account the users perception. </p>
<p>Sometimes just adding a splash screen to an application will make it look faster even if it adds more time to the total startup. Because it is more responsive to the user (giving feedback) it is perceived as being faster. So perception is sometimes better than actual performance.</p>
<p>Also by moving initialization startup code of an application into the startup of the OS the user can start and teminiate their application throught the day and get a better accumulated performance benefit. Your diagram only takes into account 1 run of the application. Ideally the OS should only be started once while applications will be started over and over again.</p>
<p>The more stable the OS is and as it increases in total uptime then the inital first load of the OS would soon become a distant memory.</p>
<p>&#8212; Robert</p>
<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-262913">
				<div id="div-comment-262913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.nowcom.com' rel='external nofollow' class='url'>Robert Kozak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262913">
			March 11, 2005 at 4:17 pm</a>		</div>

		<p>Steve,</p>
<p>My point is that with a stable OS, an application should be run many times per OS boot.</p>
<p>If you are booting a machine every hour this is a major problem but if you boot every week, month or year the cost to put in start up code as part of the OS boot process becomes less and less over time.</p>
<p>&#8212; Robert</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262933">
				<div id="div-comment-262933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262933">
			March 11, 2005 at 4:51 pm</a>		</div>

		<p>One major problem with moving stuff into the startup is that traditionally, windows startup times have been one of the major complaints that people&#8217;ve had about windows &#8211; yet new installs are fast, as most also know. The obvious culprit is &#8216;windows cruft&#8217; but the real one is the constant onslaught of app developers who assume they know so much better what people want in their startup. It&#8217;s not the windows team&#8217;s fault that boorish devs exist, and they made the msconfig tool to help fight it.</p>
<p>Robert, if an app can be split into two to start partly at startup and the rest on load, then it can also be made just as easily to stay resident after the first start. (Photoshop acts this way the last few versions; the first startup is obnoxiously slow, the subsequent ones quite fast.)</p>
<p>It&#8217;s also true that most people turn their computers off when they&#8217;re done, for power/noise reasons, because they&#8217;ve been conditioned to, or just because it&#8217;s the sensible thing to do, like turning a TV off. Only power users and neophytes who think the screen is the computer tend to leave them running all the time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-262943">
				<div id="div-comment-262943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert Kozak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262943">
			March 11, 2005 at 5:21 pm</a>		</div>

		<p>Foxy,</p>
<p>Yes your are right in that many people are turning off their computers but most times it goes into a hibernate or suspend mode. The startup doesn&#8217;t have to happen again.</p>
<p>If we had an OS that never needed a reboot then the startup time is irrelavent. Who cares about a 10 min boot time if you dont have to reboot for 5 years?</p>
<p>In fact the install time for Windows XP can be over 1/2 hour. But its tolerated because it only happends every once in awhile. </p>
<p>I would take a 1 hour boot time in exchange for an OS that only has to be booted 5 years. :-)</p>
<p>&#8212; Robert</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262963">
				<div id="div-comment-262963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262963">
			March 11, 2005 at 6:13 pm</a>		</div>

		<p>I would like to know why these stupid programs think that they are so important that they can waste my memory with their DLLs.  If I run different apps, the pages get paged out anyway so why even bother.</p>
<p>Doing this type of junk works great for the primary application for a specific user.  The problem is that every twit programmer thinks his application is the most important app you install on your computer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-262983">
				<div id="div-comment-262983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom West</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262983">
			March 11, 2005 at 7:23 pm</a>		</div>

		<p>Complain as you like, but the vast majority of people do look at the apparent application load time as a significant (often the most significant) measure of speed.  Why should an application company choose to harm the perception of its product just to please the few of us whom might be annoyed by the application&#8217;s presumption?  It certainly has contributed greatly to the perception of Office and Explorer as high quality products.</p>
<p>I think it&#8217;s like security.  We gnash our teeth about Microsoft&#8217;s lack of security, but the truth is most people intensely dislike effective program security because it prevents them from doing what they want.  MS has been serving the consumer&#8217;s actual wants far better than its competitors in that particular fashion.  Only recently has the cost become high enough that people are willing to accept the inconvenience that true security causes (and MS has responded with making security more important).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262793">
				<div id="div-comment-262793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262793">
			March 11, 2005 at 2:24 pm</a>		</div>

		<p>It bugs me when apps (Office, Real, Quicktime, etc.) do this &quot;trick&quot; just to get the DLLs loaded and into RAM and the HD cache. Never mind that unless I run Office/Real/QT *immediately* after booting, the DLLs will get swapped out over time and will have to reloaded from disk ANYWAY.<br />
<br />It&#8217;s nice when the &quot;quickstart&quot; app has a tray^H^H^H^Htaskbar notification area icon because then I know to go and rip it out of the startup group.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-262993">
				<div id="div-comment-262993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ashod Nakashian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262993">
			March 11, 2005 at 10:26 pm</a>		</div>

		<p>Those who argue that &quot;perception is sometimes better than actual performance.&quot; lack the concept of &#8216;shared resources&#8217;!</p>
<p>Guess what, your hardware&#8217;s resources are finite and average joe doesn&#8217;t have what power users usually have at their diposal. Ironically, some argue that joe six-pack doesn&#8217;t care much abour performance, rather about the perception of it. How many application can joe affort to have installed on his system before he is back shopping for new hardware?</p>
<p>In the days of Office 6, Fast.exe and iexplorer (Win98) had not only exhausted most of the system&#8217;s valuable resources (VM, RAM, GDI objects&#8230;) at startup, but made other (much more decent) software look sluggish and bulky.</p>
<p>Had every vendor done as MS did, how would our desktop look today? Talk about adware/spyware and softawre hijacking&#8230;</p>
<p>-Ash</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262843">
				<div id="div-comment-262843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262843">
			March 11, 2005 at 2:50 pm</a>		</div>

		<p>Dan McCarty wrote:<br />
<br />&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<br />
<br />Remember how the IE team made their app load faster than Netscape&#8217;s? I think that a healthy dose of your advice is in order: &quot;assume that the user wants to run your application at all!&quot;<br />
<br />&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p>What, you mean by rebasing and binding their DLLs? Something that the Mozilla team *have* built into their build process now, making it load as fast as IE (assuming that you turn off &quot;quickstart&quot; and run it with -nosplash as the switch).</p>
<p>Loading things fast isn&#8217;t magic, you know. It just takes a little bit of knowledge and a little bit of work. Neither of which the Netscape engineers had, even though all of this was documented in books and the MSDN library.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263003">
				<div id="div-comment-263003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263003">
			March 11, 2005 at 11:02 pm</a>		</div>

		<p>I wrote an application that ran at start up once.  Before it does anything else it sleeps for about a minute.  One of the biggest problems I find is that when every program is trying to hit the disk at once, everything goes really slow, but if I wait a minute then I pretty much get the disk all to myself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-262903">
				<div id="div-comment-262903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.1060.org/blogxter/publish/5' rel='external nofollow' class='url'>Steve loughran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-262903">
			March 11, 2005 at 3:23 pm</a>		</div>

		<p>The trouble with startup apps is that you are only moving the startup delay if your app is run *every single boot*.</p>
<p>If you only run the app a fraction of system boots, the effective startup time of an app should be multipled by the fraction of the app. E.g. if you run office 1 in 4 runs, Real 1 in 10, and each startup app takes 10s, the effective cost of office startup is 40s per app run, and 100s for Real. </p>
<p>Startup group apps (and worse, CurrentVersion/Run stuff in the registry) are evil. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263013">
				<div id="div-comment-263013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J. Edward Sanchez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263013">
			March 12, 2005 at 1:11 am</a>		</div>

		<p>Take note, all software developers: If you&#8217;re going to preload your app at startup, make sure to wait exactly one minute before kicking in!</p>
<p>But seriously, there is something to the delayed preload idea. Rather than going on a fixed delay, however, it would probably be better to wait until the user has been idle for a certain amount of time. Thing is, even that could still result in the same problem of all the programs hitting the disk at once.</p>
<p>An even better idea would be for the OS to provide a separate &quot;idle startup list&quot; facility. Apps that wanted to preload themselves could put themselves in that list, and the OS would decide when it was safe (i.e., user idle) to start going through the list and executing the items, waiting for each one to finish before moving on to the next.</p>
<p>This way, a system could be configured so that only the essential stuff would actually run at startup; all the optional preload-type stuff would run later &#8212; or perhaps never at all, if the system never became sufficiently idle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263023">
				<div id="div-comment-263023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263023">
			March 12, 2005 at 2:38 am</a>		</div>

		<p>Ashod:<br />
<br />&quot;In the days of Office 6, Fast.exe and iexplorer (Win98) had not only exhausted most of the system&#8217;s valuable resources (VM, RAM, GDI objects&#8230;) at startup, but made other (much more decent) software look sluggish and bulky&quot;</p>
<p>Fast.edxe might be taking up space, but IE wasn&#8217;t &quot;exhaust[ing] most of the system&#8217;s valuable resources&quot;.</p>
<p>Boy. You really need to learn how virtual memory and DLLs work. And IE didn&#8217;t utilize GDI handles when its window wasn&#8217;t open.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263053">
				<div id="div-comment-263053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom West</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263053">
			March 12, 2005 at 3:09 am</a>		</div>

		<blockquote><p>
  Those who argue that &quot;perception is sometimes better than actual performance.&quot; lack the concept of &#8216;shared resources&#8217;!</p>
<p>Being &quot;good&quot; doesn&#8217;t help if users delete your application in favor of an application that is &quot;bad&quot;, yet seems better in their eyes.</p>
<p>The point is that there are scarce resources on a computer and if your application can seize more of them to produce a better experience for the user (within reason, reformatting the hard drive to place your application in an optimal location is out :-)), then users will likely choose your app over your competitors.</p>
<p>&gt; The transfer rate of an ordinary HD is about 2-3 times faster at the beginning compared to the end of the disk.</p>
<p>Is this really true?  If so, I&#8217;m certain there&#8217;s a market for an installer that shifts your application to the best portion of the disk and moves whatever&#8217;s there elsewhere.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263063">
				<div id="div-comment-263063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263063">
			March 12, 2005 at 4:28 am</a>		</div>

		<p>I love how Raymond managed to use the word &quot;holistic&quot; in a rational, technical discussion =)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263103">
				<div id="div-comment-263103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Blekhman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263103">
			March 12, 2005 at 5:45 am</a>		</div>

		<p>Why nobody mentioned delay-load linker feature? It takes the best of two worlds. It doesn’t pollute system’s start up and application starts fast, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263113">
				<div id="div-comment-263113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kalleboo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263113">
			March 12, 2005 at 6:11 am</a>		</div>

		<p>I like the MacOS X approach, where you can have applications open without any windows.</p>
<p>I keep all the apps I use regularly open all the time, and if I want to play a demanding game or something I can exit apps to free up resources, and then re-open them when I&#8217;m done. In fact, right now I have 17 apps open, and I&#8217;m only actually using 4 right now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263123">
				<div id="div-comment-263123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martina</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263123">
			March 12, 2005 at 7:10 am</a>		</div>

		<p>Robert,</p>
<p>if the user is loading the app several times during the day, loading parts of it during system startup doesn&#8217;t matter anymore. This helps only the first time after system startup.</p>
<p>For all further application startups, its files will be in the cache anyway (or not, if the memory has been recycled), with or without the startup trick&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263133">
				<div id="div-comment-263133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263133">
			March 12, 2005 at 8:48 am</a>		</div>

		<p>Ashod&gt;  Those who argue that &quot;perception is sometimes better than actual performance.&quot; lack the concept of &#8216;shared resources&#8217;! </p>
<p>Um, no.  In my current application, we have made many perceptual performance improvements without improving the performance of any component in question.</p>
<p>Take for example some form of preview window or status pane whose contents change based on the users currently selection.  In a previous version of application, every time the control notified us of a change in the selections, we would update this pane.  This made the program seem very sluggish and slow.  To remove this problem, we placed the updating of the status on a short timer.  This means that operations such as down arrow which quickly change the selection over and over again perform very quickly while the user is still displayed updated information once the selection stops changing for some short delay.</p>
<p>That simple change and others like it has made a huge difference in perception from the users.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263143">
				<div id="div-comment-263143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harvey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263143">
			March 12, 2005 at 9:31 am</a>		</div>

		<p>&lt;blockquote&gt;I like the MacOS X approach, where you can have applications open without any windows.&lt;/blockquote&gt;</p>
<p>You mean, minimised?</p>
<p>Anyway I find after loading any program once, it stays in cache unless I purge the cache by loading a game or something that eats all the physical memory. I know that pretty much all the time, Word or Excel or Photoshop will load without having to access the disc, unlesss of course I&#8217;ve just booted the machine.</p>
<p>&lt;blockquote&gt;To remove this problem, we placed the updating of the status on a short timer. This means that operations such as down arrow which quickly change the selection over and over again perform very quickly while the user is still displayed updated information once the selection stops changing for some short delay.&lt;/blockquote&gt;</p>
<p>Delaying the updating of a status indicator makes the program seem faster? Erm&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263153">
				<div id="div-comment-263153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263153">
			March 12, 2005 at 9:49 am</a>		</div>

		<p>Isn&#8217;t most of IE a COM widget anyway (or something)? And isn&#8217;t it used by a lot of applications as well? Thus it makes sense for it to be able to start fast.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263033">
				<div id="div-comment-263033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dashslot.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263033">
			March 12, 2005 at 2:51 am</a>		</div>

		<p>WRT to preloading stuff, in certain circumstances I&#8217;m all in favour of it.  After all, I only turn my PC on once a day but I start apps dozens of times, so if there&#8217;s an additional minute or so cost added to the once off event that shaves 30 seconds off something that I do 10 times a day, I&#8217;ve made a net gain.  </p>
<p>Plus, even if there was no ACTUAL gain there&#8217;s still probably some benefit.  I don&#8217;t know about anyone else, but my morning routine is &quot;turn on PC, wander off to get coffee, have a smoke, chat with a few people, then sit down to actually do something&quot; so it makes no practical difference whether my PC boots in 15 seconds or 15 minutes.  (Sure, if you come in to work, sit down at your desk straight away and wait for your PC to fire up before springing in to action then the extra startup time is going to be irritating, but to be honest if that&#8217;s how you start your day then I find *YOU* irritating and therefore couldn&#8217;t care less about the issue. :)</p>
<p>Finally, hands up who runs defrag regularly on their machines?  Have a guess how often &quot;regular&quot; users run it.  I&#8217;d say &quot;never&quot; is a fairly good estimate.  If they&#8217;d get into the habit of occasionally clearing out temporary files, removing no longer useful System Restore entries, compressing old files and then defragging people may find that the interminable wait for an app to start up all of a sudden becomes not so bad.  (I may be a bit of an extreme case &#8212; I run defrag after EVERY install/uninstall &#8212; but it&#8217;s still worth doing at least once a month (depending on how much grief your machine gets).)</p>
<p>[ Apologies for the rambling. ]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263173">
				<div id="div-comment-263173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/junfeng' rel='external nofollow' class='url'>Junfeng Zhang</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263173">
			March 12, 2005 at 11:43 am</a>		</div>

		<p>My little rant about jsched.exe has an insane amount of web view hit, compared to other articles. That says something. </p>
<p><a target="_new" href="http://blogs.msdn.com/junfeng/archive/2004/02/24/78948.aspx" rel="nofollow">http://blogs.msdn.com/junfeng/archive/2004/02/24/78948.aspx</a></p>
<p>The biggest offender is (In my opinion) Apple QuickTime 6.x. This guy adds itself to HKLM Run registry everytime you run it!!!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263193">
				<div id="div-comment-263193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.1060.org/blogxter/publish/5' rel='external nofollow' class='url'>Steve</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263193">
			March 12, 2005 at 1:53 pm</a>		</div>

		<p>Another reason against preloading stuff is that they preload stuff into memory, assuming they stay there. </p>
<p>But what happens when the OS hibernates? I think the logic is: anything reloadable (mapped files) gets discarded, being pulled in from the filesys on demand. Anything in swap gets flushed to swap for demand load. Anything not swappable gets saved.</p>
<p>Effectively the time to save/load to disk depends not on the amount of phy mem you have, but the amount of phy mem in active use.</p>
<p>Every quickstart app that consumes physical mem -and they all do, it is their nature- is making the hibernate and resume times of laptops worse. So when people look at a powermac then a windows PC and say &quot;why is windows so bad at suspending&quot;, the answer is partially &quot;because of all the quickstart junk&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263203">
				<div id="div-comment-263203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263203">
			March 12, 2005 at 2:37 pm</a>		</div>

		<p>I have read several comments about the improvements you get if you run the application more than once (true).<br />
<br />Also the ones about how important the perception is (I also think it is true).</p>
<p>But here is another point about perception:<br />
<br /> &#8211; OS start time = MS Windows time<br />
<br /> &#8211; App start time = Company X time.</p>
<p>If I do the startup trick, then the perception is &quot;MS Windows is soooo slow! But this application is sooo fast and slick! Cool!&quot;</p>
<p>:-)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263213">
				<div id="div-comment-263213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.evilrob.org/journal' rel='external nofollow' class='url'>Rob Meyer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263213">
			March 12, 2005 at 3:26 pm</a>		</div>

		<p>I like  J. Edward Sanchez&#8217;s idea. It really could be extended to be even more general; sort of a &quot;predictive page-in&quot; approach. Keep a list of frequently used pages/disk areas (might take some tricks to stay persistent from boot-to-boot) and during idle time, bring those pages into memory. They&#8217;d be read only, so they could be discarded quickly if necessary. That way the system would just tune itself to load the user&#8217;s most frequently used applications quicker, rather than having to try and have applications fight over who loads first and suck up all the resources in a non-friendly way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263163">
				<div id="div-comment-263163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263163">
			March 12, 2005 at 9:57 am</a>		</div>

		<p>In many cases, adding application startup code to the system startup actually takes longer.  At system startup, there is tremendous competition for resources.  Trying to do more things in parallel under those circumstances causes more contention.</p>
<p>On the lighter side, at one company we joked about saving a bitmap image of the main window when the user closes the application.  Next time the application is opened, we could blast the image onto the screen, and give the perception that we loaded *very* fast.  At least until the user tried to click on something.</p>
<p>Fast startup is a difficult task for any application of moderate complexity and size. A really good architecture can give you a lot of options for improving startup time.  Alas, many apps don&#8217;t have a good architecture.  So it doesn&#8217;t surprise me that lots of large, &quot;mature&quot; apps try to move their startup.</p>
<p>One of the best things you can do is to set appropriate base addresses for all of your DLLs.  This is a big win for startup, and, if the system is memory constrained, it helps overall performance, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263253">
				<div id="div-comment-263253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263253">
			March 12, 2005 at 9:14 pm</a>		</div>

		<p>I this entry and the resulting comments are funny.  It is just further proof that most of us programmers have a big ego and our programs are an extension of that ego.  Yes, most of us time we strive to produce something useful, but we also often fall into the trap of adding something or &quot;improving&quot; somthing, just to increase our own prestige.</p>
<p>Thanks Raymond.  This entry is more of an exercize in psychology rather than good programming.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263283">
				<div id="div-comment-263283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jackson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263283">
			March 13, 2005 at 8:25 am</a>		</div>

		<p>I agree with Junfeng Zhang. I just HATE QuickTime doing that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263293">
				<div id="div-comment-263293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">o f f t o p i c</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263293">
			March 13, 2005 at 10:29 am</a>		</div>

		<p>if you hate quicktime look at that:<br />
<br /><a target="_new" href="http://www.codecguide.com/" rel="nofollow">http://www.codecguide.com/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263303">
				<div id="div-comment-263303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263303">
			March 13, 2005 at 12:04 pm</a>		</div>

		<hr />
<p>Rob Meyer:<br />
<br />I like J. Edward Sanchez&#8217;s idea. It really could be extended to be even more general; sort of a &quot;predictive page-in&quot; approach.<br />
<br />&#8212;&#8212;-</p>
<p>&#8230; except that&#8217;s what XP does already.</p>
<p>&#8212;&#8212;-<br />
<br />foxyshadis wrote:<br />
<br />Robert, if an app can be split into two to start partly at startup and the rest on load, then it can also be made just as easily to stay resident after the first start. (Photoshop acts this way the last few versions; the first startup is obnoxiously slow, the subsequent ones quite fast.)<br />
<br />&#8212;&#8212;-</p>
<p>That&#8217;s not what Photoshop does. You can see this effect with any app &#8211; IIRC, Windows XP and upwards (maybe 2000 as well &#8211; I&#8217;d have to check) cache DLLs after load, with all of their linking and binding information intact. You only pay the penalty the first time you load an app after booting, at the expense of some disk space. And if you use an app a lot, it&#8217;ll get cached more extensively for load on startup.</p>
<p>MSDN has more info on this.</p>
<p>&#8212;&#8212;-<br />
<br />Provoker wrote:<br />
<br />Also interesting: Because ms do bundle it&#8217;s webbrowser with the os, it is installed before mozilla. The transfer rate of an ordinary HD is about 2-3 times faster at the beginning compared to the end of the disk.<br />
<br />&#8212;&#8212;-</p>
<p>You&#8217;re wrong. If you use Mozilla a lot, next time the disk auto-defrags, it will move the mozilla files to the outside of the disk, along with any other apps that you use a lot, in the order in which it is normally paged into memory.</p>
<p>People &#8211; this information is all available online on MSDN and in other sources. Why do so many myths and misconceptions about this exist? Please &#8211; go and do some research. It&#8217;ll make you a better software engineer if you actually UNDERSTAND the tools you&#8217;re using.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263313">
				<div id="div-comment-263313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jamesatuncw.com/blog' rel='external nofollow' class='url'>James Summerlin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263313">
			March 13, 2005 at 1:37 pm</a>		</div>

		<p>Simon,</p>
<p>After only reading a few comments by you, I find you already to be super cool.</p>
<p>These misconceptions exist for the following reasons:</p>
<p>1.  It&#8217;s fun to make up stuff about MS.  Indeed, people make money off of doing this (think ZDnet).</p>
<p>2.  Bad news travels faster than good news.</p>
<p>3.  If MS says something bad about linux, even if it&#8217;s true, then it is FUD.  If anyone who uses Linux says anything bad about Microsoft even if it&#8217;s a lie, it is the GOSPEL TRUTH.</p>
<p>James</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263353">
				<div id="div-comment-263353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spaces.msn.com/member/andyandyx' rel='external nofollow' class='url'>Andreas H&#195;&#164;ber</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263353">
			March 13, 2005 at 4:24 pm</a>		</div>

		<p>It helps to know the name of the technology: Prefetch. So try this search instead: <a target="_new" href="http://www.google.com/search?q=prefetch+site%3Amsdn.microsoft.com" rel="nofollow">http://www.google.com/search?q=prefetch+site%3Amsdn.microsoft.com</a> </p>
<p>One of the best is Mark Russinovich and David Solomon&#8217;s article about Windows XP Kernel improvements: <a target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/msdnmag/issues/01/12/xpkernel/toc.asp?frame=true" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/msdnmag/issues/01/12/xpkernel/toc.asp?frame=true</a> </p>
<p>Guess there are two camps about MSDN Library: people who find it disorganized and people who find it easy to use. I&#8217;m in the second camp :) I prefer the offline version because of its index.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263373">
				<div id="div-comment-263373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom West</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263373">
			March 13, 2005 at 6:41 pm</a>		</div>

		<p>Thanks!  And you&#8217;re absolutely right.  The biggest problem is knowing the technology exists at all, and what name it has been given&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263343">
				<div id="div-comment-263343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom West</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263343">
			March 13, 2005 at 4:02 pm</a>		</div>

		<p>&gt; this information is all available online on MSDN and in other sources. Why do so many myths and misconceptions about this exist?</p>
<p>There&#8217;s a lot of knowledge in the Library of Congress too, but people just don&#8217;t bother to read it all&#8230;</p>
<p>Come on, there&#8217;s way too much documentation (much of it not particularly well structured) for anyone whose job doesn&#8217;t depend upon it to read.  Even when one knows what one wants to find out, MSDN is nearly impenetrable.  (Much of which is caused by the fact that it needs to serve a massively diverse bunch of people, making it almost unusable for all of them.)  For most of us, the information we&#8217;re talking about here is merely interesting rather than necessary.  We&#8217;re not going to spend the near full-time effort that it would take to be fully conversant with all the information that Microsoft puts out.</p>
<p>Sites like this one that cater to a much smaller niche of interests than MSDN are a godsend.  Most of us are here to learn and disseminate what we believe to be truth.  Sometimes we&#8217;re completely wrong.  More often, we *were* right, but now we&#8217;re wrong.  Big suprise.  If we were all enlightened, this blog would be a waste of Raymond&#8217;s time :-).</p>
<p>&gt; this information is all available online on MSDN and in other sources.</p>
<p>As an occasional Windows programmer, I&#8217;d love to be enlightened.  Let&#8217;s say I want to learn about fast load times and disabuse myself about these myths.  What would I search under?  I just searched under &quot;Faster Application Load Times&quot; on MSDN and found nothing of interest.  Is it really all that easy to become enlightened?  Easy enough that we deserve chastisement for not having already done so?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263393">
				<div id="div-comment-263393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263393">
			March 14, 2005 at 1:00 am</a>		</div>

		<p>I checked all working sets on my computer. I was pleased to see that almost noone (except office) changed their working sets from the 512K/2M default. Though I&#8217;d wager that is only because they haven&#8217;t thought of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263413">
				<div id="div-comment-263413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">noob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263413">
			March 14, 2005 at 4:34 am</a>		</div>

		<p>What&#8217;s a working set?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263433">
				<div id="div-comment-263433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.1bit.com.br' rel='external nofollow' class='url'>Rodrigo Strauss</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263433">
			March 14, 2005 at 5:22 am</a>		</div>

		<p>Real Player? :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263453">
				<div id="div-comment-263453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Moulton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263453">
			March 14, 2005 at 5:54 am</a>		</div>

		<hr />
<p>Simon Cooke wrote:<br />
<br />You&#8217;re wrong. If you use Mozilla a lot, next time the disk auto-defrags, it will move the mozilla files to the outside of the disk, along with any other apps that you use a lot, in the order in which it is normally paged into memory.<br />
<br />&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<p>Simon,</p>
<p>How does defrag determine what applications we use &quot;a lot&quot;?  I hope it doesn&#8217;t use the same algorithm as Add/Remove Programs, which is nowhere near accurate for me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263493">
				<div id="div-comment-263493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason Spiro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263493">
			March 14, 2005 at 7:15 am</a>		</div>

		<hr />
<p>Rob Meyer:<br />
<br />I like J. Edward Sanchez&#8217;s idea. It really could be extended to be even more general; sort of a &quot;predictive page-in&quot; approach. Keep a list of frequently used pages/disk areas (might take some tricks to stay persistent from boot-to-boot) and during idle time, bring those pages into memory. They&#8217;d be read only, so they could be discarded quickly if necessary. That way the system would just tune itself to load the user&#8217;s most frequently used applications quicker<br />
<br />&#8212;&#8212;-</p>
<p>&#8212;&#8212;-<br />
<br />Simon Cooke:<br />
<br />except that&#8217;s what XP does already.<br />
<br />&#8212;&#8212;-</p>
<p>Simon, do you mean that XP prefetches all of a user&#8217;s favorite apps, not just those in the Startup group and the Run registry keys? The msdnmag article referenced above doesn&#8217;t mention this under &#8216;Prefetch&#8217;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263603">
				<div id="div-comment-263603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263603">
			March 14, 2005 at 8:53 am</a>		</div>

		<p>David Candy: How did working set get mixed in here? At any rate, programs don&#8217;t &quot;set&quot; their working set; the OS computes their working set based on their memory usage pattern. There is no &quot;default&quot; working set. A small program will have a low working set; a big one will have a large working set.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263733">
				<div id="div-comment-263733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/junfeng' rel='external nofollow' class='url'>Junfeng Zhang</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263733">
			March 14, 2005 at 10:34 am</a>		</div>

		<p>@Jason Spiro</p>
<p>Yes, check your %windir%/prefetch directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263773">
				<div id="div-comment-263773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.panopticoncentral.net/archive/2005/03/14/7970.aspx' rel='external nofollow' class='url'>Panopticon Central</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263773">
			March 14, 2005 at 1:09 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263843">
				<div id="div-comment-263843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://trikuare.cx/' rel='external nofollow' class='url'>fluffy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263843">
			March 14, 2005 at 2:17 pm</a>		</div>

		<p>I like how OSX handles this &#8211; it does all the DLL prebinding stuff when the library is first installed, and saves it into a cache which can just be quickly read into memory on an as-needed basis.  Of course that doesn&#8217;t help with app data which needs loading, but at least there&#8217;s no need for apps to prefetch DLLs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-263873">
				<div id="div-comment-263873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason Spiro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263873">
			March 14, 2005 at 3:50 pm</a>		</div>

		<p>I actually meant to ask:</p>
<p>Simon, do you mean XP preloads my favorite apps&#8217; executable code into free RAM when my PC is idle (in cases where those apps aren&#8217;t running)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-263683">
				<div id="div-comment-263683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.honestillusion.com' rel='external nofollow' class='url'>James Curran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-263683">
			March 14, 2005 at 10:02 am</a>		</div>

		<p>&gt;&gt; I hope you wrote it tongue in cheek as well. </p>
<p>Dan,<br />
<br />   I don&#8217;t think it was tongue in cheek as much as Raymond&#8217;s just being polite.  Remember, Raymond works for Microsoft&#8217;s SYSTEMS division, while the worst offenders are in Microsoft&#8217;s APPLICATIONS division.</p>
<p>So, in effect, He&#8217;s saying &quot;Those jerks over in Office are too lazy to speed up their own applications, so they leverage all the work *I* did speeding up initial boot-up.  They&#8217;re making me look bad, to make themselve look good&#8230;.&quot;</p>
<p>But, as I said, Raymond&#8217;s too polite to say that&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-264033">
				<div id="div-comment-264033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wind.codepixel.com' rel='external nofollow' class='url'>Antonio Vargas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-264033">
			March 15, 2005 at 6:09 am</a>		</div>

		<p>Fluffy, OSX 10.3 (the currently available one) does two things directly related to disk optimisation:</p>
<p>1. Files smaller than 20Meg are automatically defragged if and when they are used and not already defragged.</p>
<p>2. There is a background filesystem analyzer that reserves the first 5% of the disk for frequently used files, as seen from the kernel. So, if you keep on rebooting a lot, the system will automatically move the booting-neeeded  files to the fastest part of the disk, and if you keep your compueter compiling and compiling then it will automatically place all your sources and libs at the start of the disk. &quot;It just works&quot; is true this time ;)</p>
<p>All truth said, I was very surprised upon seeing WinXP booting to a desktop in less than a minute. Very nice job on that :)))<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-264043">
				<div id="div-comment-264043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-264043">
			March 15, 2005 at 6:10 am</a>		</div>

		<p>Why mention it. Because it is a way that applications can boost their own performance at the expense of system as a whole.</p>
<p>From PSDK (and there are lots of pages with this warning)</p>
<p>The system sets the default working set sizes. You can also modify the working set sizes using the SetProcessWorkingSetSize function. Setting these values is not a guarantee that the memory will be reserved or resident. Be careful about requesting too large a minimum or maximum working set size, because doing so can degrade system performance. </p>
<p>I presume it was in the PE header. It&#8217;s the MS compiler that sets 512K/2M standard, maybe it&#8217;s a C runtime library init. But I read the other week the MS compiler&#8217;s default is 512/2M (but can&#8217;t find it). And I have no idea about any non MS program.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-264073">
				<div id="div-comment-264073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-264073">
			March 15, 2005 at 7:27 am</a>		</div>

		<p>I understand that that the vmm steals a page from the process working set regulary to see if it really needed it.</p>
<p>But MS compiled apps will default to 512/2M initial unless changed.</p>
<p>I don&#8217;t claim any knowledge about machine VMM. After all CSRSS gets preference, foreground apps get preference, minimised apps get un preferenced.</p>
<p>But all this stuff is unimportant. What is important is to live. As you may not know, I failed to save a life two saturdays ago. A lifetime of training and it didn&#8217;t work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-264123">
				<div id="div-comment-264123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott Kurtzeborn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-264123">
			March 15, 2005 at 9:36 am</a>		</div>

		<p>If anyone&#8217;s installed Adobe&#8217;s Acrobat Reader 7.0 they can see this philosophy in action.  I recently installed it and now AcroRd32.exe is a permanent fixture in my task list.</p>
<p>As pointed out in other comments, perhaps this isn&#8217;t a bad thing *if* you use Acrobat Reader regularly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-264483">
				<div id="div-comment-264483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.schriner.net/serendipity' rel='external nofollow' class='url'>Patrick Schriner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-264483">
			March 16, 2005 at 1:59 am</a>		</div>

		<p>I remove allmost every app from startup.</p>
<p>But wouldn&#180;t it be practical to start runtimes in advance? If you had a dozen programs that need the .NET runtime (or the Java RE), wouldn&#180;t loading the runtime in advance correspond to faster startup for several applications?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-265643">
				<div id="div-comment-265643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A kid</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-265643">
			March 19, 2005 at 2:48 am</a>		</div>

		<p>I used Windows XP Professional on 64MB of Memory. I just upgraded my computer from 64MB to 192MB. The performance Tab of Task Manager now shows that there is 100MB free. I don&#8217;t like any background running programs such as Anti Virus Software. Zonealarm is good enough for mee. I don&#8217;t even use Themes and in Services 3/4 of the services are switched off.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-265723">
				<div id="div-comment-265723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/Aaron_Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-265723">
			March 20, 2005 at 10:35 pm</a>		</div>

		<p>I needed to install QuickTime on the family computer to support an education app.  Rather than install the QT version that came with the app, I downloaded/installed the current version (6.5.2).  EVEN WORSE than just adding a regular auto-start entry, they now install a Windows SERVICE that runs as LocalSystem, set to Automatic start!  AND EVEN WORSE THAN THAT, it&#8217;s to support hardware I do not own nor have plans to own &#8211; &quot;iPod Service&quot;, description:  &quot;iPod hardware management services&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-514473">
				<div id="div-comment-514473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dotnet.org.za/hannes/archive/2007/06/12/splitting-up-the-work.aspx' rel='external nofollow' class='url'>Hannes's Mind Maze</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-514473">
			June 12, 2007 at 7:42 am</a>		</div>

		<p>I like reading Joel’s blog on software and in his latest post he talks about Apple Safari for Windows</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-514483">
				<div id="div-comment-514483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://stephensite.net/WordPressSS/?p=262' rel='external nofollow' class='url'>Stephen&#8217;s Personal Blog &raquo; Blog Archive &raquo; Why is my computer slow?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-514483">
			June 12, 2007 at 9:25 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://stephensite.net/WordPressSS/?p=262" rel="nofollow">http://stephensite.net/WordPressSS/?p=262</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-515003">
				<div id="div-comment-515003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://countme.wordpress.com/2007/06/13/faking-the-performance/' rel='external nofollow' class='url'>Faking the performance &laquo; As I Learn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050311-00/?p=36223#comment-515003">
			June 12, 2007 at 9:14 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://countme.wordpress.com/2007/06/13/faking-the-performance/" rel="nofollow">http://countme.wordpress.com/2007/06/13/faking-the-performance/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

