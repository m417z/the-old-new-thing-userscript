<html>
<head>
<title>Thinking inside the box</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Thinking inside the box</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 19, 2009 / year-entry #332</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>32</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Nick asks whether any though has been given to running applications in a sandbox where they are given access only to their installation directory, My Documents, and a handful of other directories and registry keys. "I feel that this would seriously prevent viruses/spyware from being as effective, and apps would not be able to...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter Nick asks <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#670828"> whether any though has been given to running applications in a sandbox</a> where they are given access only to their installation directory, My Documents, and a handful of other directories and registry keys. "I feel that this would seriously prevent viruses/spyware from being as effective, and apps would not be able to dump files all over the users' HD."</p>
<p> Yes, a lot of thought has been given to sandboxing (most of which I am not at liberty to discuss) but the compatibility consequences have been a constant source of trepidation. </p>
<p> For example, if you restrict the application just to My Documents and other selected folders, then double-clicking a file from some other location (not on the list of "allowed" locations) would result in a strange "File not found" (or maybe "Access denied")  error message when the application tried to open a file that it didn't have access to. Redirecting file system operations has its own problems, such as applications saying that they successfully saved the file, but when you go to look in Explorer, it's not there! </p>
<p> To add to the complexity, the Common Criteria (the modern version of what was formerly known as C2 security) have their own rules about what behavior is permissible. For example, it is my understanding that the Common Criteria require that when access is denied to a location, the error that is returned must be "access denied"; you are not allowed to lie to an application and say "Um... yeah... I got your location right here..." </p>
<p> Tracking an application's shortcuts and registry entries is complicated by the fact that the application is hardly the only entity that accesses those shortcuts and registry entries. If some other application moves the shortcut to a new location or copies it, does that get added to the tracking list? If so, which tracking list? (The one for the application that created the original shortcut or the application that copied it?) Many settings are system-wide. If an application changes a system setting, and then you uninstall the application, do you restore the system setting to the value it had before the application was installed? If you say yes, then what if you had five applications all of which were changing the same system setting, and you uninstall the third one, what do you "restore" the setting to? </p>
<p> Windows Vista introduces a limited sort of "sandboxing" as part of a compatibility shim for applications which write to administrative locations in the file system or registry for no good reason. Those writes are redirected to a "pretend" directory or registry key, and the application (hopefully) doesn't know any better. That's about the extent of my knowledge of this Windows Vista feature; if you want to read more about it, you can probably hunt around MSDN. Try the phrase <i>file system redirection</i>. (This will probably also turn up features related to 32-bit emulation, so you'll have to do some more filtering.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (32)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-778793">
				<div id="div-comment-778793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Mills</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778793">
			October 19, 2009 at 8:13 am</a>		</div>

		<p>What&#8217;s in the box?</p>
<p>Sorry, I couldn&#8217;t resist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-778813">
				<div id="div-comment-778813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778813">
			October 19, 2009 at 8:42 am</a>		</div>

		<p>One way to circumvent these issues is to turn around and provide a sandboxing infrastructure and management but not any built-in sandboxing. Maybe only a few examples.</p>
<p>Obviously, this is a IT-level feature, not a home-user feature, although one could see spring-up an after-market of pre-built sandboxes. VM are a type of such sand-boxing, but their approach is heavy handed and hard to use even once completely configured.</p>
<p>Linux could be said to have something like this with SELinux, and we&#8217;ve seen how much it&#8217;s being used and customized by end-users&#8230; (answer: it&#8217; too arcane to be used by mere mortals.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-778833">
				<div id="div-comment-778833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778833">
			October 19, 2009 at 8:53 am</a>		</div>

		<p>You will be greeted with howls of &quot;Why can&#8217;t I just..&quot; and &quot;All I want to do is&#8230;.&quot;, and &quot;When I do this it works, but when I do this it doesn&#8217;t&quot;.</p>
<p>So user&#8217;s have rights, should applications? Well we&#8217;ve given them to corporations so why not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-778843">
				<div id="div-comment-778843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R. Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778843">
			October 19, 2009 at 9:01 am</a>		</div>

		<p>To some extent, 32-bit applications are sandboxed by WOW64 on a 64-bit system. &nbsp;Where the real fun begins is that it does the registry different depending on whether you&#8217;re on Windows Vista or Windows 7.</p>
<p>For example the MSDN article on Registry Redirection is flat out wrong for Windows 7.</p>
<p>Said article: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/aa384232" rel="nofollow">http://msdn.microsoft.com/en-us/library/aa384232</a>(VS.85).aspx</p>
<p>Why? &nbsp;Windows 7 removes Registry Redirection: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/dd464643" rel="nofollow">http://msdn.microsoft.com/en-us/library/dd464643</a>(VS.85).aspx</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-778853">
				<div id="div-comment-778853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sunil Joshi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778853">
			October 19, 2009 at 9:07 am</a>		</div>

		<p>@ R. Bemrose</p>
<p>[For example the MSDN article on Registry Redirection is flat out wrong for Windows 7.]</p>
<p>Read the article more closely. (Hint search for Windows 7).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-778863">
				<div id="div-comment-778863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.koroirc.com/' rel='external nofollow' class='url'>Koro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778863">
			October 19, 2009 at 9:18 am</a>		</div>

		<p>Windows Vista and 7 have Integrity Levels. It works quite nicely, and the fact that you have to manually set them with a command-line tools means you&#8217;ll know where to look if something goes wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-778883">
				<div id="div-comment-778883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.timestreamtech.com/' rel='external nofollow' class='url'>Michael Dwyer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778883">
			October 19, 2009 at 9:39 am</a>		</div>

		<p>&quot;the compatibility consequences have been a constant source of trepidation&quot;</p>
<p>Vista won&#8217;t allow you to save things in the Program Files directory anymore, but instead of denying the write it silently redirects your files off to some other hidden directory. &nbsp;For almost everything this just works, and you don&#8217;t need to know about it.</p>
<p>However, one of my apps saved its output to the working directory by default unless you tell it otherwise. &nbsp;I had a moment of sheer panic when I went to go look for all my output and it had EVAPORATED!! &nbsp;Once I found the &#8216;compatibility view&#8217; button, it was all clear to me.</p>
<p>I understand why they did it. &nbsp;I of course wish they&#8217;d done it differently, but I can&#8217;t honestly say I can think of a better way to do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-778893">
				<div id="div-comment-778893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778893">
			October 19, 2009 at 9:40 am</a>		</div>

		<p>@R.Bemrose,</p>
<p>You&#8217;re confusing WoW64 registry redirection (described in that article) and per-user registry and filesystem redirection (redirection of writes to protected system locations), which is what Raymond mentions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-778903">
				<div id="div-comment-778903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778903">
			October 19, 2009 at 10:24 am</a>		</div>

		<p>Windows already has this feature. &nbsp;Its called &quot;not running as Administrator&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-778923">
				<div id="div-comment-778923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778923">
			October 19, 2009 at 10:43 am</a>		</div>

		<p>While something along these lines would be great, implementation surely would be difficult.</p>
<p>First, reduce the problem (and therefore the diversity of cases which contribute to complexity of the solution) by getting rid of &quot;must be running as admin to install anything at all&quot;. &nbsp;Automatically considering installers &quot;RunAsAdmin&quot; was probably the worst mistake MS made with Vista, it did more than anything else to give UAC a bad reputation. &nbsp;There&#8217;s no reason that some little currency conversion widget should need admin rights to install. &nbsp;Same is true for every game in existence. &nbsp;If corporations want to restrict what programs can be run another means should have been chosen.</p>
<p>Now that we&#8217;ve got all programs except antivirus running within the confines of the restricted user, we can think about protecting the user&#8217;s precious data from them (protection against apps installed as admin is hopeless). &nbsp;One way to do this would to make user accounts hierarchical (note that I&#8217;m not talking about groups). &nbsp;Let each user define any number of subaccounts, each of which can be granted access up to the level which the user master account has. &nbsp;And let the user master account call CreateProcessAsUser into any subaccount. &nbsp;Some sort of sticky bit capability would be helpful too, along with rights inheritance (e-mail program normally has no access to &quot;My Documents&quot;, but if I invoke it using an editors&#8217;s Save to Mail Recipient feature then it can inherit the access of the editor). &nbsp;Yeah, it would be complicated. &nbsp;And some users would never bother. &nbsp;But many would consider it worthwhile, as long as the effort to set it up is less than the effort to recover from identity theft.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-778943">
				<div id="div-comment-778943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778943">
			October 19, 2009 at 11:04 am</a>		</div>

		<p>An idea that occurred to me to make such sandboxing work with apps that can open and save files anywhere is to try and be tricky about it.</p>
<p>Specifically, most apps that open and save files use the common dialogs to do so. &nbsp;Any file the user specifically selects in such a dialog could be added to the sandbox.</p>
<p>Of course there are plenty of problems with this seemingly simple solution:</p>
<ul>
<li>An application could script itself to open the dialog, then set the text of the location text box to any file it wants, and click simulate clicking the open button to give itself access to any file it wants. &nbsp;Ew. &nbsp;Workaround would be to give the dialogs same treatment as UAC (THAT will go over well). Ew Ew. &nbsp;And that would break dialogs which are extended with controls and code from the app anyway (since you can&#8217;t have this sandboxed code/controls working with the elevated dialog).</li>
<li>
<p>Some applications use file open dialogs to select directories instead of the more appropriate folder selection dialog. &nbsp;Thus the permissions are granted on a particular file instead of the parent folder, which is what the app needs. &nbsp;Other apps probably do even stranger things with the dialogs that wouldn&#8217;t work with the sandbox.</p>
</li>
<li>
<p>And if you extend it to the folder selection dialog, what folder(s) do you add to the sandbox permissions? &nbsp;Do you add subfolders? &nbsp;What if the user selects a drive root?</p>
</li>
</ul>
<p>Personally I think a more compatible alternative to sandboxing would be using a virtual machine. &nbsp;Windows XP Mode, though I haven&#8217;t tried it yet (processor doesn&#8217;t support HW accel), looks like it&#8217;s got good desktop integration. &nbsp;Only problem again is how to properly share documents between the VM and the host (I&#8217;m sure Windows XP Mode does SOMETHING for that but then again it&#8217;s not meant to act as a security barrier so it probably shares the whole host drive with the VM or something?).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-778963">
				<div id="div-comment-778963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mike jones</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-778963">
			October 19, 2009 at 11:20 am</a>		</div>

		<p>Here&#8217;s the Unix way:</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Chroot" rel="nofollow">http://en.wikipedia.org/wiki/Chroot</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779013">
				<div id="div-comment-779013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779013">
			October 19, 2009 at 12:34 pm</a>		</div>

		<p>There is sandboxie, but it looks a bit complicated. &nbsp;It also doesn&#8217;t work on 64 bit windows because of increased kernel security.</p>
<p><a rel="nofollow" target="_new" href="http://www.sandboxie.com/" rel="nofollow">http://www.sandboxie.com/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779033">
				<div id="div-comment-779033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779033">
			October 19, 2009 at 2:22 pm</a>		</div>

		<p>@Ben: You&#8217;re kidding us, right? &nbsp;User account hierarchy? &nbsp;Rights inheritance? &nbsp;&quot;Sticky bit!?&quot; &nbsp;Sorry, but this idea of yours sounds like a classic case of solving a problem nobody has with a solution nobody wants based on 30 seconds of &quot;wouldn&#8217;t it be nice if&#8230;&quot; musing.</p>
<p>UAC already does what I want, it prevents non-system programs from doing things that could mess up my system without at least warning me first. &nbsp;I really could not care less if my word processor technically has access to my music folder.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779053">
				<div id="div-comment-779053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779053">
			October 19, 2009 at 3:01 pm</a>		</div>

		<p>@Aaron G: You&#8217;d probably care if it replaced the ID tags to something else.</p>
<p>A sandbox is on the wishlist because of trust. It&#8217;s hard to trust that the application is going to do the right thing. As computers have gotten more powerful, there&#8217;s a lot of damage that can be quickly done out of malice or incompetence. It seems like, with UAC and even on a lower level with APIs, the trend has been moving away from trusting apps to do the right thing to acknowledging that sometimes they do the wrong thing.</p>
<p>A lot of users simply don&#8217;t have the information network of peers to tell them that one application that does a particular thing does it more respectfully than another application that&#8217;s supposed to do the same thing. I still remember wincing when checking out what&#8217;s wrong with friends&#8217; computers to find that RealPlayer was associated with all their media and completely trashing the system with startup agents and registry garbage.</p>
<p>Yeah, sandboxing is hard, but, I personally think it&#8217;s a worthwhile endeavor. If the abstractions are too leaky, maybe we just need some new abstractions to adjust to the shift. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779073">
				<div id="div-comment-779073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779073">
			October 19, 2009 at 4:23 pm</a>		</div>

		<p>Dan, I&#8217;ve been thinking along the same lines, but I&#8217;m not as pessimistic.</p>
<p>Eric, that doesn&#8217;t help a single bit against the only problem that an operating system reinstall won&#8217;t fix: damaged user documents. Given the current state of technology it should be possible to safely run any arbitrary piece of software that runs in user mode. But we can&#8217;t because we&#8217;re afraid of losing data and settings.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779113">
				<div id="div-comment-779113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.tapuchim.com' rel='external nofollow' class='url'>configurator</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779113">
			October 19, 2009 at 6:40 pm</a>		</div>

		<p>I initially thought &quot;Commenter Nick&quot; was Commander Keen&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779133">
				<div id="div-comment-779133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779133">
			October 19, 2009 at 10:34 pm</a>		</div>

		<p>Wel, one way is to take advantage of the gobs of RAM and disk space, and virtualize. I run untrusted apps in a VM, the rollback the disk when I&#8217;m done.</p>
<p>The problem with sandboxing can be best illustrated with a program most of us use &#8211; the humble compiler. Who has to read and write files all oover the place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779143">
				<div id="div-comment-779143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Grant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779143">
			October 19, 2009 at 10:57 pm</a>		</div>

		<p>&quot;Linux could be said to have something like this with SELinux, and we&#8217;ve seen how much it&#8217;s being used and customized by end-users&#8230; (answer: it&#8217; too arcane to be used by mere mortals.)&quot;</p>
<p>While I agree that SELinux is too arcane to be configured by mere mortals, it generally doesn&#8217;t need to be: I run SELinux on my CentOS box and it generally just works because some &#8216;super-human&#8217; has generated a policy to cover most programs which are accessible from the Internet. And that requirement for centralised configuration isn&#8217;t to surprising as SELinux is designed to protect the computer from malicious users at least as much as it is to protect a user from malicious software.</p>
<p>However, there&#8217;s also AppArmor, which is much easier to configure, with a simple text file specifying what access a program should have; it&#8217;s not as secure as SELinux (specifically, permissions are tied to the application path, not the inodes), but it does a decent job at protecting the user from malicious applications.</p>
<p>Quite frankly, the lack of such control on Windows is one of the main reasons why I try to avoid using it anymore. I no longer trust random software not to interfere with my system even if it&#8217;s not officially classed as malware, particularly when I might later use the same system for ordering online by credit card or accessing online bank accounts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779153">
				<div id="div-comment-779153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779153">
			October 20, 2009 at 12:31 am</a>		</div>

		<blockquote><p>
  &gt; I no longer trust random software not to interfere with my system
</p></blockquote>
<p>I prefer not to install crap on my machine in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779083">
				<div id="div-comment-779083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff Tyrrill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779083">
			October 19, 2009 at 5:36 pm</a>		</div>

		<p>@Eric Wilson:</p>
<p>&quot;Windows already has this feature. &nbsp;Its called &quot;not running as Administrator&quot;.&quot;</p>
<p>Not quite. Not running as Administrator sandboxes *users*. Sandboxing *applications* is a separate challenge. Such a feature would provide applications with far less than the user&#8217;s full privileges.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779243">
				<div id="div-comment-779243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779243">
			October 20, 2009 at 8:32 am</a>		</div>

		<p>@Mark Grant,</p>
<p>&quot;(specifically, permissions are tied to the application path, not the inodes), but it does a decent job at protecting the user from malicious applications.&quot;</p>
<p>Except from those applications that create links for themselves in trusted locations. You&#8217;re lucky nobody bothers exploiting those camel-sized holes. For Windows, hackers are too quick to exploit even needle-eye sized holes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779353">
				<div id="div-comment-779353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779353">
			October 20, 2009 at 10:14 am</a>		</div>

		<p>The SELinux people are trying, with a new thing called &quot;sandbox -X&quot;: <a rel="nofollow" target="_new" href="http://danwalsh.livejournal.com/31146.html" rel="nofollow">http://danwalsh.livejournal.com/31146.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779373">
				<div id="div-comment-779373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779373">
			October 20, 2009 at 10:22 am</a>		</div>

		<p>Mark Grant:</p>
<blockquote><p>
  particularly when I might later use the same system for ordering online by credit card or accessing online bank accounts.
</p></blockquote>
<p>I use open and free software, but I claim you are not automatically more protected by using it. Look for how long nobody from developers noticed that encryption libraries in Debian (and autmoatically all distributions downstream) were seriously broken, so much that every server with public SSH with keys created in that period was de facto &quot;open for everybody who would try&quot; during almost two years. Most SSL certificates created on such systems were dangerous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779423">
				<div id="div-comment-779423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779423">
			October 20, 2009 at 11:00 am</a>		</div>

		<p>@Dan: &quot;Some applications use file open dialogs to select directories instead of the more appropriate folder selection dialog.&quot;</p>
<p>To be fair, if you&#8217;re thinking of the same dialog I am, the folder selection dialog is one of the crappiest pieces of UI that commonly shows up in Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779553">
				<div id="div-comment-779553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779553">
			October 20, 2009 at 10:42 pm</a>		</div>

		<p>Unfortunately, you might not install crap, but your favorite trusted program might. Malware authors often buy advertising space on the big ad networks &#8211; and use vulnerabilities in IE to actually install their app. So that nice piece of ad-supported software might inadvertently install something. Even the big guys aren&#8217;t immune &#8211; those big trusted site may also host malware ads inadvertently.</p>
<p>As for the Debian SSL issue, the keys weren&#8217;t bad, but they were significantly weaker and more guessable than they ought to be. It&#8217;s a concern, but not &quot;all your SSL was in the clear&quot;. (Of course, the most dangerous person is someone who dabbles in crypto software without understanding it fully &#8211; a lot of oddities exist in crypto code because they work around key attacks and the like.)</p>
<p>And let&#8217;s not forget an attack on CryptoAPI that lets people make fake Paypal certs (and all the browsers that use it)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779583">
				<div id="div-comment-779583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779583">
			October 21, 2009 at 1:28 am</a>		</div>

		<p>The redirection isn&#8217;t as much of a pain for users as the &quot;Compatibility files&quot; button UI experience is. There should be a saved search for locating all &quot;compatibility files&quot; on a volume.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779683">
				<div id="div-comment-779683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John C. Kirk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779683">
			October 21, 2009 at 8:46 am</a>		</div>

		<p>I know this isn&#8217;t a .NET blog, but the .NET framework supports &quot;Code Access Security&quot; which is a form of sandboxing. I&#8217;m still trying to figure out how it all works, but I think it should be possible to say things like &quot;My calculator can&#8217;t access the internet or modify any of my mp3 files&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779693">
				<div id="div-comment-779693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779693">
			October 21, 2009 at 9:15 am</a>		</div>

		<p>Windows already has this feature. Choose &quot;Run As&#8230;&quot; and run as yourself but tick the checkbox marked &quot;Protect me from viruses&quot; (or whatever, I haven&#8217;t got a Windows box handy right now). The application will be prevented from writing just about everywhere, to stop it from dropping a Trojan on you.</p>
<p>Of course, most applications just won&#8217;t work under such circumstances and, since MS have enough trouble persuading application authors not to require admin privileges, I really don&#8217;t think there&#8217;s much chance of persuading most authors to work in a sandbox.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779723">
				<div id="div-comment-779723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779723">
			October 21, 2009 at 9:31 am</a>		</div>

		<blockquote><p>
  &gt; My calculator can&#8217;t access the internet or modify any of my mp3 files
</p></blockquote>
<p>I would be rather worried if my calculator had to use google to look up the result of a calculation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-779763">
				<div id="div-comment-779763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779763">
			October 21, 2009 at 12:39 pm</a>		</div>

		<p>&lt;quote&gt;I really could not care less if my word processor technically has access to my music folder.&lt;/quote&gt;</p>
<p>So run your word processor under your full user account, no need for any special trouble for it.</p>
<p>But what about that stupid flash advertisement on MSN homepage trying to sell you car insurance? &nbsp;It&#8217;s running code on your machine, as your user account. &nbsp;Do you really trust Adobe to not perform any malicious tasks requested by that flash file? &nbsp;(If so, go have a look at security holes in recent versions of Flash and Shockwave and rethink your answer. &nbsp;If your answer is still yes, please disconnect your zombie-infested computer right now.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-779853">
				<div id="div-comment-779853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">selinux = uac = suxxor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091019-00/?p=16333#comment-779853">
			October 21, 2009 at 7:14 pm</a>		</div>

		<p>SELinux is as useful as UAC. The first thing you turn OFF.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

