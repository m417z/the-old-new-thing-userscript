<html>
<head>
<title>Other problems traced to violating COM single-threaded apartment rules in the shell</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Other problems traced to violating COM single-threaded apartment rules in the shell</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 19, 2007 / year-entry #383</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>45</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Probably the biggest category of problems that can be traced to violating COM single-threaded apartment rules in the shell is using an object from the wrong thread. Of course, nobody admits to doing this up front, They just report that the shell is broken. We can't enumerate the items on the desktop any more. We...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Probably the biggest category of problems that can be traced to
violating COM single-threaded apartment rules in the shell is
using an object from the wrong thread.
Of course, nobody admits to doing this up front,
They just report that the shell is broken.
</p>
<blockquote CLASS=q><p>
We can't enumerate the items on the desktop any more.
We take the pointer returned by <code>SHGetDesktopFolder</code>
and call <code>IShellFolder::EnumObjects</code>, but no objects
come out.
This code used to work on Windows&nbsp;XP.
</p>
</blockquote>
<p>
There isn't enough information to diagnose the problem,
and if you just do what they claim doesn't work,
you find that it works:
</p>
<pre>
#include &lt;windows.h&gt;
#include &lt;ole2.h&gt;
#include &lt;shlobj.h&gt;
#include &lt;shlwapi.h&gt;
#include &lt;stdio.h&gt;
#include &lt;tchar.h&gt;

INT __cdecl
_tmain(
    INT iArgc,
    __in_ecount(iArgc) PTSTR ppszArgv[]
    )
{
 if (SUCCEEDED(CoInitialize(NULL))) {
  IShellFolder *psf;
  if (SUCCEEDED(SHGetDesktopFolder(&amp;psf))) {
   IEnumIDList *peidl;
   if (SUCCEEDED(psf-&gt;EnumObjects(NULL, SHCONTF_FOLDERS |
                         SHCONTF_NONFOLDERS, &amp;peidl)) &amp;&amp; peidl) {
    LPITEMIDLIST pidl;
    while (peidl-&gt;Next(1, &amp;pidl, NULL) == S_OK) {
     STRRET str;
     if (SUCCEEDED(psf-&gt;GetDisplayNameOf(pidl,
                                         SHGDN_NORMAL, &amp;str))) {
      TCHAR sz[MAX_PATH];
      if (SUCCEEDED(StrRetToBuf(&amp;str, pidl, sz, MAX_PATH))) {
       _tprintf(TEXT("%s\n"), sz);
      }
     }
     ILFree(pidl);
    }
   }
   psf-&gt;Release();
  }
  CoUninitialize();
 }
 return 0;
}
</pre>
<p>
When given this simple program that does what they claim doesn't work,
the customer explained that they cache the desktop folder.
It works for a while, and then stops working.
The code is complicated, so they haven't been able to isolate the problem yet.
They did find that if they didn't cache the pointer
and just called <code>SHGetDesktopFolder</code> each time they needed it,
then they didn't have the problem.
</p>
<p>
I never got a confirmation,
but I'm pretty sure that they are violating COM apartment threading
model rules and obtaining the desktop folder obtained on one thread,
then using it on another.
Apartment model rules specify that you must use an object on the same
thread that created it.
If you want to use it on another thread,
you have to use a helper function like
<code>CoMarshalInterThreadInterfaceInStream</code>.
If you just dive in and use it on another thread
(known informally as
"<a HREF="http://blogs.msdn.com/tonyschr/archive/2006/12/11/interface-smuggling.aspx"
>smuggling</a>"),
then all sorts of strange things happen.
In this case, the folder can't enumerate objects any more.
</p>
<p>
Moral of the story:
Stick to the rules for COM objects.
If you don't, you may get away with it for a little while,
but someday your sins may catch up to you.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (45)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-561133">
				<div id="div-comment-561133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561133">
			October 19, 2007 at 10:38 am</a>		</div>

		<p>I just love it when such a simple COM example needs 6 levels of indentation :)</p>
<div class="post">[<i>A flat API would have the same amount of indentation. It&#8217;s the error checking that causes the indentation, not COM. But you knew that; you&#8217;re just being snide. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561143">
				<div id="div-comment-561143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561143">
			October 19, 2007 at 11:06 am</a>		</div>

		<p>&gt; It&#8217;s the error checking that causes the indentation, not COM.</p>
<p>The question is whether all these opportunities for failure are really necessary. For example, StrRetToBuf can probably be designed in a way that it will not fail if it is passed a valid result from a successful call to GetDisplayNameOf. In that case, the code could become simpler and there would be no need to include a code path that is probably never tested anyway.</p>
<div class="post">[<i>Is there a way to guarantee that WideCharToMultiByte will never fail? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561203">
				<div id="div-comment-561203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chad</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561203">
			October 19, 2007 at 12:17 pm</a>		</div>

		<p>Complaining about indentation? &nbsp;Sheesh. &nbsp;Have you ever heard of guard clauses?</p>
<p><a rel="nofollow" target="_new" href="http://c2.com/cgi/wiki?GuardClause" rel="nofollow">http://c2.com/cgi/wiki?GuardClause</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561213">
				<div id="div-comment-561213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561213">
			October 19, 2007 at 12:35 pm</a>		</div>

		<p>If more people actually went through the trouble of checking return values like that then the world would be a better place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561233">
				<div id="div-comment-561233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henrik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561233">
			October 19, 2007 at 1:16 pm</a>		</div>

		<p>Poor Raymond,</p>
<p>if he excludes error checking people complain,</p>
<p>if he includes error checking people complain.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561243">
				<div id="div-comment-561243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561243">
			October 19, 2007 at 1:56 pm</a>		</div>

		<p>If only Microsoft could publish the source code of the COM runtime, maybe people would finally understand how it works.</p>
<div class=post>[<i>Here it is: &#8220;&#8221;. When you create an in-apartment object, there is no COM runtime involved. You&#8217;re talking directly to the object. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561263">
				<div id="div-comment-561263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561263">
			October 19, 2007 at 2:48 pm</a>		</div>

		<p>If you want to understand something complex, documentation is usually better than source code. Having the source is a bonus when you need to resolve an ambiguity in the documentation but having better documentation is preferable, I think.</p>
<p>There is a lot of documentation on COM. The problem is that people aren&#8217;t always reading/finding/understanding/remembering it. I don&#8217;t know which of those four things is most to blame but I don&#8217;t think any of them would be solved by having the source code behind COM unless the comments in the code are better than what you&#8217;d find in a book (I doubt that).</p>
<p>Having said that, I have yet to read a good explanation of COM threading and apartments. They seem to be something that is very difficult to explain, even for experts in the field. (I think Don Box said something like that himself but I may have a faulty memory.) Maybe I just never found the right article or book, though. (I think I understand them now but it&#8217;s the result of piecing together a lot of different articles.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561283">
				<div id="div-comment-561283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Loughran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561283">
			October 19, 2007 at 3:44 pm</a>		</div>

		<p>Let&#8217;s be honest. Who really understands COM&#8217;s apartment model. Really? I&#8217;d view those people who admit to not understanding it to being honest, and either new to COM, or experienced enough to admit that it scares them.</p>
<p>I think only Don Box understood it all, and even then, its been long enough that that he&#8217;s forgotten the details.</p>
<p>For anyone who does claim to understand COM, ask them what happens when a COM call triggers a C++ exception in the invoked class.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561293">
				<div id="div-comment-561293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561293">
			October 19, 2007 at 4:06 pm</a>		</div>

		<p>Straight from the COM spec:</p>
<p>&lt;i&gt;But before we get into error handling in COM, we’ll first take a small digression. Many readers might here be wondering about exceptions. How do exceptions relate to interfaces? In short, it is strictly illegal to throw an exception across an interface invocation; all such cross-interface exceptions which are thrown are in fact bugs in the offending interface implementation.&lt;/i&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561303">
				<div id="div-comment-561303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561303">
			October 19, 2007 at 4:09 pm</a>		</div>

		<p>Another milestone!</p>
<p>REDMOND &nbsp;Today Microsoft Corporation open-sourced the code to their veritable COM runtime. &nbsp;This marks another step into the OSS realm by the software giant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561313">
				<div id="div-comment-561313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561313">
			October 19, 2007 at 5:28 pm</a>		</div>

		<p>I&#8217;ve heard that apartment model restricts the threads that use a particular object &#8211; why is this? I can deal with it being so, I just want to know why it was done this way.</p>
<div class=post>[<i>To make it easier for COM object implementors. If you think you&#8217;re wicked smart, you can write a free-threaded COM object. If you think you&#8217;re wicked stupid, you can write a main-threaded COM object. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561323">
				<div id="div-comment-561323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561323">
			October 19, 2007 at 6:40 pm</a>		</div>

		<p>Yeah, I was sort of hoping that someone had a link to a discussion of the tradeoffs in a bit more depth. Since we&#8217;re on the sibject and all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561353">
				<div id="div-comment-561353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561353">
			October 19, 2007 at 10:10 pm</a>		</div>

		<p>&quot;I&#8217;m working on a lot of projects that are entirely F/OSS/GNU/OMGLINUX and I really don&#8217;t have the time to dig through the 18 layers of source code to figure out a niggling detail. &nbsp;I&#8217;d rather that they give a good manual instead.&quot;</p>
<p>Or, you could put the manual as part of the comments in the source code. Like in Java.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-561333">
				<div id="div-comment-561333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561333">
			October 19, 2007 at 8:27 pm</a>		</div>

		<p>&gt; SUCCEEDED(CoInitialize(NULL))</p>
<p>GAH holy function calls in macros Batman!</p>
<p>Yes, I know SUCCEEDED only evaluates its argument once&#8230; so you got away with it that time.</p>
<p>(I see HRESULT_FROM_WIN32(GetLastError()) a lot too&#8230; that works *even though HRESULT_FROM_WIN32 evaluates its argument multiple times* because the return value is consistent over the life of the macro.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561343">
				<div id="div-comment-561343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561343">
			October 19, 2007 at 9:56 pm</a>		</div>

		<p>&quot;If only Microsoft could publish the source code of the COM runtime, maybe people would finally understand how it works.&quot;</p>
<p>I&#8217;m working on a lot of projects that are entirely F/OSS/GNU/OMGLINUX and I really don&#8217;t have the time to dig through the 18 layers of source code to figure out a niggling detail. &nbsp;I&#8217;d rather that they give a good manual instead. &nbsp;This isn&#8217;t a pot shot at Microsoft at all, because they actually have documentation, and while uneven, it usually gets the point across.</p>
<p>Further, everyone has access to the Linux kernel, but that doesn&#8217;t mean everyone understands how OSes work. &nbsp;It takes a lot of work and academic study to &quot;get it.&quot; &nbsp;So stop pouting about OSS and OMGNU crap.</p>
<p>As for the indentation, I guess error checking is a good thing. &nbsp;I got used to it when I was writing a whole bunch of COM addins and it isn&#8217;t that hard. &nbsp;I even *gasp* refactored my code to make it less offensive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561363">
				<div id="div-comment-561363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561363">
			October 20, 2007 at 8:48 am</a>		</div>

		<p>The shell outright refuses to load free-threaded or apartment-neutral components as shell extensions. Just so you know</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561373">
				<div id="div-comment-561373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561373">
			October 20, 2007 at 11:41 am</a>		</div>

		<p>Isn&#8217;t the shell multithreaded compatible?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561383">
				<div id="div-comment-561383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561383">
			October 20, 2007 at 12:36 pm</a>		</div>

		<p>mt: No, it isn&#8217;t. See yesterdays blog entry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561393">
				<div id="div-comment-561393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561393">
			October 20, 2007 at 1:03 pm</a>		</div>

		<p>I wasn&#8217;t complaining about error checking or about indentation.</p>
<p>I just said that there are too many things which can fail in such a simple code sample.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561423">
				<div id="div-comment-561423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561423">
			October 20, 2007 at 1:33 pm</a>		</div>

		<p>&quot;I just said that there are too many things which can fail in such a simple code sample.&quot;</p>
<p>Well, some of the error checking could be extraneous. Like for example, I don&#8217;t know how SHGetDesktopFolder(&amp;psf) could fail, since all it does (assumedly) is copy a pointer stored somewhere in the bowels of the shell into psf. I know that would be &quot;just an implementation detail&quot;, but that&#8217;s how people think and you better not let that function fail unless you don&#8217;t want to avoid keeping programs from crashing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561443">
				<div id="div-comment-561443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561443">
			October 20, 2007 at 3:02 pm</a>		</div>

		<p>I guess COM is complex, and you learn about many of the complexities the hard way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561453">
				<div id="div-comment-561453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://qstuff.blogspot.com' rel='external nofollow' class='url'>Justin Olbrantz (Quantam)</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561453">
			October 20, 2007 at 3:30 pm</a>		</div>

		<p>I imagine it&#8217;s possible for there to be a program running on a session without a graphic device (e.g. services, though I don&#8217;t know if this is actually the case). In which case there would be no desktop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561463">
				<div id="div-comment-561463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561463">
			October 20, 2007 at 5:48 pm</a>		</div>

		<p>&quot;Or, you could put the manual as part of the comments in the source code. Like in Java.&quot;</p>
<p>Which is fine for function-specific documentation (like &#8216;what are the arguments to DoStrangeThingWithPointers(..)?&#8217; or &#8216;What&#8217;s the return value for WeirdFunction()?&#8217;) &#8211; but there&#8217;s a nasty chicken and egg problem: how do I find the function I actually need to do a job?</p>
<p>Just look back a few stories to the mouse-button-swapping problem. The programmer had used a function with a nice obvious name, SwapMouseButton(), which was documented as returning the value he needed, with a documented side-effect he reversed straight afterwards if needed. How was he supposed to know the right function was actually GetSystemMetrics(), which has no obvious connection to swapping mouse buttons? Yes, looking at GetSystemMetrics would have told him &#8211; but only if he&#8217;d known already which function to look up!</p>
<p>OK, in this specific case Peter has now added &#8216;Community Content&#8217; to the online MSDN page documenting this, to stop anyone else falling into the same trap, but how many more issues like this are lurking out there? How many more programmers fell into this trap in the decade or so between the function being released and Peter putting a warning online? (Just a quick glance across Raymond&#8217;s blog finds another example, someone using a global mouse hook to identify idle time when they should apparently use GetLastInputInfo instead.)</p>
<p>It&#8217;s a shame &#8211; I found a nice trick in Swing with a watchdog thread, which switched on an hourglass every time the event despatch thread went out to lunch for more than a second or so. Of course, Swing was routing everything into a single thread for UI calls behind the scenes, but it was nice and easy to program because that was all taken care of automatically. Try the same in SWT, it blows up in your face; in Win32&#8230;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561473">
				<div id="div-comment-561473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561473">
			October 20, 2007 at 6:42 pm</a>		</div>

		<p>Maurits: HRESULT_FROM_WIN32 is now an inline function</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561503">
				<div id="div-comment-561503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561503">
			October 20, 2007 at 8:44 pm</a>		</div>

		<p>I am talking about all you relentless nitpickers who pounce on Raymond almost every day. &nbsp;I think you guys have inferiority complexes, and taking potshots at one of those rare exceptions to the corporate wall of Microsoft makes you feel important. &nbsp;&quot;Look at me! &nbsp;I am not afraid to stick to to Microsoft!&quot; &nbsp;Pathetic!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561513">
				<div id="div-comment-561513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://qstuff.blogspot.com' rel='external nofollow' class='url'>Justin Olbrantz (Quantam)</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561513">
			October 20, 2007 at 10:16 pm</a>		</div>

		<p>&quot;I am talking about all you relentless nitpickers who pounce on Raymond almost every day. &nbsp;I think you guys have inferiority complexes, and taking potshots at one of those rare exceptions to the corporate wall of Microsoft makes you feel important. &nbsp;&quot;Look at me! &nbsp;I am not afraid to stick to to Microsoft!&quot; &nbsp;Pathetic!&quot;</p>
<p>Hell yes. I am amazed every day that Raymond doesn&#8217;t, like any normal person would, go insane and kill a bunch of people with a sharp object from the incessant needling these idiots give him.</p>
<p>If I were running this site, I would make a Hall of Shame with a list of every single nitpicking idiot that drops by, along with their e-mail addresses (for those that make their e-mail address available) and links to their blogs (for those that have blogs with comments enabled).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561523">
				<div id="div-comment-561523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561523">
			October 21, 2007 at 8:23 am</a>		</div>

		<p>Saturday, October 20, 2007 10:16 PM by Justin Olbrantz (Quantam)</p>
<p>&quot;Hell yes. I am amazed every day that Raymond doesn&#8217;t, like any normal person would, go insane and kill a bunch of people with a sharp object from the incessant needling these idiots give him.&quot;</p>
<p>So nitpicking on a blog is acceptable grounds for murder to you?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561533">
				<div id="div-comment-561533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561533">
			October 21, 2007 at 10:40 am</a>		</div>

		<p>&quot;If you want to understand something complex, documentation is usually better than source code. Having the source is a bonus when you need to resolve an ambiguity in the documentation but having better documentation is preferable, I think.&quot;</p>
<p>An ambiguity, or something that just isn&#8217;t mentioned. &nbsp;Or is just plain wrong. &nbsp;See, for instance, the documentation for CreateWindowEx ( <a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/ms632680.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/ms632680.aspx</a> ). &nbsp;Now tell me how to use the lpParam parameter when the extended style includes WS_EX_MDICHILD?</p>
<p>Now. &nbsp;Go read the source code for Wine&#8217;s version of the function at <a rel="nofollow" target="_new" href="http://source.winehq.org/source/dlls/user32/win.c#L855" rel="nofollow">http://source.winehq.org/source/dlls/user32/win.c#L855</a> .</p>
<p>You see how it works differently to what the documentation suggests? &nbsp;It&#8217;s the same in Windows, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561543">
				<div id="div-comment-561543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wilfried</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561543">
			October 21, 2007 at 12:01 pm</a>		</div>

		<p>This coding style of rigorous error checking also makes it easy to spot interface leaks. Because each Release has its &quot;natural&quot; place. Like the missing peidl-&gt;Release() in Raymonds sample.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561583">
				<div id="div-comment-561583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561583">
			October 21, 2007 at 2:21 pm</a>		</div>

		<p>&quot;Like the missing peidl-&gt;Release() in Raymonds sample.&quot;</p>
<p>/sarcasm on</p>
<p>Yes, that was really easy to spot.</p>
<p>/sarcasm off</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561593">
				<div id="div-comment-561593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://qstuff.blogspot.com' rel='external nofollow' class='url'>Justin Olbrantz (Quantam)</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561593">
			October 21, 2007 at 3:33 pm</a>		</div>

		<p>&quot;So nitpicking on a blog is acceptable grounds for murder to you?&quot;</p>
<p>*ambiguous yet unsettling grin*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561643">
				<div id="div-comment-561643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561643">
			October 22, 2007 at 12:30 am</a>		</div>

		<p>&quot;So nitpicking on a blog is acceptable grounds for murder to you?&quot;</p>
<p>Of course, what a silly question. How will people learn proper polite behaviour otherwise, seeing as they rarely even read the post?</p>
<p>Admittedly I&#8217;d probably just kneecap people instead of murdering them, but I&#8217;m a big ol&#8217; softy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561653">
				<div id="div-comment-561653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561653">
			October 22, 2007 at 5:53 am</a>		</div>

		<p>I think, by far the worst problem with COM is that <em>implementation</em> has been refined over time, and wrt threading, too. Initially, people were doing strange faulty things and getting away with them. And when it started biting back, of course they were surprised. It&#8217;s an upside-down way to refine software really, it should go from stricter to lax.</p>
<p>In COM, there&#8217;s <em>staggering</em> amount of low-level details that many people don&#8217;t even see. Like with threading, or memory allocation rules wrt marshaling.</p>
<p>Then, if you used MFC&#8217;s ( crap ;-) ) support for IDispatch, it changes greatly your view of interaction with COM, as it wraps all in &quot;programmer-friendly&quot; calls, along with data type changes (e.g. from BSTR to LPCTSTR for a BSTR idl property, VARIANT_BOOL to BOOL), or automatic protection against MFC exception.</p>
<p>Now, throw in use of any C++ library that needs exceptions (look no further than STL, that doesn&#8217;t work without exceptions), and you&#8217;re in for a lot of pain.</p>
<p>Sorry for ranting. Just wanted a say for a little guy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561683">
				<div id="div-comment-561683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561683">
			October 22, 2007 at 7:50 am</a>		</div>

		<p>[A flat API would have the same amount of indentation. It&#8217;s the error checking that causes the indentation, not COM. But you knew that; you&#8217;re just being snide. -Raymond]</p>
<p>Is the &#8216;goto to cleanup&#8217; method considered bad style at Microsoft? It does save you all this indentation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561693">
				<div id="div-comment-561693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561693">
			October 22, 2007 at 9:33 am</a>		</div>

		<p>Would the company that invented BASIC think GOTO statement is a bad programming style?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561703">
				<div id="div-comment-561703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561703">
			October 22, 2007 at 10:04 am</a>		</div>

		<p>@Jules: &nbsp;I don&#8217;t follow you; the documentation and WINE source seem to be in agreement.</p>
<p>The documentation says that the WS_EX_MDICHILD flag is used to create a MDI child window. &nbsp;Then it says that if you are creating a MDI child window you should pass a pointer to a MDICREATESTRUCT struct. &nbsp;The WINE source seems to <font color=red>&#8230;discussion of GNU-protected source code deleted&#8230;</font></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561803">
				<div id="div-comment-561803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561803">
			October 22, 2007 at 1:15 pm</a>		</div>

		<p>@640k:</p>
<p>Microsoft didn&#8217;t invent basic or goto.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-561673">
				<div id="div-comment-561673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561673">
			October 22, 2007 at 7:36 am</a>		</div>

		<p>Goran: COM *did* go from &quot;more restrictive&quot; to &quot;more lax&quot; with time. The first threading model was the STA &#8212; about as &quot;strict&quot; as you can get, in my opinion&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561843">
				<div id="div-comment-561843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Ritchie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561843">
			October 22, 2007 at 3:52 pm</a>		</div>

		<p>Raymond&#8217;s just following structured programming practices, in particular single point of exit, and ensuring acquired resources are also freed. &nbsp;Without the use of classes the only alternative is to duplicate code.</p>
<p>But, that&#8217;s not the point of Raymond&#8217;s post; but as usual the usual group of nickpickers has hijacked the topic&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561873">
				<div id="div-comment-561873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561873">
			October 22, 2007 at 5:03 pm</a>		</div>

		<p>&quot;Hell yes. I am amazed every day that Raymond doesn&#8217;t, like any normal person would, go insane and kill a bunch of people with a sharp object from the incessant needling these idiots give him.&quot;</p>
<p>We try to keep Raymond away from sharp objects, although knitting needles seem to calm him.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-561993">
				<div id="div-comment-561993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-561993">
			October 23, 2007 at 4:20 am</a>		</div>

		<p>Dean: I was talking about enforcements on threading rules, not about the growth of threading models***. In that sense, before, if you cheated, you could get away thinking it&#8217;s OK to do it or being completely oblivious to the issues. For an outsider and a little guy (me), it&#8217;s a change for the worse.</p>
<p>***I think, for all the failures e.g. CORBA had, threading was simpler and more effective. (Well, it was the last time I looked into it). I know goals are not the same as in (D)COM, but still&#8230;</p>
<div class="post">[<i>It&#8217;s kind of hard to enforce rules when you don&#8217;t have any code running. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562263">
				<div id="div-comment-562263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sandman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-562263">
			October 23, 2007 at 2:59 pm</a>		</div>

		<p>@john.</p>
<p>This isn&#8217;t the right forum for this,but yes thats what the windows docs say. </p>
<p>But <font color=red>&#8230; discussion of GNU-protected source code deleted&#8230;</font></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562303">
				<div id="div-comment-562303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-562303">
			October 23, 2007 at 5:36 pm</a>		</div>

		<p>Ok, I see what you&#8217;re saying. &nbsp;I traced the function calls in the Wine source and <font color=red>&#8230; discussion of GNU-protected source code deleted &#8230;</font></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562323">
				<div id="div-comment-562323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-562323">
			October 23, 2007 at 9:16 pm</a>		</div>

		<p>Anyway &#8230; it appears you guys are correct. &nbsp;The documentation and actual behavior do not match.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562463">
				<div id="div-comment-562463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071019-00/?p=24733#comment-562463">
			October 24, 2007 at 9:31 am</a>		</div>

		<p>(Nitpick: It&#8217;s not GNU-protected code. &nbsp;It&#8217;s LGPL-protected code. &nbsp;;-) )</p>
<p>But yeah, I wondered how long it&#8217;d be until that got deleted, knowing what usually happens when stuff like it gets brought up. &nbsp;:-)</p>
<div class="post">[<i>Thanks for the correction. It&#8217;s the license that&#8217;s the problem. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

