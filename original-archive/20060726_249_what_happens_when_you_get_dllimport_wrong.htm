<html>
<head>
<title>What happens when you get dllimport wrong?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What happens when you get dllimport wrong?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 26, 2006 / year-entry #250</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Now that we've learned what the dllimport declaration specifier does, what if you get it wrong? If you forget to declare a function as dllimport, then you're basically making the compiler act like a naive compiler that doesn't understand dllimport. When the linker goes to resolve the external reference for the function, it will use...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Now that we've learned what the <code>dllimport</code> declaration specifier does, what if you get it wrong?</p>
<p> If you forget to declare a function as <code>dllimport</code>, then you're basically making the compiler act like a naive compiler that doesn't understand <code>dllimport</code>. When the linker goes to resolve the external reference for the function, it will use the stub from the import library, and everything will work as before. You do miss out on the optimization that <code>dllimport</code> enables, but the code will still run. You're just running in naive mode. </p>
<p> (There are still some header files in the Platform SDK that neglect to use the <code>dllimport</code> declaration specifier. As a result, anybody who uses those header files to import functions from the corresponding DLL will be operating in "naive mode". Hopefully the people responsible for those header files will recognize themselves in this parenthetical and fix the problem for a future release of the Platform SDK.) </p>
<p> Now, what about the reverse problem? What if you declare a function as <code>dllimport</code> when it really isn't? The linker detects this since it sees an attempt to import a <code>__imp__FunctionName</code> symbol and can't find one, though it can find the normal <code>FunctionName</code> symbol. When this happens, the linker raises <a href="http://msdn.microsoft.com/library/en-us/vccore/html/vcerrLinkerToolsWarningLNK4217.asp"> warning LNK4217</a>. It recovers from this error by simply manufacturing a fake <code>__imp__FunctionName</code> variable and initializing it with the address of the <code>FunctionName</code> function. In effect, you've imported the function from yourself. Your code now goes through all the gyrations associated with calling an imported function unnecessarily; it could have just called <code>FunctionName</code> directly. </p>
<p> (There are cases where the linker can be a little smarter. For example, if it sees a <code>call [__imp__FunctionName]</code>, it can change it to <code>call FunctionName + nop</code>. The <code>nop</code> is necessary because the <code>call [__imp__FunctionName]</code> instruction is six bytes long, whereas <code>call FunctionName</code> is only five. The extra <code>nop</code> gets everything back in sync.) </p>
<p> Thus, in both cases where you mess up the <code>dllimport</code> declaration specifier, the linker manages to recover from your mistake, and your program does run fine, though the patching up did cost you in code size and efficiency. </p>
<p> (All this discussion is for x86, by the way. Other architectures have different quirks.) </p>
<p> Next time, more on import libraries, and exposing some "little white lies" I've been telling. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-403593">
				<div id="div-comment-403593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403593">
			July 26, 2006 at 11:52 am</a>		</div>

		<p>This seems like a problem for the CRT. &nbsp;As far as I know, VC gives you the option of statically or dynamically linking the CRT. &nbsp;But it seems like the headers will have to make a choice to support one thing better than the other. &nbsp;Conditional compilation would work, but then people would have to remember to include a #define somewhere. &nbsp;Is this dllimport vs. static linking thing something the compiler could figure out on its own if you&#8217;re doing Link-time codegen?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403603">
				<div id="div-comment-403603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403603">
			July 26, 2006 at 11:54 am</a>		</div>

		<p>&#8220;All this discussion is for x86, by the way. Other architectures have different quirks.&#8221; </p>
<p>Huh? Surely you mean this is for PE/x86. Other formats (e.g. ELF/x86) will naturally have a different shared library ABI (with related quirks). But given that you&#8217;re talking about PE/x86, what other architectures does PE run on? (Aside from PE/x86-64, which will be mostly running 32-bit userspace apps anyway) </p>
<div CLASS=post>[<i>Ah, the nitpick police are out early today. This is part <b>nine</b> in a series on how Windows imports and exports functions from DLLs. I&#8217;d&#8217;ve though the context was well-established by now. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403623">
				<div id="div-comment-403623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403623">
			July 26, 2006 at 12:26 pm</a>		</div>

		<p>Adam: &nbsp;IA-64? &nbsp;PowerPC (XBox)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403683">
				<div id="div-comment-403683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Reinder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403683">
			July 26, 2006 at 2:07 pm</a>		</div>

		<p>My guess would be PE/PPC, on the XBOX 360.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403693">
				<div id="div-comment-403693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tyler Reddun</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403693">
			July 26, 2006 at 2:51 pm</a>		</div>

		<p>Don&#8217;t forget the DEC Alpha, and every other processor that NT used to support. Each one has there own quirks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403763">
				<div id="div-comment-403763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">glonq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403763">
			July 26, 2006 at 7:58 pm</a>		</div>

		<p>&#8230;and don&#8217;t forget the bunch of CPU&#8217;s that WinCE runs on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403783">
				<div id="div-comment-403783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403783">
			July 26, 2006 at 9:58 pm</a>		</div>

		<p>nksingh:<br />
<br />You bet this is an issue for the CRT. &nbsp;The CRT headers use a lot of conditional compilation. &nbsp;Look at the file &quot;crtdefs.h&quot;. &nbsp;This defines &quot;_CRTIMP&quot; as either &quot;__declspec(dllimport)&quot; or nothing, depending on whether or not you&#8217;re using the DLL version of the CRT. &nbsp;Every CRT export has &quot;_CRTIMP&quot; (or some variation) in front of it. &nbsp;Luckily, most people don&#8217;t have to remember how this works, so most people don&#8217;t have to worry about forgetting to put the _CRTIMP prefix on the functions.</p>
<p>You do have to do something so the compiler knows what you want, though. &nbsp;The VC 8.0 CRT uses the _DLL symbol to decide whether or not to import the functions. &nbsp;You can get this symbol defined (or not) based on a #define in a common header (probably not the best way), by passing -D_DLL or some other symbol as a command-line argument, or by using one of the -M?? switches (which is like passing -D_DLL plus some other stuff).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403713">
				<div id="div-comment-403713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403713">
			July 26, 2006 at 4:41 pm</a>		</div>

		<p>Right &#8211; the context *is* well-established now.</p>
<p>*That&#8217;s what confused me!*</p>
<p>I&#8217;m trying to figure out why the clarification was necessary, or what other information it gave us than that which was already implied by the *last couple of weeks* posts (which have been excellent). I couldn&#8217;t figure out was the reason for the clarification was, so assumed I must have been missing something. (Happens a lot :)</p>
<p>Sorry to come across as one of the Nitpick Police.</p>
<p>/me tiptoes away, trying to not draw any more attention&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403793">
				<div id="div-comment-403793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403793">
			July 26, 2006 at 11:45 pm</a>		</div>

		<p>Raymond, you mentioned in a previous entry in this series &#8220;Next time, we&#8217;ll look at the dllexport declaration specifier&#8230;&#8221;. I have yet to find a mention of it. Did you decide to save it for later, did it somehow got lost, or am I just blind?</p>
<p>(Me, I think <strong>dllexport simply tags the name for publication, much like a .def file would do, but without the power of the .def file to rename exported symbols and so on)</p>
<p>On the subject of __imp</strong> prepended function names &#8211; is that the only thing __dllimport does &#8211; renaming the entry in the import-lib (actually, more like providing the mapping __imp_X -&gt; X) to be externally visible as __imp__sym for the symbol sym in the DLL the import library is generated for?</p>
<div CLASS=post>[<i>Or (3) I mean dllimport, not dllexport. Typo. dllimport influences the codegen of the DLL&#8217;s clients. It control how the DLL is <b>consumed</b> not how it is <b>produced</b>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403833">
				<div id="div-comment-403833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403833">
			July 27, 2006 at 3:24 am</a>		</div>

		<p>How appropriate that I wrote &quot;__dllimport&quot; when I intended __dllexport to generate the names. :-)</p>
<p>Still, does __dllexport do anything else but create the name __imp__X for X in the import library, even if subtle things like &quot;slightly&quot; modify optimizations or anything else? Even if not, how exactly does that work (on a COFF level if you don&#8217;t mind)? There must be a &quot;mapping&quot; stored in the COFF object file for the linker to pick it up, no? Is it simply that addr X get referred by the name real_fn as tatic, and __imp__real_fn as public?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403843">
				<div id="div-comment-403843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-403843">
			July 27, 2006 at 6:13 am</a>		</div>

		<p>Does anyone have any idea of how much the __dllimport optimisation is worth these days? I mean how much faster is the optimised case than the &quot;naive mode&quot; case on modern CPUs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-404003">
				<div id="div-comment-404003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">performance</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060726-00/?p=30363#comment-404003">
			July 27, 2006 at 1:50 pm</a>		</div>

		<p>Is the optimized call always slower than a local call? File size increases one extra byte, why?</p>
<div CLASS=post>[<i>Sigh. I already answered the extra byte question in the fifth paragraph. Please read the article before asking questions. I&#8217;m not going to talk about performance issues because performance is complicated. Different CPUs behave differently. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

