<html>
<head>
<title>Why is the default 8-bit codepage called "ANSI"?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is the default 8-bit codepage called &#8220;ANSI&#8221;?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 31, 2004 / year-entry #214</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Reader Ben Hutchings wanted to know why the 8-bit codepage is called "ANSI" when it isn't actually ANSI. But instead of saying, "Oh well, some things mortals were never meant to know," he went and dug up the answer himself. A quick Google for Windows ANSI misnomer found me exactly what I was looking for...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>  Reader Ben Hutchings wanted to know why the 8-bit codepage is called "ANSI"  when it isn't actually ANSI.  </p>
<p>  But instead of saying, "Oh well, some things mortals were never meant  to know," he went and dug up the answer himself.  </p>
<blockquote class="q"><p>  A quick Google for  <a href="http://www.google.com/search?q=windows+ansi+misnomer">  Windows ANSI misnomer</a>  found me  <a href="http://download.microsoft.com/download/5/6/8/56803da0-e4a0-4796-a62c-ca920b73bb17/21-Unicode_WinXP.pdf">  exactly what I was looking for [pdf]</a>:  </p>
<blockquote><p>  "The term "ANSI" as used to signify Windows code pages is a  historical reference, but is nowadays a misnomer that continues  to persist in the Windows community. The source of this comes  from the fact that the Windows code page 1252 was originally  based on an ANSI draft, which became ISO Standard 8859-1.  However, in adding code points to the range reserved for control  codes in the ISO standard, the Windows code page 1252 and  subsequent Windows code pages originally based on the ISO 8859-x  series deviated from ISO. To this day, it is not uncommon to have  the development community, both within and outside of Microsoft,  confuse the 8859-1 code page with Windows 1252, as well as see  "ANSI" or "A" used to signify Windows code page support.  </p>
</blockquote>
</blockquote>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-178873">
				<div id="div-comment-178873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J. Edward Sanchez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-178873">
			May 31, 2004 at 5:53 pm</a>		</div>

		<p>I remember that thread! In it, I explained in greater detail the difference between ISO-8859-1 and Windows Latin 1 (a.k.a. Windows-1252, or CP1252) &#8212; although I neglected to mention why the latter is commonly called &quot;ANSI&quot;:</p>
<p><a target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2004/03/19/92648.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2004/03/19/92648.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-178913">
				<div id="div-comment-178913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-178913">
			June 1, 2004 at 2:53 am</a>		</div>

		<p><a target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/devcons_1t10.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/devcons_1t10.asp</a><br />
<br />GetStockObject is missing NULL_PEN in the table for some reason.</p>
<p><a target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/functions/dragqueryfile.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/functions/dragqueryfile.asp</a><br />
<br />DragQueryFile: In the remarks, &quot;Note that the index variable itself returns unchanged, and will therefore remain 0xFFFFFFFF&quot;. Duh, it&#8217;s passed by value.</p>
<p><a target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/commctls/updown/updown.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/commctls/updown/updown.asp</a><br />
<br />It says &quot;the full 32-bit range&quot; on the bottom of the page but then it lists -0x7FFFFFFF to +0x7FFFFFFF. The full 32-bit range is actually -0x80000000 to +0x7FFFFFFF.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-179053">
				<div id="div-comment-179053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-179053">
			June 1, 2004 at 8:18 am</a>		</div>

		<p>I think it&#8217;s time to make an &quot;Unrelated comments&quot; entry so people won&#8217;t have to hijack other entries&#8230;</p>
<p>NULL_PEN: Odd indeed.<br />
<br />DragQF: And yet people complain when the documentation doesn&#8217;t state the obvious.<br />
<br />UpDown: I&#8217;ll have to check what the true range is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-179263">
				<div id="div-comment-179263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikedimmick.blogspot.com' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-179263">
			June 1, 2004 at 12:30 pm</a>		</div>

		<p>The &#8216;true range&#8217; will depend on whether your processor does one&#8217;s- or two&#8217;s-complement arithmetic (although everything Windows currently runs on is two&#8217;s-complement). One&#8217;s complement has the odd property that you can actually represent -0 (it has the bit pattern 0xFFFFFFFF for a 32-bit number).</p>
<p>For a bonus point &#8211; why is Windows&#8217; use of the term Unicode also a misnomer?</p>
<p>My answer: Unicode refers to an abstract, logical coding of characters and character components. The physical two-byte-code-unit encoding used by Windows 2000 and earlier is UCS-2 (Universal Character Set encoded in units of 2 bytes) while that used by Windows XP and later is UTF-16 (Unicode Transformation Format, 16-bit). The difference is that UTF-16 introduces surrogates for characters whose abstract code is greater than U+FFFF &#8211; these surrogates use two encoding units of 16 bits each to represent a single Unicode code point.</p>
<p>When Windows/MSDN documentation refers to Unicode, UCS-2 or UTF-16 is almost always the meaning intended. Windows doesn&#8217;t appear to support UTF-32/UCS-4 as a possible encoding.</p>
<p>To simplify (!) things, I refer to the traditional encodings as byte-oriented character sets &#8211; because there are characters encoded which only require one byte in the encoding. UTF-16 is a WORD-oriented encoding because each character requires a multiple of 2 bytes to encode (either a single 2-byte code encoding a single character, or two 2-byte codes making up a surrogate pair).</p>
<p>In Windows documentation you&#8217;ll also see the terms SBCS, DBCS and MBCS (single-byte character set, double-byte character set, multi-byte character set). DBCS is really a misnomer because most DBCS sets have some characters encoded with a single byte. MBCS is a covering term for SBCS and DBCS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-179393">
				<div id="div-comment-179393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-179393">
			June 1, 2004 at 6:14 pm</a>		</div>

		<p>Oh boy.  At least with UCS-2 you knew that one base unit = one code point.  I suppose it doesn&#8217;t make that much of a difference, nowhere does Unicode guarantee that one code point is one glyph or one basic lingual concept.  Sure, now you can represent every language at once, but you still have to worry about slicing things.  String handling sucks.</p>
<p>and fwiw, C++ doesn&#8217;t guarantee that -0x80000000 will be in the range of a 32-bit integer either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-179483">
				<div id="div-comment-179483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Perry Lorier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-179483">
			June 1, 2004 at 11:37 pm</a>		</div>

		<p>and irritatingly windows is quite happy to label it&#8217;s windows charactor sets as &quot;ascii&quot; or &quot;iso-8859-1&quot; in things like email messages, or in web pages (both served by a web server, or submitted by a web browser).</p>
<p>This makes non-microsoft OS&#8217;s have ?&#8217;s or square boxes appear all over the place as they encounter invalid charactors all over the place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-179643">
				<div id="div-comment-179643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-179643">
			June 2, 2004 at 7:24 am</a>		</div>

		<p>Perry: Microsoft&#8217;s applications used to do that but they now seem to be quite consistent in using the correct names like &quot;windows-1252&quot;. You can also choose whether the standard or proprietary encoding is used: &quot;Western European (ISO)&quot; is ISO 8859-1 whereas &quot;Western European (Windows)&quot; is code page 1252.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-179653">
				<div id="div-comment-179653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikedimmick.blogspot.com' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-179653">
			June 2, 2004 at 7:28 am</a>		</div>

		<p>At least with the UTF series, you can walk a string backwards. With UTF-8 (encoded using the canonical representation &#8211; it is possible to encode characters illegally) you can tell whether a unit represents a single code point, or a trailing byte, or the lead byte of a two-, three- or four-unit encoding. Single code points are always under 0x80, trail bytes are between 0x80 and 0xBF, lead bytes of a two-byte encoding are between 0xC2 and 0xDF, three-byte between 0xE1 and 0xEF and four-byte between 0xF0 and 0xF7. The pattern is basically (binary):</p>
<p>0xxxxxxx = single byte<br />
<br />10xxxxxx = trail byte<br />
<br />110xxxxx = two-byte lead byte<br />
<br />1110xxxx = three-byte lead byte<br />
<br />11110xxx = four-byte lead byte</p>
<p>UTF-16 uses the values 0xDC00 &#8211; 0xDFFF for the leading surrogate unit and 0xD800 &#8211; 0xDBFF for the trailing unit. These values are reserved in the logical encoding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-179783">
				<div id="div-comment-179783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-179783">
			June 2, 2004 at 10:16 am</a>		</div>

		<p>Meh.  Most MBCS that I know of use one or two bytes for each character and you can at least identify lead bytes.  It&#8217;s only marginally more difficult to walk a string backwards in that case.  And you need to scan all your strings ahead of time to make sure they&#8217;re valid UTF before you can really take advantage of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-179863">
				<div id="div-comment-179863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-179863">
			June 2, 2004 at 11:51 am</a>		</div>

		<p>Wait, no, I guess you usually can&#8217;t&#8230;  You can distinguish a lead byte from ascii, but not necessarily from a trail byte.  :/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-186493">
				<div id="div-comment-186493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/luisdans/archive/2004/06/23/163862.aspx' rel='external nofollow' class='url'>luisdans's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-186493">
			June 23, 2004 at 1:34 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-195963">
				<div id="div-comment-195963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/07/16/185444.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-195963">
			July 16, 2004 at 1:27 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-301613">
				<div id="div-comment-301613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/08/29/457483.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-301613">
			August 29, 2005 at 10:00 am</a>		</div>

		<p>Because it once was, though no longer is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-476963">
				<div id="div-comment-476963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://smallcode.weblogs.us/2006/10/25/code-page-for-win32-console-programs/' rel='external nofollow' class='url'>smallcode &raquo; Blog Archive &raquo; Code page for Win32 console programs</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040531-00/?p=39103#comment-476963">
			February 27, 2007 at 3:25 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://smallcode.weblogs.us/2006/10/25/code-page-for-win32-console-programs/" rel="nofollow">http://smallcode.weblogs.us/2006/10/25/code-page-for-win32-console-programs/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

