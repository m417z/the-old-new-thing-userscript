<html>
<head>
<title>Converting from traditional to simplified Chinese, part 1: Loading the dictionary</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Converting from traditional to simplified Chinese, part 1: Loading the dictionary</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 11, 2005 / year-entry #186</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">One step we had glossed over in our haste to get something interesting on the screen in our Chinese/English dictionary program was the conversion from traditional to simplified Chinese characters. The format of the hcutf8.txt file is a series of lines, each of which is a UTF-8 encoded string consisting of a simplified Chinese character...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
One step we had glossed over in our haste to get something
interesting on the screen in our
Chinese/English dictionary program
was the conversion from traditional to simplified Chinese
characters.
</p>
<p>
The format of the <code>hcutf8.txt</code> file is a series of lines,
each of which is a UTF-8 encoded string consisting of a simplified
Chinese character followed by its traditional equivalents.
Often, multiple traditional characters map to a single
simplified character.
Much more rarely&mdash;only twice in our data set&mdash;multiple
simplified characters map to a single traditional character.
Unfortunately, one of the cases is the common syllable
&#x9ebc;, which has two simplifications, either
&#x4e48; or &#x9ebd;, the first of which is far more productive.
We'll have to keep an eye out for that one.
</p>
<p>
(Note also that in real life,
<a HREF="http://weblogs.asp.net/peterty/archive/2005/03/04/385063.aspx">
the mapping is more complicated
than a character-for-character substitution</a>,
but I'm willing to forego that level of complexity
because this is just for my personal use and people will have
realized I'm not a native speaker long before I get caught up
in language subtleties like that.)
</p>
<p>
One could try to work out a fancy data structure to represent
this mapping table compactly, but it turns out that simple is
better here: an array of 65536 <code>WCHAR</code>s, each producing
the corresponding simplification.
Most of the array will lie unused,
since the characters we are interested in lie in the range
U+4E00 to U+9FFF.
Consequently, the active part of the table is only about 40Kb,
which easily fits inside the L2&nbsp;cache.
</p>
<p>
It is important to know when
a simple data structure is better than a complex one.
</p>
<p>
The <code>hcutf8.txt</code> file contains a lot of fluff that we
aren't interested in. Let's strip that out ahead of time so that
we don't waste our time parsing it at run-time.
</p>
<pre>
#!perl
$_ = &lt;&gt; until /^# Start zi/; # ignore uninteresting characters
while (&lt;&gt;) {
 s/\r//g;
 next if length($_) == 7 &amp;&amp;
         substr($_, 0, 3) eq substr($_, 3, 3); # ignore NOPs
 print;
}
</pre>
<p>
Run the <code>hcutf8.txt</code> file through this filter to clean
it up a bit.
</p>
<p>
Now we can write our "traditional to simplified" dictionary.
</p>
<pre>
class Trad2Simp
{
public:
 Trad2Simp();
 WCHAR Map(WCHAR chTrad) const { return _rgwch[chTrad]; }

private:
 WCHAR _rgwch[65536]; // woohoo!
};

Trad2Simp::Trad2Simp()
{
 ZeroMemory(_rgwch, sizeof(_rgwch));

 MappedTextFile mtf(TEXT("hcutf8.txt"));
 const CHAR* pchBuf = mtf.Buffer();
 const CHAR* pchEnd = pchBuf + mtf.Length();
 while (pchBuf &lt; pchEnd) {
  const CHAR* pchCR = std::find(pchBuf, pchEnd, '\r');
  int cchBuf = (int)(pchCR - pchBuf);
  WCHAR szMap[80];
  DWORD cch = MultiByteToWideChar(CP_UTF8, 0, pchBuf, cchBuf,
                                  szMap, 80);
  if (cch &gt; 1) {
   WCHAR chSimp = szMap[0];
   for (DWORD i = 1; i &lt; cch; i++) {
    if (szMap[i] != chSimp) {
     _rgwch[szMap[i]] = chSimp;
    }
   }
   pchBuf = std::find(pchCR, pchEnd, '\n') + 1;
  }
 }
 _rgwch[0x9EBC] = 0x4E48;
}
</pre>
<p>
We read the file one line at a time, convert it from UTF-8,
and for each nontrivial mapping, record it in our dictionary.
At the end, we do our little &#x4e48; special-case patch-up.
</p>
<p>
Next time, we'll use this mapping table to generate simplified
Chinese characters into our dictionary.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-290083">
				<div id="div-comment-290083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290083">
			July 11, 2005 at 10:21 am</a>		</div>

		<p>Just out of interest, is it easy for a native speaker to distinguish between similar looking intricate characters when written so small?</p>
<p>麼 and 麽 look almost the same to my untrained eye.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-290093">
				<div id="div-comment-290093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290093">
			July 11, 2005 at 11:10 am</a>		</div>

		<p>&quot;is it easy for a native speaker to distinguish between similar looking intricate characters when written so small?&quot;</p>
<p>I don&#8217;t read any ideographic languages, but I do know that the default font size in Japanese Windows is larger than in American versions so the characters are easily distinguished, even by me.</p>
<p>And I&#8217;d guess that context plays a large part when reading.  It certainly does in English.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-290103">
				<div id="div-comment-290103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephen Sprunk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290103">
			July 11, 2005 at 11:36 am</a>		</div>

		<p>Why do you go through the hassle of converting when the UTF-8 dictionary file lists both forms?  Wouldn&#8217;t it be simpler to store each during parsing with a link between them?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-290113">
				<div id="div-comment-290113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290113">
			July 11, 2005 at 11:54 am</a>		</div>

		<p>The default system font size in CJK is 9 pt, 8 pt is too small for hanzi to be easily readable. </p>
<p>What does the &quot;rg&quot; Hungarian prefix mean? That one has always stumped me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ryanmy even thread-even depth-1" id="comment-290123">
				<div id="div-comment-290123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ryanmy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290123">
			July 11, 2005 at 12:07 pm</a>		</div>

		<p>rg is &quot;range&quot; &#8212; it almost always means a pointer to the start of an array.  i.e. &quot;rgch&quot; is a ptr to an array of chars, and &quot;pch&quot; is a ptr to somewhere inside that array.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-290133">
				<div id="div-comment-290133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290133">
			July 11, 2005 at 2:00 pm</a>		</div>

		<p>This is a very complex thing to do and I think you should make it clear this is just a toy.<br />
<br />Here is a very interesting link: <a rel="nofollow" target="_new" href="http://www.cjk.org/cjk/c2c/c2cbasis.htm" rel="nofollow">http://www.cjk.org/cjk/c2c/c2cbasis.htm</a></p>
<p>Notes and stories</p>
<p>1. Bad conversion are easy to identify for natives. I have worked more than 7 years in localization. During this time, I have tried several conversion tools. At some point I was comparing the MS conversion (from Office) vs. the &quot;Chinese Partner&quot; conversion. I liked the MS one, because it was able to convert RTF/DOC files. &quot;Chinese Partner&quot; was handling only text. Our Chinese lead translator received RTF files, and had no idea what I was using. But he was always able to to tell me &quot;you are using the bad convertor again&quot; every time I was using the MS tool.</p>
<p>2. &quot;an array of 65536 WCHARs&quot; = Unicode covers more than 64K (0x10FFFF) and a big chunk beyond BMP (the first plane of 64K) is exactly for Chinese. So you have to deal with surogates to get this right.</p>
<p>3. The font is important. During the Unicode many TC/SC character have been unified, and considered &quot;glyph differences&quot;. But if one uses a SC font for TC text, a native will instantly ask &quot;why do you use this SC character&quot; (readers care about shape, not about Unicode code points). Example: the ideographic dot is at the base line or centered. Example: the &quot;Bone&quot; character (U+9AA8) changes even the stroke count (compare it with MingLiU and SimSun).</p>
<p>4. There are also vocabulary differences, not only glyph differences. Same with US and UK English.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-290163">
				<div id="div-comment-290163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290163">
			July 11, 2005 at 10:46 pm</a>		</div>

		<p>Conversion between Traditional Chinese(CHT) and Simplified Chinese(CHS) is always difficult. To make the issue more complicated, there is 3 or 4 versions of offically announced CHS(with the last one maked unusable, they just attempted to use one simplied character to mean a word, for example, they want to use &quot;T&quot; in the middle of &quot;門&quot; to mean &quot;question&quot;, and that&#8217;s a insane thing to do so as it&#8217;ll bring more evil than good.) A good convertor should be capable to deal with the difference. However, being be able to handle version (2 or 3 I can&#8217;t remember) will be adequate for most situations.</p>
<p>Converting from CHT to CHS is simple and good to start with, while converting from CHS to CHT is impossible(with good result) without a 3-pass conversion algorithm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-290183">
				<div id="div-comment-290183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290183">
			July 12, 2005 at 12:14 am</a>		</div>

		<p>In Japanese copies of Chinese characters there are a number of cases where characters were miscopied and then both the common Japanese form and the originally correct Chinese form are accepted as alternates.  I didn&#8217;t notice that the same kind of miscopying might have happened inside China and there might be multiple accepted alternates just among the original Chinese forms.  But either way, when seeing the three characters in this posting, it looks like two of them were traditional alternates and one is a simplified form.  I mean, why make a decision at a governmental level to make a minor change and call it a simplification, at the same time as making a major change and actual simplification for the same character?</p>
<p>Or maybe one government made a big simplification and another one or two made a lesser simplification?  In that case we need to abandon the terms &quot;simplified&quot; and &quot;traditional&quot; and use the names of countries or regions to designate which kind of Chinese is in use.  I guess everyone agrees that Hong Kong is a region and Singapore is a country, but does the Republic of China allow sale of products that mention the existence of the People&#8217;s Republic of China and vice-versa.  Otherwise maybe just &quot;Chinese-1&quot;, &quot;Chinese-2&quot;, etc.  Oh no, who gets higher numbers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-290193">
				<div id="div-comment-290193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-290193">
			July 12, 2005 at 12:18 am</a>		</div>

		<p>Sorry I forgot to add this to my previous comment:</p>
<p>Monday, July 11, 2005 2:00 PM by Mihai</p>
<p>&gt; I liked the MS one, because it was able to<br />
<br />&gt; convert RTF/DOC files.<br />
<br />[&#8230;]<br />
<br />&gt; But he was always able to to tell me &quot;you<br />
<br />&gt; are using the bad convertor again&quot;</p>
<p>The second time I experimented with OpenOffice, it could read Japanese .doc files (from which version of Microsoft Word I forgot) but couldn&#8217;t read Japanese .rtf files.  This seems backwards since .rtf is a known simple format, but that was the case.  Then I even figured out that a previous correspondent must have been using OpenOffice, because I had originally sent an .rtf file and a request came back for a .doc file because the .rtf had been unreadable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-561723">
				<div id="div-comment-561723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michkap/archive/2007/10/22/5588441.aspx' rel='external nofollow' class='url'>Sorting It All Out</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050711-14/?p=34973#comment-561723">
			October 22, 2007 at 10:26 am</a>		</div>

		<p>Stephen asks via the Contact link: I&#8217;m making a program doing a Traditional/Simplified Chinese conversion</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

