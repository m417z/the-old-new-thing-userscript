<html>
<head>
<title>Does this operation work when file system redirection is disabled? The default answer is NO</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Does this operation work when file system redirection is disabled? The default answer is NO</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 21, 2013 / year-entry #80</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer reported that when their program called SH­Get­File­Info to get the icon for a folder, the call failed. "It works on some machines but not others. We don't know what the difference is between the working and non-working machines." They included the offending function from their program, but everything in the function looked good....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer reported that when their program called <code>SH&shy;Get&shy;File&shy;Info</code> to get the icon for a folder, the call failed. "It works on some machines but not others. We don't know what the difference is between the working and non-working machines." They included the offending function from their program, but everything in the function looked good. The problem was something outside the function itself.</p>
<p> Eventually, the customer confessed that they had called the <code>Wow64&shy;Disable&shy;Wow64&shy;Fs&shy;Redi&shy;rection</code> function to disable file system redirection, and the call to <code>SH&shy;Get&shy;File&shy;Info</code> took place while redirection was disabled. "We found that if we re-enable file system redirection before calling <code>SH&shy;Get&shy;File&shy;Info</code>, then everything works properly." </p>
<p> That's right, because, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/09/28/10217445.aspx"> like impersonation</a>, nothing works when file system redirection is disabled unless it is specifically documented as supporting disabled redirection. This is even called out in the documentation for <code>Wow64&shy;Disable&shy;Wow64&shy;Fs&shy;Redi&shy;rection</code>: </p>
<blockquote class="q"><p> <b>Note</b>&nbsp; The <b>Wow64&shy;Disable&shy;Wow64&shy;Fs&shy;Redi&shy;rection</b> function affects all file operations performed by the current thread, <u>which can have unintended consequences if file system redirection is disabled for any length of time</u>. For example, DLL loading depends on file system redirection, so disabling file system redirection will cause DLL loading to fail. Also, many feature implementations use delayed loading and will fail while redirection is disabled. The failure state of the initial delay-load operation is persisted, so any subsequent use of the delay-load function will fail even after file system redirection is re-enabled. To avoid these problems, <u>disable file system redirection immediately before calls to specific file I/O functions (such as <b>Create&shy;File</b>) that must not be redirected, and re-enable file system redirection immediately afterward</u> using <b>Wow64&shy;Revert&shy;Wow64&shy;Fs&shy;Redi&shy;rection</b>. </p>
</blockquote>
<p> Whenever you use one of these "global solutions to a local problem" types of solutions that change some fundamental behavior of the system, you have to make sure that everybody is on board with your decision. </p>
<p> The local solution would be to use the <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/12/31/10110525.aspx"> <code>C:\<wbr>Windows\<wbr>Sys&shy;Native</wbr></wbr></code></a> virtual directory for files you want to look up in the native system directory rather than the emulated system directory. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1046373">
				<div id="div-comment-1046373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046373">
			March 21, 2013 at 7:19 am</a>		</div>

		<p>What if you&#39;re performing a lengthy process that touches a lot of files, perhaps enumerating some section of the file system? &nbsp;How expensive is it to call the Disable/Revert pair for every single file access?</p>
<div class="post">[<i>If you&#39;re doing a lot of work with each file, then the cost of the disable/revert is unlikely to be a bottleneck. If you&#39;re just opening the file, reading 1 byte, then closing it, then you may as well leave redirection enabled. The problem is if you open the file then <u>call out to external code</u> while redirection is still enabled. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046383">
				<div id="div-comment-1046383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046383">
			March 21, 2013 at 8:24 am</a>		</div>

		<p>[The local solution would be to use the C:WindowsSysÂ­Native virtual directory for files you want to look up in the native system directory rather than the emulated system directory.]</p>
<p>Requires a patch for Windows Server 2003 x64 that is not on Windows Update and is marked as not redistributable.</p>
<p><a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/942589" rel="nofollow">support.microsoft.com/&#8230;/942589</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1046403">
				<div id="div-comment-1046403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046403">
			March 21, 2013 at 9:30 am</a>		</div>

		<p>This is the sort of information that desperately needs to be included with all such &quot;global solutions!&quot; &nbsp;Disparaging developers for foolishly using global solutions to local problems when there isn&#39;t information discussing a better, local alternative, is a bit like blaming foreigners for not knowing nuances of local custom. &nbsp;How would anyone know about C:WindowsSysNative? &nbsp;I&#39;d never heard of it before now, having been a Windows developer for about 16 years (not that I&#39;ve had need to use Wow64DisableWow64FsRedirection either, so maybe if I had I&#39;d have stumbled upon it &#8211; though I notice that the MSDN documentation for Wow64DisableWow64FsRedirection fails to mention C:WindowsSysNative).</p>
<div class="post">[<em>The MSDN local solution is to disable redirection, open the file, then re-enable it. The SysNative solution is a clever trick. You won&#39;t go wrong following the MSDN-recommended solution. (For example, if you are on a platform where the SysNative trick doesn&#39;t work.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046413">
				<div id="div-comment-1046413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046413">
			March 21, 2013 at 9:30 am</a>		</div>

		<p>[Requires a patch for Windows Server 2003 x64 that is not on Windows Update and is marked as not redistributable.]</p>
<p>So what? Mark it as a dependency in your MSI and link the Support Ticket (which you were somehow able to find) for your legacy customers to apply. What is so hard about this? Solutions to these problems have been well known for years, its amazing the amount of laziness on developers parts to help themselves out, instead its a game of how can we blame Microsoft for our own shortcomings?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1046423">
				<div id="div-comment-1046423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046423">
			March 21, 2013 at 9:47 am</a>		</div>

		<p>@ @Joshua:</p>
<p>That was a little harch wasn&#39;t it? &nbsp;I didn&#39;t see where Joshua was critical of anyone. &nbsp;I read that more as an FYI for the readers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046433">
				<div id="div-comment-1046433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046433">
			March 21, 2013 at 9:57 am</a>		</div>

		<p>I see that 12BitSlab understands that I too have the social skills of a thermonuclear device.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-entegygmail-com even thread-even depth-1" id="comment-1046453">
				<div id="div-comment-1046453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Entegy' rel='external nofollow' class='url'>Entegy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046453">
			March 21, 2013 at 10:31 am</a>		</div>

		<p>On the very tangentially related subject of file systems, I&#39;ve been trying to find the post where Raymond describes why C:Documents and Settings gets Access Denied on Vista/7/8. I know why, but I&#39;m trying to find the post for reference. I could have sworn he posted about it and I see he references it in a response here (<a href="http://blogs.msdn.com/b/oldnewthing/archive/2009/09/28/9900082.aspx#9900310" target="_new" rel="nofollow">blogs.msdn.com/&#8230;/9900082.aspx</a>) but I just cannot find this post!</p>
<div class="post">[<em>Because it&#39;s on <a href="http://technet.microsoft.com/en-us/magazine/ee851567.aspx" rel="nofollow">the other site</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1046463">
				<div id="div-comment-1046463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046463">
			March 21, 2013 at 10:47 am</a>		</div>

		<p>I suppose, TheFunctionWithSuperLongName just sets a flag in the thread block (offset in FS:), and is so cheap that you can flip it around your CreateFile calls all day long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1046473">
				<div id="div-comment-1046473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046473">
			March 21, 2013 at 11:23 am</a>		</div>

		<p>@alegr1: &nbsp;That&#39;s what I assumed as well, but you know what happens when you assume. &nbsp;Although in this case it turns out to be correct.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-entegygmail-com odd alt thread-odd thread-alt depth-1" id="comment-1046483">
				<div id="div-comment-1046483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Entegy' rel='external nofollow' class='url'>Entegy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046483">
			March 21, 2013 at 11:27 am</a>		</div>

		<p>[Because it&#39;s on the other site. -Raymond]</p>
<p>&#8230;Well that explains it. Doesn&#39;t help when I was restricting searches to just this blog. Thanks Raymond!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1046503">
				<div id="div-comment-1046503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046503">
			March 21, 2013 at 2:42 pm</a>		</div>

		<p>WOW64 as it was implemented is an epic overarchitecture designed to solve minor problems by cost of major mess of overcomplication that subsequently caused major problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046523">
				<div id="div-comment-1046523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046523">
			March 21, 2013 at 3:44 pm</a>		</div>

		<p>&quot;Wow64Â­DisableÂ­Wow64Â­FsÂ­RediÂ­rection&quot; (along with its siblings) is a strong contender in the &quot;most awkwardly named function&quot; competition. It&#39;s not just long, it&#39;s redundant and arrhythmical.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1046533">
				<div id="div-comment-1046533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Neely</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046533">
			March 21, 2013 at 6:05 pm</a>		</div>

		<p>@Joshua</p>
<p>Just do what 99% of competent programmers who didn&#39;t read this blog and don&#39;t know about the SysNative trick would do: &nbsp;See that redirect is disabled on a per thread basis and move whatever needs to be done without it to a new thread that doesn&#39;t do anything else.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046543">
				<div id="div-comment-1046543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nobody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046543">
			March 21, 2013 at 11:02 pm</a>		</div>

		<p>Of course, that the redirection happens at all could be considered a global solution to a local problem. &nbsp;&quot;Say, we have a few apps that are broken. &nbsp;I know, I&#39;ll fix this by changing how the filesystem works from underneath them!&quot; &nbsp;I guess somebody took a look at this question and either didn&#39;t see that this is a weird thing to do, or they made the assesment that the benefits outweigh the ickiness.</p>
<div class="post">[<em>32-bit applications run in an emulator. This is part of the emulation &#8211; hiding the 64-bit system from them. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1046563">
				<div id="div-comment-1046563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046563">
			March 22, 2013 at 1:47 am</a>		</div>

		<p>Does Explorer itself disable the redirection and display you the &quot;real&quot; filesystem?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046573">
				<div id="div-comment-1046573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046573">
			March 22, 2013 at 4:03 am</a>		</div>

		<p>@AC: Explorer is 64-bit so doesn&#39;t have to worry about Wow64 redirection.</p>
<p>I wonder why C:Windowssystem64 was not used in the first place, but it&#39;s too late to worry about that now.</p>
<div class="post">[<em>I thought I explained this already. It would break all batch files which hard-coded C:WindowsSystem32. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1046593">
				<div id="div-comment-1046593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046593">
			March 22, 2013 at 6:09 am</a>		</div>

		<p>@JM:</p>
<p>Re: the &quot;most awkwardly named function&quot; competition, how about a function named disable_periodic_flows()? I kid you not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046623">
				<div id="div-comment-1046623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046623">
			March 22, 2013 at 7:57 am</a>		</div>

		<p>&quot;WOW64 as it was implemented is an epic overarchitecture designed to solve minor problems by cost of major mess of overcomplication that subsequently caused major problems.&quot;</p>
<p>Minor problems? &nbsp;IA64 still had a 32-bit layer, and it failed. &nbsp;Alpha, MIPS builds of Windows NT that had no x86 emulation layers at all? &nbsp;Failed.</p>
<p>64-bit Windows would be a historical footnote if it didn&#39;t have a 32-bit compatibility layer.</p>
<p>&quot;See that redirect is disabled on a per thread basis and move whatever needs to be done without it to a new thread that doesn&#39;t do anything else.&quot;</p>
<p>Seriously? &nbsp;Make the program multi-threaded over this? &nbsp;Just do what MSDN says: switch it off, open the file, revert it. &nbsp;Leaving it turned off for an entire thread is just asking for it &#8211; sooner or later, someone&#39;s going to do something complicated in the thread and make a mess. &nbsp;The MSDN approach is nice: especially with a comment, it&#39;s very clear to the reader how localized the operation is and nobody&#39;s going to mess it up by accident.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1046693">
				<div id="div-comment-1046693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046693">
			March 22, 2013 at 9:50 am</a>		</div>

		<blockquote><p>
  Alpha, MIPS builds of Windows NT that had no x86 emulation layers at all? &nbsp;Failed.
</p></blockquote>
<p>Hmm, I see to remember running x86 code on an Alpha workstation around the time of NT 3.1.</p>
<p>Maybe it was a DEC-internal thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046753">
				<div id="div-comment-1046753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046753">
			March 22, 2013 at 11:52 am</a>		</div>

		<blockquote><p>
  C:WindowsSystem32
</p></blockquote>
<p>%PATH% hates your guts. It turned out that having a separate /bin and /lib was an idea so far ahead of its time that nobody grasped it, probably not even the UNIX guys.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1046733">
				<div id="div-comment-1046733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046733">
			March 22, 2013 at 11:35 am</a>		</div>

		<p>/*Minor problems? &nbsp;IA64 still had a 32-bit layer, and it failed./*</p>
<p>I already wrote at some comment couple of years ago other way how WOW64 could be implemented &#8211; leave 32 system binaries and registry and put all 64 bit stuff into _new_ folders &#8211; system64 and new KEY_LOCAL_MACHINE contant definition for x64 part of SDK that would contain own Software subkey and same hive mounted ad &#39;SYSTEM&#39; subkey (or even using registry symlinks). At least this would be more logical and natural instead of moving 32bits into syswow64 and doing context-dependent redirections cuz its more declarative approach while every given path point to same location, but not redirected. The only minor (of course IMHO) problem with this solution that when somebody need to port 32 bit app to 64 bit- you need to query if there any hardcoded file path references and used hardcoded &nbsp;integer constant instead of HKEY_LOCAL_MACHINE.</p>
<p>So this would not break x86 code more than existing wow64, this theoretically would make process of porting x32-&gt;x64 a bit more complicated (if you use hardcoded C:WindowsSystem32 or prefer to write (HKEY)0x80000002 instead of HKEY_LOCAL_MACHINE. Is anybody here doing so)? And all his things BTW could be checked by simple static code analyzer or even by app verifier.</p>
<p>/*This is part of the emulation &#8211; hiding the 64-bit system from them*/</p>
<p>but:</p>
<p>1) 32 bit apps still see some 64 binaries in %WINDIR% and C:Program Files</p>
<p>2) they see but can&#39;t touch 64 processes</p>
<p>3) Finally, MS added functionality for emulator to disable emulation</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1046823">
				<div id="div-comment-1046823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1046823">
			March 25, 2013 at 3:08 am</a>		</div>

		<p>[Hmm, I see to remember running x86 code on an Alpha workstation around the time of NT 3.1.]</p>
<p>Non-x86 NT included an x86 emulator for 16-bit Windows and DOS programs, but you couldn&#39;t run 32-bit x86 Windows programs with it. At some point FX!32 was released for Alpha, which allowed Windows NT on Alpha to run 32-bit x86 programs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1047523">
				<div id="div-comment-1047523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130321-00/?p=4883#comment-1047523">
			March 27, 2013 at 9:17 am</a>		</div>

		<p>How does SysNative work? It seems it only exists in WOW64, but even then it&#39;s invisible in file dialogs opened in C:Windows (you have to type explicitly its name to enter it) despite my machine being configured to display &quot;super-hidden&quot; files&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

