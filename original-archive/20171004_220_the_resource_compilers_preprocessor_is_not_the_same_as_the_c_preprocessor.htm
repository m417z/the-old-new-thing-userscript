<html>
<head>
<title>The Resource Compiler's preprocessor is not the same as the C preprocessor</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The Resource Compiler&#8217;s preprocessor is not the same as the C preprocessor</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 4, 2017 / year-entry #221</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It's a very limited subset.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had a project written in Visual C++,
and the Build step failed with an error from the Resource Compiler:
</p>
<pre>
Fatal error RC1015: cannot open include file 'vcruntime.h'
</pre>
<p>
For reasons known (or perhaps not)
only to the original developer of the project,
this particular RC file
had an enormous number of <code>#include</code>d
header files, with many levels of nesting.
Most of the header files employed the
<code>#pragma once</code> directive to avoid
multiple inclusion.
But upon reading of the documentation for the Resource Compiler,
it seems that the <code>RC.EXE</code> compiler doesn't recognize
<code>#pragma once</code>.
</p>
<p>
The customer was able to replicate the problem by creating
a pair of mutually-including header files:
</p>
<pre>
// file1.h
#include "file2.h"

// file2.h
#include "file1.h"
</pre>
<p>
which produced the same "cannot open include file" error message.
</p>
<p>
From this investigation, we are fairly confident that this
is the root cause of the original error message.
If this had been a problem with include files arise in C++ code,
we could have used the <code>/showincludes</code> command line switch
to troubleshoot the problem,
but the <code>RC.EXE</code> compiler
does not provide any switches for diagnosing problems with include files.
</p>
<p>
The customer wanted us to confirm their conclusions,
and also to indicate whether the behavior with <code>RC.EXE</code>
is by design, or whether they should file a defect report.
</p>
<p>
The Resource Compiler's preprocessor is not the same as the C preprocessor,
even though they superficially resemble each other.
In particular,
<code>#pragma</code> is conspiciously missing from
<a HREF="https://msdn.microsoft.com/library/windows/desktop/aa381033(v=vs.85).aspx">
the table of supported preprocessor directives</a>.
</p>
<p>
In order to get the effect of <code>#pragma once</code>
in the Resource Compiler,
you need to use the old-fashioned
<a HREF="https://en.wikipedia.org/wiki/Include_guard">
include guard</a> technique.
</p>
<p>
Or better would be to avoid including so much junk.
Many header files use <code>#ifdef RC_INVOKED</code> to detect
whether they are being included by the Resource Compiler.
When included by the Resource Compiler, they define only the
identifiers needed for resource files and skip over all the other junk.
</p>
<p>
<b>Bonus chatter</b>:
The Resource Compiler differs from the C preprocessor in another
significant way:
As noted
<a HREF="https://msdn.microsoft.com/library/windows/desktop/aa381033(v=vs.85).aspx">
on the same page that has the list of preprocessor directives</a>,
if a file has the extension <code>.c</code> or <code>.h</code>,
then the Resource Compiler ignores all lines that aren't preprocessor
directives.
If you want to include another file that has resource content,
you need to give it another extension.
Typically, that extensions is <code>.rc</code>,
although you may find the extension
<code>.dlg</code> in older code.
</p>
<p>
<b>Bonus bonus chatter</b>:
The Resource Compiler has <i>two</i> expression evaluators.
The one used by the preprocessor follows the C language rules.
But the one used by the resource parser follows its own weird rules.
For example, in resource files, you can say
<code>3 | NOT 2</code>, which is equivalent to
<code>3 &amp; ~2</code>.
It means that in resource files, the <code>|</code> operator is 
not symmetric!</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1311216">
				<div id="div-comment-1311216" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311216">
			October 4, 2017 at 7:12 am</a>		</div>

		<p>And MIDL.exe uses the C compiler to pre-process its input files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1311267">
				<div id="div-comment-1311267" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AberAber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311267">
			October 4, 2017 at 12:36 pm</a>		</div>

		<p>Just to throw out the question &#8211; is there a specific reason why the resource compiler does not support #pragma once?  Are you not supposed to be doing anything remotely like that there?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1311285">
				<div id="div-comment-1311285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311285">
			October 4, 2017 at 1:16 pm</a>		</div>

		<p>The Resource Compiler was written in 1983, before #pragma was invented. And you shouldn&#8217;t be doing anything that fancy with your rc headers anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-pesik odd alt thread-even depth-1 parent" id="comment-1311327">
				<div id="div-comment-1311327" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Peter+Esik' rel='external nofollow' class='url'>Peter Esik</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311327">
			October 5, 2017 at 12:08 am</a>		</div>

		<p>Raymond, where can I report bugs of Windows SDK tools? For Visual Studio for example, there is Connect, and also developercommunity.visualstudio.com. As far as I know, there is no public place like that for the Windows SDK. We&#8217;ve hit an rc.exe bug recently that I&#8217;d like to report (with a nice Word document describing the problem, and a shiny minimal repro).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1311586">
				<div id="div-comment-1311586" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311586">
			October 6, 2017 at 12:51 pm</a>		</div>

		<p>There is a &#8220;Developer Platform&#8221; section in Feedback Hub. (Or just email it to me and I&#8217;ll try to find the right person.)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1311335">
				<div id="div-comment-1311335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AlexShalimov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311335">
			October 5, 2017 at 12:34 am</a>		</div>

		<p>Also found this when tried to use some already existing include files in rc. For example, it doesn&#8217;t support stringizing (and probably token concatenation).</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1311366">
				<div id="div-comment-1311366" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311366">
			October 5, 2017 at 5:26 am</a>		</div>

		<p>Stringizing can be persuaded to work in rc files.  This converts version numbers into a dotted string suitable for the text part of a version resource:</p>
<p>#define STRINGIZE(x) #x<br />
#define EXPAND(x) STRINGIZE(x)</p>
<p>#define MAJOR_VERSION 10<br />
#define MINOR_VERSION 0<br />
#define RELEASE_NUMBER 14393<br />
#define BUILD_NUMBER 0</p>
<p>#define DOTTED_VERSION EXPAND(MAJOR_VERSION) &#8220;.&#8221; EXPAND(MINOR_VERSION) &#8220;.&#8221; EXPAND(RELEASE_NUMBER) &#8220;.&#8221; EXPAND(BUILD_NUMBER)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1311506">
				<div id="div-comment-1311506" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AlexShalimov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311506">
			October 5, 2017 at 11:26 pm</a>		</div>

		<p>How did you know I tried to convert version number to string?! Thanks, I&#8217;ll try this.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-gregm even depth-4" id="comment-1311635">
				<div id="div-comment-1311635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311635">
			October 8, 2017 at 2:13 pm</a>		</div>

		<p>I would guess that it&#8217;s the most common usage of stringizing in RC files.  I&#8217;ve written that same thing multiple times.  :)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1311595">
				<div id="div-comment-1311595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311595">
			October 6, 2017 at 10:02 pm</a>		</div>

		<p>And that&#8217;s how the begin and end blobs of the standard library got to add *yet another* thing to deal with because people do strange things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-odd thread-alt depth-1" id="comment-1311616">
				<div id="div-comment-1311616" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171004-00/?p=97126#comment-1311616">
			October 7, 2017 at 8:20 pm</a>		</div>

		<p>RC is such a clunky POS. It doesn&#8217;t recognize BOM in an UTF-8 file. Does accept UTF-16 files, but doesn&#8217;t recognize BOM. There was that time, when I had a UTF-16 file mangled because of wrong .gitattributes. RC didn&#8217;t complain, but didn&#8217;t produce the resources, either.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

