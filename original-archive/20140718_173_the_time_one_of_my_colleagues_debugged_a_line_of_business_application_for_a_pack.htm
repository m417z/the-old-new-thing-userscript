<html>
<head>
<title>The time one of my colleagues debugged a line-of-business application for a package delivery service</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The time one of my colleagues debugged a line-of-business application for a package delivery service</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 18, 2014 / year-entry #174</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>41</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Back in the days of Windows 95 development, one of my colleagues debugged a line-of-business application for a major delivery service. This was a program that the company gave to its top-tier high-volume customers, so that they could place and track their orders directly. And by directly, I mean that the program dialed the modem (since...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Back in the days of Windows&nbsp;95 development,
one of my colleagues debugged
a line-of-business application for a major delivery service.
This was a program that the company gave to its top-tier
high-volume customers,
so that they could place and track their orders directly.
And by <i>directly</i>,
I mean that the program
dialed the modem
(since that was how computers communicated with each other back then)
to contact
the delivery service's mainframe
(it was all mainframes back then)
and upload the new orders
and download the status of existing orders.&sup1;
</p>
<p>
Version 1.0 of the application had a notorious bug:
Ninety days after you installed the program,
it stopped working.
They forgot to remove the beta expiration code.
I guess that's why they have a version 1.01.
</p>
<p>
Anyway, the bug that my colleague investigated
was that if you entered a particular type of
order with a particular set of options
in a particular way,
then the application crashed your system.
Setting up a copy of the application
in order to replicate the problem
was itself a bit of an ordeal,
but that's a whole different story.
</p>
<p>
Okay, the program is set up, and yup, it crashes exactly
as described when run on Windows&nbsp;95.
Actually, it also crashes exactly as described when
run on Windows&nbsp;3.1.
This is just plain an application bug.
</p>
<p>
Here's why it crashed:
After the program dials up the mainframe to submit the order,
it tries to refresh the list of orders that have yet to be delivered.
The code that does this assumes that the list of undelivered orders
is the control with focus.
But if you ask for labels to be printed,
then the printing code changes focus in order to
display the "Please place the label on the package
exactly like this" dialog,
and as a result, the refresh code can't find the undelivered order list
and crashes on a null pointer.
(I'm totally making this up, by the way.
The details of the scenario aren't important to the story.)
</p>
<p>
Okay, well, that's no big deal.
A null pointer fault should just put up the
Unrecoverable Application Error dialog box
and close the program.
Why does this particular null pointer fault crash the entire system?
</p>
<p>
The developers of the program saw that their refresh code
sometimes crashed on a null pointer,
and instead of fixing it by actually fixing the code so it
could find the list of undelivered orders even if it didn't
have focus,
or fixing it by adding a null pointer check,
they fixed it by adding a null pointer exception handler.
(I wish to commend myself for
resisting the urge to put the word <i>fixed</i> in quotation marks
in that last sentence.)
</p>
<p>
Now, 16-bit Windows didn't have structured exception handling.
The only type of exception handler was a global exception handler,
and this wasn't just global to the process.
This was global to the entire system.
Your exception handler was called for every exception everywhere.
If you screwed it up, you screwed up the entire system.
(I think you can see where this is going.)
</p>
<p>
The developers of the program converted their global exception handler
to a local one by going
to every function that had a
"We seem to crash on a null pointer and I
don't know why" bug and making these changes:
</p>
<pre>
extern jmp_buf caught;
extern BOOL trapExceptions;

void scaryFunction(...)
{
 <font COLOR=blue>if (setjmp(&amp;caught)) return;
 trapExceptions = TRUE;</font>
 ... body of function ...
 <font COLOR=blue>trapExceptions = FALSE;</font>
}
</pre>
<p>
Their global exception handler checks the <code>trapExceptions</code>
global variable,
and if it is <code>TRUE</code>,
they set it back to <code>FALSE</code> and
do a <code>longjmp</code> which sends control
back to the start of the function,
which detects that something bad must have happened and just
returns out of the function.
</p>
<p>
Yes, things are kind of messed up as a result of this.
Yes, there is a memory leak.
But at least their application didn't crash.
</p>
<p>
On the other hand, if the global variable is <code>FALSE</code>,
because their application crashed in some other function that
didn't have this special protection,
or because some other totally unrelated application crashed,
the global exception handler decided to exit the application
by running around freeing all the DLLs and memory associated with their
application.</p>
<p>
<p>
Okay, so far so good, for certain values of <i>good</i>.
</p>
<p>
These system-wide exception handlers had to be written in assembly
code because they were dispatched with a very strange calling
convention.
But the developers of this application
didn't write their system-wide exception handler
in assembly language.
Their application was written in MFC,
so they just went to Visual C++ (as it was then known),
clicked through some <i>Add a Windows hook</i> wizard,
and got some generic <code>HOOKPROC</code>.
(I don't know if Visual C++ actually had an
<i>Add a Windows hook</i> wizard;
they could just have copied the code from somewhere.)
Nevermind that these system-wide exception handlers are not
<code>HOOKPROC</code>s, so the function has the wrong prototype.
What's more, the code they used marked the hook function
as <code>__loadds</code>.
This means that the function saves the previous value of the
<code>DS</code> register on entry,
then changes the register to point to the application's data,
and on exit, the function restores the previous value of <code>DS</code>.
</p>
<p>
Okay, now we're about to enter the
<a HREF="http://gideonsway.wordpress.com/2011/04/06/what-is-a-movie-set-piece/">
set piece</a> at the end of the movie:
Our hero's fear of spiders,
his girlfriend's bad ankle from an old soccer injury,
the executive toy on the villain's desk,
and all the other tiny little clues
dropped in the previous ninety minutes
come together to form an enormous chain reaction.
</p>
<p>
The application crashes on a null pointer.
The system-wide custom exception handler is called.
The crash is not one that is being protected by the global variable,
so the custom exception handler frees the application from memory.
The system-wide custom exception handler now returns,
but wait, what is it returning to?
</p>
<p>
The crash was in the application,
which means that the <code>DS</code> register
it saved on entry to the custom exception handler
points to the application's data.
The custom exception handler freed the application's data
and then returned, declaring the exception handled.
As the function exited,
it tried to restore the original <code>DS</code> register,
but the CPU said,
"Nice try,
but that is not a valid value for the <code>DS</code> register
(because you freed it)."
The CPU reported this error by (dramatic pause) raising an exception.
</p>
<p>
That's right, the system-wide custom exception handler
crashed with an exception.
</p>
<p>
Okay, things start snowballing.
This is the part of the movie where the director uses
quick cuts between different locations,
<a HREF="http://www.thelonelyisland.com/video/cool-guys-explosions">
maybe with a little slow motion thrown in</a>.
</p>
<p>
Since an exception was raised,
the custom exception handler is called recursively.
Each time through the recursion, the custom exception handler
frees all the DLLs and memory associated with the application.
But that's okay, right?
Because the second and subsequent times,
the memory was already freed,
so the attempts to free them again will just fail
with an invalid parameter error.
</p>
<p>
But wait, their list of DLLs associated
with the application included
<code>USER</code>,
<code>GDI</code>,
and
<code>KERNEL</code>.
Now, Windows is perfectly capable of unloading dependent DLLs
when you unload the main DLL,
so when they unloaded their main program, the kernel already
decremented
the usage count on
<code>USER</code>,
<code>GDI</code>,
and
<code>KERNEL</code> automatically.
But they apparently didn't trust Windows to do this,
because after all,
it was Windows that was causing their application to crash,
so they took it upon themselves to free those DLLs manually.
</p>
<p>
Therefore, each time through the loop,
the usage counts for
<code>USER</code>,
<code>GDI</code>,
and
<code>KERNEL</code> drop by one.
<i>Zoom in on the countdown clock on the ticking time bomb.</i>
</p>
<p>
<i>Beep beep beep beep beep</i>.
The reference count finally drops to zero.
The window manager, the graphics subsystem,
and the kernel itself have all been unloaded from memory.
There's nothing left to run the show!
</p>
<p>
Boom, bluescreen.
Hot flaming death.
</p>
<p>
The punch line to all this is that whenever you call the company's
product
support line and describe a problem you encountered,
their response is always,
"Yeah, we're really sorry about that one."
</p>
<p>
<b>Bonus chatter</b>:
What is that <i>whole different story</i>
mentioned near the top?
</p>
<p>
Well, when the delivery service sent the latest version
of the software to the Windows&nbsp;95 team,
they also provided an account number to use.
My colleague used that account number to
try to reproduce the problem,
and since the problem occurred only after the order was
submitted,
she would have to submit delivery requests,
say for a letter to be picked up
from 221B Baker Street
and delivered to 62 West Wallaby Street,
or maybe for a 100-pound package of radioactive material
to be picked up from
1600 Pennsylvania Avenue
and delivered to
10 Downing Street.
</p>
<p>
After about two weeks of this,
my colleague got a phone call from Microsoft's
shipping department.
"What the heck are you doing?"
</p>
<p>
It turns out that the account number my colleague was given
was Microsoft's own corporate account number.
As in a <i>real live account</i>.
She was inadvertently prank-calling the delivery company
and sending actual trucks all over the
country to pick up nonexistent letters and packages.
Microsoft's shipping department and people
from the delivery service's headquarters
were frantic trying to trace where all the bogus
orders were coming from.
</p>
<p>
&sup1;
Mind you, this sort of thing is the stuff that average Joe
customers can do while still in their pajamas,
but back in those days,
it was a feature that only top-tier customers had access to,
because, y'know, mainframe.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (41)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1139293">
				<div id="div-comment-1139293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lars</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139293">
			July 18, 2014 at 7:17 am</a>		</div>

		<p>These can&#39;t be ordinary CPU trap handlers then? Otherwise the second exception should cause a Double Fault trap&#8230;? which, presumably, Windows would not allow an application to change.</p>
<p>The third invocation would then cause a triple fault, which ultimately would reboot the system.</p>
<div class="post">[<em>Operating systems typically do very little in the CPU trap handler. They transfer the work somewhere else. After all, it&#39;s totally expected that an application&#39;s divide-by-zero handler can take a page fault. Besides, if the callback ran in the trap handler, you wouldn&#39;t be able to <code>longjmp</code> back into application code. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139303">
				<div id="div-comment-1139303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139303">
			July 18, 2014 at 7:34 am</a>		</div>

		<p>That story was so worth it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139313">
				<div id="div-comment-1139313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VinDuv</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139313">
			July 18, 2014 at 7:38 am</a>		</div>

		<p>Iâm guessing the whole flaming death crash only happens on 3.1 and not 95, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1139323">
				<div id="div-comment-1139323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139323">
			July 18, 2014 at 7:59 am</a>		</div>

		<p>A little bit of extra knowledge in wrong hands is a dangerous thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139333">
				<div id="div-comment-1139333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139333">
			July 18, 2014 at 8:05 am</a>		</div>

		<p>I see that you also resisted the temptation to put the word &quot;developers&quot; in quotes throughout the article. &nbsp;I get the impression from this story that the &quot;developers&quot; approached this problem with no more skill than a young child uses a set of &quot;My First Toolbox&quot; plastic tools. &nbsp;One wonders why they didn&#39;t fix the code properly rather than going with a global exception handler. &nbsp;It would have made for a much shorter movie, but I doubt that those &quot;devs&quot; were thinking of that at the time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1139343">
				<div id="div-comment-1139343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139343">
			July 18, 2014 at 8:26 am</a>		</div>

		<p>The case is nice but the writing style is leaves much to be desired; article is unduly long, and metaphors are just plain weird. I advise considering use of sub-section headings instead of strange movie metaphors which do not conjure up an image. Also, the part about freeing DS register definitely needs more explaining.</p>
<p>Oh, and footnote #1 is apparently not connected to anything. I searched &quot;1&quot; in both page its web source code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139353">
				<div id="div-comment-1139353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139353">
			July 18, 2014 at 8:28 am</a>		</div>

		<p>This article is of dailyWTF quality.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139363">
				<div id="div-comment-1139363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jimmy Queue</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139363">
			July 18, 2014 at 8:31 am</a>		</div>

		<p>That there is some epic fail on epic proportions. Imagine trying to do that in todays day and age of bright software engineers, I&#39;m fairly sure there are ritualistic punishments of various formats specifically for when you fail this hard!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139373">
				<div id="div-comment-1139373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam V</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139373">
			July 18, 2014 at 8:52 am</a>		</div>

		<p>@Fleet Command &#8211; footnote #1 is at the end of the very first paragraph.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139383">
				<div id="div-comment-1139383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wanna Bee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139383">
			July 18, 2014 at 8:59 am</a>		</div>

		<p>EPIC! &nbsp;What a great story. &nbsp;Thank you for sharing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1139393">
				<div id="div-comment-1139393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139393">
			July 18, 2014 at 9:19 am</a>		</div>

		<p>@Adam V: Yes. Added after my comment.</p>
<div class="post">[<em>I think you merely overlooked it, because I have not edited this post. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd odd alt thread-odd thread-alt depth-1" id="comment-1139403">
				<div id="div-comment-1139403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139403">
			July 18, 2014 at 9:27 am</a>		</div>

		<p>Awesome! &quot;Man, how are we going to get out of this hole?&quot; &quot;Just keep digging!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139413">
				<div id="div-comment-1139413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Guest</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139413">
			July 18, 2014 at 9:32 am</a>		</div>

		<p>@Fleet Command</p>
<p>It was there before your comment. I came here at exactly 7am and read it as soon it as it came up, the footnote marker was there in the first paragraph when originally posted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139423">
				<div id="div-comment-1139423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139423">
			July 18, 2014 at 9:39 am</a>		</div>

		<p>many commentators missed key word &quot;Mainframe&quot;. You do not know how hard to set up a test case with it, even the excellent developers had a lot of trouble to deal with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139433">
				<div id="div-comment-1139433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GrumpyYoungMan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139433">
			July 18, 2014 at 9:43 am</a>		</div>

		<p>Good grief. &nbsp;And people have the temerity to say we have bad software practices?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139443">
				<div id="div-comment-1139443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139443">
			July 18, 2014 at 10:11 am</a>		</div>

		<p>&#8230;</p>
<p>&#8230;</p>
<p>&#8230;I can&#39;t stop crying. With laughter, mind you, with laughter.</p>
<p>The final bit just nails it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139463">
				<div id="div-comment-1139463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">not important</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139463">
			July 18, 2014 at 10:36 am</a>		</div>

		<p>It&#39;s amazing how many things had to go wrong for the system to crash. Like Raymond said in another post &#8211; the system has lots of redundancy built-in; sub-systems cover for each other and make up for errors elsewhere. And Raymond &#8211; if there is a &quot;Swordfish 2&quot; sequel you deserve to write the action scenes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139473">
				<div id="div-comment-1139473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139473">
			July 18, 2014 at 10:39 am</a>		</div>

		<p>@Jim: the problem in this case was not the mainframe, but rather, in the programming practices used by the people who programmed the Windows app. &nbsp;As I read it, the root cause was a bug in their GUI: one component expected a specific control to have focus, while in one corner case, another control had focus, which led to an unhandled null pointer. &nbsp;Tell me, what about that involves a mainframe? &nbsp;It looks to me like Windows GUI programming bug compounded by ill-considered attempts at fixing it.</p>
<div class="post">[<em>The point is that they didn&#39;t have a test deployment because the company could not afford to have two mainframes (one for production and one for test). All testing had to be done against live data, not even a test account! (See Bonus Chatter.) The only way to test the code was to <span style="text-decoration:underline;">place a real live order</span> and then presumably cancel it immediately and hope the accounting department doesn&#39;t get mad at you. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139483">
				<div id="div-comment-1139483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139483">
			July 18, 2014 at 10:50 am</a>		</div>

		<p>&gt;(since that was how computers communicated with each other back then)</p>
<p>Come now; they had X.25 in Canada (over leased lines, or however you say that in Canadian) in the late 1970s.</p>
<div class="post">[<em>A delivery service customer is unlikely to have X.25. They had a telephone line and a fax machine. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt thread-odd thread-alt depth-1" id="comment-1139493">
				<div id="div-comment-1139493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139493">
			July 18, 2014 at 11:32 am</a>		</div>

		<p>@FleetCommand: Â«Â¹Â» character cannot be found with `findstr 1&gt;`</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1139503">
				<div id="div-comment-1139503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139503">
			July 18, 2014 at 12:10 pm</a>		</div>

		<p>[I think you merely overlooked it, because I have not edited this post. -Raymond]</p>
<p>True. I might have. Please consider that sentence recanted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139513">
				<div id="div-comment-1139513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139513">
			July 18, 2014 at 12:17 pm</a>		</div>

		<p>@morlamweb, at that time the Mainframe would cause a fortune to have one, and not saying for two. Also set up the mirror operations on the test would be impossible as well. So I am not saying that were the good practice, in the business world we all have to cut the corners?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139523">
				<div id="div-comment-1139523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jas88</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139523">
			July 18, 2014 at 12:17 pm</a>		</div>

		<p>The root problem here is the circular dependency: Microsoft being both a client of and a supplier to the delivery company. (Mostly tongue in cheek, but of course if MS hadn&#39;t already been genuine customers, they couldn&#39;t have assigned the genuine corporate account as the &#39;test&#39; one!)</p>
<p>I recall a story (DailyWTF?) about a test address &#8211; an online bookseller had a special test address and book title. For test purposes, they&#39;d order a specific children&#39;s book, for a particular address; the logic further down the pipeline knew to ignore orders for that particular combination, so it was safe. Up until the marketing department started doing data mining, and stumbled across this hidden gem of a book in their catalog, which clearly had a huge following in that region&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1139533">
				<div id="div-comment-1139533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139533">
			July 18, 2014 at 12:27 pm</a>		</div>

		<p>@Jimmy Queue:</p>
<p>&gt;Imagine trying to do that in todays day and age of bright software engineers,</p>
<p>Just this morning, someone posted a question titled &quot;Make sure an address is valid&quot; on osronline.com NTDEV forum. It presents an abomination of even greater scale.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139563">
				<div id="div-comment-1139563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark VY</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139563">
			July 18, 2014 at 2:22 pm</a>		</div>

		<p>I disagree with Fleet Command. &nbsp;The movie metaphors worked great for me, to the point that I feel like I just watched the best trailer ever!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1139573">
				<div id="div-comment-1139573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139573">
			July 18, 2014 at 3:59 pm</a>		</div>

		<p>The movie metaphors are Titanics of metaphors!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1139583">
				<div id="div-comment-1139583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139583">
			July 18, 2014 at 4:26 pm</a>		</div>

		<p>@alegr1: Titanic has a villain with desk and slow-motion scenes? Nice thing I decided to watch Phantom&#39;s Menace instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139453">
				<div id="div-comment-1139453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139453">
			July 18, 2014 at 10:30 am</a>		</div>

		<p>Yes, this is an *epic* WTF. Layer after layer of disastrous decissions piled to create a monster of incredible dimensions.</p>
<p>@VinDuv: I guess it also killed Windows 95. Not only the article hints that, also, many of Windows 95&#39;s system componentes (in particular, most of User and GDI) were 16-bit. Remember that Windows 95 architecture is based in Windows 3.x Enhanced Mode, adapted to run 32-bit processes inside the system virtual machine (the one used for 16-bit tasks). User and GDI were actually 16-bit DLLs called by thunking from 32-bit processes, so if you achieved to unload them from a 16-bit task, you were dead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139593">
				<div id="div-comment-1139593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139593">
			July 19, 2014 at 3:40 am</a>		</div>

		<p>16-bit Windows did simulate local exception handling, but it was hardwired only to work for certain system DLLs (it was probably implemented using the global exception handler looking to see which DLL the exception happened in, and if it was a recognised DLL, performing some local exception handling) so the bogus part of the code was failing to let Windows terminate the process for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139603">
				<div id="div-comment-1139603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139603">
			July 19, 2014 at 1:22 pm</a>		</div>

		<p>I still blame them for incompetent mainframe operations. IBM mainframes have had virtualization since 1972! And partitioning, physical or logical, has been around since then. After all, are they developing software right on their live system?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139613">
				<div id="div-comment-1139613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139613">
			July 19, 2014 at 3:14 pm</a>		</div>

		<p>@Jon: given everything else we&#39;ve learned about them so far, would you be shocked to find out they? &nbsp;I wouldn&#39;t even be surprised.</p>
<p>There&#39;s actually a lighter weight solution: have the concept of a test account. &nbsp;Any orders placed by a test account do not get fulfilled.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-paulcoddingtonhotmail-com odd alt thread-odd thread-alt depth-1" id="comment-1139623">
				<div id="div-comment-1139623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Paul+Coddington' rel='external nofollow' class='url'>Paul Coddington</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139623">
			July 19, 2014 at 5:32 pm</a>		</div>

		<p>&quot;There&#39;s several reasons why your application crashed, but let&#39;s just stick to the technical ones for now&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139633">
				<div id="div-comment-1139633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139633">
			July 19, 2014 at 5:55 pm</a>		</div>

		<p>I want to believe that this story has at least some basis in reality, but then I see parts like:</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;* &quot;I&#39;m totally making this up, by the way. The details of the scenario aren&#39;t important to the story.&quot;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;* &quot;I don&#39;t know if Visual C++ actually had an Add a Windows hook wizard; they could just have copied the code from somewhere.&quot;</p>
<p>So at least some of it is admittedly false. But are those the only parts that were embellished, or that are outright nonsense?</p>
<p>While some totally true stories are quite unbelievable and absurd, and there&#39;s a lot of insight that can be obtained from them, fictional stories littered with inaccuracies or just plain misinformation are more harmful than helpful.</p>
<p>&#8211; Jeff</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1139653">
				<div id="div-comment-1139653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139653">
			July 20, 2014 at 8:44 am</a>		</div>

		<p>@Jeff:</p>
<p>Reverse rule 34: If you totally make up an engineering WTF, there is somewhere a real guy who committed that IRL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139663">
				<div id="div-comment-1139663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139663">
			July 20, 2014 at 3:50 pm</a>		</div>

		<p>In your blog and book I have so often read that Microsoft helped big companies with debugging or by adding compatibility fixes to Windows. I wonder how many such a support did cost and if it is still offered, or just during the Windows 95 era.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139673">
				<div id="div-comment-1139673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139673">
			July 20, 2014 at 3:58 pm</a>		</div>

		<p>And another question: do the vendors give you the source code of their software or do you need to debug with debug symbols only (or worse, only by reverse engineering)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1139683">
				<div id="div-comment-1139683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139683">
			July 20, 2014 at 4:57 pm</a>		</div>

		<p>@Daniel: AFAIK even MS&#39;s own Office products don&#39;t provide debug symbols to the public.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1139693">
				<div id="div-comment-1139693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139693">
			July 20, 2014 at 6:33 pm</a>		</div>

		<p>The Explosion MV was one of my favorite a few years ago. Bonus point for the ironic action they do at the end. XD</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139703">
				<div id="div-comment-1139703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139703">
			July 21, 2014 at 1:11 am</a>		</div>

		<p>To paraphrase JWZ: you have an application problem &#8211; you decide to handle it using some combination of setjmp() and longjmp(). &nbsp;You now have two (or possibly uncountably many) problems. &nbsp;Even thinking about using them should count as a code smell. &nbsp;Actually using them is almost always an error, and often should be considered a discplinary offense.</p>
<p>/ Exception: geniuses</p>
<p>// Non-exception: Me (and, in all likelihood, you)</p>
<p>/// Also between creat() and longjmp(), what did Krnghn &amp; Rtchy have against vowels? </p>
<p>//// (I assume JMP was an instruction on whatever machine (PDP-11??) they wrote C on).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139713">
				<div id="div-comment-1139713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1139713">
			July 21, 2014 at 2:38 am</a>		</div>

		<p>@GWO: IIRC, standard C function names are short because K&amp;R used a linker that only considered the first 6 characters of symbol names for uniqueness</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1140983">
				<div id="div-comment-1140983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140718-00/?p=463#comment-1140983">
			July 23, 2014 at 2:41 pm</a>		</div>

		<p>@jas88: Who&#39;s Got The Monkey?</p>
<p>And it was, indeed, the Daily WTF :)</p>
<p><a rel="nofollow" target="_new" href="http://thedailywtf.com/Articles/Ive-Got-The-Monkey-Now.aspx">thedailywtf.com/&#8230;/Ive-Got-The-Monkey-Now.aspx</a> </p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

