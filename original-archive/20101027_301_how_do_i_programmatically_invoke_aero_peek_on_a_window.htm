<html>
<head>
<title>How do I programmatically invoke Aero Peek on a window?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I programmatically invoke Aero Peek on a window?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 27, 2010 / year-entry #302</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>27</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to know if there was a way for their application to invoke the Aero Peek feature so that their window appeared and all the other windows on the system turned transparent. No, there is no such programmatic interface exposed. Aero Peek is a feature for the user to invoke, not a feature...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer wanted to know if there was a way for their application to invoke the <a href="http://blogs.msdn.com/e7/archive/2008/11/20/happy-anniversary-windows-on-the-evolution-of-the-taskbar.aspx"> Aero Peek feature</a> so that their window appeared and all the other windows on the system turned transparent.</p>
<p> No, there is no such programmatic interface exposed. Aero Peek is a feature for the user to invoke, not a feature for applications to invoke so they can draw attention to themselves. </p>
<p> Yes, I realize you wrote a program so awesome that all other programs pale in comparison, and that part of your mission is to make all the other programs <i>literally</i> pale in comparison to your program. </p>
<p> Sorry. </p>
<p> Maybe you can meet up with <a href="http://blogs.msdn.com/oldnewthing/archive/2009/12/22/9939868.aspx"> that other program that is the most awesome program in the history of the universe</a> and share your sorrows over a beer. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (27)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-869623">
				<div id="div-comment-869623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cyrill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869623">
			October 27, 2010 at 7:08 am</a>		</div>

		<p>What about using this supposed feature for writing shell replacement?</p>
<div class="post">[<i>Then the question would have been &quot;How do I invoke Aero Peek on some <span style="text-decoration:underline;">other</span> window?&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869633">
				<div id="div-comment-869633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869633">
			October 27, 2010 at 7:14 am</a>		</div>

		<p>You so need to create a &quot;I bet somebody got a really nice bonus for that feature&quot; tag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869643">
				<div id="div-comment-869643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869643">
			October 27, 2010 at 7:47 am</a>		</div>

		<p>So is there an API for invoking Aero Peek on another window? &nbsp;If you were writing a shell replacement (or shell-like program), it&#39;d be perfectly reasonable to want to draw a preview of one of your child windows when the mouse is over a particular portion of your program&#39;s window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869663">
				<div id="div-comment-869663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869663">
			October 27, 2010 at 7:50 am</a>		</div>

		<p>Err, replace &quot;draw a preview of one of your child windows&quot; with &quot;make all but one of your child windows transparent like Aero Peek does&quot;. &nbsp;I apparently confused my Aero features by failing to read properly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson even thread-even depth-1" id="comment-869703">
				<div id="div-comment-869703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869703">
			October 27, 2010 at 8:29 am</a>		</div>

		<p>It&#39;d be handy if the DWM had an API for detecting when it&#39;s distorting a window. Not for doing the distortions but for knowing when they&#39;re being done (or when they start/stop).</p>
<p>If you&#39;re doing something where what&#39;s shown in your window is supposed to match-up with screen coordinates (or have multiple windows acting in concert) it&#39;s useful to know if DWM is in the middle of an open/close/min/max animation and not really showing the window&#39;s pixels at the coordinates the OS says they&#39;re at.</p>
<p>You can disable those animations for a window but that&#39;s throwing the baby out with the bathwater. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869713">
				<div id="div-comment-869713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869713">
			October 27, 2010 at 8:59 am</a>		</div>

		<p>I wish there was an API to arbitrarily scale and/or transform the contents of a single DWM window though.</p>
<p>&quot;Some&quot; apps don&#39;t play well with high-DPI, but I do not want to globally enable DPI scaling, would like to just be able to scale a specific window (Virtual PC comes as an example).</p>
<p>I know the DWM can do it, it&#39;s a sad thing not more of its capabilities are exposed through APIs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869733">
				<div id="div-comment-869733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chrismcb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869733">
			October 27, 2010 at 10:58 am</a>		</div>

		<p>The first thing I do on a new system is turn the stupid Aero feature off. I don&#39;t need to see through my title bars. So then I install a new app, and it wants nice rounded corners, with a shadow&#8230; Ohhh and while we are at it, lets draw the title bar as transparent.</p>
<p>So now I have one window that looks different than all the others, with a stupid transparent title bar. And of course it doesn&#39;t always draw properly. Sometimes part of the window shows on top of whatever window is over it. Why can&#39;t apps just play nice. If I wanted to be able to see through my title bars I would have turned the stupid aero look on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869743">
				<div id="div-comment-869743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">miniak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869743">
			October 27, 2010 at 11:02 am</a>		</div>

		<div class="post">[<i>Undocumented functions deleted. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869753">
				<div id="div-comment-869753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869753">
			October 27, 2010 at 11:06 am</a>		</div>

		<p>@miniak: It&#39;s people like you whose software breaks in the next version of Windows because you start poking around in undocumented functionality, and then Raymond has to write compatibility shims for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-869763">
				<div id="div-comment-869763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869763">
			October 27, 2010 at 11:22 am</a>		</div>

		<p>Sure, just install a mouse filter driver and programmatically move the mouse pointer over your app&#39;s taskbar button.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869653">
				<div id="div-comment-869653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869653">
			October 27, 2010 at 7:49 am</a>		</div>

		<p>How do I invoke Aero Peek on some *other* window?</p>
<p>(note: I&#39;m only asking that because you suggested it, Raymond. I still the ability to do that would most likely be used for evil rather than good)</p>
<div class="post">[<i>That power would be used for evil. (See this post.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-869783">
				<div id="div-comment-869783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869783">
			October 27, 2010 at 3:11 pm</a>		</div>

		<p>Since your app is so totally awesome, simply kill all other running processes. There&#39;s no need to be running anything else anyway. No need for Aero Peek either!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869693">
				<div id="div-comment-869693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869693">
			October 27, 2010 at 8:13 am</a>		</div>

		<p>&gt; How do I invoke Aero Peek on some *other* window?</p>
<p>Easy. Since you are the shell, you can hide all other windows and draw the outlines yourself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869803">
				<div id="div-comment-869803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869803">
			October 27, 2010 at 6:19 pm</a>		</div>

		<p>On the other hand, I think it would be awesome to implement Aero Peek like feature in MDI forms with icon like toolbar.</p>
<p>While you can iterate your child window and set their Form.Opacity property or calling UpdateLayerWindow() API, the resulting effect is not quite as cool as Aero Peek IMO&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869813">
				<div id="div-comment-869813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pete</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869813">
			October 27, 2010 at 6:20 pm</a>		</div>

		<p>So glad MS learnt not to give API&#39;s to things like this. The number of apps that try to put themselves on startup is bad enough. User choice settings should be left to the user, glad their is no easy way to put apps on the W7 taskbar either &quot;Although I discovered their is a hacky way in windows scripting&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869773">
				<div id="div-comment-869773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869773">
			October 27, 2010 at 2:22 pm</a>		</div>

		<p>@Maurits</p>
<p>Clearly MSDN blogs needs a +1, Evil moderation option.</p>
<p>Of course, maybe a better option would be to install a second mouse* via some kind of virtual mouse driver which you can position at will. &nbsp;That way you won&#39;t even disrupt the user while making sure they know how awesome your program is. &nbsp;And even though you&#39;ll probably break every program that interacts with the mouse in any way, it&#39;s totally worth it because of the sweet bonus you&#39;ll get for it :)</p>
<p>* <a rel="nofollow" target="_new" href="http://cpnmouse.sourceforge.net/install.html" rel="nofollow">cpnmouse.sourceforge.net/install.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869823">
				<div id="div-comment-869823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869823">
			October 27, 2010 at 10:16 pm</a>		</div>

		<p>Maurits: In theory you shouldn&#39;t actually need to move the mouse pointer; you should be able to do it just by sending the right WM_MOUSE* messages to the right window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869833">
				<div id="div-comment-869833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">miniak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869833">
			October 28, 2010 at 1:33 am</a>		</div>

		<p>Looks like it is not allowed here to mention undocumented functions&#8230; Sorry for that. I just wanted to point out that it is possible with some effort and the right tools.</p>
<p>@Adam Rosenfield: I don&#39;t use this in any publicly available software. It&#39;s just my experiments. No one is going to get hurt :)</p>
<p>@Raymond: At least the 2 functions which convert between the real window and its ghost window (when hung) could be public. I can image legitimate use for this (Process Explorer window selection tool would select the real process on hung windows, not the DWM&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869863">
				<div id="div-comment-869863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Bloom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869863">
			October 28, 2010 at 6:32 am</a>		</div>

		<p>Microsoft shouldn&#39;t have undocumented API calls. If they really don&#39;t want anyone calling the APIs, they shouldn&#39;t export them in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869873">
				<div id="div-comment-869873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869873">
			October 28, 2010 at 7:40 am</a>		</div>

		<p>@Ken</p>
<p>That&#39;s just unworkable because it requires them to write documentation for general consumption, not just internal use (which I would assume is much less stringent in its requirements).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869883">
				<div id="div-comment-869883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hidden APIs = unlawful APIs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869883">
			October 28, 2010 at 7:42 am</a>		</div>

		<p>It&#39;s time to lobby EU to force MS releasing these undocumented APIs, as they did with SMB and other stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869893">
				<div id="div-comment-869893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869893">
			October 28, 2010 at 8:41 am</a>		</div>

		<p>Ken Bloom: Are you suggesting that every single function export in every single DLL is a public API that needs to be documented and maintained in perpetuity? Because that&#39;s what it sounds like.</p>
<p>Do you really believe that everything should be statically linked except for the few functions that are intended for public use?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869923">
				<div id="div-comment-869923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869923">
			October 28, 2010 at 10:49 am</a>		</div>

		<blockquote><p>
  It&#39;s time to lobby EU to force MS releasing these undocumented APIs, as they did with SMB and other stuff.
</p></blockquote>
<p>&#8230;and in 5 years time when everybody&#39;s PC is a screaming nightmare of misbehaving apps with the OS completely clogged by compatibility hacks you can sit back and smugly think &quot;oh well, at least I did the right thing&quot;.</p>
<p>Why pick on MS all the time anyway? &nbsp;It&#39;s getting old and boring. &nbsp;There are other software vendors you know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869943">
				<div id="div-comment-869943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-869943">
			October 28, 2010 at 4:28 pm</a>		</div>

		<p>Microsoft shouldn&#39;t copy-protect its software. If they really don&#39;t want anybody to pirate it, they shouldn&#39;t release it in the first place.</p>
<p>Seriously, though, one should keep in mind that the division between undocumented and documented APIs is for the benefit of the developers, not their detriment. It gives them an assurance that the documented calls will be available in future versions of the product, while providing a documented interface to any (sensible) parts of the OS &#8212; so there should be no need to use undocumented interfaces. If they didn&#39;t, that would indeed be a sad oversight *cough* NTFS defrag *cough*, but that doesn&#39;t make it a good idea to use undocumented interfaces.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-870033">
				<div id="div-comment-870033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-870033">
			October 29, 2010 at 10:21 pm</a>		</div>

		<p>&quot;Microsoft shouldn&#39;t copy-protect its software.&quot;</p>
<p>I remember Bill Gates taking a stand against doing so.</p>
<p>Anyway, I think it is probably because Marketing is thinking that you draw attention on a computer the same way you do on TV.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-870043">
				<div id="div-comment-870043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-870043">
			October 30, 2010 at 9:02 am</a>		</div>

		<p>@Maruqess:</p>
<p>Unfortunately my experience says the documented method may change, but the undocumented method continues to work.</p>
<p>Specific example: custom security module API changed from GINA to Credential Provider but the undocumented method involving an undocumented API continued to work. It got broke once on Server 2003, but that turned out to being LocalSystem doesn&#39;t carry the required privilege anymore, so logging on as a super-privileged local user did the trick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-870373">
				<div id="div-comment-870373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jorge Coelho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101027-00/?p=12433#comment-870373">
			November 1, 2010 at 10:34 am</a>		</div>

		<p>[That power would be used for evil. (See this post.) -Raymond]</p>
<p>Raymond, even a fork can be used for evil. So, do we ban forks and knives and eat with our hands? Of course not.</p>
<p>It is up to the user to chose which applications he wants to run on his system. If an application misbehaves, or behaves in an evil way, the user has a choice NOT to run it. When Microsoft decides to play God and starts deciding for others what is evil and what isn&#39;t, it is limiting developers on what they can do and users on what they can run. Unless Microsoft then abides by their own rules (and we know they don&#39;t) then the only evil thing going on is Microsoft itself. But enough of the philosophical talk, lets give a *single* practical example:</p>
<p>Hundreds of thousands of Windows users run &#39;docks&#39; &#8211; we all know what a dock is by running or seeing videos of Apple&#39;s MacOSX dock (even though the concept of &#39;docks&#39; was invented long before it). These dock applications are called &#39;shell enhancements&#39;, and *one* of their purposes is to replace or enhance the Windows taskbar (yes, even the mighty Windows 7 &quot;superbar&quot;, which is, more and more, behaving like a dock &#8211; even though a very limited one because of Microsoft&#39;s &#39;one UI to suit all&#39; approach; which I am not bashing, mind you, it is necessary).</p>
<p>To replace the Windows taskbar you need to be able to list running applications, and, just as important, the Windows system tray (notification area). However, even though Microsoft has been very much aware of the existence of these shell enhancements for years, there is no public/documented API to, at the very least, enumerate notification items.</p>
<p>The only way this can currently be accomplished is by reading Explorer&#39;s private memory and walking the undocumented notification area structure. This can &#8211; and will &#8211; break between different Windows versions, forcing developers to update their code every time a new Windows version is released (not a biggie).</p>
<p>Now, if you are a developer making &#39;vanilla&#39; Windows applications (and I don&#39;t mean this as an insult) it will be hard for you to understand why I think Raymond&#39;s and Microsoft&#39;s approach is wrong. If, on the other hand, you are a developer &#39;pushing the edge of what is possible&#39; and constantly running into these roadblocks &#8211; and Microsoft&#39;s &#39;oh, that can be used for evil&#39; attitude &#8211; which, unfortunately, can only be overcome by &#39;hacks&#39; and resorting to undocumented APIs, you will understand very well what I mean.</p>
<p>For a dock (and many other shell enhancement applications), a public and documented API for Aero Peek, which would be *user initiated*, would be very useful. Again, because Microsoft is playing God, we have to resort to undocumented calls like those Miniak described. </p>
<p>Remember that it&#39;s those who think different and push the envelope of what is possible that make things evolve. Cutting their legs and then reproaching them because they have no choice but to resort to undocumented ways to accomplish their goals, is a bit stupid, IMO.</p>
<div class="post">[<i>We&#39;ve already seen what happens when you let things to be used for evil, and Windows is <span style="text-decoration:underline;">still</span> trying to clean up the mess it created. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

