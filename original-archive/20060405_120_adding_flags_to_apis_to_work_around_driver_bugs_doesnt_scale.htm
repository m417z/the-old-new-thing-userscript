<html>
<head>
<title>Adding flags to APIs to work around driver bugs doesn't scale</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Adding flags to APIs to work around driver bugs doesn&#8217;t scale</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 5, 2006 / year-entry #121</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>20</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Some people suggested, as a solution to the network interoperability compatibility problem, adding a flag to IShellFolder::EnumObjects to indicate whether the caller wanted to use fast or slow enumeration. Adding a flag to work around a driver bug doesn't actually solve anything in the long term. Considering all the video driver bugs that Windows has...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Some people suggested,
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2006/03/30/564809.aspx">
as a solution to the network interoperability compatibility problem</a>,
adding a flag to <code>IShellFolder::EnumObjects</code> to indicate
whether the caller wanted to use fast or slow enumeration.
</p>
<p>
Adding a flag to work around a driver bug doesn't actually solve anything
in the long term.
</p>
<p>
Considering all the video driver bugs that Windows has had to
work around in the past, if the decision had been made to surface
all those bugs and their workarounds to applications, then
functions like <code>ExtTextOut</code> would have several dozen
flags to control various optimizations that work on all drivers
except one.
A call to <code>ExtTextOut</code> would turn into something like this:
</p>
<pre>
ExtTextOut(hdc, x, y, ETO_OPAQUE |
           ETO_DRIVER_REPORTS_NATIVE_FONTS_CORRECTLY |
           ETO_DRIVER_WILL_NOT_DITHER_TEXT_DURING_BLT |
           ETO_DRIVER_DOES_NOT_LIE_ABOUT_LOCAL_TRANSFORMS |
           ETO_DRIVER_DOES_NOT_CRASH_WITH_STOCK_BRUSHES,
           &amp;rcOpaque, lpsz, cch, NULL);
</pre>
<p>
where each of those strange flags is there to indicate that
you want to obtain the performance benefits enabled by each
of those flags because you know that you aren't running on
a version of the video driver that has the particular bug each
of those flags was created to protect against.
</p>
<p>
And then (still talking hypothetically)
with Windows&nbsp;Vista, you find that your program runs
slower than on Windows&nbsp;XP: Suppose a bug is found in a
video driver where strings longer than 1024 characters come out
garbled.
Windows Vista therefore contained code to break all strings up
into 1024-character chunks, but as an optimization you could
pass the
<code><nobr>ETO_<wbr>PASS_<wbr>LONG_<wbr>STRINGS_<wbr>TO_<wbr>DRIVER</nobr></code>
flag to tell GDI not to use this workaround.
Your Windows&nbsp;XP program doesn't use this flag,
so it now runs slower on Windows&nbsp;Vista.
You'll have to ship an update to your program just to get back
to where you were.
</p>
<p>
It's not limited to flags either.
By this philosophy of "Don't try to cover up for driver bugs
and just make applications deal with them", you would
have had the following strange paragraph in the <code>FindNextFile</code>
documentation:
</p>
<blockquote CLASS=m><p>
If
the <code>FindNextFile</code> function returns <code>FALSE</code>
and sets the error code to
<code><nobr>ERROR_<wbr>NO_<wbr>MORE_<wbr>FILES</nobr></code>,
then there were no more matching files.
Some very old Lan Manager servers (circa 1994) report this error condition
prematurely.
If you are enumerating files from an old Lan Manager server
and the <code>FindNextFile</code> function indicates that there are
no more files, call the function a second time to confirm that there
really are no more files.
</p>
</blockquote>
<p>
Perhaps it's just me,
but I don't believe that
workarounds for driver issues should become contractual.
I would think that
one of the goals of an operating system would be to smooth out
these bumps and present a uniform programming model to applications.
Applications have enough trouble dealing with their own bugs;
you don't want them to have to deal with driver bugs, too.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-366463">
				<div id="div-comment-366463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366463">
			April 5, 2006 at 10:16 am</a>		</div>

		<p>Yes, indeed! The &quot;driver&quot; or whatever under the API surface should recognize the problem with &quot;old server&quot;, that&#8217;s not application&#8217;s business. That&#8217;s why I don&#8217;t understand why Explorer was mentioned in the original story anyway, why isn&#8217;t this all to be solved somewhere &quot;lower&quot;? If I&#8217;m only using API from the application, I certainly don&#8217;t want to know it it&#8217;s &quot;old server&quot; or not, and if the particular server &quot;responds incorrectly to the fast api and correctly to the older one&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366473">
				<div id="div-comment-366473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366473">
			April 5, 2006 at 10:27 am</a>		</div>

		<p>Another way to look at such flags is that they represent a complete violation of the software layering.</p>
<p>The average Win32 app isn&#8217;t supposed to even know that video drivers exist, much less be concerned with the capabilities and/or defects that a particular version of a particular driver might have.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366483">
				<div id="div-comment-366483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.geekswithblogs.net/bradc' rel='external nofollow' class='url'>Brad Corbin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366483">
			April 5, 2006 at 10:39 am</a>		</div>

		<p>A related question:</p>
<p>If the &quot;fix&quot; has to occur at the API call level, and not the application level, does that mean that we are prevented from interacting with the user?</p>
<p>The original discussion had some options like &quot;notify the user that this list might be incomplete.&quot; Would this have to be an application-level communication (Explorer), or could this message come from the IShellFolder::EnumObjects directly? </p>
<p>Its a bit of a violation of best practices, but if the user dialog could come directly from the API, it would bypass the need for the application itself to be aware of and throw the dialog. Remember, we&#8217;re not just talking about Windows Explorer here, we&#8217;re talking about every application that happens to call IShellFolder::EnumObjects.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366543">
				<div id="div-comment-366543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Phylyp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366543">
			April 5, 2006 at 11:37 am</a>		</div>

		<blockquote><p>
  I don&#8217;t believe that workarounds for driver issues should become contractual </p>
<p>That&#8217;s a neat summary.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366553">
				<div id="div-comment-366553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366553">
			April 5, 2006 at 11:42 am</a>		</div>

		<p>The solution lies in the CIFS redirector file system code (kernel) and lanmanserver code, NOT in user-space. &nbsp;Applications should simply never need to know any of this, not even NT subsystems should need to know any of htis. &nbsp;Simply add yet-another-compatibility attribute to the vista/w2ksp3 lanmanserver that clearly indicates that this variant of lanmanserver is hip with fast enumeration. &nbsp;So the redirector looks for this, if present all is well, if not revert to slow enumeration. &nbsp;SAMBA will catch up in time and impliment this new attribute and when it does, its fixed fast enumeration code will work. &nbsp;Then as various vendors finally roll out newer versions of SAMBA &nbsp;that contain both the fix and the new attribute they will just start working.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-366583">
				<div id="div-comment-366583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366583">
			April 5, 2006 at 12:18 pm</a>		</div>

		<p>Brad: there are many, many applications which use the FindFirstFile/FindNextFile API, and not all of them will have UI. You really, really should not throw UI in the middle of a data processing API, and certainly not in a legacy API!</p>
<p>Besides, which window would the hypothetical dialog be parented to? You can&#8217;t use the desktop window because there&#8217;s a good chance other applications will obscure it. A thread may manage multiple top-level windows, so if you just pick one, you may end up picking the wrong one. If you make it always-on-top parented to the desktop, you&#8217;ll annoy the user because now it&#8217;s obscuring some other application.</p>
<p>This is completely avoiding the fact that the UI is unlikely to be of any use to the end user. You&#8217;ll just leave the user with a strong sense of unease, but they&#8217;ll probably just dismiss the dialog without reading it. When quizzed by a more experienced/technically proficient user who observes it they&#8217;ll probably just say, &#8216;oh, it always says that&#8217; without actually having reported it to anyone. I&#8217;ve experienced this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366613">
				<div id="div-comment-366613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/larryosterman/archive/2006/04/05/569099.aspx' rel='external nofollow' class='url'>Larry Osterman's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366613">
			April 5, 2006 at 12:49 pm</a>		</div>

		<p>&amp;amp;nbsp;<br />
<br />In Raymond&#8217;s post today (Adding flags to APIs to work around driver bugs doesn&#8217;t scale), Raymond&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366623">
				<div id="div-comment-366623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366623">
			April 5, 2006 at 2:15 pm</a>		</div>

		<p>Adrian is right about raising the bar on vendors. The problem is that his example is printers, which are somewhat unique. There&#8217;s no automated test you can run to verify that the output you get on paper is what you are supposed to get.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366653">
				<div id="div-comment-366653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.guyswithtowels.com' rel='external nofollow' class='url'>Tim</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366653">
			April 5, 2006 at 3:14 pm</a>		</div>

		<p>&quot;The problem is that his example is printers, which are somewhat unique. There&#8217;s no automated test you can run to verify that the output you get on paper is what you are supposed to get.&quot;</p>
<p>No, but you can do a glance test :)</p>
<p>I once worked on the printing system for a product &#8211; never, ever accept that job, btw; the printer driver bugs will give you nightmares.</p>
<p>A particular HP deskjet printer would sometimes go crazy ape bonkers and produce a page that looked like a toddler had scribbled all over it if you dared to use the Win32 GDI bezier path facility.</p>
<p>That stupidity was topped only by the fantastic PostScript printer driver that shipped with Windows 95 &#8211; if you used the GDI beziers to draw curves, the resulting PostScript output was full of flattened line segments&#8230;d&#8217;oh!</p>
<p>I cursed MS that day&#8230;then checked the credits to find that the driver was supplied by Adobe&#8230;oops!</p>
<p>Not to mention the bug in NT4 GDI that would crash the kernel if you asked it to draw a particular bezier curve&#8230;luckily I wasn&#8217;t the poor person who had to spend 3 days rebooting their machine while they tracked down exactly what curve would make NT4 freeze and die.</p>
<p>We disabled GDI paths in the end &#8211; they just weren&#8217;t ready for production, sadly.</p>
<p>One thing that puzzles me about the original network enumeration problem, and this has only just occurred to me &#8211; &nbsp;is, if even XP doesn&#8217;t try &#8216;fast queries&#8217;, then&#8230;what MS product does? &nbsp;What I mean is, presumably the Samba guys reverse engineered this functionality &#8211; but from what? &nbsp;Does 2003 Server support these fast queries? &nbsp;If so, what was the point, if no clients ever used them? &nbsp;I&#8217;m curious. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366683">
				<div id="div-comment-366683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366683">
			April 5, 2006 at 4:19 pm</a>		</div>

		<p>Tim &#8211; as <a rel="nofollow" target="_new" href="https://bugzilla.samba.org/show_bug.cgi?id=3526" rel="nofollow">https://bugzilla.samba.org/show_bug.cgi?id=3526</a> says, NtQueryDirectoryFile with the level FileIdBothDirectoryInformation exposes it. &nbsp;The FindXxxFile calls don&#8217;t use it yet, but the presumably will on Vista, and SMB2 might make it more important (although I know next to nothing about SMB2). &nbsp;However, any program can run into the bug if it uses NtQueryDirectoryFile (the post was about rewriting Cygwin to use it). &nbsp;Perhaps it&#8217;s used for DFS or offline files?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366733">
				<div id="div-comment-366733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://geekswithblogs.net/ensoftBlog/' rel='external nofollow' class='url'>Eric Newton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366733">
			April 5, 2006 at 6:30 pm</a>		</div>

		<p>This is why I program in the .NET VM&#8230; All of these silly problems are abstracted away. </p>
<p>When I write a program, I&#8217;m simply going to call into a system function, and if there&#8217;s any OS/Driver oddity, then I assume that the VM will handle it&#8230;</p>
<p>Unless of course I really need the optimization, then obviously I&#8217;ll probably extern call into them myself and acknowledge the fact that it&#8217;ll be OS-dependent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366593">
				<div id="div-comment-366593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366593">
			April 5, 2006 at 12:23 pm</a>		</div>

		<p>Sounds like the Windows team does a lot for driver compatibility. &nbsp;</p>
<p>But that doesn&#8217;t scale either.</p>
<p>Printer drivers, for example. &nbsp;There are many, many buggy drivers out there whose quirks the OS doesn&#8217;t manage to shield from the application.</p>
<p>One product I worked on shipped with a database of printer drivers and lists of which compatibility hacks had to be turned on. &nbsp;Nearly every driver we ever tested required at least one workaround. &nbsp;Printing was a huge tech support cost. &nbsp;We built a lab with three hundred printer models and three full-time QA testers for compatibility testing.</p>
<p>Of course, there were always new drivers and printers coming out, so we had a way for the user to turn on the workarounds (as directed by tech support).</p>
<p>The *only* scalable solution to all of these compatibility nightmares is to raise the bar on driver, application, and OS vendors to correctly support their sides of the API contracts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366753">
				<div id="div-comment-366753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://steveg' rel='external nofollow' class='url'>steveg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366753">
			April 5, 2006 at 8:52 pm</a>		</div>

		<p>Eric: said &quot;.NET == no silly problems&quot;</p>
<p>Oh how, you young innocent types make me laugh.</p>
<p>Your current .Net code is probably going to be jumping through silly hoops in the future when it&#8217;s running under .NET 2015.</p>
<p>Read this article about .NET 2.0 backwards compatibility (read the two sidebars, they&#8217;re very interesting real-life examples).<br />
<br /><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/msdnmag/issues/06/03/CLRInsideOut/default.aspx" rel="nofollow">http://msdn.microsoft.com/msdnmag/issues/06/03/CLRInsideOut/default.aspx</a></p>
<p>Quoting the article, this was a proposed (and rejected) fix to String.StartsWith() to work around a compatibility problem: </p>
<p>if (result == true &amp;&amp; input.Length == 6 &amp;&amp; this.Length == 19 &amp;&amp;<br />
<br /> &nbsp; &nbsp;this.Equals(&quot;configProtectedData&quot;) &amp;&amp;<br />
<br /> &nbsp; &nbsp;MethodInfo.GetCurrentMethod().Name.Equals(&quot;VerifySectionName&quot;))<br />
<br />{<br />
<br /> &nbsp; &nbsp;return false;<br />
<br />}</p>
<p>Nothing&#8217;s immune from silliness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366673">
				<div id="div-comment-366673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366673">
			April 5, 2006 at 3:24 pm</a>		</div>

		<p>I certainly agree with &quot;I don&#8217;t believe that workarounds for driver issues should become contractual&quot; &#8211; in fact, the whole post is spot on &#8211; but various programs *do* need to know about the underlying hardware&#8217;s capabilities (especially games, although they&#8217;re a bit special). &nbsp;There loads of places where you can know enough of your system to decide between a two types of reliability, just as you can choose between UDP and TCP.</p>
<p>The redirector doesn&#8217;t (yet) guarantee an accurate file listing, and FindXxxFile and IEnumIDList::Next are already contracted to pass on error codes. &nbsp;However, users demand an accurate list, so I feel a flag &nbsp;RETRY_ON_TRANSITORY_ERROR would be useful, removing the work of determining whether a restart would work from the programmer. &nbsp;But it&#8217;s all a matter of layer and utility &#8211; compare/contrast with <a rel="nofollow" target="_new" href="http://blogs.msdn.com/489807.aspx" rel="nofollow">http://blogs.msdn.com/489807.aspx</a> , especially Explorer&#8217;s behaviour.</p>
<p>Not that I&#8217;m suggesting any of this for the current bug, as that appears to be fixable at the redirector level, or by simply not using fast mode (although I took that as a given).</p>
<p>Mark</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366763">
				<div id="div-comment-366763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366763">
			April 6, 2006 at 12:50 am</a>		</div>

		<p>Tim, I was pointing out the fact that the OS cannot automatically hide printer driver flaws from your application because it does not have any way to test for flaws.</p>
<p>I can write some code to verify if my disk driver is writing the correct data to the disk or if my graphics driver is writing the correct data to the frame buffer, but I cannot write anything that will tell me if my printer&#8217;s driver is writing the correct data to paper.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366783">
				<div id="div-comment-366783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">grg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366783">
			April 6, 2006 at 4:50 am</a>		</div>

		<p>The check should be<br />
<br />if (thisl.Length == 19 &amp;&amp; input.Length == 6 &amp;&amp; result == true &amp;&amp; this.Equals(&quot;configProtectedData&quot;) &amp;&amp;<br />
<br /> &nbsp; MethodInfo.GetCurrentMethod().Name.Equals(&quot;VerifySectionName&quot;))<br />
<br />{<br />
<br /> &nbsp; return false;<br />
<br />}<br />
<br />the check for length == 19 is the most easyest way the if() to be proven false</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366793">
				<div id="div-comment-366793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366793">
			April 6, 2006 at 5:04 am</a>		</div>

		<p>&lt;i&gt;<br />
<br /> The check should be<br />
<br />if (thisl.Length == 19 &amp;&amp; input.Length == 6 &amp;&amp; result == true &amp;&amp; this.Equals(&quot;configProtectedData&quot;) &amp;&amp;<br />
<br /> &nbsp;MethodInfo.GetCurrentMethod().Name.Equals(&quot;VerifySectionName&quot;))<br />
<br />{<br />
<br /> &nbsp;return false;<br />
<br />}<br />
<br />the check for length == 19 is the most easyest way the if() to be proven false&lt;/i&gt;<br />
<br />Perhaps&#8230; But depending on the String.Length implementation, result==true is almost certainly the cheapest check to do, and input.Lenght==6 may very well be faster than this.Length==19. But of course, there&#8217;s no way to show any of this without knowing all the fine details of the inner workings of the string class and the .NET optimizer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366803">
				<div id="div-comment-366803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-366803">
			April 6, 2006 at 9:47 am</a>		</div>

		<blockquote><p>
  &gt; result==true is almost certainly the cheapest check to do<br />
  <br />but it is not very decisive.</p>
<p>Anyway, such a fix would be a dangerous precedence.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-367373">
				<div id="div-comment-367373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://samba.org/~jra' rel='external nofollow' class='url'>Jeremy Allison</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-367373">
			April 6, 2006 at 11:31 pm</a>		</div>

		<p>FYI: This is the fix that tridge suggested to Raymond. No reason why this shouldn&#8217;t work &#8211; and be completely transparent to application code.</p>
<p>No reason to bother userspace code about it,<br />
<br />no reason for GUI changes or looking for<br />
<br />specific versions or detecting Samba as<br />
<br />opposed to any other server, no need to<br />
<br />keep things in &quot;slow&quot; mode now the bug<br />
<br />is fixed.</p>
<p>Jeremy</p>
<p>From tridge:</p>
<p>&quot;If we had run across the error you<br />
<br />described (INVALID_LEVEL from a continue)<br />
<br />then we would have added a bit flag on the<br />
<br />current connection structure to mark this<br />
<br />connection so it won&#8217;t use that level in<br />
<br />future, then repeat the search using a<br />
<br />different level. That means you would get<br />
<br />one useless search on the network with each<br />
<br />connection to a buggy server, but no impact<br />
<br />against non-buggy servers and no user observable<br />
<br />affects. The denial of service attack you<br />
<br />mention with this type of fix doesn&#8217;t happen<br />
<br />as the extra bit is per-connection, not long<br />
<br />lived (trying to remember long lived info<br />
<br />about specific servers is a losing game).&quot;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-371333">
				<div id="div-comment-371333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/04/19/578991.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060405-13/?p=31653#comment-371333">
			April 19, 2006 at 10:00 am</a>		</div>

		<p>Another example of changing the rules after the game is over.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

