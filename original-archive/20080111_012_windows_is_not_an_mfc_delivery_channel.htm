<html>
<head>
<title>Windows is not an MFC delivery channel</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Windows is not an MFC delivery channel</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 11, 2008 / year-entry #13</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>103</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Depending on what version of Windows you're running, there may be a variety of support DLLs for things that aren't formal product components, but which are merely along for the ride. For example, Windows 95 came with MFC30.DLL because the Fax Viewer was written with the help of MFC 3.0. But if you look at Windows 98, MFC30.DLL...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Depending on what version of Windows you're running, there may be a variety of support DLLs for things that aren't formal product components, but which are merely along for the ride. For example, Windows&nbsp;95 came with MFC30.DLL because the Fax Viewer was written with the help of MFC&nbsp;3.0. But if you look at Windows&nbsp;98, MFC30.DLL is gone.</p>
<p> What happened? </p>
<p> What happened is that Windows&nbsp;98 didn't have a fax viewer that used MFC&nbsp;3.0. The fact that some MFC&nbsp;3.0 DLLs wound up on the machine with Windows&nbsp;95 was merely a side effect of the implementation and not a part of the product specification. And in fact, if you chose not to install the Fax Viewer during Windows&nbsp;95 setup, you wouldn't have gotten MFC30.DLL at all either, because MFC30.DLL wouldn't have been needed. </p>
<p> We had a category of Windows&nbsp;98 compatibility bugs from programs that assumed that MFC30.DLL was a contractual part of Windows. If the tester did a minimal install of Windows&nbsp;95 and then installed the application, the application wouldn't run there either. The application vendor simply assumed that MFC was part of Windows, even though it wasn't. In other words, the program didn't work even on Windows&nbsp;95. Is it a bug in Windows&nbsp;98 if the program didn't work on Windows&nbsp;95? </p>
<p> This problem persists today. People go scrounging around the binaries that come with Windows looking for something they can remora. And then they're surprised when those binaries change or vanish entirely. For example, one customer had reverse-engineered the Kodak image viewer in Windows&nbsp;2000 and wanted to keep using it in Windows&nbsp;XP. But <a href="http://support.microsoft.com/?id=308979"> those components are not included in Windows&nbsp;XP</a>; the Kodak image viewer was merely a stopgap solution until the Windows&nbsp;XP fax and image viewer came along. (The linked Knowledge Base article has more information on that product.) I mention this because that customer, a Fortune&nbsp;500 company, was trying to copy the files from Windows&nbsp;2000 and install them onto a Windows&nbsp;XP machine and actually came to us asking for help in what may very well have been a violation of the Windows license agreement! (And certainly a violation of Microsoft's agreement with Kodak.) </p>
<p> (I now predict that everybody will comment on the last two sentences and completely ignore the point of this article.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (103)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-588173">
				<div id="div-comment-588173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588173">
			January 11, 2008 at 10:08 am</a>		</div>

		<p>$@#! dlls!!! &nbsp;Don&#8217;t get them started on that subject Raymond. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588183">
				<div id="div-comment-588183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.farnz.org.uk/' rel='external nofollow' class='url'>Simon Farnsworth</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588183">
			January 11, 2008 at 10:17 am</a>		</div>

		<p>Does Microsoft publish a list of DLLs that they guarantee will be present in a Windows system? I&#8217;m wondering if there&#8217;s an easy check I can set up such that these dodgy binaries don&#8217;t make it past automated QA; alternatively, is there an easy way to identify DLLs that I should ship?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588193">
				<div id="div-comment-588193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588193">
			January 11, 2008 at 10:19 am</a>		</div>

		<p>Speaking of MFC dlls, I&#8217;ve come across a few MFC based applications that install debug versions of the MFC dlls OR depend on them being present. &nbsp;Once I even discovered a $25,000+ engineering simulation package that installed all the app&#8217;s symbol files too.</p>
<p>The former&#8217;s always fun when you&#8217;ve got Visual Studio on your system. &nbsp;It sure makes it easy to poke around in someone elses application. &nbsp;When you get the latter though it&#8217;s like solid gold icing on the cake. &nbsp;What a blast and what a load of laughs.</p>
<p>What are these companies thinking (who do they have building their applications)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588203">
				<div id="div-comment-588203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588203">
			January 11, 2008 at 10:22 am</a>		</div>

		<p>Another way to look at it is the Redist list that comes with VS says that if you use a dll that is in the Redist list then you are required to install that file for your application to work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588233">
				<div id="div-comment-588233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588233">
			January 11, 2008 at 10:40 am</a>		</div>

		<blockquote><p>
  &gt; What are these companies thinking (who do they have building their applications)?
</p></blockquote>
<p>Probably because it makes debugging issues in the retail version easier when performance doesn&#8217;t matter much.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588253">
				<div id="div-comment-588253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588253">
			January 11, 2008 at 10:55 am</a>		</div>

		<p>One the user-side, the most annoying aspect of this is the lack of CRT v8 (VS2005&#8217;s C Run-Time Library) on a freshly-installed windows XP.</p>
<p>It seems that every computer I run into has not the redistributables installed yet.</p>
<p>One may wonder why the VS2005 Redistributables are not distributed as critical update, while something as unfriendly as Internet Explorer 7 (and let&#8217;s NOT talk about the WGA notification &quot;tool&quot;) was&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588263">
				<div id="div-comment-588263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://@newnewthing.com' rel='external nofollow' class='url'>bigfoot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588263">
			January 11, 2008 at 10:56 am</a>		</div>

		<p>Software licensing agreements are evil, and so are the corporations that use them (I just wanted someone to satisfy your prediction, and it might as well be me). &nbsp;</p>
<p>The remainder of your blog is irrelevant. Completely. Who cares about MFC? MFC is dead&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588273">
				<div id="div-comment-588273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588273">
			January 11, 2008 at 10:59 am</a>		</div>

		<blockquote><p>
  &gt;Probably because it makes debugging issues in the retail version easier when performance doesn&#8217;t matter much.
</p></blockquote>
<p>Ok, that may explain why some distribute the debug dlls (in violation of their licensing agreement I might add &#8211; since it&#8217;s forbidden).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588293">
				<div id="div-comment-588293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588293">
			January 11, 2008 at 11:00 am</a>		</div>

		<p>I worked with a developer who made the mistake of depending on the Kodak image controls.</p>
<p>When the client upgraded to XP and his code stopped working he sent them the Kodak DLLs and told them to push them onto 500+ desktops!</p>
<p>Needless to say, the license for those DLLs is now owned by some 3rd party, who might have been interested in the &#163;200,000+ in license fees they were due :)</p>
<p>The really bad thing is there was only a small part of his ActiveX control that depended on the Kodak Dlls, and he could have made a simple code change instead. The client didn&#8217;t/doesn&#8217;t know that those DLLs are unlicensed :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588303">
				<div id="div-comment-588303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588303">
			January 11, 2008 at 11:08 am</a>		</div>

		<blockquote><p>
  &gt;Medinoc &#8211; One may wonder why the VS2005 Redistributables are not distributed as critical update
</p></blockquote>
<p>Ummm, how about for the reason Raymond mentions in the article and its title &#8211; Windows is not an MFC delivery channel. &nbsp;Every computer doesn&#8217;t need those, else they&#8217;d be a part of windows and not redistributables that YOU are suppost to redistribute with your app IF it requires them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588313">
				<div id="div-comment-588313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Seth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588313">
			January 11, 2008 at 11:09 am</a>		</div>

		<p>To Jack Mathews and Thom: there&#8217;s no reason why you can&#8217;t have symbol files for release builds. And you don&#8217;t have to put these symbol files on the production system in order to have easier debugging facilities. Of course, that means you have to change some of VS&#8217; default project settings for release builds but no-one ever claimed that the default settings are the best. Would be a nice subject for one of Raymond&#8217;s blogs&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588323">
				<div id="div-comment-588323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gkdada</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588323">
			January 11, 2008 at 11:09 am</a>		</div>

		<p>@bigfoot</p>
<p>&#8216;MFC is dead&#8217;? What are you? a VB programmer? Go shoot yourself in the (big)foot somewhere else.</p>
<p>MFC is a bunch of classes to ease the programming in VC++ which is pretty much the only tool for somebody wanting/needing better and finer control of their application development. As long as something better doesn&#8217;t come along, VC++ will be alive and so will be MFC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588333">
				<div id="div-comment-588333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Green</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588333">
			January 11, 2008 at 11:09 am</a>		</div>

		<p>I hate worrying about whether a customer has a DLL or not. I statically link as much as I can into the application. I hate shipping unnecessary DLLs, because people can and will lose parts of your application if they know enough to be dangerous. Static linking is considered quaint by many, but it does ease deployment.</p>
<p>(Yes, I know, I can&#8217;t get security updates automatically when dependent libraries update themselves. I&#8217;ll live.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588343">
				<div id="div-comment-588343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">oPossum</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588343">
			January 11, 2008 at 11:11 am</a>		</div>

		<p>This is one of many reasons why I static link to MFC whenever it is pratical to do so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588353">
				<div id="div-comment-588353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588353">
			January 11, 2008 at 11:12 am</a>		</div>

		<p>Simon Farnsworth has a point, I don&#8217;t know of any list that tells me whether the seemingly random dlls dropped into C:WindowsSystem32 (for example) are part of the &#8220;contract&#8221; or just left there to die by a third party. The intermingling of OS components with third-party files is a mess.</p>
<div class="post">[<i>Why are you looking at the system32 to figure out what is contractual and what isn&#8217;t? Why not look at the contract? It&#8217;s like complaining that &#8220;I can&#8217;t tell by looking at a piece of merchandise in the warehouse what the sale price is.&#8221; The price is on the shelf in the store, not in the warehouse. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588363">
				<div id="div-comment-588363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588363">
			January 11, 2008 at 11:18 am</a>		</div>

		<p>&quot;People go scrounging around the binaries that come with Windows looking for something they can remora&quot;???</p>
<p>Well, a remora is a type of fish noted for attaching itself to surfaces, commonly known as a suckerfish.</p>
<p>So to translate, this means &quot;something they can suckerfish&quot;. &nbsp;Or maybe something they can attach to.</p>
<p><a href="http://www.m-w.com" rel="nofollow">http://www.m-w.com</a> gives synonyms of &quot;hindrance&quot; and &quot;drag&quot;. &nbsp;</p>
<p>&quot;People go scrounging around the binaries that come with Windows looking for something they can drag or hinder&quot;.</p>
<p>Thanks for the new word, Raymond!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588373">
				<div id="div-comment-588373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588373">
			January 11, 2008 at 11:24 am</a>		</div>

		<p>To address the posting itself&#8230;</p>
<p>Yes, the the DLLs that appear in C:WindowsSystem32 (or wherever) are merely &quot;implementation details&quot;, and not part of ANY contract.</p>
<p>The implied contract says that Windows will operate. &nbsp;It doesn&#8217;t say how Windows will operate, or how many or which specific DLLs will be present in order to make Windows operate. &nbsp;</p>
<p>In a perfect world, you wouldn&#8217;t concern yourself with the contents of C:Windows, or even have cause to look in there.</p>
<p>Microsoft could decide to rename every single DLL or combine them all into one, or into two, or something, if they chose to, and as long as Windows still operated (including the published APIs that are covered by any consent decrees) the contract would be fulfilled.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588383">
				<div id="div-comment-588383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588383">
			January 11, 2008 at 11:26 am</a>		</div>

		<p>Wow.</p>
<blockquote><p>
  One the user-side, the most annoying aspect</p>
<p>  of this is the lack of CRT v8 (VS2005&#8217;s C</p>
<p>  Run-Time Library) on a freshly-installed</p>
<p>  windows XP.</p>
<p>  It seems that every computer I run into has</p>
<p>  not the redistributables installed yet.
</p></blockquote>
<p>Maybe because it&#8217;s the programmer&#8217;s job to make sure their installer has everything it needs to install the program? Isn&#8217;t this one of those &quot;taxes&quot; Raymond&#8217;s always talking about in this blog?</p>
<blockquote><p>
  One may wonder why the VS2005</p>
<p>  Redistributables are not distributed as</p>
<p>  critical update, while something as</p>
<p>  unfriendly as Internet Explorer 7 (and let&#8217;s</p>
<p>  NOT talk about the WGA notification &quot;tool&quot;)</p>
<p>  was&#8230;
</p></blockquote>
<p>Maybe because the VS2005 Redistributables are not a critical update? I mean&#8230; duh! How many XP computers do you think run software that requires it, but that software didn&#8217;t put it there when it was installed? If that sentence makes sense.</p>
<p>IE7, on the other hand, introduces gobs of security-related features and protections that are obviously apparent to Joe Sixpack. It arguably might not be a &quot;critical update&quot; since IE6 is still supported for security issues, but I have no problem with Microsoft on this one.</p>
<p>And if you don&#8217;t like WGA, well, then eventually you get to the point where you stop griping and use another OS. Microsoft&#8217;s free to do what they want with Windows; if you don&#8217;t like it, run something else.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588393">
				<div id="div-comment-588393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RichB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588393">
			January 11, 2008 at 11:35 am</a>		</div>

		<p>Is the point that the Fax Viewer was written incorrectly and shouldn&#8217;t have placed mfc into WindowsSystem?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588403">
				<div id="div-comment-588403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Avidgator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588403">
			January 11, 2008 at 11:50 am</a>		</div>

		<p>Inre Simon Farsworth and Dave, in a previous life I spent a lot of time with installers. &nbsp;Understanding what is and is not a guaranteed part of Windows can be quite a headache, especially for small companies. &nbsp;There is of course the DLL Database at <a rel="nofollow" target="_new" href="http://support.microsoft.com/dllhelp" rel="nofollow">http://support.microsoft.com/dllhelp</a>, but to use it effectively you need to know and understand the delivery vehicle for every binary that your application depends on.</p>
<p>Alos, the problem is less pronounced now, but early on, you couldn&#8217;t guarantee that people would &quot;follow the rules&quot; for shared items in Sys32&#8230;uninstalling some downloaded game could take MFC with it and wipe out your app&#8230;things have come a long way since then (details better left for linking to many articles Raymond has written or posted on the topic.)</p>
<p>I learned early on &#8211; your installer is the first program that you write that your customers will run. &nbsp;Problems there do not set good expectations for the rest of your applications. &nbsp;As such, it requires planning and testing. &nbsp;Virtualization is a huge help for checking that your installer will work on pristine versions of an OS (as well as ones with &quot;reduced functionality&quot; that occurs when someone deselects items that are present in &quot;Typical&quot; installations.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588413">
				<div id="div-comment-588413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588413">
			January 11, 2008 at 11:52 am</a>		</div>

		<p>It&#8217;s interesting the different approaches different OSes take to the issue of common libraries. &nbsp;VMS, for example, was the distribution channel for the run-time libraries for all of the languages supported by DEC compilers.</p>
<p>Maybe it&#8217;s apocryphal, but an old DEC guy told me that the marketers wanted developers to redistribute the necessary libraries, but the OS engineers were against that, as it would have contributed to problems we now call DLL Hell. &nbsp;To block the marketers, the OS engineers wrote bits of VMS in all of the supported languages (BASIC, Bliss, C, Cobol, Fortran, Pascal, PL/1, etc.). &nbsp;This made the OS dependent on all of the run-time libraries, and thus the libraries had to be distributed with the OS, and reduced the tax on all of the third-party developers shipping software for VAX/VMS.</p>
<p>Granted, MFC is more of a framework than a run-time library for language support, so something like that might not have been included.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588423">
				<div id="div-comment-588423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.smidgeonsoft.com' rel='external nofollow' class='url'>Russell Osterlund</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588423">
			January 11, 2008 at 11:54 am</a>		</div>

		<p>This issue circles the question of what is and what is not part of the Windows operating system. &nbsp;Since there does not seem to be an official list of binaries, where does one look? &nbsp;The Windows directory and its sub-directories? MSDN? The PATH environment variable? &nbsp;The progressive lockdown of the Windows directory in recent versions of Windows goes a long way towards answering the question though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588433">
				<div id="div-comment-588433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588433">
			January 11, 2008 at 11:54 am</a>		</div>

		<p>Seth: Not sure I follow you. On my machine, the default VS config for release builds is to build the symbol file as a separate .pdb. This seems ideal to me: The developer keeps the .pdb for the exact released version of code. If a user has a crash (and you capture a stack trace + load addresses on it), it should be easy for the devloper to figure out exact location by loading that .pdb.</p>
<p>What other settings would be better?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588443">
				<div id="div-comment-588443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588443">
			January 11, 2008 at 11:57 am</a>		</div>

		<blockquote><p>
  &gt; To Jack Mathews and Thom: there&#8217;s no reason why you can&#8217;t have symbol files for release builds. And you don&#8217;t have to put these symbol files on the production system in order to have easier debugging facilities. Of course, that means you have to change some of VS&#8217; default project settings for release builds but no-one ever claimed that the default settings are the best. Would be a nice subject for one of Raymond&#8217;s blogs&#8230; &lt;&lt;
</p></blockquote>
<p>The debug MFC doesn&#8217;t just give you symbology, you also get asserts and mostly valid local variables in the debugger for your application.</p>
<p>Mind you, I&#8217;m not advocating shipping this way, but at the same time, the implication was that people were shipping this way out of sheer ignorance and I just wanted to bring up alternatives.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588453">
				<div id="div-comment-588453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588453">
			January 11, 2008 at 11:58 am</a>		</div>

		<p>The mixing of &#8216;windows&#8217; components and ap&#8217;redistributable&#8217; components somewhat randomly in the system32 directory has been a cause of pain for me lately. &nbsp;We&#8217;ve been trying to ensure that all code we have linked in at runtime is signed. &nbsp;This is great until some other group somehow manages to load a stray copy of the VC runtime from the system32 directory that isn&#8217;t signed because it was dragged onto the system by some other 3rd party. &nbsp;Sure that other group should just fix their component to be more specific about what DLL it is loading (it does install a private copy that is signed), but that is easier said than done in any organization larger than 5 people.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588493">
				<div id="div-comment-588493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588493">
			January 11, 2008 at 12:06 pm</a>		</div>

		<p>Bigfoot, MFC is not dead and thousands of current applications still use it, for better or worse. I&#8217;m no fan of MFC myself but even I still use it when I want to throw together a quick and simple C++ GUI app.</p>
<p>Even if MFC were obsolete it would not make Raymond&#8217;s post irrelevant.</p>
<p>Despite the title mentioning MFC, the moral of the story is that you can&#8217;t depend on the DLLs that happen to be on the HDD in one install of Windows being there in another. That issue may never go away and is independent of MFC, Kodak Image Viewer and so on.</p>
<p>Maybe you&#8217;d prefer articles titled things like &quot;Windows is not a $product_name delivery channel&quot;, but if you can&#8217;t generalise the message from a couple of specific examples then I doubt there&#8217;s much hope for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588503">
				<div id="div-comment-588503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588503">
			January 11, 2008 at 12:09 pm</a>		</div>

		<p>Seth, the debug version executables and the ones with symbol files I was referring to came from outside our company. &nbsp;In the latter case we had purchased a $25,000 license for a piece of specialized engineering software. &nbsp;It was a low volume, high price, market with only a couple competitors to their product. &nbsp;What they delivered to us as a &quot;retail&quot; product was a debug build complete with symbol files. &nbsp;</p>
<p>If you&#8217;re writing and selling software in a market where you can easily command that kind of price for a license would you ship all your customers a debug build complete with symbol files? &nbsp;</p>
<p>It&#8217;d sure make easier for a customer or current or future competitor to reverse engineer your software. &nbsp;That might be all the edge they need to eliminate a need for you or to gain an edge and push you out of the market. &nbsp;If nothing else it&#8217;d ease the process of patching your executable to eliminate its serial number/licensing/fob detection/validation routines &#8211; then your $25k software ends up readily available on the net and there goes your future customer base.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588543">
				<div id="div-comment-588543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588543">
			January 11, 2008 at 12:31 pm</a>		</div>

		<p>I don&#8217;t understand what a handful have a problem with here. &nbsp;The documentation tells you what you need to redistribute if you link to MFC or other Microsoft libraries that aren&#8217;t a standard part of windows. &nbsp; These all come with a list of redistributable files and frequently their own installer. &nbsp; If you link to third party libraries or controls that you&#8217;ve purchased the right to use then their documentation also tells you what files to include with your app. &nbsp;</p>
<p>The only time I&#8217;ve ever seen anyone make this mistake is when they failed to read the documentation or they went willy-nilly adding every activex control on their system into their project as if it were a part of windows they had the right to use.</p>
<p>Learn to read your documentation!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588563">
				<div id="div-comment-588563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588563">
			January 11, 2008 at 12:37 pm</a>		</div>

		<p>Nice to know that bit of information 12 years after Windows 95 was released to the market :) Point being: MS need to cleary document these things, otherwise no one could ever guess which one of the hundreds of files are there for what reason.</p>
<p>Another approach could have been to define some easy to understand (for developers/users) rules, to decide which .dll belong to &quot;core&quot; Windows, which to Windows &quot;options&quot; and which ones were installed by 3rd party applications. Such a simple rule could have been to have let&#8217;s say three different folders for .dlls (core, options, apps). Or another even more clean solution could have been to install this fax application into a completely separate dir somewhere, along with it&#8217;s private .dll dependencies. To make the situation even cleaner, MS could have been avoiding using elements which require such &quot;3rd party&quot; .dlls.</p>
<p>I think it all comes down to the chaotic way the Windows OS folder structure, OS file names, components are organized. Or in fact, not organized at all. Not even in Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588583">
				<div id="div-comment-588583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588583">
			January 11, 2008 at 12:47 pm</a>		</div>

		<p>in reply to early comments (not the article)</p>
<p>As far as I know, you don&#8217;t have the right to distribute the debug version of MFC or C-Run Time. &nbsp;But the majority of programmers are not very smart. Even in a smart company, often a third party utility or pet project is compiled in debug, and then the guy that handles the setup adds that debug dll to the setup. &nbsp;Setup is often given to juniors and an afterthough.</p>
<p>Installing these in the window directory is disastrous, since debug versions of DLLs are not guaranteed to binary compatible between minor updates, and often aren&#8217;t. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588593">
				<div id="div-comment-588593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588593">
			January 11, 2008 at 12:49 pm</a>		</div>

		<p>&quot;Microsoft could decide to rename every single DLL or &#8230;&quot;</p>
<p>Not happening, because every EXE file has import table entries referencing the system DLLs by NAME. Not backward compatible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-someone odd alt thread-odd thread-alt depth-1" id="comment-588603">
				<div id="div-comment-588603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/anony.muos' rel='external nofollow' class='url'>anony.muos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588603">
			January 11, 2008 at 12:52 pm</a>		</div>

		<p>Speaking of the XP Picture Viewer, MS should&#8217;nt&#8217;ve killed it in Vista. The Photo Gallery isn&#8217;t as fast as XP&#8217;s Viewer even on my Core 2 Quad Extreme, neither is the browsing of photos fast enough. People liked XP&#8217;s Viewer for its sheer speed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588613">
				<div id="div-comment-588613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588613">
			January 11, 2008 at 1:25 pm</a>		</div>

		<p>Maybe if MS documented this stuff we wouldn&#8217;t have to guess.</p>
<p>But! &nbsp;It should not come as a surprise to anyone when things change in future versions of Windows. Sure, we may not like the changes or agree with the changes, but things change. &nbsp;Even in the same version of Windows, thanks to Windows Update, changing drivers, new types of hardware, etc.</p>
<p>When it comes to application compatibility, you have to stay on top of things and be ready to work around things and make changes at any time. &nbsp;This is just the way things are.</p>
<p>Btw @someone, you&#8217;re right. &nbsp;The XP Picture Viewer was WAY better than Vista&#8217;s Photo Gallery. &nbsp;I mean come on, they couldn&#8217;t even implement scroll bars?? &nbsp;Maybe MS felt they needed to do a favor to the third party folks who write image viewers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588633">
				<div id="div-comment-588633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arrgghh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588633">
			January 11, 2008 at 1:48 pm</a>		</div>

		<p>Microsoft does document this stuff. &nbsp;</p>
<p>Check the readme files on any Visual Studio distribution and you&#8217;ll find a list or redistributable files. &nbsp;Non-Microsoft compiler? &nbsp;Same deal.</p>
<p>Check the readme files on any (DAO, OleDB, OpenGL,DirectX, etc.) Microsoft package or library and you&#8217;ll find a list of redistributable files. &nbsp;</p>
<p>Open the MSDN help pages for a library or function and you&#8217;re never too far away from discovering where they reside and whether that package is a core part of windows or something with files you need to redistribute.</p>
<p>Guess what, one of the key words to watch for is &quot;redistributable.&quot; &nbsp;Find it and you&#8217;ll find something telling you what files are needed and redistributable or what what files aren&#8217;t (maybe some of both).</p>
<p>Read, read, read, read, read, read, read.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588653">
				<div id="div-comment-588653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588653">
			January 11, 2008 at 2:15 pm</a>		</div>

		<p>How would any compiler documentation document the fact wether any common .dlls found in a Windows install are &quot;officially&quot; redistributed along Windows, or just sitting there by mere coincidence? Such a list used to indicate that these libs can be legally redistributed by 3rd parties, no more.</p>
<p>Problem is: MS never defined the boundaries of its tools and parts, and failed to properly separate components. %windir% is essentially a mishmash of different files (binaries) created by different parts of MS, without any noticable coordination or system.</p>
<p>Good news for those who worry, separation of components seems to be an important development goal for the next Windows version. Maybe they can find some time to cleanup the file/folder layout too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588663">
				<div id="div-comment-588663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588663">
			January 11, 2008 at 2:26 pm</a>		</div>

		<p>You&#8217;re right. &nbsp;The redist notes, when they exist, often do give some information about this. &nbsp;But they don&#8217;t always exist, and even when they do exist they don&#8217;t always have all of the necessary information. &nbsp;It seems like they are an afterthought in many cases. &nbsp;It&#8217;s a good thing we have blogs and forums and Google to help find answers to our questions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588673">
				<div id="div-comment-588673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588673">
			January 11, 2008 at 2:46 pm</a>		</div>

		<p>I&#8217;m pretty sure a lot of these things are well documented, so whoever claimed it wasn&#8217;t is insane. &nbsp;I know that in InstallShield they give you a list of merge modules that you should be reviewing. &nbsp;You can also have it automagically check for other installed apps if you&#8217;re relying on some other application&#8217;s DLL that isn&#8217;t in a merge module. &nbsp;The bottom line is that this is elementary installer stuff.</p>
<p>As to what is &quot;officially&quot; distributed, it should be pretty obvious. &nbsp;If you&#8217;re reading MSDN it should be a few short clicks to figure it out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588703">
				<div id="div-comment-588703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588703">
			January 11, 2008 at 4:23 pm</a>		</div>

		<p>My guess at what is guaranteed to be part of Windows would be that anything documented in Windows SDK is going to be there, every single function/interface/etc has a list of Windows systems that support it. If you reverse engineer a DLL that happens to be in %SystemRoot%system32, or just see one that you&#8217;re using and don&#8217;t check to see if the functionality it exports is part of Windows, you&#8217;re on your own. Just because the default setup of most Linux distributions installs the whole X-Window system it&#8217;s not guaranteed to be there. The kernel is, the rest isn&#8217;t.</p>
<p>Now the problem is that the Windows SDK documentation does include .Net framework and even IIS documentation &#8211; listing for example that ISAPI extensions require Windows XP Professional, Windows 2000 Professional, or Windows NT Workstation 4.0 and Windows Server 2003, Windows 2000 Server, or Windows NT Server 4.0. The product linked under that documentation lists that:</p>
<p>IIS 6.0 is included with Windows Serverâ¢ 2003 and is installable via the Add or Remove Programs item in the Control Panel. IIS 6.0 installs in a highly secure state, serving only static HTML content until other features and file types (such as ASP and ISAPI) are enabled.</p>
<p>IIS 5.1 comes with Windows XP Professional and is installable via the Add or Remove Programs item in the Control Panel.</p>
<p>IIS 5.0 comes with Windows 2000 Server and is installed by default. It also comes with Windows 2000 Professional and is installable via the Add or Remove Programs item in the Control Panel.</p>
<p>IIS is also available as a separate product for previous versions of the Windows operating systems, but this SDK covers only versions 5.0, 5.1, and 6.0, with some limited information for IIS 4.0.</p>
<p>The information is out there, just RTFM.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588723">
				<div id="div-comment-588723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goplat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588723">
			January 11, 2008 at 4:33 pm</a>		</div>

		<p>AsmGuru62: It&#8217;s been done before, actually. In Windows 1.0 there was a DLL called KERNEL.EXE. Later there was also KRNL286.EXE and KRNL386.EXE, which were used when running in protected mode, and in 3.1 since real mode wasn&#8217;t supported any more KERNEL.EXE went away. Programs would still import from &quot;KERNEL&quot; but they would actually be importing from one of the new files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588733">
				<div id="div-comment-588733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588733">
			January 11, 2008 at 4:43 pm</a>		</div>

		<p>Microsoft could document this from here to Tuesday, it wouldn&#8217;t make a difference. The world is full of Windows programmers who don&#8217;t even understand what it means for a function to be in a DLL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588743">
				<div id="div-comment-588743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588743">
			January 11, 2008 at 4:50 pm</a>		</div>

		<p>@vsz &#8211; of course no compiler or library documents the files in the windows directory. You don&#8217;t care what&#8217;s in the windows directory. &nbsp;Repeat after me &#8211; I WON&#8217;T LOOK IN THE WINDOWS DIRECTORY FOR LIBRARIES AND CONTROLS TO USE AND I WON&#8217;T USE DEPENDS.EXE TO GENERATE THE LIST OF DLLS MY APPLICATION USES, IT&#8217;S ONLY FOR QUICK CHECKS OR CONFIRMING THAT I DIDN&#8217;T MAKE A MISTAKE AND MISS SOMETHING.</p>
<p>When YOU wrote your program you KNEW what libraries and controls YOU CHOSE to link to. &nbsp;You make a list of those and then you check the documentation for each to discover what files need to be redistributed. &nbsp;Some may have come with your compiler. Some may have come as seperate SDKs from Microsoft. &nbsp;Some may have come from third parties. &nbsp; Whatever the case if you look in their documentation you will find your answer.</p>
<p>The SDK and MSDN documentation tells you the core libraries, the shell, etc. &nbsp;MFC, the other assorted Microsoft SDKs and packages, and third party libraries all list their files. &nbsp;If you&#8217;re trying to utilize functions in a library or control that&#8217;s in the system directory but isn&#8217;t documented in the SDK or other then you can bet it isn&#8217;t a core Windows component or that you shouldn&#8217;t be using it.</p>
<p>Certainly there are instances where a dll will be mistakenly be left out of documentation or something will change between Windows versions but it doesn&#8217;t take long before those are found and documented in the KB or on a supplier&#8217;s site.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588763">
				<div id="div-comment-588763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588763">
			January 11, 2008 at 5:10 pm</a>		</div>

		<p>&quot;Since there does not seem to be an official list of binaries, where does one look? &nbsp;The Windows directory and its sub-directories? MSDN? The PATH environment variable? &nbsp;The progressive lockdown of the Windows directory in recent versions of Windows goes a long way towards answering the question though.&quot;</p>
<p>If by &quot;answering&quot; you mean &quot;creating another thing for devs to misread as official Microsoft policy&quot; then yes.</p>
<p>Every Windows API function on MSDN has a section identifying the DLL it resides in and operating system versions that support it. Every single one.</p>
<p>MFC is not documented in the Windows API section of MSDN. It&#8217;s in the Visual Studio section. Some developers understand what this means. Most probably don&#8217;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588773">
				<div id="div-comment-588773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588773">
			January 11, 2008 at 5:19 pm</a>		</div>

		<p>Correction: MSDN identifies the library file, not the DLL. Which just goes to show that a &quot;list of DLLs&quot; is the wrong thing to ask for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588803">
				<div id="div-comment-588803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588803">
			January 11, 2008 at 6:40 pm</a>		</div>

		<p>someone wrote:</p>
<blockquote><p>
  Speaking of the XP Picture Viewer, MS should&#8217;nt&#8217;ve killed it in Vista. The Photo Gallery isn&#8217;t as fast as XP&#8217;s Viewer even on my Core 2 Quad Extreme, neither is the browsing of photos fast enough. People liked XP&#8217;s Viewer for its sheer speed.
</p></blockquote>
<p>Actually I preferred the Kodak image viewer to the XP viewer for its functionality.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588813">
				<div id="div-comment-588813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588813">
			January 11, 2008 at 6:41 pm</a>		</div>

		<p>Reading the comments, I see static linking as a solution. It is not.</p>
<p>Do you keep track of all the MS updates, test and publish patches for your application if some library changes?</p>
<p>I hope you don&#8217;t get to see what happens if a security update is released for the library you are using, and your application is the one causing some billion dollar losses to your customers.</p>
<p>(and don&#8217;t start a flame war here, it was a long one few weeks ago on a newsgroup, look for it)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-zian odd alt thread-odd thread-alt depth-1" id="comment-588823">
				<div id="div-comment-588823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zian+Choy' rel='external nofollow' class='url'>Zian Choy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588823">
			January 11, 2008 at 7:33 pm</a>		</div>

		<p>Since this blog is probably going to be used as &quot;official documentation&quot; by clueless developers, here&#8217;s the link to the official Microsoft instructions for redistributing MFC: <a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/ms235264.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/ms235264.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588833">
				<div id="div-comment-588833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wtroost</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588833">
			January 11, 2008 at 7:48 pm</a>		</div>

		<p>Interesting read&#8230;</p>
<p>Is there a reason MFC30.DLL was in the system32 directory, instead of the Fax Viewer directory?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588473">
				<div id="div-comment-588473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wesha</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588473">
			January 11, 2008 at 12:00 pm</a>		</div>

		<p>However Windows clearly *is* a .NET delivery channel (okay, seems to be, look at all these updates it&#8217;s pushing on you). All libraries are equal but some are more equal than others?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-588523">
				<div id="div-comment-588523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588523">
			January 11, 2008 at 12:16 pm</a>		</div>

		<p>Windows *is* an MFC delivery channel. MFC42.DLL is under System File Protection from Windows 2000 onwards, although I&#8217;m not sure if it&#8217;s still there on Windows Vista. If not, a lot of people&#8217;s installer logic is probably broken.</p>
<p>The &#8216;merge module bugs&#8217; page at <a rel="nofollow" target="_new" href="http://www.installsite.org/pages/en/bugs_msi.htm#wimsm" rel="nofollow">http://www.installsite.org/pages/en/bugs_msi.htm#wimsm</a> lists the conditions that should have been set in the VS6 merge modules to avoid System File Protection problems. Ultimately that&#8217;s probably a bug in Windows Installer &#8211; it should have used the query function SfcIsFileProtected to skip files that are protected.</p>
<p>@Avidgator: I&#8217;m not sure if anyone&#8217;s maintaining the DLL Help database. It was good when it was new, but recently it seems to not contain newer products, and the amount of duplication is horrendous. It needs to only have one row per version of each DLL and be kept up to date with every public hotfix, if possible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588533">
				<div id="div-comment-588533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pete</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588533">
			January 11, 2008 at 12:26 pm</a>		</div>

		<p>&quot;</p>
<p>Another way to look at it is the Redist list that comes with VS says that if you use a dll that is in the Redist list then you are required to install that file for your application to work.</p>
<p>&quot;</p>
<p>So what do you do if you develop with something other than VS?</p>
<p>The best strategy is just to redist everything possible, but that leads to problems: Is it really reasonable to expect the user to download a 200MB installer that includes every dependency (many/most of which they probably already have) for my 5MB app?</p>
<p>In other words, this isn&#8217;t just a &quot;developer tax&quot; it leads to a *user* tax: Either the user has to know which runtime libraries they have/don&#8217;t have, or they have to download vastly inflated install packages.</p>
<p>User taxes are evil.</p>
<p>The only way around this is to use an installer, detects what dependencies the user doesn&#8217;t already have and downloads them as necessary. </p>
<p>Then what happens when the user copies the installer to a computer without internet access? </p>
<p>What happens when they try to install an out-of-date version? </p>
<p>Do I have to maintain a server containing the dependencies of every version ever released?</p>
<p>Even MS doesn&#8217;t do this. It&#8217;s more-or-less impossible to get the IE4 desktop update for W95/NT4 these days (esp. NT4) because the download servers no longer have them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588573">
				<div id="div-comment-588573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.tungware.com' rel='external nofollow' class='url'>henryskoglund@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588573">
			January 11, 2008 at 12:37 pm</a>		</div>

		<p>The same problem existed with ATL.DLL and MSVBVM60.DLL. With ATL.DLL you could statically link and MSVBVM60.DLL was almost always present anyway in System32 due to its popularity.</p>
<p>But as commenter Wesha says above, Vista *is* a delivery channel for the .NET Framework version 3.0. So that means that a future Service Pack for Vista should include the next version .NET Framework (I&#8217;m just wildly guessing that version will be 7.0).</p>
<p>To Mike Dimmick: the reason that MFC42.DLL is under the SFP umbrella I believe is because Wordpad.exe is a Windows component. Perhaps you can say MFC42.DLL is another instance of the fax viewer syndrome :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588843">
				<div id="div-comment-588843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588843">
			January 11, 2008 at 8:46 pm</a>		</div>

		<p>Anonymous Coward: I think the company can still use the Kodak imaging files as long as they purchase WinXP upgrade (instead of full version) and continue to own Win2k license. I seen somewhere that you&#8217;re permitted to continue use it if it&#8217;s a &quot;WinXP on top of Win2k&quot; system. (And it&#8217;s logical to allow this too.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588873">
				<div id="div-comment-588873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588873">
			January 12, 2008 at 2:16 am</a>		</div>

		<p>What I dont get is why various versions of the .NET runtime (both full installs and service packs) are available over Windows Update/Microsoft Update (as optional installs) yet the Visual C++ dll redist and the DirectX redist (d3dx.dll etc) are not available at all. Anyone know whats different between the .net runtime and the other stuff?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-588883">
				<div id="div-comment-588883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588883">
			January 12, 2008 at 2:25 am</a>		</div>

		<p>Jonathan Wilson: Size perhaps? The VC++ redist is quite small, and it&#8217;s not a big deal for developers to include it as well. But the .NET framework is quite large, so requiring developers to include it with their own software might be a bit much.</p>
<p>Just a guess&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588893">
				<div id="div-comment-588893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588893">
			January 12, 2008 at 2:26 am</a>		</div>

		<p>Thom: The fact that the program you needed cost $25k doesn&#8221;t mean it&#8217;ll be the best well-written program ever.</p>
<p>I have personally found that the more expensive the software, the lousier the quality in every which way (e.g., UI, oddities, bugs, etc), mostly because of the limited market. Limited market means a very niche program, and there will be few competitors, so there&#8217;s no need to do a lot of &quot;spit and polish&quot;. A $25 application, may be used by a lot of people and if it sucks, people will make lots of noises.</p>
<p>An engineer, though, is a very limited market and they&#8217;ll put up with lousy tools (face it &#8211; how many of us complain about Visual Studio&#8217;s oddities yet live with them rather than using a competing product?).</p>
<p>Also, I bet that application had very specific requirements &#8211; change one variable and oddball things broke (which may require a complete reformat and reinstall). Price is no indicator of quality, and specialized software is probably the worst offender of all.</p>
<p>I also wouldn&#8217;t be surprised if the reason that $25000 program shipped as a debug build was because it won&#8217;t run in a retail build. (We all had that happen). The people who test the thing are probably engineers and not programmers &#8211; they know how to test for correctness, but best practices and what not, not so much. They tried a retail build, found all sorts of wierd issues and decided that since they don&#8217;t know why it broke, they&#8217;ll ship the debug build instead, since it works. (I bet their code probably has stuff like uninitialized variables and such, and in the debug builds. memory is often zeroed for you, and uninitialized variables&#8230; are initialized.)</p>
<p>Truth is, these engineers behind the program probably came from a more UNIX like background, and made a Windows version because it is the predominant version. Of course, they may understand UNIX and such builds very well, but things like Windows UI guidelines, what files to ship, etc are foreign concepts. Also, to do a lot of Windows stuff, they probably hired some cheap co-ops to do a lot of the work, concentrating more on the engineering than the UI fluff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588923">
				<div id="div-comment-588923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.wisefaq.com' rel='external nofollow' class='url'>Dale</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588923">
			January 12, 2008 at 7:16 am</a>		</div>

		<p>&quot;For example, one customer had reverse-engineered the Kodak image viewer in Windows 2000 and wanted to keep using it in Windows XP. But those components are not included in Windows XP; the Kodak image viewer was merely a stopgap solution until the Windows XP fax and image viewer came along.&quot;</p>
<p>And it sucked from the perspective of not being able to display embedded TIF files.</p>
<p>Stopped a 15000+ seat WinXP deployment cold.</p>
<p>Microsoft provided us with an WinXP installable version of the Kodak image viewer, free.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588933">
				<div id="div-comment-588933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588933">
			January 12, 2008 at 7:23 am</a>		</div>

		<p>Thom: I have no personal problem idenfying a given .dll or look it up even in 3-4 different places to decide about its status. But let&#8217;s face it, this problem is far from obvious (and just one of the many), documentation is huge, ppl won&#8217;t fully read it, which means: out of 1000000 developers, say 200000 will get it wrong. All I&#8217;m saying is that with <em>some</em> (relatively marginal) effort on part of MS, all these problems could easily be <em>avoided</em> in the first place. In other words, a system based, designed and implemented upon clear rules is much better than a well(ish) documented chaos.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588943">
				<div id="div-comment-588943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588943">
			January 12, 2008 at 11:15 am</a>		</div>

		<p>@Worf &#8211; I agree with much of what you say but still argue that none of that justifies the stupidity of distributing software ripe for reverse engineering. &nbsp;Whether a $25k piece of software with a few hundred licenses sold or a $25 piece with a few hundred thousand it&#8217;s a bad deal for you if you do it. &nbsp;</p>
<p>@vsz &#8211; I&#8217;m assuming that you&#8217;re not new to Raymond&#8217;s blog in which case I&#8217;ll point out that Raymond frequently discusses cases where clear rules are specified and yet they are missed, ignored, or worked around causing chaos of their own. &nbsp;I agree that things could be easier, but they can&#8217;t change overnight on a platform as diverse as Windows where you have to maintain backward compatibility. &nbsp;If you can document a way to make the changes you suggest without breaking everything else I&#8217;m positive you can demand MULTI-MILLIONS of dollars from Microsoft and get it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588973">
				<div id="div-comment-588973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588973">
			January 12, 2008 at 4:35 pm</a>		</div>

		<p>@edinoc</p>
<p>I did a fresh install of XP SP2 yesterday and there was no IE7 offered on WU at all&#8230;It wasn&#8217;t even present as an optional update (unlike Windows Media Player 11). I had to go fetch it myself from the IE7 website.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588983">
				<div id="div-comment-588983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Long horn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588983">
			January 12, 2008 at 10:21 pm</a>		</div>

		<p>How naive to assume files in the system(32) folder are system components.</p>
<p>And microsoft&#8217;s own deployment tools doesn&#8217;t include such files in the msi package when automatically generating dependencies. How about fixing this before complaining about your customers?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-588953">
				<div id="div-comment-588953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-588953">
			January 12, 2008 at 4:10 pm</a>		</div>

		<p>&gt; Read, read, read, read, read, read, read.</p>
<p>Building an app is hard. (I know you want the next line to be &quot;Let&#8217;s go shopping&quot; but stay with me.) Building an installer for an app is a nightmare.</p>
<p>My app probably isn&#8217;t that unusual. I *do* look at the documentation but I also include third-party software. Seems to run fine on my dev box. Seems to run fine on a few beta tester systems. Then I try on a bare XP SP2 setup and get a missing DLL. </p>
<p>Did I miss the tool that Microsoft ships to see what you link to and make sure that it&#8217;s either a standard part of Windows or warn you that it needs to be in the setup package? Am I the only person who&#8217;s built an app on XP, then sent it to a Windows 2000 tester who reports a missing DLL entry point? YES, IT&#8217;S DOCUMENTED. But I would appreciate a tool that let me know I was linking to an XP-or-later entry point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589033">
				<div id="div-comment-589033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589033">
			January 13, 2008 at 12:41 am</a>		</div>

		<p>@RichB: &quot;Is the point that the Fax Viewer was written incorrectly and shouldn&#8217;t have placed mfc into WindowsSystem?&quot;</p>
<p>Not when 1GB hard drives were a luxury to have.</p>
<p>@Sam: &quot;Not sure I follow you. On my machine, the default VS config for release builds is to build the symbol file as a separate .pdb. This seems ideal to me&#8230;&quot;</p>
<p>It also places the path to the PDB file in the executable. &nbsp;Just wait until someone discovers a program with the following string embedded in it: &nbsp;&quot;C:SourceRipOffOfCompetitorProductripoff.pdb&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-589043">
				<div id="div-comment-589043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589043">
			January 13, 2008 at 4:49 am</a>		</div>

		<p>Lorn horn: You must be new here. Raymond works on the shell, he doesn&#8217;t work on any &quot;deployment tools&quot;. Why don&#8217;t you complain to the right people next time?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589053">
				<div id="div-comment-589053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vyacheslav Lanovets</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589053">
			January 13, 2008 at 6:08 am</a>		</div>

		<p>MFC8.0 SP1 fixed some bugs in MFC8.0 RTM but MS did not put MFC8.0 SP1 onto Windows Update, even in non-critical section. Why?</p>
<p>I&#8217;ve got the point, but MFC is a bad example. It would be better for all if MS delivered MFC via Windows Update.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-589093">
				<div id="div-comment-589093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.veridique.nl' rel='external nofollow' class='url'>Matthieu</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589093">
			January 13, 2008 at 3:48 pm</a>		</div>

		<p>There are a lot of Windows programmers who don&#8217;t even understand what it means for a function to be in a DLL&#8230;</p>
<p>And the debug MFC doesn&#8217;t just give you symbology, you also get asserts and mostly valid local variables in the debugger for your application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589113">
				<div id="div-comment-589113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tihiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589113">
			January 13, 2008 at 5:33 pm</a>		</div>

		<p>I would like to know about msvcrt.dll mess. It is changing with every Windows version and corresponds to different VC runtime versions (and seems to differ with actual msvcrXX), with different functions. Why such decision was made? Is it a load of compatibility problems?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-589123">
				<div id="div-comment-589123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589123">
			January 13, 2008 at 6:39 pm</a>		</div>

		<p>@Dave: the tool you require is in the development system. Set the macro WINVER to 0x0500, and the compiler won&#8217;t even let you compile any code that depends on features added after Windows 2000.</p>
<p>For a more comprehensive discussion see Raymond&#8217;s post on the topic: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2007/04/11/2079137.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/04/11/2079137.aspx</a>.</p>
<p>If you aren&#8217;t explicitly setting WINVER your environment is setting it for you somewhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589133">
				<div id="div-comment-589133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">scorpion007</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589133">
			January 13, 2008 at 8:50 pm</a>		</div>

		<p>@Mark K</p>
<p>&quot;It also places the path to the PDB file in the executable. &nbsp;Just wait until someone discovers a program with the following string embedded in it: &nbsp;&quot;C:SourceRipOffOfCompetitorProductripoff.pdb&quot;&quot;</p>
<p>Errm. So what? You don&#8217;t distribute the pdb file, you keep it for yourself for debugging.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-589153">
				<div id="div-comment-589153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589153">
			January 13, 2008 at 10:56 pm</a>		</div>

		<p>@scorpion007:</p>
<p>&quot;Errm. So what? You don&#8217;t distribute the pdb file, you keep it for yourself for debugging.&quot;</p>
<p>Read what you quoted again. &nbsp;It doesn&#8217;t matter that you don&#8217;t distribute the PDB; the name and path of that PDB is embedded in the EXE. &nbsp;So if the path itself contains something you don&#8217;t want people to see&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589183">
				<div id="div-comment-589183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589183">
			January 14, 2008 at 3:42 am</a>		</div>

		<p>If you bundle applications with your OS, don&#8217;t be surprised when people assume that they and their components are part of that OS. After all, isn&#8217;t that what MS has been saying for years?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-589193">
				<div id="div-comment-589193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://codeka.com/blogs/' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589193">
			January 14, 2008 at 3:49 am</a>		</div>

		<p>&quot;After all, isn&#8217;t that what MS has been saying for years?&quot;</p>
<p>There is a difference between bundling applications and the IMPLEMENTATION of those applications.</p>
<p>People don&#8217;t complain that byte 0x001823 in kernel32.dll (or whatever) changed from one version of Windows to the next: that&#8217;s an implementation detail.</p>
<p>In the same way, the exact number and names of DLLs in the System32 folder is an implementation detail, subject to change. The only thing you can rely on is what is documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589223">
				<div id="div-comment-589223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bigfoot' rel='external nofollow' class='url'>dalevine@ra.rockwell.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589223">
			January 14, 2008 at 5:41 am</a>		</div>

		<p>gkdata: </p>
<p>Never been a vb programmer, though I did start out using raw basic many years ago. I use assembly, C, C++, and C#, and dabble in others (learning Erlang). As to your comment&#8230;there are many other frameworks out today that are far superior to MFC, the leading contenders being .NET and Java. MFC was worth using when it was released but that was a long time ago; now it is obsolete.</p>
<p>Sure, some people are still developing MFC apps, but that&#8217;s like some people kept developing 16 bit apps when 32 bit first became available. In the long run, 16 bit programming is dead, and so is MFC.</p>
<p>Leo:</p>
<p>When I want to throw together a quick app I find that .NET is far better than MFC. </p>
<p>I think Raymond is correct in the low-level details but incorrect in his assumptions. </p>
<p>Since MFC is a MSFT product, essentially an application platform, the distinction RC makes is a very fine one, and one I disagree with. For all intents and purposes, MFC has effectively become part of the system platform, and we would all have been better off had it been treated that way. Pointing out the fine print in the contract may work for lawyers, but as time has shown, developers are too busy writing code people want to use then to stop and read the fine print. </p>
<p>I agree that this problem is not limited to MFC but MFC has a special responsibility to get it right because it is a platform used by many apps, not a specific fatture set of limited appeal, and because it is an official MSFT product. MSFT must keep in mind the unstated assumptions that the ISV community is likely to make. It&#8217;s easy to say that Windows and MFC are not synonomous, but in practice they are, and should have been handled that way.</p>
<div class=post>[<i>It is an official product of <u>the developer tools division</u> at Microsoft, not the Windows division. If Windows should include all popular official Microsoft products, then I guess it should also include Microsoft Office, too. Perhaps we should rename the product &#8220;Microsoft All The Popular Stuff We Make&#8221;. And then put all the lawyers on stand-by. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-589233">
				<div id="div-comment-589233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589233">
			January 14, 2008 at 6:01 am</a>		</div>

		<p>James Schend wrote:</p>
<p>&quot;Maybe because the VS2005 Redistributables are not a critical update? I mean&#8230; duh! How many XP computers do you think run software that requires it, but that software didn&#8217;t put it there when it was installed?&quot;</p>
<p>In my experience: Almost all XP computers since many, many software don&#8217;t come with VS2005 redistribuables.</p>
<p>This means that, every time you set up a new XP computer, the first time you install a VS2005 application, you get an error.</p>
<p>In my opinion, providing the most commonly used runtime librairies such as Visual Basic, Microsoft Visual C++, MFC, and maybe libraries of third parties such as Borland&#8217;s libraries, would solve some of the DLL hell problems. (This doesn&#8217;t invalidate Raymond&#8217;s statements).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589243">
				<div id="div-comment-589243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Seth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589243">
			January 14, 2008 at 8:39 am</a>		</div>

		<p>@Sam: Sorry. I was referring to VS 2003 that didn&#8217;t have very good default settings for a release build. Since then, things have gotten better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-589253">
				<div id="div-comment-589253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589253">
			January 14, 2008 at 9:12 am</a>		</div>

		<p>Monday, January 14, 2008 5:41 AM by dalevine</p>
<p>As to your comment&#8230;there are many other frameworks out today that are far superior to MFC, the leading contenders being .NET and Java.</p>
<p>.NET and Java have their own set of problems, see <a rel="nofollow" target="_new" href="http://blogs.technet.com/markrussinovich/archive/2005/04/16/the-coming-net-world-i-m-scared.aspx" rel="nofollow">http://blogs.technet.com/markrussinovich/archive/2005/04/16/the-coming-net-world-i-m-scared.aspx</a>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589303">
				<div id="div-comment-589303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589303">
			January 14, 2008 at 10:44 am</a>		</div>

		<blockquote><p>
  &gt; dalevine &#8211; When I want to throw together a quick app I find that .NET is far better than MFC.
</p></blockquote>
<p>Arrrghhh, so you are one of those are you? &nbsp;Build a small, quick, application and use one or two .NET functions then force every one of your users to download a minimum 20MB .NET runtime that takes up 100+MB (reported by windows) on the hard drive. &nbsp;</p>
<p>I run XPSP2. &nbsp;To this day I still don&#8217;t have any version of the .NET runtime on my home systems and my work system only has it because Visual Studio installed it. &nbsp;</p>
<p>My Samsung LCD monitor tried to install one version for its tiny little resolution tweaking utility that wouldn&#8217;t take a 20k executable using Windows API only. &nbsp;F-You Samsung, fire your moron programmer, I&#8217;ll use the standard Windows dialogs and never buy another Samsung monitor.</p>
<p>The, thankfully small, number of programs I&#8217;ve used that have tried to force huge .NET libraries on me to use their pitance of features are uninstalled, tossed, sent back, etc. &nbsp;</p>
<p>.NET won&#8217;t make it onto my home PC until I install an application that I&#8217;m confident absolutely needed it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-589663">
				<div id="div-comment-589663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589663">
			January 14, 2008 at 2:53 pm</a>		</div>

		<p>&quot;</p>
<p>Arrrghhh, so you are one of those are you? &nbsp;Build a small, quick, application and use one or two .NET functions then force every one of your users to download a minimum 20MB .NET runtime that takes up 100+MB (reported by windows) on the hard drive. &nbsp;</p>
<p>&quot;</p>
<ul>
<li>takes hours to launch.</li>
<li>
<p>be very unreactive and slow.</p>
</li>
<li>
<p>eat so much RAM that your background applications are &quot;swapped&quot; out to the disk.</p>
</li>
<li>
<p>require that you install IE 6 (slowing down your explorer) if you&#8217;re running Windows 98 SE or lower.</p>
</li>
</ul>
<p>Yes, Windows 98 SE, is still a good OS for old computers.</p>
<p>Worst: The .NET 3.0 framework seems to require Windows XP or higher!</p>
<p>.NET applications are low-quality software written by lazy programmers.</p>
<p>I&#8217;m happy that people are still using the blazingly fast MFC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-589673">
				<div id="div-comment-589673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589673">
			January 14, 2008 at 3:02 pm</a>		</div>

		<p>@Marc K</p>
<p>this is how most applications are distributed: we just don&#8217;t ship the .pdb of the release version of the app. &nbsp;It doesn&#8217;t matter that the path to it is in the executable, it&#8217;s harmless. &nbsp;</p>
<p>The reasons is that you make a release build, then test that build, and you have the debug symbols in the .pdb to debug any problem. &nbsp;When that build is validated, you ship it: you don&#8217;t re-build again with the PDB generation off, because they would create another build that could contain new bugs. &nbsp;Basically, we don&#8217;t care about the few extra Kilobytes for the path of the PDBs.</p>
<p>&quot;Just wait until someone discovers a program with the following string embedded in it: &quot;C:SourceRipOffOfCompetitorProductripoff.pdb&quot;</p>
<p>never happened, doesn&#8217;t matter and it&#8217;s childish. Look around at commericial apps, that&#8217;s how it&#8217;s done. It&#8217;s very common on Unix as well to have all the source file names found in the executables.</p>
<p>Having PDBs for a release build is pretty damn essential in real life. &nbsp;When we get a .dmp file from a client, we can easily check where it crashed by loading it and the PDBs in VC++.</p>
<p>If the price is the file path to the .pdb in the .dlls and .exe, so be it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-589973">
				<div id="div-comment-589973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bigfoot' rel='external nofollow' class='url'>dalevine@ra.rockwell.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-589973">
			January 14, 2008 at 10:03 pm</a>		</div>

		<p>Richy: I&#8217;ve written plenty of MFC apps. And raw &#8216;C&#8217; apps and low-level kernel-mode code too.</p>
<p>MFC was a step forward over the way I used to write applications because it handled a lot of the low-level grunge work that was needed when I wrote my apps in C (and later, C++), and it allowed me to work at a higher level of abstraction. .NET takes that even further and better &#8211; it is far more productive for most apps than using MFC.</p>
<p>All things have an effective lifetime and MFC is no different than any other software creature; it started small, became a big beast, turned into a dinosaur, and gradually will become extinct. When I hear your &#8220;arrrrrrrrrrrrrrrrrrrrrrrrrrgh&#8221; it sounds like a Peridactyl looking for a brontosaurus. It&#8217;s not that there is no development being done using it, but there are fewer and fewer such efforts, and eventually it will mostly go away (not completely, but mostly). And for lots of good reasons.</p>
<p>A 20M download for the .NET runtime is trivial. And it&#8217;s C++ that you like, then C++/CLI may be your cup of developer tea.</p>
<p>.NET is not the final answer, but it&#8217;s a lot better than any previous answer I&#8217;ve seen from MSFT for building applications.</p>
<p>Raymond, I never said that MSFT should distribute &#8220;all popular official Microsoft products&#8221;. The distinction you are making may be obvious from someone from the inside like yourself, but from my perspective there&#8217;s not a lot of difference between the OS DLLs and the DLL&#8217;s that are used by MFC that the applications require. To me, they are as much a part of the platform as is user32.dll, because I need both for my MFC app to run. </p>
<p>.NET does not make this distinction, or at least not so that it is apparent. The runtime and the BCL are intertwined. By managing these assemblies for us they have saved us from everyone trying to install/uninstall the same shared components and getting it wrong.</p>
<div class="post">[<i>Does this mean that, in your ideal world, Windows Vista would still include a copy of MFC30.DLL? After all, in your world, it was an official part of Windows 95 and therefore Windows Vista needs to be compatible with it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590033">
				<div id="div-comment-590033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lonesysadmin.net/2008/01/15/links-for-2008-01-15/' rel='external nofollow' class='url'>links for 2008-01-15 : Bob Plankers, The Lone Sysadmin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590033">
			January 15, 2008 at 1:21 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://lonesysadmin.net/2008/01/15/links-for-2008-01-15/" rel="nofollow">http://lonesysadmin.net/2008/01/15/links-for-2008-01-15/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590073">
				<div id="div-comment-590073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590073">
			January 15, 2008 at 3:52 am</a>		</div>

		<p>Why do I have to read the documentation? Why can&#8217;t Microsoft adjust itself to my assumptions? I don&#8217;t understand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590103">
				<div id="div-comment-590103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Play it again</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590103">
			January 15, 2008 at 4:38 am</a>		</div>

		<p>&gt; There is a difference between bundling applications and the IMPLEMENTATION of those applications</p>
<p>They are not separate applications, they are part of the OS. MS tells us so.</p>
<div class="post">[<i>I believe you are confusing the operating system with the operating system contract. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-590133">
				<div id="div-comment-590133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590133">
			January 15, 2008 at 4:52 am</a>		</div>

		<p>&quot;They are not separate applications&quot;</p>
<p>Read my comment again: I didn&#8217;t say what you think I said.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590163">
				<div id="div-comment-590163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bigfoot' rel='external nofollow' class='url'>dalevine@ra.rockwell.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590163">
			January 15, 2008 at 5:50 am</a>		</div>

		<p>RC: &#8220;[Does this mean that, in your ideal world, Windows Vista would still include a copy of MFC30.DLL? &lt;snip&gt;&#8230;&#8221;</p>
<p>If an application required it and if such an application was installed on the Vista machine, then a means of installing, managing, and uninstalling system DLLs (i.e. MFC30.DLL) should be handled by the OS. What&#8217;s missing is a sound versioning and deployment strategy; this is not a failure on the part of the application or the ISV.</p>
<p>I remember back when there were 3rd party memory managers, disk caches, TCP stacks, etc., and I remember that whenever MSFT bundled one of these features into the OS the argument made was that this was functionality that SHOULD be handled by the OS. There was lots of screaming from the companies that were put out of business but IMO it was the correct decision &#8211; it benefited all users of the OS. </p>
<p>I believe that managing the MFC DLLs (or more generally, files that wind up in SYSTEM32 or are system files) should also be the responsibility of the OS. This is one of those mundane, but incredibly difficult to get right, chores that ought to be handled by the OS. </p>
<p>Think of this as an opportunity to provide another service that will make Windows indispensable.</p>
<div class="post">[<i>Check out fusion manifests and side-by-side assemblies. That may do what you want. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590433">
				<div id="div-comment-590433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590433">
			January 15, 2008 at 12:48 pm</a>		</div>

		<p>DileVine: &quot;A 20M download for the .NET runtime is trivial.&quot;</p>
<p>NO, IT IS NOT TRIVIAL. &nbsp;Your statement is a statement that ONLY a FOOL would make. &nbsp;I don&#8217;t care if every person in the world had 1.5TB download speeds &#8211; forcing the download of a 20MB runtime that eats 100MB of hard drive space for an application that could be contained in a 20KB-200KB-2MB executable is downright stupid. &nbsp;</p>
<p>Please tell me what company you work for so I can direct my purchasing department to stay away from your products. &nbsp;Attitudes like yours are why so many applications come with multi 100MB installs to support feature sets that are little or no more feature rich than Win98 versions that took less than 1MB of space.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590463">
				<div id="div-comment-590463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590463">
			January 15, 2008 at 1:01 pm</a>		</div>

		<p>Ah, I see that people are still struggling to get their heads around the IE integration thing.</p>
<p>It&#8217;s been what, 10 years? and you still haven&#8217;t figured it out?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590473">
				<div id="div-comment-590473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590473">
			January 15, 2008 at 1:11 pm</a>		</div>

		<p>&quot;NO, IT IS NOT TRIVIAL. &nbsp;Your statement is a statement that ONLY a FOOL would make. &quot;</p>
<p>Indeed not. The good thing is that the .NET runtime (or any other runtime for that matter) is shared across all apps, so only have to be downloaded once per computer, regardless of how many .NET apps exists on your computer. Still, it would be nice if the .NET Framework is componented so only the needed parts are downloaded. For example, most users do not need the compilers. Sun is doing this with Java.</p>
<p>&quot;Please tell me what company you work for so I can direct my purchasing department to stay away from your products.&quot;</p>
<p>I would not go that far.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590483">
				<div id="div-comment-590483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590483">
			January 15, 2008 at 1:33 pm</a>		</div>

		<p>Although I think Richy went a little overboard in expressing his opinion I&#8217;d have to side with him on this one. &nbsp;His points are reasonably accurate and are valid despite their delivery.</p>
<p>It&#8217;s not really true that it only needs be downloaded once per computer, in fact it&#8217;s blatantly false. &nbsp;First there are multiple versions so many users have downloaded or installed more than one. &nbsp;Second every .NET app delivered over the web either has to deliver .NET in order to ensure it&#8217;s there.</p>
<p>Sure, companies can develop installers that check for the presense of the required .NET runtime and install only their app or the app and runtime, but this sure complicates things and costs more money. &nbsp;Worse yet, it doesn&#8217;t always work if someone&#8217;s .NET install is damaged or incomplete and that&#8217;s a hard thing to troubleshoot. &nbsp;That&#8217;s why a great many companies deliver the entire kit and kaboodle in one huge download or force their less than savy users to download it manually if things don&#8217;t go well.</p>
<p>.NET has its place but there are such things as misapplication and misuse and .NET is very widely misapplied and misused.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590503">
				<div id="div-comment-590503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bigfoot' rel='external nofollow' class='url'>dalevine</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590503">
			January 15, 2008 at 2:36 pm</a>		</div>

		<p>&quot;NO, IT IS NOT TRIVIAL. &nbsp;Your statement is a statement that ONLY a FOOL would make. &quot;</p>
<p>Richy: What an ignorant response. Do you really think that SHOUTING makes you correct?</p>
<p>Really, if the statements I made are wrong then all it takes is a single, correctly reasoned rebuttal that proves it wrong, then presto &#8211; it is wrong. SHOUTING adds to the noise level but not to anyone&#8217;s level of understanding.</p>
<p>Unless there is some reason why the footprint is too large for the target, then a 20M download is inconsequential. Sure, it takes time, and that&#8217;s why .NET will be distributed with the OS, so that the download time you are upset about does not factor in at all.</p>
<p>If you are writing embedded apps then it matters, and componentized versions will be very important. .NET is not the best answer for all apps, but the arguments I&#8217;ve heard here against it are simply wrong.</p>
<p>As to the code bloat&#8230;.this has been argued about for years, going all the way back to 16 bit windows (and probably way before). The bottom line&#8230;if you want functionality then you pay for it with larger binaries. I heard the same code-bloat arguments used against MFC. Perhaps we should all go back to writing DOS TSRs.</p>
<p>Thom: As to the versioning and deployment aspects of .NET; not all apps need to download it, and they certainly do not need to do it during every download, and they do not need to worry about how to version it. e.g. click-once.</p>
<p>There&#8217;s also a runtime unification policy (here: <a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/9h55zhet" rel="nofollow">http://msdn2.microsoft.com/en-us/library/9h55zhet</a>(vs.71).aspx) that addresses side-by-side and versioning issues across multiple platforms.</p>
<p>Raymond: I&#8217;ve heard and read about fusion/side-by-side for unmanaged DLLs but I&#8217;ve not used it. I am more familiar with .NET fusion behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590523">
				<div id="div-comment-590523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590523">
			January 15, 2008 at 3:00 pm</a>		</div>

		<p>I really should said once per version per computer, but that does not affect my point.</p>
<p>You are right that sometimes damaged .NET installs are hard to troubleshoot. The good thing is there is often a simple way to solve the problem, and as a last resort just uninstall the .NET Framework.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590533">
				<div id="div-comment-590533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590533">
			January 15, 2008 at 3:12 pm</a>		</div>

		<p>&quot;</p>
<p>The bottom line&#8230;if you want functionality then you pay for it with larger binaries.</p>
<p>&quot;</p>
<p>Simple .NET applications don&#8217;t have more functionality than simple MFC applications.</p>
<p>They&#8217;re just much slower and unreactive (these points, IMO, are more serious than the 20 megabytes of framework to download).</p>
<p>The initial statement was:</p>
<p>&quot;</p>
<p>When I want to throw together a quick app I find that .NET is far better than MFC.</p>
<p>&quot;</p>
<p>Moore&#8217;s law has been beaten by slow applications!</p>
<p><a rel="nofollow" target="_new" href="http://hubpages.com/hub/_86_Mac_Plus_Vs_07_AMD_DualCore_You_Wont_Believe_Who_Wins" rel="nofollow">http://hubpages.com/hub/_86_Mac_Plus_Vs_07_AMD_DualCore_You_Wont_Believe_Who_Wins</a></p>
<p>The bad news is that Office is one of the most optimized office environment on the market. e.g. OpenOffice is 10 times slower than Microsoft Office.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590553">
				<div id="div-comment-590553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590553">
			January 15, 2008 at 3:51 pm</a>		</div>

		<p>dalevine and Bao: &nbsp;My point was as follows.</p>
<p>The only way you can be certain that your .NET app runs on your customer&#8217;s computer is to ensure that it&#8217;s installed. &nbsp;That goes for every company distributing a .NET application.</p>
<p>How do they do that? &nbsp;A significant number of companies choose to do that by including the .NET runtime in their default download package because, aside from bandwidth costs, it&#8217;s the least expensive most customer friendly option&#8230; &nbsp;i.e. minimal support costs.</p>
<p>This means that I, as a user of numerous software products, end up paying that 20MB+ runtime download multiple times &#8211; once for each .NET product I download and install &#8211; rather than your theoretical once. &nbsp;If I download updates or new versions often times those too come a full installs complete with the .NET runtime rather than patches or minimal updates. &nbsp;</p>
<p>If you build a full featured application that really utilizes .NET that&#8217;s fine, I have no qualms with that. &nbsp;If you build a miniscule application where you chose .NET simply because it&#8217;s &quot;the new thing&quot;, because it was the default, or because it had one or two library routines that saved you 30 minutes of reading or coding then I have a lot of problems with that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590683">
				<div id="div-comment-590683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://showens.blogspot.com' rel='external nofollow' class='url'>SteveOw</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590683">
			January 16, 2008 at 10:29 am</a>		</div>

		<p>I&#8217;m wondering if your prediction sentence is included in the &quot;last two sentences&quot;? &nbsp;Is this like &quot;Number of FAX pages, including this page&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590823">
				<div id="div-comment-590823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590823">
			January 16, 2008 at 5:09 pm</a>		</div>

		<p>So Windows is a delivery channel for .NET but not MFC?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590853">
				<div id="div-comment-590853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590853">
			January 17, 2008 at 12:16 am</a>		</div>

		<p>&quot;How do they do that? &nbsp;A significant number of companies choose to do that by including the .NET runtime in their default download package because, aside from bandwidth costs, it&#8217;s the least expensive most customer friendly option&#8230; &nbsp;i.e. minimal support costs.&quot;</p>
<p>No, that would be &quot;most support friendly&quot;. &nbsp;&quot;Most customer friendly&quot; would be not forcing people to download the .NET runtime more than once.</p>
<p>And guess what: they don&#8217;t. &nbsp;I have downloaded quite a large number of .NET apps (and written a few myself), and I can&#8217;t think of a single one that has bundled the .NET runtime in the main installer.</p>
<p>Some will detect it and download it if not present; others will report it as an error and wait for you to download and install it yourself. &nbsp;(And the badly-written ones don&#8217;t even check and will just fail mysteriously if the runtime isn&#8217;t installed. &nbsp;But that sort of failure isn&#8217;t specific to .NET.)</p>
<p>Occasionally the runtime will be included in a downloadable package as an alternative download (when you know you don&#8217;t already have it), but that&#8217;s fairly rare. &nbsp;And the only time that I&#8217;ve ever seen a single version of the install that embedded the .NET install as well was when the install was on a CD anyway so it didn&#8217;t make any difference.</p>
<p>(Now, if you&#8217;re downloading CD images then it might get you. &nbsp;But the cost of the runtime vs. the rest of the image is minimal anyway.)</p>
<p>It sounds like you are arguing out of prejudice more than knowledge.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-590903">
				<div id="div-comment-590903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590903">
			January 17, 2008 at 6:59 am</a>		</div>

		<p>@Miral:</p>
<p>First, I agree that there are some good .Net applications out there (an example off the top of my head could be SimPE game modding tool for Sims 2 game).</p>
<p>Unfortunately, that is where the agreement stops.</p>
<p>Take a look at <font color="red">Company X</font> display drivers for example &#8212; their <font color="red">Product Y</font> REQUIRES .Net. That is not user friendly for several reasons:</p>
<p>1. You need to download and install .Net runtime (only once but still it is a PITA if you have dial-up which you would be surprised how many people still have)</p>
<p>2. .Net wastes a lot of HDD space (compared to the application size and featureset)</p>
<p>3. It has a shedload of small files taking a lot of time to install on older hardware and adding to the disk space fragmentation (and defragmentation) problem considerably</p>
<p>4. It generates binaries during install taking 100% of the CPU time preventing you from doing any other usefull work while it installs</p>
<p>5. It adds its own service contributing to the uselessÂ¹ resource consumption. That service is a proof that .Net is a bloatware otherwise it wouldn&#8217;t require it in the first place.</p>
<p>6. It was meant to be a solution to the versioning problem but from the user standpoint it didn&#8217;t solve that problem &#8212; I still have to install .Net 1.1, .Net 2.0, .Net 3.0 and all the service packs and hotfixes to be able to use all .Net applications out there. So from 100+ MB we now come to 1+ GB of wasted space, 2+ services and counting.</p>
<p>Finally, there is no way that you can convice me (or anyone else who is sane and rational) that the functionality .Net offers you as a developer doesn&#8217;t exist in other languages/APIs with a considerably smaller footprint.</p>
<p>In my opinion (both as a user and as a developer), using .Net is just a lame excuse for lazyness.</p>
<p>As for .Net being offered through the Windows Update &#8212; as far as I know Windows or any of its components does not depend on .Net (or else .Net would come preinstalled) so I don&#8217;t understandÂ² why it getting different treatment than say DirectX, VC2005 runtime, and MFC.</p>
<p>&#8212;</p>
<p>Â¹ &#8211; Useless for the user who is not using only .Net applications all of the time he spends in front of his computer</p>
<p>Â² &#8211; Actually I do understand &#8212; it is because Microsoft is pushing it as a preferred development platform. Speculation as to why they are doing it would lead down the conspiracy theory lane and I won&#8217;t be the one to start it, I am just giving you some food for thought</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-590923">
				<div id="div-comment-590923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-590923">
			January 17, 2008 at 9:55 am</a>		</div>

		<p>@Miral: &#8220;It sounds like you are arguing out of prejudice more than knowledge.&#8221;</p>
<p>That&#8217;s funny Miral because I would have say the same about you. &nbsp;Perhaps the reality is that you and I have completely different computers, different interests, and different download experiences. &nbsp;Regardless of your experience, the fact is that I have downloaded several applications that used AND bundled .NET. &nbsp;</p>
<p>I distinctly remember such applications because, for most, the minute I realized they installed .NET I immediately uninstalled them from my system. &nbsp;I did keep a few, notably DVD and video editing packages, around for a bit to check their features and usability but they very quickly went away too. &nbsp;Why? &nbsp;Because their 150-200MB .NET application offered a pittance of features over, and a fraction the performance of, their 10-20MB non .NET applications of a year or two earlier. &nbsp;Thank goodness for oldversion(dot)com.</p>
<p>Also, thanks much to Igor for reminding me of <font color="red">video</font> drivers. &nbsp;I have, sitting on my hard drive, the updated drivers I downloaded for my <font color="red">XYZ</font> card. &nbsp;It is a single file over 50MB in size and includes the .NET framework. &nbsp;Their current download is only 31MB in size though and requires the user to have .NET pre-installed. &nbsp;They apparently responded to the myriad of complaints about their 50+MB downloads that they moved .NET out of the install. &nbsp;Thank goodness they also offer a minimal driver that comes in around 8MB and doesn&#8217;t use .NET. &nbsp;Only the poor saps who like to use <font color="red">Product Y</font> to change resolutions and color depths need that extra 40MB+ combination of .NET app and .NET runtime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591143">
				<div id="div-comment-591143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-591143">
			January 17, 2008 at 2:15 pm</a>		</div>

		<p>@dalevine: &quot;The bottom line&#8230;if you want functionality then you pay for it with larger binaries&quot;</p>
<p>I would say more than that, it&#8217;s if you want faster and cheaper development, you pay for it with larger binaries. You can have some damn impressive apps in small spaces if you want. But, someone using Windows Forms will very possibly get the job done faster than someone using MFC, especially for something UI-heavy.</p>
<p>It&#8217;s unfortunate that .NET is a bit heavyweight for a lot of applications. I had a fun time trying to get software for a camera running on a semi-embedded computer when the camera software used .NET. I say &quot;semi-embedded&quot; because it was a PC architecture, but a very low-resource one. The most pressing thing was it had 384 MB of flash and no other stable storage. Getting Windows XP (Embedded) + .NET + camera software onto that was&#8230; an experience.</p>
<p>But, I don&#8217;t think it&#8217;s particularly slow, I think the 20M download and hard drive concerns are overstated above (admittedly I have an obscene amount of hard drive space, but just a standard DSL line). Maybe Yuhong Bao&#8217;s idea to only install what is needed is best. And it really is a nice development platform. If I didn&#8217;t need to worry about cross-platform compatibility, I&#8217;d usually take C# and .NET over MFC and C++ or Java or pretty much anything else I know in an instant. And with Mono, even if cross-platformness was a concern, it would still be worth considering at least a little. (But then MFC and the WinAPI are not options either.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591203">
				<div id="div-comment-591203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-591203">
			January 17, 2008 at 5:59 pm</a>		</div>

		<p>@Igor Levicki: I feel your complaint about used space is more due to the feeling of what space .NET SHOULD use (i.e. no more than a few megabytes) and not really the harm done by the cost of this disk space.</p>
<p>I&#8217;m also annoyed when I see a 4 op calculator less reactive on a 2Ghz computer, than the standard calculator was on a Macintosh Plus. But the frustration comes more from the fact that the application shouldn&#8217;t use so much resources than from its poor usability.</p>
<p>Since you&#8217;re counting .NET 3.0 in the hard disk used, I&#8217;m assuming you&#8217;re thinking about Windows XP SP2 &amp; higher machines.</p>
<p>Most Windows XP SP2 machines have HD with more than 20GiB of disk space.</p>
<p>1GiB isn&#8217;t at all negligible, but far from being awful.</p>
<p>&quot;</p>
<ol>
<li>It has a shedload of small files taking a lot of time to install on older hardware and adding to the disk space fragmentation (and defragmentation) problem considerably</li>
</ol>
<p>&quot;</p>
<p>There are also indexing/searching and backuping issues. That&#8217;s a annoying, but not awful.</p>
<p>&quot;</p>
<ol>
<li>It generates binaries during install taking 100% of the CPU time preventing you from doing any other usefull work while it installs</li>
</ol>
<p>&quot;</p>
<p>Well, it doesn&#8217;t take years either.</p>
<p>&quot;</p>
<ol>
<li>It was meant to be a solution to the versioning problem but from the user standpoint it didn&#8217;t solve that problem </li>
</ol>
<p>&quot;</p>
<p>Good point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591283">
				<div id="div-comment-591283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-591283">
			January 17, 2008 at 9:54 pm</a>		</div>

		<p>Or develop 10 different .NET apps? I mean that the .NET Framework only have to be installed once per version per PC and then all .NET apps can use it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-591183">
				<div id="div-comment-591183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-591183">
			January 17, 2008 at 3:34 pm</a>		</div>

		<p>&quot;It adds its own service contributing to the useless resource consumption.&quot;</p>
<p>That service is set to &quot;Manual&quot; meaning it only runs when it has to. It *has* to be a service because it must be run with administrator privileges (in order to compile code in the GAC). But it doesn&#8217;t &quot;contribut[e] to the useless resource consumption&quot; because most of the time, it&#8217;s not running.</p>
<p>&quot;the functionality .Net offers you as a developer doesn&#8217;t exist in other languages/APIs with a considerably smaller footprint&quot;</p>
<p>You don&#8217;t seem to realise the difference between a &quot;feature&quot; and the development effort required to *use* that feature. Obviously, everything .NET can do, any other turning-complete development environment could do. That doesn&#8217;t mean you&#8217;re not going to be spending 10 times more effort getting it to work in the native API than the .NET API.</p>
<p>As an example, I&#8217;m sure you could implement the remoting feature of .NET using named pipes or something in native code. But I pity the developer tasked with having to do it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591213">
				<div id="div-comment-591213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-591213">
			January 17, 2008 at 6:04 pm</a>		</div>

		<p>&quot;</p>
<p>That service is set to &quot;Manual&quot; meaning it only runs when it has to. It *has* to be a service because it must be run with administrator privileges (in order to compile code in the GAC). But it doesn&#8217;t &quot;contribut[e] to the useless resource consumption&quot; because most of the time, it&#8217;s not running.</p>
<p>&quot;</p>
<p>The fact that .NET requires admin privileges to be installed is also a factor that prevents me from using .NET applications at university.</p>
<p>&quot;</p>
<p>You don&#8217;t seem to realise the difference between a &quot;feature&quot; and the development effort required to *use* that feature. Obviously, everything .NET can do, any other turning-complete development environment could do. That doesn&#8217;t mean you&#8217;re not going to be spending 10 times more effort getting it to work in the native API than the .NET API.</p>
<p>&quot;</p>
<p>That&#8217;s true from a developer point of view, but from a user point of view, that&#8217;s called &quot;developer lazyiness&quot;. Something that saves precious time to developers, but reduce software quality.</p>
<p>&#8230; Since you develop software 10 times faster, which I don&#8217;t doubt, why don&#8217;t you sell your software 10 times cheaper? Or maybe you add more features to your application? Well, I find that .NET applications don&#8217;t have more features than good old C and C++ applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-604013">
				<div id="div-comment-604013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2008/02/25/7885570.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080111-00/?p=23843#comment-604013">
			February 25, 2008 at 4:19 pm</a>		</div>

		<p>It looks so nice at first.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

