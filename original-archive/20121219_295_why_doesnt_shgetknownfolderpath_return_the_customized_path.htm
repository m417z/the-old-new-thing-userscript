<html>
<head>
<title>Why doesn't SHGetKnownFolderPath return the customized path?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why doesn&#8217;t SHGetKnownFolderPath return the customized path?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 19, 2012 / year-entry #296</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer reported that the SHGet­Known­Folder­Path function was not working correctly. They moved their Videos folder to a new location, but when they called SHGet­Known­Folder­Path, they got the old path rather than the new one. A quick check of the code they provided showed why: ... SHGetKnownFolderPath(FOLDERID_Videos, KF_FLAG_DONT_VERIFY | KF_FLAG_DEFAULT_PATH, NULL, &pszPath); Um, you're passing...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that the
<code>SHGet&shy;Known&shy;Folder&shy;Path</code> function
was not working correctly.
They moved their Videos folder to a new location,
but when they called
<code>SHGet&shy;Known&shy;Folder&shy;Path</code>,
they got the old path rather than the new one.
</p>
<p>
A quick check of the code they provided showed why:
</p>
<pre>
 ...
 SHGetKnownFolderPath(FOLDERID_Videos,
                      KF_FLAG_DONT_VERIFY |
                      KF_FLAG_DEFAULT_PATH,
                      NULL,
                      &amp;pszPath);
</pre>
<p>
Um, you're passing the
<code>KF_<wbr>FLAG_<wbr>DEFAULT_<wbr>PATH</code> flag.
That flag means
"Tell me where this folder <i>would have been</i>
if its location had never been customized."
Therefore,
if you pass this flag,
you have no right to complain that it's returning
a path different from the customized path.
Because passing that flag means "I don't want
the customized path."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1027213">
				<div id="div-comment-1027213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027213">
			December 19, 2012 at 7:06 am</a>		</div>

		<p>The amp-shy-semicolon in the function name in the first paragraph lacks a semicolon toward the end of the function name. A real web browser handles this nicely, but my RSS reader balked at it.</p>
<p>Thanks for an otherwise great blog.</p>
<div class="post">[<em>Fixed, thanks. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027223">
				<div id="div-comment-1027223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BC_Programming</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027223">
			December 19, 2012 at 7:08 am</a>		</div>

		<p>&quot;Pray, Mr. Babbage, if you put into the machine wrong figures, will the right answers come out?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027233">
				<div id="div-comment-1027233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027233">
			December 19, 2012 at 7:13 am</a>		</div>

		<p>@BC_Programming: I am not able rightly to apprehend the kind of confusion of ideas that could provoke such a question.</p>
<p>Isn&#39;t it nice that 150 years later we still have the same problem?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027243">
				<div id="div-comment-1027243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027243">
			December 19, 2012 at 7:38 am</a>		</div>

		<p>I actually feel sorry for this customer. &nbsp;MS support cases are too valuable commodity to waste just because no one can be bothered to read MSDN.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027253">
				<div id="div-comment-1027253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027253">
			December 19, 2012 at 7:43 am</a>		</div>

		<p>@Peter &#8211; And Stack Overflow is going the same way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-david-ching odd alt thread-odd thread-alt depth-1" id="comment-1027303">
				<div id="div-comment-1027303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/David+Ching' rel='external nofollow' class='url'>David Ching</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027303">
			December 19, 2012 at 11:38 am</a>		</div>

		<p>The customer should have known better before filing an incident report. &nbsp;Still, it illustrates the all-too-familiar trait of Win32 API&#39;s to use bitfields like KE_FLAG_DEFAULT_PATH instead of modern, readable constructs like enum FolderPath { DefaultLocation, CustomizedLocation }. &nbsp;You don&#39;t have these problems with .NET, which is a much more readable API. &nbsp;Of course, it helps that bitfields are no longer needed to achieve adequate performance (in most cases).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027323">
				<div id="div-comment-1027323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027323">
			December 19, 2012 at 12:34 pm</a>		</div>

		<p>I suspect next question of cusomer was &#39;how to customize default-not-custimized path returned due to KF_FLAG_DEFAULT_PATH&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027333">
				<div id="div-comment-1027333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clovis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027333">
			December 19, 2012 at 12:40 pm</a>		</div>

		<p>I suspect the next question of customer was &#39;Can I haz teh codez&#39;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027343">
				<div id="div-comment-1027343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027343">
			December 19, 2012 at 12:57 pm</a>		</div>

		<p>David Ching, your bitfield thing is bullshit. Compare this:</p>
<p>SHGetKnownFolderPath(FOLDERID_Videos, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;KF_FLAG_DONT_VERIFY | KF_FLAG_DEFAULT_PATH, NULL, ppszPath);</p>
<p>with:</p>
<p>SHGetKnownFolderPath(FOLDERID_Videos, NULL, ppszPath, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;KF_FLAG_NO_SIMPLE_IDLIST, KF_FLAG_PARENT_RELATIVE, KF_FLAG_DEFAULT_PATH, KF_FLAG_NO_INIT, KF_FLAG_ALIAS, KF_FLAG_UNEXPAND, KF_FLAG_DONT_VERIFY);</p>
<p>I agree that .Net&#39;s names look cleaner, but that&#39;s mostly because I hate ALL CAPS; it looks like shouting to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027353">
				<div id="div-comment-1027353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027353">
			December 19, 2012 at 1:11 pm</a>		</div>

		<p>shouting or not, but all macro defines in Windows SDK were definitely written by a blonde.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027363">
				<div id="div-comment-1027363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027363">
			December 19, 2012 at 1:33 pm</a>		</div>

		<p>I suspect that the reason that the Windows SDKS are filled with macros instead of enums is because C and C++ (pre C++11) left the size of an enumerated item to be implementation defined. &nbsp;This effectively means no enums because if my compiler decides to treat a particular enum as 1 byte and the one the SDK authors used used 4 byte enums, then all sorts of hilarity will ensue (the shrapnel of which Raymond would have had to pick up and write an entertaing blog entry about).</p>
<div class="post">[<em>It&#39;s much simpler than that. The coding conventions for the Windows SDK were established six years before enums were added to the C language. You&#39;re asking <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/01/19/10117410.aspx" rel="nofollow">why they didn&#39;t use the Space Shuttle to rescue the Apollo 13 astronauts</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027373">
				<div id="div-comment-1027373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027373">
			December 19, 2012 at 2:14 pm</a>		</div>

		<p>@SimonRev: &nbsp;I have run into exactly this hilarity because the Windows SDK developers forgot this concept a long time ago. &nbsp;A simple grep shows the header files are chock full of enums.</p>
<p>Older versions of a competing non-Microsoft C++ compiler (and possibly still true today) have a checkbox for treating enum types as ints. &nbsp;Guess what the default is? &nbsp;Hint: I spent a good bit of time debugging an issue before I realized that sizeof(some enum) == 1, and the enum was passed to the Win32 API as some function parameter or structure member.</p>
<p>For all I know, checking this box breaks compatibility with another programming language provided by the same company, but the projects I work with don&#39;t use that language apart from 3rd-party components.</p>
<p>Either the developers of this compiler were short-sighted and never thought of this compatibility issue with existing Windows headers when they picked sizeof(enum) != sizeof(int), or Microsoft started adding enums to their headers after this compiler started doing that and MS didn&#39;t care about the breakage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-david-ching even thread-even depth-1" id="comment-1027383">
				<div id="div-comment-1027383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/David+Ching' rel='external nofollow' class='url'>David Ching</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027383">
			December 19, 2012 at 2:18 pm</a>		</div>

		<p>@AC: &nbsp;Your second example shows it is indeed easier to have one parameter for each option instead of jamming all the options into one dwFlags parameter as is done in the API! &nbsp;Then it forces the caller to specify each option instead of (perhaps accidentally) omitting it. &nbsp;For example, either the KF_FLAG_DEFAULT_PATH or 0 must be the 7th parameter. &nbsp;Even this is not great because it is not obvious that &#39;0&#39; means customized path. &nbsp;Better to add #define KF_FLAG_CUSTOMIZED_PATH 0. &nbsp;The enum replaces #defines with something typesafe and even more readable (since the KF_FLAG_ prefix can be omitted, so there is less crud to read). &nbsp;Using bitfield instead, not specifying KF_FLAG_DEFAULT_PATH is the same as specifying &quot;Customized Path&quot;, but it is not clear from reading the caller code, since bitfields are entirely optional.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-david-ching odd alt thread-odd thread-alt depth-1" id="comment-1027403">
				<div id="div-comment-1027403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/David+Ching' rel='external nofollow' class='url'>David Ching</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027403">
			December 19, 2012 at 2:29 pm</a>		</div>

		<p>@JamesJohnston: &nbsp;I believe, but am not certain, the reason for Turbo/Borland C++ treating enums as bytes (and not ints) by default was to save memory. &nbsp;Back then, Windows programming had a lot of performance issues, such as DS != SS in a DLL, thus the overhead of thunks, so the &quot;enum as int&quot; non-optimization was considered part of the Windows penalty. &nbsp;I also believe that if you created a new Windows project, that it would default the option to treat enum as int (for Windows compatibility). Back then, it was more important to create highly performant DOS programs, and it was understood that if you wanted to program in Windows, you would pay a performance penalty.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027423">
				<div id="div-comment-1027423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027423">
			December 19, 2012 at 2:57 pm</a>		</div>

		<p>Oh, that&#39;s a disappointment. David was just trolling.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027473">
				<div id="div-comment-1027473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027473">
			December 19, 2012 at 10:18 pm</a>		</div>

		<p>@Peter: I didn&#39;t need to read MSDN to see what was wrong here. It&#39;s kind of obvious to me from the name of the bit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027483">
				<div id="div-comment-1027483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdbsd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027483">
			December 19, 2012 at 11:52 pm</a>		</div>

		<p>@JamesJohnston: Delphi has this flag too (&quot;Minimum enum size&quot;). You can also mark certain enums to use specific size (like with field alignment), and I believe Builder has that too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027503">
				<div id="div-comment-1027503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027503">
			December 20, 2012 at 1:52 am</a>		</div>

		<p>@SimonRev: That problem isn&#39;t a real problem anyway, because Microsoft just puts in a MS_EXPAND_ENUM_TO_FOUR_BYTES = 0x7fffffff at the end of the enum whenever they use enums to force the size.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027513">
				<div id="div-comment-1027513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027513">
			December 20, 2012 at 2:49 am</a>		</div>

		<p>Matt, that was funny. You made me grep.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027643">
				<div id="div-comment-1027643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Not a Win32 programmer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027643">
			December 20, 2012 at 11:05 am</a>		</div>

		<p>What&#39;s the use case for wanting to know where a folder was before the user customized its location? If I (as a user) move my Videos folder to the D: drive or whatever, I don&#39;t want random programs trying to access the ghost of the folder at its old location.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1027673">
				<div id="div-comment-1027673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Byrd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027673">
			December 20, 2012 at 11:57 am</a>		</div>

		<p>@Not a Win32 Programmer: How about resetting things back to stock after some 3rd party program co-opts the video folder because it&#39;s so special?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1027823">
				<div id="div-comment-1027823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1027823">
			December 20, 2012 at 10:24 pm</a>		</div>

		<p>@Not a Win32 programmer: you could use it to check if the current path is the default path, I suppose.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1028033">
				<div id="div-comment-1028033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">couch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121219-00/?p=5793#comment-1028033">
			December 22, 2012 at 5:52 am</a>		</div>

		<p>@Not a Win32 programmer : use case IMHO is internal APIs not differing from public APIs, internally you need to know this so why not expose it. (e.g. reset to default button)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

