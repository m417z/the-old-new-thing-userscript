<html>
<head>
<title>Debugging session: Which of the many things happening in this single line of code is the one that crashed?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Debugging session: Which of the many things happening in this single line of code is the one that crashed?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 26, 2016 / year-entry #111</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Let's go to the disassembly.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A crash report came in,
and the offending line of code was the following:
</p>
<pre>
void CDeloreanSettings::UpdateFluxModulation(bool sendNotification)
{
    ComPtr&lt;IFluxModulator&gt; spModulator;
    // Crash on the next line
    if (SUCCEEDED(m_spFluxCapacitor-&gt;GetFluxModulator(&amp;spModulator)))
    {
        ...
    }
}
</pre>
<p>
Someone made the initial diagnosis that
</p>
<blockquote CLASS=q><p>
The call is to <code>Release&shy;And&shy;Get&shy;Address&shy;Of()</code>
on a <code>ComPtr</code> object which is declared right above
(which should be initialized to <code>nullptr</code>). Am I missing something?
</p>
</blockquote>
<p>
Let's look at the disassembly.
First, with no annotations.
See if you can figure it out yourself.
</p>
<pre>
CDeloreanSettings::UpdateFluxModulation:
mov     qword ptr [rsp+10h],rbx
mov     qword ptr [rsp+18h],rsi
mov     qword ptr [rsp+20h],rdi
push    rbp
push    r14
push    r15
mov     rbp,rsp
sub     rsp,50h
mov     rax,qword ptr [__security_cookie]
xor     rax,rsp
mov     qword ptr [rbp-8],rax
mov     rdi,qword ptr [rcx+18h]
mov     r14,rcx
lea     rcx,[rbp-10h]
xor     esi,esi
mov     r15b,dl
and     qword ptr [rbp-10h],rsi
call    Microsoft::WRL::ComPtr&lt;IUnrelatedInterface&gt;::InternalRelease
mov     rax,qword ptr [rdi] &lt;&lt; crash here
mov     rbx,qword ptr [rax+38h]
mov     rcx,rbx
call    qword ptr [__guard_check_icall_fptr]
lea     rdx,[rbp-10h]
mov     rcx,rdi
call    rbx
</pre>
<p>
Okay, here's the version with my annotations:
</p>
<pre>
CDeloreanSettings::UpdateFluxModulation:
; Prologue: <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363">Save nonvolatile registers</a> and build the stack frame.
mov     qword ptr [rsp+10h],rbx
mov     qword ptr [rsp+18h],rsi
mov     qword ptr [rsp+20h],rdi
push    rbp
push    r14
push    r15
mov     rbp,rsp
sub     rsp,50h
mov     rax,qword ptr [__security_cookie]
xor     rax,rsp
mov     qword ptr [rbp-8],rax

mov     rdi,qword ptr [rcx+18h] ; rdi = m_spFluxCapacitor
mov     r14,rcx                 ; save "this"
lea     rcx,[rbp-10h]           ; prepare spModulator.ReleaseAndGetAddressOf
xor     esi,esi
mov     r15b,dl                 ; save "sendNotification"
and     qword ptr [rbp-10h],rsi ; construct spModulator
; ReleaseAndGetAddressOf was inlined. Here's the Release part:
call    Microsoft::WRL::ComPtr&lt;<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20050322-00/?p=36113">IUnrelatedInterface</a>&gt;::InternalRelease

; prepare m_spFluxCapacitor-&gt;...
; Crash here loading vtable from m_spFluxCapacitor
mov     rax,qword ptr [rdi] &lt;&lt; crash here
mov     rbx,qword ptr [rax+38h] ; load address of GetFluxModulator
mov     rcx,rbx                 ; parameter to <a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/mt637065(v=vs.85).aspx">CFG</a> check
call    qword ptr [__guard_check_icall_fptr] ; check the function pointer

; Here's the GetAddressOf part of ReleaseAndGetAddressOf:
lea     rdx,[rbp-10h] ; spModulator.GetAddressOf
mov     rcx,rdi                 ; "this" for GetFluxModulator
call    rbx                     ; _spFluxCapacitor-&gt;GetFluxModulator()
</pre>
<p>
The compiler inlined
<code>Release&shy;And&shy;Get&shy;Address&shy;Of</code>,
and it interleaved various unrelated operations.
In the second block of code, you can see it interleave the
construction of the <code>Com&shy;Ptr</code>
with the call to
<code>Internal&shy;Release</code>.
In the third block, you can see it peform the
control flow guard test before performing the
<code>Get&shy;Addresss&shy;Of</code>.
</p>
<p>
The conclusion, therefore, is not that the crash occurred in the
<code>Release&shy;And&shy;Get&shy;Address&shy;Of</code>
The
<code>Release&shy;And&shy;Get&shy;Address&shy;Of</code>
just finished releasing and is waiting for its turn to do the
<code>Get&shy;Addresss&shy;Of</code>.
Rather, the crash occurred because
<code>m_spFlux&shy;Capacitor</code> is null,
and we crashes trying to read the vtable from a null pointer.
</p>
<p>
Further investigation of the issue revealed that
<code>Update&shy;Flux&shy;Modulation</code> is called
from an event handler that was registered to be called
whenever the modulation changed.
Inspection of memory showed that the event registration
token was zero, indicating that the event has already been
unregistered.
The issue is that there was a modulation change in
flight
when the event handler was unregistered,
so the <code>CDelorean&shy;Settings</code>
received its change notification after it
had unregistered.
The fix is to have the handler check whether it still has
a <code>m_spFlux&shy;Capacitor</code>,
and if not, then ignore the notification,
on the assumption that it was a stray notification that
was late to arrive.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1250615">
				<div id="div-comment-1250615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250615">
			May 26, 2016 at 7:06 am</a>		</div>

		<p>m_spFluxCapacitor is null because it traveled backwards in time to a point where the pointer had yet to be set.</p>
<p>Sorry!  Bad joke!</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman odd alt depth-2 parent" id="comment-1250616">
				<div id="div-comment-1250616" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250616">
			May 26, 2016 at 7:21 am</a>		</div>

		<p>I don&#8217;t think that&#8217;s right. In the movies, both Marty and Doc traveled back to the 1800&#8217;s, well before either of them were born. They didn&#8217;t suddenly disappear (become Null).</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1250685">
				<div id="div-comment-1250685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ICom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250685">
			May 26, 2016 at 9:22 pm</a>		</div>

		<p>That&#8217;s due to a temporal issue in their reference counts, which prevented them from forfeiting their lives. Just because they travel to the past does not &#8220;release&#8221; their other selves from still existing in the future.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1250625">
				<div id="div-comment-1250625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250625">
			May 26, 2016 at 7:41 am</a>		</div>

		<p>I recently investigated problems with code that changed the OS time. Very confusing. It took -20 hours btw.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1250635">
				<div id="div-comment-1250635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250635">
			May 26, 2016 at 8:26 am</a>		</div>

		<p>Isn&#8217;t this code part of the famous time machine which Microsoft Research has been developing for at least 25 years?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fjeldse odd alt depth-2" id="comment-1250705">
				<div id="div-comment-1250705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250705">
			May 27, 2016 at 8:48 am</a>		</div>

		<p>You&#8217;ll know when they&#8217;re finished when they&#8217;ve always had it!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1250675">
				<div id="div-comment-1250675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jimbobmcgee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250675">
			May 26, 2016 at 6:19 pm</a>		</div>

		<p>When/why did you start injecting spaces into your inline Pascal-cased code keywords?<br />
It&#8217;s super-annoying&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1250725">
				<div id="div-comment-1250725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250725">
			May 27, 2016 at 9:12 pm</a>		</div>

		<p>Those are soft hyphens, and they&#8217;ve been there for years. If they are showing up as spaces, then something is wrong with your browser.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1250736">
				<div id="div-comment-1250736" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jimbobmcgee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250736">
			May 28, 2016 at 5:24 pm</a>		</div>

		<p>So they are &#8211; you learn something new every day.<br />
Good old mobile browsers &#8211; rendering everything goes wrong since 1996&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1250746">
				<div id="div-comment-1250746" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250746">
			May 29, 2016 at 2:53 am</a>		</div>

		<p>One of your &#8220;ComPtr&#8221;s does have a soft-hyphen, the other one doesn&#8217;t.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1 parent" id="comment-1250696">
				<div id="div-comment-1250696" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250696">
			May 27, 2016 at 2:56 am</a>		</div>

		<p>IUnrelatedInterface (and its link) reminded me of a question, does the PDB contain information mentioning that Identical COMDAT Folding occurred? Would it be possible for the debugger to say &#8220;Microsoft::WRL::ComPtr::InternalRelease() could actually be any of 37 folded functions&#8221;?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1251025">
				<div id="div-comment-1251025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1251025">
			June 2, 2016 at 10:44 am</a>		</div>

		<p>I don&#8217;t see a technical reason why not. SymEnumSymbolsForAddr will tell you. I don&#8217;t know whether it actually does, though.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1250865">
				<div id="div-comment-1250865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160526-00/?p=93525#comment-1250865">
			May 31, 2016 at 1:37 pm</a>		</div>

		<p>Excuse my ignorance, but by looking at the source line and assuming that SUCCESS doesn&#8217;t do anything fancy, is there much more than m_spFluxCapacitor having a bad value that could go wrong? (I guess there is? :-))</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

