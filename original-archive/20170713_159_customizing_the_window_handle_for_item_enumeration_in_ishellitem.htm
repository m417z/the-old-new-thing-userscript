<html>
<head>
<title>Customizing the window handle for item enumeration in IShellItem</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Customizing the window handle for item enumeration in IShellItem</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 13, 2017 / year-entry #160</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170713-00/?p=96595</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It's on the site.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Some time ago, I showed how to
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833">
customize the enumeration flags used when enumerating items
with <code>IShell&shy;Item</code></a>.
This controls the <code>grfFlags</code> parameter passed to
<a HREF="https://msdn.microsoft.com/library/windows/desktop/bb775066(v=vs.85).aspx">
the <code>IShell&shy;Folder::</code><code>Enum&shy;Objects</code> method</a>,
but what about the <code>hwndOwner</code> parmaeter?
How to do you customize the window handle?
</p>
<p>
The window handle for the enumeration comes from the site of
the enumerator.
</p>
<p>
There's no real reason you were expected to know this.
</p>
<p>
Here's a Little Program that demonstrates.
It is basically the program we used
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833">
last time</a>,
but translated from ATL to WRL (because that lets me
<a HREF="https://msdn.microsoft.com/library/jj822931.aspx">
use the <code>Runtime&shy;Class</code> template</a>.)
</p>
<pre>
#define STRICT
#include &lt;windows.h&gt;
#include &lt;shlobj.h&gt;
#include &lt;shlwapi.h&gt;
#include &lt;knownfolders.h&gt;
#include &lt;wrl/client.h&gt;
#include &lt;wrl/implements.h&gt;
#include &lt;stdio.h&gt;    // Horrors! Mixing stdio and C++!

namespace wrl = Microsoft::WRL;

class COleWindow : public wrl::RuntimeClass&lt;
    wrl::RuntimeClassFlags&lt;wrl::ClassicCom&gt;, IOleWindow&gt;
{
public:
  HRESULT RuntimeClassInitialize(HWND hwnd)
  {
    m_hwnd = hwnd;
    return S_OK;
  }

  STDMETHODIMP GetWindow(_Out_ HWND* phwnd)
  {
    *phwnd = m_hwnd;
    return S_OK;
  }

  STDMETHODIMP ContextSensitiveHelp(BOOL /* fEnterMode */)
  {
    return E_NOTIMPL;
  }

private:
  HWND m_hwnd;
};
</pre>
<p>
The <code>COleWindow</code> class is a simple object
which implements the <code>IOleWindow</code> interface.
It coughs up the window handle you gave it at initialization.
</p>
<p>
We can use this object to provide a window for enumeration.
Remember that Little Programs do little to no error checking.
</p>
<pre>
int __cdecl wmain(int argc, wchar_t** argv)
{
  <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20110830-00/?p=9773">CCoInitialize</a> init;

  if (argc &lt; 2) return 0;

  HWND hwnd = CreateWindowW(L"static", L"Title",
      WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, CW_USEDEFAULT,
      CW_USEDEFAULT, CW_USEDEFAULT,
      nullptr, nullptr, <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483">HINST_THISCOMPONENT</a>, 0);

  wrl::ComPtr&lt;IShellItem&gt; folder;
  SHCreateItemFromParsingName(argv[1], nullptr,
                              IID_PPV_ARGS(&amp;folder));

  wrl::ComPtr&lt;IEnumShellItems&gt; enumerator;
  folder-&gt;BindToHandler(nullptr, BHID_EnumItems,
                           IID_PPV_ARGS(&amp;enumerator));

  wrl::ComPtr&lt;IUnknown&gt; site;
  wrl::MakeAndInitialize&lt;COleWindow&gt;(&amp;site, hwnd);
  IUnknown_SetSite(enumerator.Get(), site.Get());

  wrl::ComPtr&lt;IShellItem&gt; item;
  while (enumerator-&gt;Next(1, item.ReleaseAndGetAddressOf(),
                             nullptr) == S_OK) {
    PWSTR name;
    item-&gt;GetDisplayName(SIGDN_NORMALDISPLAY, &amp;name);
    wprintf(L"%s\n", name);
    CoTaskMemFree(name);
  }

  return 0;
}
</pre>
<p>
First, we create a window so we have something to pass
to <code>IShell&shy;Folder::</code><code>Enum&shy;Objects</code>.
In real life,
this is the window you want to use for any UI that is displayed
as part of the enumeration.
</p>
<p>
Next, we take the path from the command line and convert it
to an <code>IShellItem</code>.
This is not new.
</p>
<p>
Once we have the folder as an <code>IShellItem</code>,
we ask for its enumerator.
If you wanted to customize the flags passed to the
<code>IShell&shy;Folder::</code><code>Enum&shy;Objects</code>
method,
here's where you would
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833">
pass a customizing <code>IBindCtx</code></a>.
</p>
<p>
And then the new part:
Before calling any enumeration methods,
we create a <code>COleWindow</code> object and set it as
the enumerator's site.
This tells the enumerator where to get its window from.
</p>
<p>
We have nothing else interesting in our site,
but in a real program,
your site would probably implement
<code>IService&shy;Provider</code> in order to be a full-fledged
site chain.
</p>
<p>
Finally, we use the enumerator in the usual manner
and (for demonstration purposes)
print out the names of the resulting objects.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1302026">
				<div id="div-comment-1302026" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua Schaeffer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170713-00/?p=96595#comment-1302026">
			July 13, 2017 at 10:41 am</a>		</div>

		<p>I found it easiest to combine everything into a ShellItem class which has member fields for both IShellItem and IShellFolder, and the constructors build whatever you don&#8217;t have. If you provide a IShellItem it extracts the IShellFolder and PIDL, and vice versa. Then a lot of this special IBindCtx casing goes away and you can interchangeably use whatever interface is easier. You can also add memcmp-sorting and CRC32-hashing on the absolute PIDL for dictionaries/sets/etc. I&#8217;m shocked .NET Framework isn&#8217;t doing this already.</p>
<p>One problem with EnumObjects() is that many system implementations won&#8217;t respect child/owner relationships with out-of-process HWNDs. You&#8217;ll empty the Recycle Bin and the confirmation window will show underneath the Z like it was browser spam or something. Not very good for writing third-party Explorers.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1302045">
				<div id="div-comment-1302045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170713-00/?p=96595#comment-1302045">
			July 13, 2017 at 3:39 pm</a>		</div>

		<p>Funny you say that. An IShellItem is already that: an IShellFolder and a PIDL. No need to wrap the wrapper.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even depth-2 parent" id="comment-1302055">
				<div id="div-comment-1302055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170713-00/?p=96595#comment-1302055">
			July 14, 2017 at 7:07 am</a>		</div>

		<p>I have seen the same Z-order issue in Explorer with the confirm dialog during file copy operations. (Might only happen with new process Explorer windows?)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1302255">
				<div id="div-comment-1302255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Will</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170713-00/?p=96595#comment-1302255">
			July 17, 2017 at 2:31 pm</a>		</div>

		<p>The &#8220;confirmation dialog behind all other windows&#8221; issue is so common on my work PC it doesn&#8217;t bother me anymore. If it happened every 20th time, it would be a headache, but as it happens almost every time, I know to go looking for the missing window. I guess us cobblers are ok with not having shoes.</p>
<p>I probably could reinstall Windows to fix this, but that&#8217;s a major ordeal.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

