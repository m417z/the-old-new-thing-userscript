<html>
<head>
<title>ERRORLEVEL is not %ERRORLEVEL%</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>ERRORLEVEL is not %ERRORLEVEL%</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 26, 2008 / year-entry #323</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The command interpreter cmd.exe has a concept known as the error level, which is the exit code of the program most recently run. You can test the error level with the IF ERRORLEVEL command: IF ERRORLEVEL 1 ECHO error level is 1 or more <sidebar> The IF ERRORLEVEL n test succeeds if the error level...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The command interpreter <code>cmd.exe</code> has a concept
known as the <i>error level</i>,
which is the exit code of the program most recently run.
You can test the error level with the
<code>IF ERRORLEVEL</code> command:
</p>
<pre>
IF ERRORLEVEL 1 ECHO error level is 1 or more
</pre>
<p>
&lt;sidebar&gt;<br>
The <code>IF ERRORLEVEL n</code> test succeeds
if the error level is n <i>or more</i>.
This was presumably because there were programs that
expressed different degrees of failure with higher and
higher exit codes.
For example, the <code>diff</code> program has three exit codes:
0 means the files are the same;
1 means the files are different;
2 means that something terrible happened.
There are also programs that use an exit code of zero
to mean success and anything else to mean failure.<br>
&lt;/sidebar&gt;
</p>
<p>
In addition to this internal state,
you can, if you wish, create an environment variable
with the name <code>ERRORLEVEL</code>,
in the same way that you can create an environment variable
called <code>FRED</code>.
But, as with <code>FRED</code>,
that variable won't have any effect on the error level.
</p>
<pre>
rem this next command sets the error level to zero
CMD /C EXIT 0
set ERRORLEVEL=1
if ERRORLEVEL 1 echo Does this print?
</pre>
<p>
The message is not printed because the <code>ERRORLEVEL</code>
environment variable has no effect on the error level.
It's just a variable whose name happens to coincide with a command
processor concept.
</p>
<pre>
set BANKBALANCE=$1,000,000.00
</pre>
<p>
"Hey, when I tried to withdraw the money, I got an insufficient funds error.
What am I doing wrong?"
</p>
<p>
Now, it does happen to be the case that if command extensions are
enabled and you say
<code>%ERRORLEVEL%</code>, then the command processor first looks
for an environment variable called <code>ERRORLEVEL</code>,
and <i>if it can't find one</i>, then it replaces <code>%ERRORLEVEL%</code>
with the current value of the internal error level value.
It's a fallback step,
in the same way that your neighbor is a fallback delivery location if
you aren't home.
If you file a change-of-address form for yourself, that doesn't affect
packages sent to your neighbor.
</p>
<p>
The same behavior can be seen with <code>%CD%</code>:
If you did not explicitly set an environment variable called <code>CD</code>,
then <code>%CD%</code> expands to the command processor's current
directory.
But you can't change directories by saying <code>set CD=C:\Windows</code>.
</p>
<p>
I can think of a few reasons why this feature may have been added.
</p>
<ul>
<li>So you can include the error level in a log file:<br>
    <code>ECHO error level is %ERRORLEVEL%&gt;logfile</code></p>
<li>So you can perform other types of tests against the error level,
    for example, to perform an equality test:<br>
    <code>IF %ERRORLEVEL% EQU 1 echo Different!</code>
</ul>
<p>
But I'm digressing.
My point for today is that the error level is not the same
as the <code>ERRORLEVEL</code> environment variable.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-670793">
				<div id="div-comment-670793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-670793">
			September 26, 2008 at 10:06 am</a>		</div>

		<p>Oops.</p>
<p>Thanks for pointing out the differences between ERRORLEVEL and %ERRORLEVEL%. &nbsp;I just happened to have finished writing a batch script that was getting ready to go into production using the latter that worked simply because of the fall-back nature of the shell. &nbsp;I&#8217;ll have to go back and fix it because the &#8220;greater than or equal to&#8221; behavior was expected but won&#8217;t happen due to my mistake.</p>
<div class="post">[<i>It&#8217;s fine to rely on the fall-backâ€”it&#8217;s documented and supported. You just have to understand that it&#8217;s a fallback and not an actual variable. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-670813">
				<div id="div-comment-670813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-670813">
			September 26, 2008 at 10:49 am</a>		</div>

		<p>I feel like have a special shell builtin called ERRORLEVEL that can be confused with an environment variable is just asking for trouble. &nbsp;Why not just have an environment variable called %ERRORLEVEL% which is automatically updated to the error level whenever a command finishes running? &nbsp;Then there&#8217;s no possibility of confusion, although anything which tries to use that environment variable will not work. &nbsp;Bash uses the variable $? for exactly this purpose, which no sane program would try to use as its own environment variable.</p>
<div class="post">[<i>You gave the answer yourself: &#8220;Anything which tries to use that environment variable will not work.&#8221; But if you don&#8217;t have such a variable, then %ERRORLEVEL% does expand to to the current error level. What you can&#8217;t do is set the error level via &#8220;set ERRORLEVEL=&#8230;&#8221;. In the same way that bash doesn&#8217;t let you &#8220;set ?=&#8230;&#8221;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-670833">
				<div id="div-comment-670833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Denis Dmitriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-670833">
			September 26, 2008 at 11:34 am</a>		</div>

		<p>It&#8217;s still asking for trouble because it introduces action at a distance:</p>
<p>H:moo&gt;cat quack.bat</p>
<p>@echo off</p>
<p>diff</p>
<p>echo %ERRORLEVEL%</p>
<p>H:moo&gt;quack.bat</p>
<p>diff: missing operand after `diff&#8217;</p>
<p>diff: Try `diff &#8211;help&#8217; for more information.</p>
<p>2</p>
<p>H:moo&gt;set ERRORLEVEL=&quot;meow&quot;</p>
<p>H:moo&gt;quack.bat</p>
<p>diff: missing operand after `diff&#8217;</p>
<p>diff: Try `diff &#8211;help&#8217; for more information.</p>
<p>&quot;meow&quot;</p>
<p>H:moo&gt;</p>
<p>So if one wants to rely on this fallback, a prudent thing to do would be to clean the ERRORLEVEL variable first (though I don&#8217;t know if this will work on all versions of Windows):</p>
<p>H:moo&gt;set ERRORLEVEL=</p>
<p>H:moo&gt;quack.bat</p>
<p>diff: missing operand after `diff&#8217;</p>
<p>diff: Try `diff &#8211;help&#8217; for more information.</p>
<p>2</p>
<p>H:moo&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-670883">
				<div id="div-comment-670883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-670883">
			September 26, 2008 at 12:19 pm</a>		</div>

		<p>Well, at least bash literally doesn&#8217;t allow you to set the $? variable at all. The set and export command fail if you try. CMD.exe allows you to set it but then from that point on the variable is mostly meaningless.</p>
<p>Maybe cmd.exe builtin set could set its exit value to the value passed in instead of setting the environment variable when the variable being set in is named ERRORLEVEL? That would be a neat trick.</p>
<p>(I would guess the number of programs that would be broken by the change would be quite near zero.)</p>
<div class=post>[<i>I would not be surprised if there were batch files that went<br /><code>set ERRORLEVEL=fail<br />if &#8230; set ERRORLEVEL=pass<br />echo Test XYZ result: %ERRORLEVEL% &gt;&gt; logfile</code><br />-Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-670913">
				<div id="div-comment-670913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-670913">
			September 26, 2008 at 2:26 pm</a>		</div>

		<p>What Raymond wanted to say is that ERRORLEVEL is not %ERRORLEVEL% if you set ERRORLEVEL ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-670973">
				<div id="div-comment-670973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-670973">
			September 26, 2008 at 5:10 pm</a>		</div>

		<p>Is there, then, a way to set the &quot;error level&quot; from batch? &nbsp;Or is it necessary to write an exe</p>
<p>// return-a-number.exe</p>
<p>int main (int argc, LPCSTR argv[])</p>
<p>{</p>
<p>&nbsp; &nbsp;return argc ? atoi(argv[0]) : 0;</p>
<p>}</p>
<p>&#8230; and then call it from batch?</p>
<p>if &#8230; return-a-number 17</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-670983">
				<div id="div-comment-670983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-670983">
			September 26, 2008 at 5:12 pm</a>		</div>

		<p>Actually reading the post, it appears CMD /C EXIT 17 works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-670863">
				<div id="div-comment-670863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-670863">
			September 26, 2008 at 11:45 am</a>		</div>

		<p>I&#8217;ve just updated the ExpandEnvironmentStrings MSDN entry (*) to reflect this &#8212; the CMD expansion is really different from what the &#8220;real&#8221; expansion function does.</p>
<p>Would anyone at Microsoft care to make the official CMD expansion into a useful function? &nbsp;Seems unfair that the microsoft tool gets fancy environment variable expansion, but the only API exposed does plain and ordinary expansion.</p>
<p>(*) Really just the &#8220;Comments&#8221; section, not the entry itself.</p>
<div class="post">[<i>And which is the &#8220;last&#8221; process that %ERRORLEVEL% should return the exit code of? What if that process hasn&#8217;t exited yet? The kernel and the command processor operate at very different levels. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-671023">
				<div id="div-comment-671023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew from Vancouver</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-671023">
			September 26, 2008 at 6:59 pm</a>		</div>

		<p>Accessing %ERRORLEVEL% in a batch is useful to capture the errorlevel, e.g.</p>
<p>set result=0</p>
<p>find /I &quot;whatever&quot; temp.txt</p>
<p>set result=%ERRORLEVEL%</p>
<p>REM Now do a bunch of IF statements based on the error level value, but checking %ERRORLEVEL%, some of which would set a new error level value</p>
<p>REM &#8230; but we do not care because we&#8217;re checking the %result% variable, not errorlevel</p>
<p>In a complex script with lots of tests and shelling to external scripts and executables, this is handier and more robust than a series of:</p>
<p>if errorlevel 3 (REM whatever3 &amp; goto wherever3)</p>
<p>if errorlevel 1 (REM whatever1 &amp; goto wherever1)</p>
<p>if not errorlevel 0 @echo success!</p>
<p>Andrew 8)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-671053">
				<div id="div-comment-671053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-671053">
			September 26, 2008 at 8:10 pm</a>		</div>

		<blockquote><p>
  The IF ERRORLEVEL n test succeeds if the error level is n or more. This was presumably because&#8230;
</p></blockquote>
<p>The test for inequality is nice to have because the pseudo-environment-variable gives an easy test for equality: IF &quot;%ERRORLEVEL%&quot;==&quot;%N%&quot;</p>
<p>Mathematically speaking, the two are equivalent, though; given one you can simulate the other.</p>
<p>rem TASK 1: using only</p>
<p>rem &nbsp; &nbsp; if ERRORLEVEL n</p>
<p>rem simulate</p>
<p>rem &nbsp; &nbsp; if &quot;%ERRORLEVEL%&quot;==&quot;%n%&quot;</p>
<p>rem &#8230; specifically, execute command foo under the specific condition</p>
<p>rem that the error level is equal to 17.</p>
<p>setlocal</p>
<p>set dofoo=no</p>
<p>if ERRORLEVEL 17 set dofoo=yes</p>
<p>if ERRORLEVEL 18 set dofoo=no</p>
<p>if &quot;%dofoo%&quot;==&quot;yes&quot; foo</p>
<p>rem TASK 2: using only</p>
<p>rem &nbsp; &nbsp; if &quot;%ERRORLEVEL%&quot;==&quot;%n%&quot;</p>
<p>rem simulate</p>
<p>rem &nbsp; &nbsp; if ERRORLEVEL n</p>
<p>rem &#8230; specifically, execute command foo under the specific condition</p>
<p>rem that the error level is &gt;= 17.</p>
<p>rem</p>
<p>setlocal</p>
<p>set dofoo=yes</p>
<p>set i=0</p>
<p>:STARTLOOP</p>
<p>if &quot;%i%&quot;==&quot;17&quot; goto EXITLOOP</p>
<p>if &quot;%ERRORLEVEL%&quot;==&quot;%n%&quot; set dofoo=no</p>
<p>set /a i = %i% + 1</p>
<p>goto STARTLOOP</p>
<p>:EXITLOOP</p>
<p>if &quot;%dofoo%&quot;==&quot;yes&quot; foo</p>
<p>But as Andrew says, having both gives you some nice syntactic sugar.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-671063">
				<div id="div-comment-671063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.semack.net' rel='external nofollow' class='url'>Myron A. Semack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-671063">
			September 26, 2008 at 11:09 pm</a>		</div>

		<p>Good post. &nbsp;This was an issue I fought with a few months ago on an embedded system running DOS (real DOS, not CMD.EXE). &nbsp;It took me a little while to figure out that ERRORLEVEL wasn&#8217;t a normal environment variable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-671083">
				<div id="div-comment-671083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">eddie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-671083">
			September 27, 2008 at 8:14 am</a>		</div>

		<p>you know, Go To Statement Considered Harmful.</p>
<p>I have written if errorlevel == 3 goto tag3 more times that i would like to. And I still hate it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-671093">
				<div id="div-comment-671093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-671093">
			September 27, 2008 at 11:34 am</a>		</div>

		<p>A god safety net is to reset ERRORLEVEL each time you use it, similar to the SetLAstError() function.</p>
<p>For example:</p>
<p>Set ERRORLEVEL=1000</p>
<p>myprogram.exe</p>
<p>Echo This is not the exit code: %ERRORLEVEL%</p>
<p>Set ERRORLEVEL=</p>
<p>myprogram.exe</p>
<p>Echo This is the exit code: %ERRORLEVEL%</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-671103">
				<div id="div-comment-671103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jbazuzi.blogspot.com' rel='external nofollow' class='url'>Jay Bazuzi</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-671103">
			September 27, 2008 at 1:12 pm</a>		</div>

		<p>And the correct way to set ERRORLEVEL? &nbsp;Use &#8216;exit&#8217;, perhaps as &#8216;exit /b&#8217;. &nbsp;Use &#8216;exit /?&#8217; for help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-671153">
				<div id="div-comment-671153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SRS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080926-00/?p=20743#comment-671153">
			September 28, 2008 at 12:26 pm</a>		</div>

		<p>if /?</p>
<p>gives loads of info on this too. Btw if you want to discover all the goodies in cmd.exe, the following commands give good help:</p>
<p>if /?</p>
<p>call /?</p>
<p>set /?</p>
<p>goto /?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

