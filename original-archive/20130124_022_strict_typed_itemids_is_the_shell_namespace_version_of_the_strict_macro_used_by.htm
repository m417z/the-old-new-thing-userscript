<html>
<head>
<title>STRICT_TYPED_ITEMIDS is the shell namespace version of the STRICT macro used by USER and GDI</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>STRICT_TYPED_ITEMIDS is the shell namespace version of the STRICT macro used by USER and GDI</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 24, 2013 / year-entry #23</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Starting with the Windows Vista PlatformSDK, defining the symbol STRICT_TYPED_ITEM­IDS before including shell header files changes declarations that previously had simply used ITEM­ID­LIST now use one of various types which are more clear about what type of ID list is being used. Think of it as the STRICT macro for the shell. The more precise...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Starting with the Windows Vista PlatformSDK, defining the symbol <code>STRICT_<wbr>TYPED_<wbr>ITEM&shy;IDS</wbr></wbr></code> before including shell header files changes declarations that previously had simply used <code>ITEM&shy;ID&shy;LIST</code> now use <a href="http://msdn.microsoft.com/library/bb773321"> one of various types which are more clear about what type of ID list is being used</a>.</p>
<p> Think of it as the <code>STRICT</code> macro for the shell. </p>
<p> The more precise names emphasize the form of the ID list: </p>
<ul>
<li><code>ITEM&shy;ID_<wbr>CHILD</wbr></code> represents an item ID     relative to some implied shell folder.     The item ID is followed by a null terminator     and is therefore exactly one <code>SH&shy;ITEM&shy;ID</code> long.     In file-system speak, this is a "file name." </li>
<li><code>ID&shy;LIST_<wbr>RELATIVE</wbr></code> represents     an item ID list relative to some implied shell folder.     It can consist of any number of     <code>SH&shy;ITEM&shy;ID</code> structures concatenated     together, followed by a null terminator.     This item ID list must be used in conjunction with the     <code>IShell&shy;Folder</code> it is associated with.     In file-system speak, this is a "relative path." </li>
<li><code>ID&shy;LIST_<wbr>ABSOLUTE</wbr></code> represents     an item ID list relative to the desktop root folder.     It too can be any length.     This item ID list must be used in conjunction with the     <code>IShell&shy;Folder</code> returned by     <code>SH&shy;Get&shy;Desktop&shy;Folder</code>.     In file-system speak, this is a "fully-qualified absolute path."     (An absolute ID list is the special case of a relative     ID list where the implied shell folder is the desktop root folder.) </li>
<li><code>ITEM&shy;ID_<wbr>CHILD_<wbr>ARRAY</wbr></wbr></code> represents     an array of pointers to <code>ITEM&shy;ID_<wbr>CHILD</wbr></code>     objects, where all of the <code>ITEM&shy;ID_<wbr>CHILD</wbr></code>     objects are children of the same shell folder parent.     The array must be used in conjunction with that parent shell folder. </li>
</ul>
<p> These new types were introduced to help catch common programming errors when using the shell namespace. For example, if you try to pass an array of absolute pidls to <code>IShell&shy;Folder::<wbr>Get&shy;UI&shy;Object&shy;Of</wbr></code>, you will get a type mismatch compiler error because that method takes an <code>ITEM&shy;ID_<wbr>CHILD_<wbr>ARRAY</wbr></wbr></code>, and the thing you passed is not an array of <code>ITEM&shy;ID_<wbr>CHLD</wbr></code> pointers. </p>
<p> You are encouraged to turn on <i>strict mode</i> when compiling code that uses the shell namespace, but to preserve source code backward compatibility, the setting is off by default. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1035353">
				<div id="div-comment-1035353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035353">
			January 24, 2013 at 7:38 am</a>		</div>

		<p>I&#39;m pretty sure some of those methods that only accepts child pidls today used to accept absolute pidls back in the Win9x days&#8230;</p>
<p>Anyway, I&#39;d love a followup to the IContextMenu series; how to display the context menu for two files when they don&#39;t share a common parent folder (Like Win+F/File search). Using CDefFolderMenu_Create2 is not easy either because MSDN does not tell you which HKEYs to pass nor their order. (HKCRFolder before HKCRDirectory before HKCRAllFilesystemObjects? And what about files? SystemFileAssociations? And that is just for XP, after that you also have to deal with Kind?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1035413">
				<div id="div-comment-1035413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035413">
			January 24, 2013 at 10:02 am</a>		</div>

		<p>@WndSks: They accepted them because they are the same type &#8211; but that&#39;s like saying that CreateFileW() accepts a SQL statement as the filename. Just because they are the same type, doesn&#39;t mean it does what you expect it to.</p>
<p>The whole point of the &quot;strict&quot; macro which is the whole point of this article is that it makes functions give you a compile time error rather than just break at runtime if you do something silly like send an absolute PIDL to a function that expects a child pidl.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1035423">
				<div id="div-comment-1035423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035423">
			January 24, 2013 at 10:21 am</a>		</div>

		<p>@Matt, when I said accept I meant that they did something and returned S_OK.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1035463">
				<div id="div-comment-1035463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035463">
			January 24, 2013 at 12:25 pm</a>		</div>

		<p>Doing something and then returning S_OK does not mean that it did what you wanted it to do. &nbsp;Just that it didn&#39;t encounter an error while doing something that may or may not have been what you wanted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1035513">
				<div id="div-comment-1035513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035513">
			January 24, 2013 at 3:56 pm</a>		</div>

		<p>IShellFolder::GetDisplayNameOf: &quot;At one time, pidl could be a multilevel PIDL, relative to the parent folder, and could contain multiple SHITEMID structures. However, this is no longer supported and pidl should now refer only to a single child item.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1035553">
				<div id="div-comment-1035553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035553">
			January 24, 2013 at 10:49 pm</a>		</div>

		<p>OT, but I wonder why VBA was forgotten when mouse wheel support was added to Office 97.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1035573">
				<div id="div-comment-1035573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035573">
			January 25, 2013 at 12:52 am</a>		</div>

		<blockquote><p>
  OT, but I wonder why VBA was forgotten when mouse wheel support was added to Office 97
</p></blockquote>
<p>Yeah man; that&#39;s been eating away my soul for 16 years. And this forum is where the answer will lie.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1035583">
				<div id="div-comment-1035583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035583">
			January 25, 2013 at 1:47 am</a>		</div>

		<p>Yuhong Bao: &quot;OT&quot;</p>
<p>Nominated for understatement of the year. I&#39;ll check back December, but I doubt someone will top that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1035593">
				<div id="div-comment-1035593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035593">
			January 25, 2013 at 2:27 am</a>		</div>

		<p>Maybe he meant to comment on yesterday&#39;s post?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1035603">
				<div id="div-comment-1035603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035603">
			January 25, 2013 at 6:32 am</a>		</div>

		<p>Oh the infamous ShiteMid, reminds me of IShitTestVisible, useful when you need to find not so obvious bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1035613">
				<div id="div-comment-1035613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035613">
			January 25, 2013 at 7:48 am</a>		</div>

		<p>This seems pretty hard to use in practice. &nbsp;For example, ILClone takes only a relative IIDLIST. &nbsp;Why not an absolute IIDLIST? &nbsp;What could the difference between these possibly mean in terms of cloning them?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1035643">
				<div id="div-comment-1035643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130124-00/?p=5453#comment-1035643">
			January 25, 2013 at 9:31 am</a>		</div>

		<p>Ah, well, there is an ILCloneFull(). &nbsp;But then MFC itself seems to use the non-strict model, which makes using it with this unpleasant (going to have to cast _AFX_SHELLITEMINFO members, e.g.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

