<html>
<head>
<title>What do the letters W and L stand for in WPARAM and LPARAM?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What do the letters W and L stand for in WPARAM and LPARAM?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 25, 2003 / year-entry #141</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Once upon a time, Windows was 16-bit. Each message could carry with it two pieces of data, called WPARAM and LPARAM. The first one was a 16-bit value ("word"), so it was called W. The second one was a 32-bit value ("long"), so it was called L. You used the W parameter to pass things...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Once upon a time, Windows was 16-bit. Each message could carry with it two pieces of data, called <code>WPARAM</code> and <code>LPARAM</code>. The first one was a 16-bit value ("word"), so it was called W. The second one was a 32-bit value ("long"), so it was called L.</p>
<p> You used the W parameter to pass things like handles and integers. You used the L parameter to pass pointers. </p>
<p> When Windows was converted to 32-bit, the <code>WPARAM</code> parameter grew to a 32-bit value as well. So even though the "W" stands for "word", it isn't a word any more. (And in 64-bit Windows, both parameters are 64-bit values!) </p>
<p> It is helpful to understand the origin of the terms. If you look at the design of window messages, you will see that if the message takes a pointer, the pointer is usually passed in the <code>LPARAM</code>, whereas if the message takes a handle or an integer, then it is passed in the <code>WPARAM</code>. (And if a message takes both, the integer goes in the <code>WPARAM</code> and the pointer goes in the <code>LPARAM</code>.) </p>
<p> Once you learn this, it makes remembering the parameters for window messages a little easier. Conversely, if a message breaks this rule, then it sort of makes your brain say, "No, that's not right." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-132603">
				<div id="div-comment-132603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132603">
			November 25, 2003 at 11:10 am</a>		</div>

		<p>Why not take this opportunity to fix this in Win64 then?  Or is it fixed now?</p>
<p>Does WinMain still take an hPrevInstance in Win64?  Why is stuff like this never cleaned from the Windows API?  So that you can have less #ifdef&#8217;s in the code?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132613">
				<div id="div-comment-132613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Curt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132613">
			November 25, 2003 at 11:18 am</a>		</div>

		<p>Thanks, Raymond, I enjoy your posts.  They take me back to those halcyon days of message crackers, GPFs and UAEs. :)</p>
<p>Curt</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132623">
				<div id="div-comment-132623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://honestillusion.com' rel='external nofollow' class='url'>James Curran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132623">
			November 25, 2003 at 11:20 am</a>		</div>

		<p>Jeff,<br />
Actually, I think it&#8217;s so *you* can have fewer #ifdef&#8217;s in *your* code.  Many developers targetted both win3.1 &amp; Win32 with a single source base for years.  I expect the parellel development for Win32 &amp; win64 to go on even longer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132633">
				<div id="div-comment-132633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://honestillusion.com' rel='external nofollow' class='url'>James Curran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132633">
			November 25, 2003 at 11:20 am</a>		</div>

		<p>Jeff,<br />
Actually, I think it&#8217;s so *you* can have fewer #ifdef&#8217;s in *your* code.  Many developers targetted both win3.1 &amp; Win32 with a single source base for years.  I expect the parellel development for Win32 &amp; win64 to go on even longer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132643">
				<div id="div-comment-132643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://honestillusion.com' rel='external nofollow' class='url'>James Curran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132643">
			November 25, 2003 at 11:20 am</a>		</div>

		<p>Jeff,<br />
Actually, I think it&#8217;s so *you* can have fewer #ifdef&#8217;s in *your* code.  Many developers targetted both win3.1 &amp; Win32 with a single source base for years.  I expect the parellel development for Win32 &amp; win64 to go on even longer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132653">
				<div id="div-comment-132653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://hestia.typepad.com/flatlander' rel='external nofollow' class='url'>Ivan Towlson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132653">
			November 25, 2003 at 12:18 pm</a>		</div>

		<p>Jeff, I think binary compatibility might be an issue as well.  Native-code binaries tend to break if the number or size of function arguments etc. change, because the assumptions about the number of bytes on the stack or the offsets of structure members are baked into the binary.  And it&#8217;s a pain to have to ship different binaries for different platforms. </p>
<p>I think this is why as the Win32 API evolved they&#8217;ve moved towards using structures and versioning these using a size indicator as the first element (the cbSize member we see on so many API structs).  This way the API can gain new &quot;arguments&quot; (struct members) but detect the caller&#8217;s expectations and structure layout in case it&#8217;s not been built against the latest and greatest header files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132663">
				<div id="div-comment-132663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.liquidneon.com' rel='external nofollow' class='url'>Adam Wimsatt</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132663">
			November 25, 2003 at 12:23 pm</a>		</div>

		<p>Great info.  Do you know of an example of a message that breaks this rule?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132673">
				<div id="div-comment-132673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">evariste</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132673">
			November 25, 2003 at 12:46 pm</a>		</div>

		<p>Jeff, unlike those two I know that your name is Jack, so while I have no useful information to offer you, Jack, gosh, aren&#8217;t you grateful at least I know your name?<br />
 :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132683">
				<div id="div-comment-132683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132683">
			November 25, 2003 at 1:00 pm</a>		</div>

		<p>This is one of THE classic example of why Hungarian notation is a bad idea in any code that you think will survive long term.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132693">
				<div id="div-comment-132693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132693">
			November 25, 2003 at 1:00 pm</a>		</div>

		<p>This is one of THE classic example of why Hungarian notation is a bad idea in any code that you think will survive long term.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132703">
				<div id="div-comment-132703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.grack.com' rel='external nofollow' class='url'>Matt Mastracci</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132703">
			November 25, 2003 at 1:56 pm</a>		</div>

		<p>Here&#8217;s a mind-boggling question: why does every computer made (from 8086 up to the Intel/AMD processors of today) beep continuously when you hold down all six of the shift, alt and ctrl keys.  :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132713">
				<div id="div-comment-132713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Insanity</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132713">
			November 25, 2003 at 3:12 pm</a>		</div>

		<p>I think the beep to which you&#8217;re referring is the heard only when muppets hold down keys (or sit on their keyboard).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132723">
				<div id="div-comment-132723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack, Not Jeff, Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132723">
			November 25, 2003 at 3:46 pm</a>		</div>

		<p>James: Yes, but that lack of #ifdefs pays a price.  You have all of this built in crap that never works its way out of the API.  You have ShellExecute and ShellExecuteEx, you have CreateFont and CreateFontIndirect.  You have WinMain.  You have pointers declared with NEAR in them still in the .h files.</p>
<p>If they want to maintain compatibility, then give us a migration .lib (or .cpp&#8217;s and .h&#8217;s) rather than keeping all of this crap in the Windows DLLs.  Clean things up.  </p>
<p>Namespace things so that functions begin with their subsystem (like the Reg* functions!).  Make the UNICODE functions default and ANSI ones end in A so that we don&#8217;t have to have functions like GetComputerName #defined out in our code differently if we include windows.h or not.</p>
<p>Ok, I&#8217;ll take some happy pills and chill out now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132733">
				<div id="div-comment-132733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dotnetweblogs.com/jezell' rel='external nofollow' class='url'>Jesse Ezell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132733">
			November 25, 2003 at 3:55 pm</a>		</div>

		<p>The Win32 API is broken beyond repair, that&#8217;s why we are getting WinFX instead of a new Win32 API. Things are not only getting &quot;cleaned up,&quot; they are being written correctly from the ground up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132743">
				<div id="div-comment-132743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dotnetweblogs.com/jezell' rel='external nofollow' class='url'>Jesse Ezell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132743">
			November 25, 2003 at 3:56 pm</a>		</div>

		<p>The Win32 API is broken beyond repair, that&#8217;s why we are getting WinFX instead of a new Win32 API. Things are not only getting &quot;cleaned up,&quot; they are being written correctly from the ground up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132753">
				<div id="div-comment-132753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tekumse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132753">
			November 25, 2003 at 5:05 pm</a>		</div>

		<p>Matt, mine beeps on both control keys and any one shift.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132763">
				<div id="div-comment-132763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.visiontech.ltd.uk/' rel='external nofollow' class='url'>Adrian Bateman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132763">
			November 25, 2003 at 5:25 pm</a>		</div>

		<p>&quot;So even though the &quot;W&quot; stands for &quot;word&quot;, it isn&#8217;t a word any more.&quot;</p>
<p>I think it is. As far as I remember, word relates to the standard size used for data on a machine, perhaps the register size. For example, DEC TOPS-20 machines used to (still?) have 36-bit words (I seem to remember some awkward transformations for downloading files from these machines &#8211; didn&#8217;t simtel used to run on TOPS-20 or something when it was at wsmr? Always used to think it was cool connecting up to a computer 1000&#8217;s of miles away on a missile range but I digress). On a 32-bit system, the word size is 32-bit so it WORD is a 32-bit value.</p>
<p>c.f. <a href="http://info.astrian.net/jargon/terms/n/nybble.html" rel="nofollow">http://info.astrian.net/jargon/terms/n/nybble.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132773">
				<div id="div-comment-132773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.wlug.org.nz/PerryLorier' rel='external nofollow' class='url'>Perry Lorier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132773">
			November 26, 2003 at 6:22 am</a>		</div>

		<p>Matt Mastracci: The beep is because the way the keyboard is scanned.  It&#8217;s layed out in some kind of grid with the keys connecting the rows and the columns together.  Power is applied to each column sequentially and then you look at which row has power coming out of it.  From the intersection of the column and the row together you can figure out which key was pressed.  However there is one flaw, if you press three keys in a &quot;triangle&quot; then the current can flow down the column, across where you pressed one of the keys, then down at the next key then across again. (Hmm, diagram here would be useful).  When this happens the computer starts reading &quot;ghost&quot; keys.  The computer can detect this condition and &quot;beeps&quot; at you slowly to let you know that it can&#8217;t reliably tell which keys are being pressed.  This used to be an excellent way of telling if your computer hasn&#8217;t crashed, since if it had crashed (And taken out the keyboard handler) then it wouldn&#8217;t beep (since t wasn&#8217;t processing interrupts from the keyboard anymore)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132783">
				<div id="div-comment-132783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Claw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132783">
			November 26, 2003 at 6:00 pm</a>		</div>

		<p>Perry: Actually that&#8217;s not true&#8230; at least not for modern PC keyboards.  The beep is caused when the keyboard buffer in the BIOS is full.  If you hold down too many keys at the same time, signals from the keyboard fill up the buffer faster than the OS handles them, causing the BIOS to make your computer beep.  You can also see this happen when your computer crashes and locks up&#8230; if you keep typing on your computer while it is frozen, it will eventually beep at you when you have filled the keyboard buffer (since the OS is frozen and doesn&#8217;t handle it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-132793">
				<div id="div-comment-132793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.wlug.org.nz/' rel='external nofollow' class='url'>Perry Lorier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132793">
			November 27, 2003 at 8:03 am</a>		</div>

		<p>At least under Dos, the beep you got from the bios keyboard buffer filling up was quite different, holding down all the shift keys gave you a beep with very long pauses between them.  Under Windows 3.1 when the message buffer filled up the computer would beep at you too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-132803">
				<div id="div-comment-132803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.gotdotnet.com/raymondc/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-132803">
			November 29, 2003 at 5:11 am</a>		</div>

		<p>Once a function is exported from a specific DLL you can&#8217;t move it. If you did, then you would break all the old programs that expected to see it in the old DLL. A migration DLL doesn&#8217;t help because it requires everybody with an old program recompiled it with the migration DLL &#8212; good luck trying to get Borland (for example) to recompile Sidekick 2.0 for Windows, or that ActiveX control you bought in 1998 from a company that is no longer in business.</p>
<p>Moving functions into namespaces has the same problem &#8211; but worse: Not all languages support namespaces. (C for example doesn&#8217;t.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-178353">
				<div id="div-comment-178353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nikola Petrovic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031125-00/?p=41713#comment-178353">
			May 28, 2004 at 6:23 am</a>		</div>

		<p>Ive been trying to understand how to increase the buffert in the BIOS for the keyboard so that more keys can be pressed at the same time.</p>
<p>Is there any way to do this?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

