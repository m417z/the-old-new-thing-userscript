<html>
<head>
<title>There are really only two effectively distinct settings for the UAC slider</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>There are really only two effectively distinct settings for the UAC slider</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 16, 2016 / year-entry #172</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>65</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Off and on.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
There's a control panel that lets you specify how often you
want to be prompted by UAC.
You can set any of four levels:
</p>
<ul>
<li>Always notify
<li>Notify only when apps try to change settings, use the secure desktop
<li>Notify only when apps try to change settings, don't use the secure desktop
<li>Never notify
</ul>
<p>
Although it looks like there are four settings,
in a theoretical sense, there really are only two settings.
</p>
<ul>
<li>Always notify
<li>Meh
</ul>
<p>
The reason why all the other options collapse into <i>Meh</i>
is that the <i>Notify only when apps try to change settings</i>
option can be subverted by any app simply by injecting a thread
into Explorer and doing its dirty work there.
Since Explorer is a program that the setting allows to elevate silently,
this lets you perform a silent elevation from any thread that
has thread injection rights into Explorer (which is pretty much
any program running at medium integrity level or higher).
</p>
<p>
In other words, <i>Notify only when apps try to change
settings</i> is really
<i>Punch a hole in the airtight hatchway</i>.
</p>
<p>
If the intermediate settings are effectively equivalent
to <i>Never notify</i>,
then why are they there in the first place?
</p>
<p>
Because people wanted them.
</p>
<p>
UAC in Windows Vista had only two settings:
<i>Always notify</i> (enabled, default)
and <i>Never notify</i> (disabled),
because those are the only two meaningful values.
But people complained as loudly as they could
that the <i>Always notify</i>
level of prompting was far too annoying.&sup1;
As a concession, Windows 7 introduced two intermediate levels
of prompting,
even though the two new levels are effectively equivalent
to <i>Never notify</i> because the notification can be bypassed
by a program that puts it mind to it.
</p>
<p>
As Larry Osterman noted,
UAC is not a security feature.
<a HREF="https://channel9.msdn.com/Forums/Coffeehouse/473037-UAC-controversy-the-last-episode/773c9d79f8df4fa8bc489deb00e05c3d">
It's a convenience feature</a>
that acts as a
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/05/23/2802893.aspx">
forcing function</a>
to get software developers to get their act together.
</p>
<p>
I remember back in 2009, there was a lot of hubbub over
a "security hole" in the UAC control panel
because it let you change the UAC settings without prompting,
if the old setting was <i>Notify only when apps try to change settings</i>.
</p>
<p>
Well duh.
</p>
<p>
You configured UAC so that it prompts only if an app is
changing a system setting,
and not if the control panel itself is changing the setting.
You then use the control panel to change a system setting.
Therefore, there is no prompt.
</p>
<p>
Still, enough people complained that they wanted <i>more prompting</i>
that the UAC folks added an extra prompt.
"I thought people complained that there was too much prompting,
and then when they set the slider so it prompts less,
they demand more prompting?
Can these people make up their minds already?"
</p>
<p>
&sup1;
Personally, it doesn't bother me.
It's not like I spend my day constantly changing system settings.
In fact, I keep my account out of the administrators group,
so not only do I get prompted for everything,
but when I do elevate to administrator, I'm running as the
local administrator account, not as myself.
This means that
the elevated command prompt does not have domain network access
(because domain access came from my domain account),
and the domain account does not have administrator access.&sup2;
This "separation of powers" helps limit the scope of any dumb
mistakes I may make,
since a rogue command running as administrator cannot access
network resources, so any runaway command is limited to screwing
up only my own machine.
</p>
<p>
&sup2;
It's surprising how many programs stop working when faced
with this dichotomy.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (65)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1260525">
				<div id="div-comment-1260525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260525">
			August 16, 2016 at 7:55 am</a>		</div>

		<p>&#8220;It&#8217;s surprising how many programs stop working when faced with this dichotomy.&#8221;</p>
<p>Somehow, I don&#8217;t think you&#8217;re as surprised as you let on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1 parent" id="comment-1260535">
				<div id="div-comment-1260535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260535">
			August 16, 2016 at 7:59 am</a>		</div>

		<p>There are more levels than this if you edit the registry. My personal preference is Always notify, don&#8217;t use the secure desktop.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1260975">
				<div id="div-comment-1260975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260975">
			August 17, 2016 at 9:29 am</a>		</div>

		<p>Can&#8217;t other applications drive the UAC prompt if you&#8217;re not using Secure Desktop?  If that&#8217;s the case, there&#8217;s no real point in having the prompts at all.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-3" id="comment-1260995">
				<div id="div-comment-1260995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260995">
			August 17, 2016 at 11:17 am</a>		</div>

		<p>Yes it is theoretically less secure. Consent runs at system integrity level but there might still be shatter attacks that could work and the secure desktop would protect you from that. For ultimate protection you must run as non-admin and enable the Ctrl+Alt+Delete requirement policy so nobody can spoof the UAC dialog where you have to enter a password&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1260537">
				<div id="div-comment-1260537" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260537">
			August 16, 2016 at 8:03 am</a>		</div>

		<p>Is this post related to the &#8220;fileless UAC bypass&#8221; that was posted a few days ago? (<a href="https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/" rel="nofollow">https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/</a>)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1260936">
				<div id="div-comment-1260936" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/SAFER.html' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260936">
			August 17, 2016 at 8:26 am</a>		</div>

		<p>That&#8217;s rather unlikely &#8230; Raymond&#8217;s posts are queued days/weeks/months before they go live.</p>
<p>JFTR: mitigation for this UAC bypass is simple:<br />
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers]<br />
&#8220;C:\Windows\System32\EventVwr.Exe&#8221;=&#8221;RunAsInvoker&#8221;<br />
;&#8221;C:\Windows\SysWoW64\EventVwr.Exe&#8221;=&#8221;RunAsInvoker&#8221; ; on 64-bit systems only</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1260545">
				<div id="div-comment-1260545" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260545">
			August 16, 2016 at 8:10 am</a>		</div>

		<p>I&#8217;m glad that *someone* at MS is willing to admit this particular truth.</p>
<p>I&#8217;m still waiting for a LOGON32_LOGON_INTERACTIVE_ELEVATED to appear so that I can make UAC go away when logging in from a context that can&#8217;t elevate because it can&#8217;t display a prompt. I can fake it LOGON32_LOGON_NETWORK_CLEARTEXT but this yields the wrong privilege check (can access files over the network != can run arbitrary programs).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kapilkapre odd alt thread-even depth-1 parent" id="comment-1260555">
				<div id="div-comment-1260555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/%27k' rel='external nofollow' class='url'>'k</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260555">
			August 16, 2016 at 8:30 am</a>		</div>

		<p>I think you&#8217;re being a bit disingenuous when you say &#8220;People wanted them&#8221;. People simply didn&#8217;t want the annoyance. In hindsight, MS somewhat avoided the PR backlash of moving to XP by (effectively) removing security completely to allow for an easier transition for W95 apps. It just came back to bite you guys in the ass, big-time.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1261925">
				<div id="div-comment-1261925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261925">
			August 24, 2016 at 12:36 am</a>		</div>

		<p>Security was added to XP (I think mainly of the famous SP2), but it&#8217;s the first time I hear that security was removed from XP at release. You have any source for your claims ?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1260565">
				<div id="div-comment-1260565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260565">
			August 16, 2016 at 8:35 am</a>		</div>

		<p>There&#8217;s really only one setting anymore. On Windows 7, you could actually turn it off. On Windows 10, nope. It might appear that it&#8217;s off, but just try launching an application that&#8217;s manifested for high IL with NTSD.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-yuhong-bao even depth-2" id="comment-1260785">
				<div id="div-comment-1260785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260785">
			August 16, 2016 at 9:07 pm</a>		</div>

		<p>It may be more accurate to say that all other UAC settings makes UAC useless in terms of security. It still needs to be partially on in order to support Metro apps.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1260575">
				<div id="div-comment-1260575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260575">
			August 16, 2016 at 8:45 am</a>		</div>

		<p>As for the &#8220;more prompting&#8221; when turning UAC down; at this time two things were true; 1) people still believed it was a real security barrier at anything other than the highest setting (and now even this has been called into doubt) and 2) practical attacks involving injecting explorer hadn&#8217;t been discovered yet. The cryptbase hole wasn&#8217;t known.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1260585">
				<div id="div-comment-1260585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pb2004</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260585">
			August 16, 2016 at 8:54 am</a>		</div>

		<p>Problem is UWP Settings app works correctly only on &#8220;Notify only when apps try to change settings, use the secure desktop &#8220;. On &#8220;Always notify&#8221; for example compare what you get when you click on your ethernet adapter in Network -&gt; Ethernet section. Other example is Reset/Refresh system action and info about wrong uac level</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1260595">
				<div id="div-comment-1260595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SatoMew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260595">
			August 16, 2016 at 9:13 am</a>		</div>

		<p>Ever since Windows 7, I&#8217;ve set UAC to Always Notify. The PC Settings app in Windows 8 and 8.1 or the Settings app in Windows 10 either hide certain functionality or display an erroneous message that the feature is unusable due to how UAC is set despite being able to trigger the Consent UI anyway (an example of this is the option for resetting the PC in the Recovery section).</p>
<p>Another behavior is that the app can trigger too many UAC prompts, like in the Region &amp; language section, in which denying elevation will trigger the same prompt a few more times: <a href="https://i.imgur.com/a9tbm0U.png" rel="nofollow">https://i.imgur.com/a9tbm0U.png</a></p>
<p>Raymond, are elevated apps supposed to not gain focus after granting them the privilege in the Consent UI? It happens here on Windows 10 and the secure desktop being enabled or disabled doesn&#8217;t seem to have an effect on the behavior. I have to focus the app as its window is opened in the background instead of in the foreground. What&#8217;s strange is that it doesn&#8217;t always happen because sometimes the elevated app&#8217;s window is opened in the foreground.</p>
<p>You and Larry also mention that UAC is a convenience feature as opposed to a security feature. Well, isn&#8217;t it both? After all, certain features like Internet Explorer&#8217;s Protected Mode (sandbox) or file and registry virtualization don&#8217;t work if UAC is disabled. There&#8217;s also TechNet documentation that describes UAC as a &#8220;security component&#8221;: <a href="https://technet.microsoft.com/en-us/library/cc507861.aspx" rel="nofollow">https://technet.microsoft.com/en-us/library/cc507861.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-odd thread-alt depth-1 parent" id="comment-1260605">
				<div id="div-comment-1260605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260605">
			August 16, 2016 at 10:36 am</a>		</div>

		<p>Win8.x even has bugs that allow UAC bypass even with &#8220;Always Notify&#8221;. And with &#8220;Always Notify&#8221; even Task Manager results in a UAC prompt.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1260655">
				<div id="div-comment-1260655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SatoMew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260655">
			August 16, 2016 at 11:06 am</a>		</div>

		<p>Mind shedding some light on those bugs? And the new Task Manager requires elevation because it uses ETW but you can force it to run without admin privileges. In a command prompt window, run <code>set __COMPAT_LAYER=RunAsInvoker</code>, then <code>taskmgr</code>.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-yuhong-bao even depth-3 parent" id="comment-1260765">
				<div id="div-comment-1260765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260765">
			August 16, 2016 at 8:35 pm</a>		</div>

		<p>One example: <a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=156&#038;can=1&#038;q=uac" rel="nofollow">https://bugs.chromium.org/p/project-zero/issues/detail?id=156&#038;can=1&#038;q=uac</a></p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fredericmagnyf odd alt depth-4" id="comment-1261975">
				<div id="div-comment-1261975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261975">
			August 24, 2016 at 6:41 am</a>		</div>

		<p>Damn, I thought at least always-notify UAC was supposed to work. But if Microsoft doesn&#8217;t treat actual, always-notify UAC bypass vulnerabilities seriously, then UAC is COMPLETELY useless. Can I downgrade my &#8220;main&#8221; user account from Administrator to regular user relatively painlessly?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1260845">
				<div id="div-comment-1260845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260845">
			August 17, 2016 at 3:21 am</a>		</div>

		<p>Oh wow! now I can actually run RegEdit et. al. as limited me. Thanks!</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1260935">
				<div id="div-comment-1260935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/SAFER.html' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260935">
			August 17, 2016 at 8:18 am</a>		</div>

		<p>You don&#8217;t need to set the __COMPAT_LAYER environment variable to override the execution level specified in the application manifest.</p>
<p>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers]<br />
&#8220;C:\Windows\RegEdit.Exe&#8221;=&#8221;RunAsInvoker&#8221;<br />
;&#8221;C:\Windows\SysWoW64\RegEdit.Exe&#8221;=&#8221;RunAsInvoker&#8221; ; on 64-bit systems only</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1260955">
				<div id="div-comment-1260955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SatoMew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260955">
			August 17, 2016 at 9:15 am</a>		</div>

		<p>Both methods have their uses. The environment variable doesn&#8217;t have to be permanently set since you may only be testing things out. And the instructions you provide work for both 32-bit and 64-bit systems, you only have to use the executables in SysWOW64 if you need to specifically run the 32-bit version on 64-bit Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1260615">
				<div id="div-comment-1260615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260615">
			August 16, 2016 at 10:42 am</a>		</div>

		<p>If UAC was supposed to change developer behavior I definitely think Microsoft missed the memo.  Many things are now optimized for the the default UAC level, such as the ridiculous fact that opening the Task Manager on Win8+ requires clicking through a UAC dialog. But that pales into comparison when trying to actually use a normal account with a separate admin account using over-the-shoulder elevation. I found things like EMET just not displaying its GUI if you elevate, to just yesterday when I got a UAC prompt during the &#8220;Hi&#8221; start animation after upgrading to Anniversary edition.  You don&#8217;t make it easy.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1260625">
				<div id="div-comment-1260625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260625">
			August 16, 2016 at 10:43 am</a>		</div>

		<p>Don&#8217;t forget that there are many parts of Microsoft. Saying that one part of Microsoft missed the memo is not the same as saying that all of Microsoft missed the memo.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1260836">
				<div id="div-comment-1260836" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mormegil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260836">
			August 17, 2016 at 3:14 am</a>		</div>

		<p>Yeah, while there are not that many “people”, so that “Can these people make up their minds already?”</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1260645">
				<div id="div-comment-1260645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260645">
			August 16, 2016 at 11:03 am</a>		</div>

		<p>For extra fun, I bet *bad things* happen on pressing No to that particular prompt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1260665">
				<div id="div-comment-1260665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SatoMew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260665">
			August 16, 2016 at 11:14 am</a>		</div>

		<p>Speaking of EMET, the latest release is still not properly DPI-aware, which makes it look blurry at 150% scaling, for example. I guess it could have to do with its custom GUI but that then begs the question of why is a Microsoft app using one in the first place&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1260985">
				<div id="div-comment-1260985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260985">
			August 17, 2016 at 9:56 am</a>		</div>

		<p>It&#8217;s understandable that testers might be running signed executables in an environment with UAC set to defaults, and miss catching the excessive number of prompts that occur with strict UAC.</p>
<p>What I have trouble understanding is how the developers miss this usability nightmare, when working with compile outputs that are unsigned (or test-signed).  Do they have their test-signing certificates loaded into UAC on their own machines, so that they&#8217;ll get the UAC experience matching &#8220;executables which will eventually be signed and trusted&#8221;?  If so, are those development certificates globally trusted by UAC (very bad!) or installed on a per-machine basis?  Does the build process during development generate RTM-signed executables (also very very bad)?  If they are locally-trusted developer certificates, how can I load my own developer certificates into UAC on my computer?</p>
<p>Or are those developers running with UAC totally disabled?  I should think that in the interests of (a) dog-fooding and (b) protecting MS source code against corruption by malware, UAC would be mandated for MS development computers by policy (both corporate and Active Directory).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1260675">
				<div id="div-comment-1260675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/SAFER.html' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260675">
			August 16, 2016 at 11:19 am</a>		</div>

		<p>Injection of a thread into Explorer is NOT necessary at all: there are quite some other executables which can be used instead of Explorer, and RunDll32.exe as well as RegSrv32.exe can load a DLL which then instanciates one of the about 100 COM objects for which auto-elevation is allowed.<br />
JFTR: WUSA.exe does this too, without the need for a DLL and the COM object.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1260685">
				<div id="div-comment-1260685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260685">
			August 16, 2016 at 11:21 am</a>		</div>

		<p>UAC was originally a security feature, and when Vista came out Microsoft promoted it as such.</p>
<p>It was retrospectively downgraded to &#8220;not a security feature&#8221; in Windows 7, when Microsoft got cold feet because of the criticism over the number of prompts Explorer gave you for simple things (e.g. create a folder in C:\Program Files and rename it would prompt 3 times). Instead of fixing it properly, they waved the magic wand and hey presto, not a security feature any more therefore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1260705">
				<div id="div-comment-1260705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://harryjohnston.wordpress.com' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260705">
			August 16, 2016 at 2:12 pm</a>		</div>

		<p>@Joshua, I suspect you&#8217;ll find that LOGON32_LOGON_BATCH meets your needs.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1260986">
				<div id="div-comment-1260986" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260986">
			August 17, 2016 at 10:59 am</a>		</div>

		<p>Nope. LOGON32_LOGON_BATCH fails for most users that have permission to log in interactively, at least here.</p>
<p>Explanation: LOGON32_LOGON_BATCH only succeeds for users who are allowed to schedule tasks.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1260736">
				<div id="div-comment-1260736" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://decentsecurity.com' rel='external nofollow' class='url'>SwiftOnSecurity</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260736">
			August 16, 2016 at 3:50 pm</a>		</div>

		<p>Raymond, this is @SwiftOnSecurity, and I run DecentSecurity.com. Thank you for putting this in such stark words in 2016. I try to tell people this, and having this link will make it so much easier.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1260745">
				<div id="div-comment-1260745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260745">
			August 16, 2016 at 6:30 pm</a>		</div>

		<p>One thing I&#8217;ve noticed is that, as a local non-administrator user, I can sometimes go to &#8220;Settings -&gt; Apps and Features -&gt; Manage optional features&#8221; and instantly hit a UAC prompt (and further prompts as I try to do stuff in that settings area), but other times no UAC prompt will show. I&#8217;m not sure what steps lead to the show vs. no-show scenario, except I know that in both cases I haven&#8217;t accessed the &#8220;Settings&#8221; UI at all after login or computer restart before seeing/not seeing the prompt. My UAC setting is currently the default &#8220;Meh&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1260755">
				<div id="div-comment-1260755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260755">
			August 16, 2016 at 7:24 pm</a>		</div>

		<p>I honestly wish you guys would use UAC more, not less, especially with UWP apps. It is convenient as hell to go to a user&#8217;s computer and not have to log out of the user&#8217;s account to do system/admin work. Minimal disruption.</p>
<p>You also need to find a way to allow running UWP apps as admins or different users. If, for example, Notepad ever becomes a UWP app under the current system, we will have a serious problem. I&#8217;m not logging out of my standard-user account just to edit a config file located in a privileged area. That&#8217;s stupid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1260805">
				<div id="div-comment-1260805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260805">
			August 17, 2016 at 12:43 am</a>		</div>

		<p>Raymond, I might have misunderstood, but you imply that you work in the main without admin rights, or when you do upgrade to admin rights you lose access to shared drives that depend on your domain network access. I can&#8217;t imagine being able to work this way as I&#8217;ve always assumed I need admin rights for full debugging and for installing services that I&#8217;m developing etc, as well as fiddling with Registry settings. (I know I can modify Registry security settings in particular keys, but this seems impractical, at least until things have settled down and I know what keys I&#8217;m working with.) What have I missed?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1260825">
				<div id="div-comment-1260825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260825">
			August 17, 2016 at 2:06 am</a>		</div>

		<p>You can develop and debug e.g. web services without admin, by setting the appropriate ACL on the HTTP listener endpoint using netsh. You can debug a window service if you install it to run as yourself (or if you give it a standalone mode in which it can run without being installed as a service).<br />
If you need to attach a debugger to a service running as a privileged account, then yes, this is equivalent to having administrative privileges anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1261195">
				<div id="div-comment-1261195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261195">
			August 18, 2016 at 11:00 am</a>		</div>

		<p>The first thing I do when developing a service is to separate all the functionality into a separate dll and then run the code as a console application. There are ways to debug services otherwise but I find everything else way more hassle than it&#8217;s worth it.</p>
<p>Yes you still have to test the real service in your test environment and if you find bugs there you may have to debug the service locally but that should be exceedingly rare.</p>
<p>For web services you can just set the ACL as Ben says (that&#8217;s important also in production! Don&#8217;t run your web services as admin user!)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1261235">
				<div id="div-comment-1261235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261235">
			August 18, 2016 at 4:40 pm</a>		</div>

		<p>You can make the same EXE act as either a console app or a service by simply deciding whether you are going to call StartServiceCtrlDispatcher or not (ServiceBase.Run in C#), e.g. based on the command-line. I usually set my services up to run as a service with /service and a console app with /console, and to select automatically if neither is specified based on whether a debugger is attached at startup.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1261285">
				<div id="div-comment-1261285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261285">
			August 19, 2016 at 4:58 am</a>		</div>

		<p>This is in fact exactly what I do. For some reason I had got it into my head that special privileges are needed to attach a debugger (regardless of the process being attached to), and in my organisation you are either a locked down user or (provided all the necessary authorisations can be obtained) a local admin.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-even depth-1 parent" id="comment-1260815">
				<div id="div-comment-1260815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260815">
			August 17, 2016 at 1:29 am</a>		</div>

		<p>Just curious, is there any setting that blocks thread injection to Windows process that have &#8220;silent elevation&#8221; built-in? Since UAC is roughly about pulling &#8220;Built-in Administrators&#8221; and &#8220;Local account and members of Adminstrator group&#8221; right away, unless the user also have debugging right, I think something could be done to close the hole.</p>
<p>Maybe it&#8217;d be easier to have policy that deny thread injection to DEP enabled processes?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1260855">
				<div id="div-comment-1260855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260855">
			August 17, 2016 at 6:21 am</a>		</div>

		<p>I think that&#8217;d be fairly difficult to do under the current Windows security model.  In general, the security boundary is the user, not the process.  Users have full control over programs running with their identity.  Even if you modify the ACL on the program to disallow injection/memory tampering, I think programs also running as the user, in the same session, could still modify it back.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-3" id="comment-1260885">
				<div id="div-comment-1260885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260885">
			August 17, 2016 at 7:11 am</a>		</div>

		<p>I think they cannot add back explicitly denied roles without UAC elevation? If that&#8217;s true, I think blocking some action based solely on whether current process identity with/without these roles is possible, just not sure if it&#8217;s possible to block thread injection based on that.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1260925">
				<div id="div-comment-1260925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/SAFER.html' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260925">
			August 17, 2016 at 7:53 am</a>		</div>

		<p>1. Explorer(.exe) does NOT have &#8220;silent elevation&#8221; built-in!<br />
2. you can&#8217;t inject a thread into an elevated process (running with high integrity) from an unelevated process (running with medium integrity).<br />
3. elevation does NOT occur in the midst of a running process, but only at process start.<br />
4. the IFileOperation COM object runs &#8220;out-of-process&#8221; (c.f. DLLSurrogate), the injected thread only loads a DLL which performs the call of this COM object.<br />
5. it&#8217;s (not just) this COM object that is silently elevated when called from an executable signed by the &#8220;Windows Publisher&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-3 parent" id="comment-1261065">
				<div id="div-comment-1261065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261065">
			August 17, 2016 at 6:26 pm</a>		</div>

		<p>1) See Raymond&#8217;s explanation on &#8220;meh&#8221; part.<br />
2) Explorer.exe is never run elevated.<br />
3) You can restart a process with elevation (see ProcessExplorer and other utilities of the sort). And btw seems the MsiInstaller can request elevation consent in the middle when it&#8217;s already executing, I think maybe that&#8217;s also possible.<br />
<a href="https://blogs.msdn.microsoft.com/heaths/2007/07/12/immediate-custom-actions-always-impersonate/" rel="nofollow">https://blogs.msdn.microsoft.com/heaths/2007/07/12/immediate-custom-actions-always-impersonate/</a></p>
<p>No comment for 4 and 5.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1261095">
				<div id="div-comment-1261095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/SAFER.html' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261095">
			August 18, 2016 at 7:01 am</a>		</div>

		<p>You need to understand what &#8220;silent elevation&#8221; means in the context Raymond presented, and how it works.<br />
This is what 4) and 5) are all about.<br />
JFTR: &#8220;restart process&#8221; == &#8220;start process&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1260835">
				<div id="div-comment-1260835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fsociety</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260835">
			August 17, 2016 at 3:04 am</a>		</div>

		<p>Wrong in details: <a href="http://www.kernelmode.info/forum/viewtopic.php?f=11&#038;t=3643&#038;start=110#p29058" rel="nofollow">http://www.kernelmode.info/forum/viewtopic.php?f=11&#038;t=3643&#038;start=110#p29058</a><br />
Suggest to read the whole topic of the autoelevation &#8220;feature&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1260865">
				<div id="div-comment-1260865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260865">
			August 17, 2016 at 6:39 am</a>		</div>

		<p>This is disappointing to learn, but informative.  I always thought auto-elevation was only allowed for certain predefined actions.  Thread injection would be trivial for a malware author to implement.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1260875">
				<div id="div-comment-1260875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260875">
			August 17, 2016 at 6:45 am</a>		</div>

		<p>I just loaded up a Vista system and deleted a folder from C:\Program Files.  Here are the prompts I got:<br />
Explorer: Do you want to move to recycle bin? &#8211; Clicked Yes<br />
Explorer: You need to confirm this operation. &#8211; Clicked Continue<br />
UAC Prompt &#8211; Clicked Continue</p>
<p>I think it was those extra &#8220;you need to confirm this operation&#8221; prompts from Explorer that really fed the criticism.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1260965">
				<div id="div-comment-1260965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SatoMew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260965">
			August 17, 2016 at 9:27 am</a>		</div>

		<p>This is still the case in Windows 10 if UAC is set to Always Notify and the Recycle Bin confirmation prompt is enabled, the latter which is disabled by default since Windows 8. Otherwise, you get two prompts using the default settings on Windows 7 or only one prompt using the default settings on Windows 8 and 10.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1260977">
				<div id="div-comment-1260977" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1260977">
			August 17, 2016 at 9:31 am</a>		</div>

		<p>This strongly suggests that the Out-of-process-COM-call-using-elevation action ought to provide the application some input into the UAC prompt.  Namely (1) Some additional explanation to be shown the user (2) A flag for &#8220;always require confirmation, even if UAC settings allow auto-elevation&#8221;.  Then explorer could use that for the confirmation, instead of an Explorer-generated confirmation followed by (maybe, depending on UAC level) a UAC elevation prompt.</p>
<p>Of course, since we don&#8217;t want to expose the secure desktop to shatter-attacks and buffer overflows in a rich text parser, this explanation should be very limited.  My vote is for plain text with a maximum number of newlines (perhaps 6) and a maximum total number of bytes (perhaps 1000).</p>
<p>That&#8217;s plenty for an explanation of the operation (You are attempting to move/copy/delete files in an Operating System/access controlled folder), along with the target or source/destination file specifications.  And flexible enough to be useful for things other than file operations.</p>
<p>Note that this is not replacing the existing information on the UAC dialog, and needs to be presented as &#8220;The application provided the following message&#8221; so it is not confused with trustworthy information collected by the OS (since drive-by browser exploits will start using this for their &#8220;your computer is infected&#8221; fraud, you need to give users a chance to see that this message about a virus is coming from my web browser, not from my antivirus program)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1261007">
				<div id="div-comment-1261007" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261007">
			August 17, 2016 at 12:32 pm</a>		</div>

		<p>Only if you volunteer to be the one that cleans up after all the users that fail to recognize the difference and trust it anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse odd alt depth-3 parent" id="comment-1261056">
				<div id="div-comment-1261056" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261056">
			August 17, 2016 at 6:09 pm</a>		</div>

		<p>This, of course, assumes that users actually read messages. Having done helpdesk duty, I&#8217;ve lost confidence in people reading prompts (particularly when reading prompts written in programmerese, a close relative to Klingon.) Additionally, many prompts don&#8217;t come from the program level but from the framework level, where prompts would be more generic by necessity and could easily be misleading for people who are not proficient in lower-level computer concepts. I&#8217;m not saying that having more helpful messages would be bad, but just that they would be perceived as noise to many users if the feature was used incorrectly.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1261085">
				<div id="div-comment-1261085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/SAFER.html' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261085">
			August 18, 2016 at 6:53 am</a>		</div>

		<p><a href="http://www.theregister.co.uk/2016/08/18/coding_pop_ups_hit_em_when_theyre_idling_university_boffins_say/" rel="nofollow">http://www.theregister.co.uk/2016/08/18/coding_pop_ups_hit_em_when_theyre_idling_university_boffins_say/</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1261055">
				<div id="div-comment-1261055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">roeland</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261055">
			August 17, 2016 at 4:20 pm</a>		</div>

		<p>This happens any time when you move files, and either the source or destination doesn&#8217;t have write permissions for regular users. You’ll get a prompt that you’ll &#8220;have to provide administrator permission…”, followed by the actual UAC prompt. I wonder what’s the rationale behind that first dialog. No other application does this.</p>
<p>This is still an improvement over Windows XP, where that move would require running a third-party file manager as Administrator.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1261035">
				<div id="div-comment-1261035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jgh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261035">
			August 17, 2016 at 1:17 pm</a>		</div>

		<p>Every time (ok, both times) I&#8217;ve taken my PC to the local repair shop, it&#8217;s come back with my user account set to Admin &#8220;because it&#8217;s convenient&#8221;. No, it&#8217;s dangerous. The reason that only Admin is allowed to do Admin stuff is to ensure that only Admin is allowed to do Admin stuff.</p>
<p>But then, I was administering networked resources back in 1985 and my default mode of thinking is that users are users, not admins, non-user files only have user read permissions, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1261045">
				<div id="div-comment-1261045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261045">
			August 17, 2016 at 1:55 pm</a>		</div>

		<p>Suppose there were a hypothetical 5th, option: always notify, use normal desktop.  Would this be meh as well?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1261255">
				<div id="div-comment-1261255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261255">
			August 18, 2016 at 10:04 pm</a>		</div>

		<p>Insecure desktop. Meh.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1262185">
				<div id="div-comment-1262185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1262185">
			August 24, 2016 at 8:04 pm</a>		</div>

		<p>This makes reference to something I had been intending to ask about. We know the UAC itself appears on the secure desktop by default; but the spawned privileged application does not. Without regards to UAC itself; the change of access levels of windows on the same desktop would make a good topic /and is relevant even if UAC is disabled/.</p>
<p>Although I am left wondering if the UAC prompt is subject to attack if not on the secure desktop, than why bother attacking it; just wait for the next privileged GUI application and attack that. I always thought it was merely defending against a fake UAC box to steal passwords; which is not very meaningful if [Yes] [No] kind of UAC box.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1261145">
				<div id="div-comment-1261145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">viila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261145">
			August 18, 2016 at 9:04 am</a>		</div>

		<p><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060818-14/?p=30053#comment-411103" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20060818-14/?p=30053#comment-411103</a><br />
&#8220;[“What do you think of the new security model in Vista?” Ask me in ten years. -Raymond]&#8221;</p>
<p>So, now that it is ten years (and several Windows versions) later, what did you think about the new security model in Vista?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1261155">
				<div id="div-comment-1261155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261155">
			August 18, 2016 at 9:29 am</a>		</div>

		<p>I think it&#8217;s still too soon. People are still upset by it.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1261185">
				<div id="div-comment-1261185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261185">
			August 18, 2016 at 10:44 am</a>		</div>

		<p>I thought I had nothing more to say about UAC. Turns out I was wrong. Somebody managed to make the UAC prompt declare his binary as admin via a custom root certificate. This is the kind of thing you shudder at. Any real vulnerability pathway involves also compromising one of the hundreds of certificate providers but that&#8217;s not as hard as some other attacks on Windows that have been made to work in the past.</p>
<p><a href="https://labs.mwrinfosecurity.com/blog/masquerading-as-a-windows-system-binary-using-digital-signatures/" rel="nofollow">https://labs.mwrinfosecurity.com/blog/masquerading-as-a-windows-system-binary-using-digital-signatures/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1261265">
				<div id="div-comment-1261265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261265">
			August 18, 2016 at 11:32 pm</a>		</div>

		<p>&#8220;when I do elevate to administrator, I&#8217;m running as the local administrator account, not as myself.&#8221;</p>
<p>How does that work when installing applications?<br />
If it not running as you then how does it install the per-user settings?<br />
&#8211; eg Start/Desktop shortcuts, licence key etc.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-2" id="comment-1261305">
				<div id="div-comment-1261305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261305">
			August 19, 2016 at 5:22 am</a>		</div>

		<p>Those are not supposed to be per user if installing for all users/elevated. And any per-user data that goes in %appdata% needs to be copied from a template in programfiles/programdata the first time a user runs the app&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1261375">
				<div id="div-comment-1261375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261375">
			August 19, 2016 at 10:33 am</a>		</div>

		<p>They already have to solve this problem for the general case where an administrator wants to install an app for a non-administrator to use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1261575">
				<div id="div-comment-1261575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/SAFER.html' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160816-00/?p=94105#comment-1261575">
			August 20, 2016 at 8:09 am</a>		</div>

		<p>See the 20+ years old &#8220;Designed for Windows&#8221; guidelines!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

