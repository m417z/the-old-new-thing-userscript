<html>
<head>
<title>Why is there a CSIDL_DESKTOP value if you need the desktop in order to get it anyway?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is there a CSIDL_DESKTOP value if you need the desktop in order to get it anyway?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 17, 2011 / year-entry #249</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20111017-00/?p=9363</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">John asks why there is a special constant CSIDL_DESKTOP defined for the desktop. After all, in order to use CSIDL_DESKTOP, you need to call SHGet­Desktop­Folder and then bind to it. What's the point of having an ITEM­ID­LIST that represents the desktop if, in order to use it, you first need to get the desktop? It's...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
John asks
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2009/07/30/9852685.aspx#9853402">
why there is a special constant <code>CSIDL_<wbr>DESKTOP</code>
defined for the desktop</a>.
After all, in order to use <code>CSIDL_<wbr>DESKTOP</code>,
you need to call <code>SHGet&shy;Desktop&shy;Folder</code> and then
bind to it.
What's the point of having an <code>ITEM&shy;ID&shy;LIST</code> that
represents the desktop if, in order to use it,
you first need to get the desktop?
</p>
<p>
It's like asking why the file system uses
<code>.</code> (dot) 
to refer to the current directory.
You're already <i>in</i> the current directory.
In order to resolve <code>.</code> (dot), you already need to have
the current directory, so why bother with the dot at all?
</p>
<p>
Because it is often convenient to give a name to your starting point.
</p>
<p>
Suppose somebody wants to save a file to the desktop.
How would you represent this as an <code>ITEM&shy;ID&shy;LIST</code>?
If the only thing you can do is fill in the blank in the
sentence,
"Start with the desktop folder, then go to ________, then
save the file there,"
then you need a way to say "where you are now."
</p>
<p>
And that's what <code>CSIDL_<wbr>DESKTOP</code> gives you.
An <code>ITEM&shy;ID&shy;LIST</code> that says "Where you are now."
</p>
<p>
Besides, if <code>CSIDL_<wbr>DESKTOP</code> weren't defined,
somebody would have invented it.
Say your program has a list of directories it wants to operate on,
say, the Documents folder, the Music folder,
and the Shared Documents folder.
Great, so let me write a function:
</p>
<pre>
void DoItIn(HWND hwnd, int csidl)
{
 PIDLIST_ABSOLUTE pidl;
 if (SUCCEEDED(SHGetSpecialFolderLocation(
                     hwnd, csidl, &pidl))) {
  IShellFolder *psf;
  if (SUCCEEDED(SHBindToObject(NULL, pidl, NULL,
                    IID_PPV_ARGS(&amp;psf)))) {
   ...
   psf-&gt;Release();
  }
  CoTaskMemFree(pidl);
 }
}

void DoItInStandardPlaces(HWND hwnd)
{
 const static int csidls[] = {
  CSIDL_MYDOCUMENTS,
  CSIDL_MYMUSIC,
  CSIDL_COMMON_DOCUMENTS,
 };
 for (int i = 0; i &lt; ARRAYSIZE(csidls); i++) {
  DoItIn(hwnd, csidls[i]);
 }
}
</pre>
<p>
Now you want to add the desktop folder.
Oh wait, there is no <code>CSIDL</code> value for the desktop,
so I'll have to make one up.
</p>
<pre>
// Our custom CSIDLs use the high word. None of the CSIDLs we use
// set any bits in the high word, so we can use the high word to
// detect whether we have a standard CSIDL or a custom CSIDL.
#define CUSTOMCSIDL_DESKTOP 0x00010000

#define ISCUSTOMCSIDL(csidl) HIWORD(csidl)
#define STANDARDCSIDLOF(csidl) LOWORD(csidl)

HRESULT MyGetSpecialFolderLocation(
    HWND hwnd, int csidl, PIDLIST_ABSOLUTE *ppidl)
{
 HRESULT hr;
 if (ISCUSTOMCSIDL(csidl)) {
  *ppidl = (PIDLIST_ABSOLUTE)CoTaskMemAlloc(sizeof(WORD));
  if (*ppidl) {
   ppidl-&gt;mkid.cb = 0;
   hr = S_OK;
  } else {
   hr = E_OUTOFMEMORY;
  }
 } else {
  hr = SHGetSpecialFolderLocation(hwnd, STANDARDCSIDLOF(csidl), ppidl);
 }
 return hr;
}
</pre>
<p>
Okay, cool, now I can add
</p>
<pre>
 const static int csidls[] = {
  CSIDL_MYDOCUMENTS,
  CSIDL_MYMUSIC,
  CSIDL_COMMON_DOCUMENTS,
  <font COLOR=blue>CUSTOMCSIDL_DESKTOP,</font>
 };
</pre>
<p>
Oh wait, I also have to have a custom version of
<code>SHBind&shy;To&shy;Object</code> that knows how to bind to
this special new type of pidl that means "where you are now."
</p>
<pre>
HRESULT MyBindToObject(IShellFolder *psf, PCUIDLIST_RELATIVE pidl,
  IBindCtx *pbc, REFIID riid, void **ppv)
{
 HRESULT hr;
 if (pidl-&gt;mkid.cb == 0) {
  *ppv = NULL;
  if (psf == NULL) {
   hr = SHGetDesktopFolder(&amp;psf);
   if (SUCCEEDED(hr)) {
    hr = psf-&gt;QueryInterface(riid, ppv);
    psf-&gt;Release();
   }
  } else {
   hr = psf-&gt;QueryInterface(riid, ppv);
  }
 } else {
  hr = SHBindToObject(psf, pidl, pbc, riid, ppv);
 }
 return hr;
}
</pre>
<p>
Congratulations, you just reinvented <code>CSIDL_<wbr>DESKTOP</code>.
</p>
<p>
It can be
<a HREF="http://en.wikipedia.org/wiki/Null_Object_pattern">
very convenient to have a name for the null action</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-941263">
				<div id="div-comment-941263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vista cue</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111017-00/?p=9363#comment-941263">
			October 17, 2011 at 9:28 am</a>		</div>

		<p>&quot;Criticism</p>
<p>This pattern should be used carefully as it can make errors/bugs appear as normal program execution.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-941283">
				<div id="div-comment-941283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111017-00/?p=9363#comment-941283">
			October 17, 2011 at 10:31 am</a>		</div>

		<p>[Good catch. I should&#39;ve used the high byte, not the high word. -Raymond]</p>
<p>I made a similar mistake once where I added to my system menu and used a menu id that the next version of Windows used.</p>
<p>Score -1 for me for misreading the documentation on that one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-941273">
				<div id="div-comment-941273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111017-00/?p=9363#comment-941273">
			October 17, 2011 at 9:32 am</a>		</div>

		<p>We know CSIDL_FLAG_MASK is 0xff00 and that leaves us with 0xffff00ff as a mask for the id itself. How are people outside MS supposed to know that the id will never be &gt; 0xff? If csidls[] could be set by the user, ISCUSTOMCSIDL could filter out valid MS ids! (This question is probably a bit dated since we have KNOWNFOLDERID now and Vista,7 did not add new CSIDL&#39;s)</p>
<div class="post">[<i>Good catch. I should&#39;ve used the high byte, not the high word. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-941773">
				<div id="div-comment-941773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111017-00/?p=9363#comment-941773">
			October 20, 2011 at 2:43 pm</a>		</div>

		<blockquote><p>
  It can be very convenient to have a name for the null action.
</p></blockquote>
<p>Interesting, I wasn&#39;t aware there was an OO pattern name for &quot;a identity (mathematics), but with less rigor&quot;. Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

