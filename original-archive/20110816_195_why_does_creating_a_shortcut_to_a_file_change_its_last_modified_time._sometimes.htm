<html>
<head>
<title>Why does creating a shortcut to a file change its last-modified time... sometimes?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does creating a shortcut to a file change its last-modified time&#8230; sometimes?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 16, 2011 / year-entry #196</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer observed that sometimes, the last-modified timestamp on a file would change even though nobody modified the file, or at least consciously took any steps to modify the file. In particular, they found that simply double-clicking the file in Explorer was enough to trigger the file modification. It took a while to puzzle out,...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer observed that sometimes, the last-modified timestamp on a file would change even though nobody modified the file, or at least consciously took any steps to modify the file. In particular, they found that simply double-clicking the file in Explorer was enough to trigger the file modification.</p>
<p> It took a while to puzzle out, but here's what's going on: </p>
<p> When you double-click a file in Explorer, Explorer adds it to the Recent Items list. Internally, this is done by creating a shortcut to the item. The nice thing about a shortcut is that <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/02/24/10133280.aspx"> it knows how to track its target</a>. That way, if you move an item, then try to open it from the Recent Items list, the <a href="http://technet.microsoft.com/en-us/magazine/2009.10.windowsconfidential.aspx"> shortcut tracking code will try to find where you moved it to</a>. You moved the file. The shortcut still works. Magic. </p>
<p> Shortcut target tracking magic is accomplished <a href="http://technet.microsoft.com/en-us/magazine/2009.10.windowsconfidential.aspx"> with the assistance of object identifiers</a>, and object identifiers, as we saw earlier, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/02/28/10134679.aspx"> are created on demand the moment somebody first asks for one</a>. </p>
<p> And that's where the file modification is coming from. If the file is freshly-created, it won't have an object identifier. When you create a shortcut to it (which happens implicitly when it is added to the Recent Items list), that triggers the creation of an object identifier, which in turn updates the last-modified time on the file. </p>
<p> Frustratingly, the <i>Link&shy;Resolve&shy;Ignore&shy;Link&shy;Info</i> and <i>No&shy;Resolve&shy;Track</i> policies do not prevent the creation of object identifiers. Those policies control whether the tracking information is used during the resolve process, but they don't control whether the tracking information is obtained during shortcut creation. (Who knows, maybe you're creating the shortcut to be used on a machine where those policies are not in effect.) To suppress collecting the volume information and object identifier at shortcut creation time, you need to pass the <a href="http://msdn.microsoft.com/bb762540.aspx"> <code>SLDF_<wbr>FORCE_<wbr>NO_<wbr>LINKINFO</wbr></wbr></wbr></code> and <code>SLDF_<wbr>FORCE_<wbr>NO_<wbr>LINKTRACK</wbr></wbr></wbr></code> flags</a> to the <a href="http://msdn.microsoft.com/bb774920.aspx"> <code>IShell&shy;Link&shy;Data&shy;List::<wbr>Set&shy;Flags</wbr></code></a> method when you create the shortcut. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-930353">
				<div id="div-comment-930353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930353">
			August 16, 2011 at 7:21 am</a>		</div>

		<p>What permission mask is necessary to create an obj id? Would it be WRITE_EA? WHat if an unprivileged user creates the shortcut? Will it be tracked?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930383">
				<div id="div-comment-930383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/stikves_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>stikves@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930383">
			August 16, 2011 at 3:25 pm</a>		</div>

		<p>@Joshua, this should not be a big deal, because it does not make random changes, but sets the last modified time to current time. Unless you have files from the &quot;future&quot;, it will never set the time to earlier, thus only causing extra notifications for backup like software with &quot;empty&quot; changes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930393">
				<div id="div-comment-930393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930393">
			August 16, 2011 at 4:17 pm</a>		</div>

		<p>A backup program should compute a hash on it&#39;s own to determine if a file has changed. Not some random file system metadata. No need to backup the content of a file if the content haven&#39;t been modified since last backup.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930403">
				<div id="div-comment-930403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930403">
			August 16, 2011 at 6:41 pm</a>		</div>

		<p>@640K:</p>
<p>Comparing hashes can only prove that a file was modified.. they can never prove that it wasn&#39;t.</p>
<p>These spurious changes to the last modified time-stamp are false positives.</p>
<p>Hashing is open to false negatives.</p>
<p>You cannot combine these two things to remove the possibility of error.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-930413">
				<div id="div-comment-930413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930413">
			August 16, 2011 at 6:46 pm</a>		</div>

		<p>Will there, at some point of time in future, be a switch in &quot;fsutil behavior&quot; command that allow us to set &quot;create object id for every file on file creation&quot; for the NTFS volumes so in this case we&#39;ll get more consistent result?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930373">
				<div id="div-comment-930373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930373">
			August 16, 2011 at 12:34 pm</a>		</div>

		<p>*shudder*</p>
<p>I wonder if this is what&#39;s causing intermittent failures in the document cache my product has.</p>
<p>This is the second time Raymond blogged about something that chewed up the modification time. I wonder if it should be treated as unreliable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930423">
				<div id="div-comment-930423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan Malloy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930423">
			August 16, 2011 at 9:41 pm</a>		</div>

		<p>@sukru-t Suppose I compile app.c to produce app.exe. I modify app.c, and then remember I want a shortcut: I create a shortcut to app.exe somewhere. Now I run make, and&#8230;app.exe is newer than app.c, so no compilation occurs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930433">
				<div id="div-comment-930433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930433">
			August 17, 2011 at 4:14 am</a>		</div>

		<p>lnk-files are broken by design. Every additional file system feature added to compensate for it will fail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930453">
				<div id="div-comment-930453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930453">
			August 17, 2011 at 6:49 am</a>		</div>

		<p>@Joseph Koss:</p>
<blockquote><p>
  Comparing hashes can only prove that a file was modified.. they can never prove that it wasn&#39;t.
</p></blockquote>
<p>Sure. &nbsp;But what you can do is reduce the chances to a level where you can have hashed as many files as there are stars in the known universe and still have a collision probability comfortably under a trillionth of a trillionth of a percent. (That&#39;s using a 256-bit hash). &nbsp;</p>
<p>At some point you have to stop worrying about collisions, and when the chance of a collision before the heat-death of the universe gets comfortably under that of the developer being struck by lightning while simultaneously winning the lottery before s/he can commit the hashing code, you&#39;re probably past it.</p>
<p>(This is assuming that no-one&#39;s broken your hash algorithm and is deliberately trying to generate a collision, of course. &nbsp;But while that&#39;s a worry for a cryptographer, for a backup program, I don&#39;t see a reason to lose sleep over it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930483">
				<div id="div-comment-930483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930483">
			August 17, 2011 at 7:53 am</a>		</div>

		<p>@Simon:</p>
<blockquote><p>
  At some point you have to stop worrying about collisions
</p></blockquote>
<p>You can backup the file that the metadata claims was changed on the grounds that it really might have been, as well as the file that the hash knows was changed on the grounds that it definitely was changed. If you do both these things, you most definitely do not /have/ to accept the risk of collisions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930513">
				<div id="div-comment-930513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930513">
			August 17, 2011 at 8:05 am</a>		</div>

		<p>@sukru-t: It&#39;s a cache, not the master. Bumping the timestamp to higher than the master by some external operation breaks the cache manager.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930473">
				<div id="div-comment-930473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930473">
			August 17, 2011 at 7:46 am</a>		</div>

		<p>@640k: Do you really want a backup program to read *every* file on disk in order to compute a hash to test if the file has changed? &nbsp;That requires an order of magnitude more disk I/O than just checking the modification times on every file, which only requires reading all of the directories on disk.</p>
<p>You could only hash the file if its modification time has changed, but that&#39;s just making the program more complicated without much benefit. &nbsp;You&#39;d have to read in the file twice if it changed (once to hash it, once to copy it to the backup volume), though that would almost certainly be cached by the OS in memory, assuming it&#39;s not ginormous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930623">
				<div id="div-comment-930623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930623">
			August 17, 2011 at 12:16 pm</a>		</div>

		<p>@Alan Malloy: &quot;Suppose I compile app.c to produce app.exe. I modify app.c, and then remember I want a shortcut: I create a shortcut to app.exe somewhere. Now I run make, and&#8230;app.exe is newer than app.c, so no compilation occurs?&quot;</p>
<p>My somewhat-trolling answer is &quot;stop using make and get a better build system.&quot; :-)</p>
<p>@Adam: &quot;You could only hash the file if its modification time has changed, but that&#39;s just making the program more complicated without much benefit.&quot;</p>
<p>On the contrary, I feel that this is *very* reasonable behavior for a backup system. &quot;False positives&quot; aren&#39;t the only reason that an mtime may change but the file wouldn&#39;t. So either you already have the backup system backing up stuff it doesn&#39;t need to, in which case a few more because of this shortcut issue is likely to be the least of your concerns, or you have to have something that looks at the file contents anyway.</p>
<p>(Not to say that it couldn&#39;t cause other problems, e.g. the aforementioned &#39;make&#39; answer.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-931173">
				<div id="div-comment-931173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Ross</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-931173">
			August 20, 2011 at 7:34 am</a>		</div>

		<p>@640k:</p>
<p>There&#39;s already a meta data flag in the directory for backup programs. It&#39;s called the archive flag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-931193">
				<div id="div-comment-931193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-931193">
			August 20, 2011 at 11:06 am</a>		</div>

		<p>The archive attribute is broken by design. Even in single tasking DOS.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

