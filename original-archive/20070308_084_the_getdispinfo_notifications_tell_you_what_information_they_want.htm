<html>
<head>
<title>The GETDISPINFO notifications tell you what information they want</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The GETDISPINFO notifications tell you what information they want</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 8, 2007 / year-entry #85</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070308-00/?p=27703</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>1</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The XXN_GETDISPINFO notifications used by the common controls are used when the control asks its parent to generate information that had been marked as delay-rendered, either explicitly via values such as LPSTR_TEXTCALLBACK or implicitly by being an owner-data control, for example. In fact the control is really just the middle man between the code that...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The <code>XXN_GETDISPINFO</code> notifications used by the common controls are used when the control asks its parent to generate information that had been marked as delay-rendered, either explicitly via values such as <code>LPSTR_TEXTCALLBACK</code> or implicitly by being an owner-data control, for example.</p>
<p> In fact the control is really just the middle man between the code that requested information about an item (via a message like <code>LVM_GETITEM</code>) and the code that generates it (your <code>LVN_GETDISPINFO</code> handler). In other words, the code flow goes like this: </p>
<p> Somebody interested in retrieving data from a list view creates a <code>LVITEM</code> structure and initializes the <code>LVITEM.mask</code> and other fields as necessary, based on the mask. (For example, if the <code>LVIF_TEXT</code> flag is set, then <code>LVITEM.pszText</code> and <code>LVITEM.cchTextMax</code> must also be set to the buffer and its size.) it then sends a <code>LVM_GETITEM</code> message to the list view control. </p>
<p> The list view control looks at the <code>LVITEM.mask</code> to see what information needs to be filled in. Some of the information the list view can provide on its own. Other parts of the information require help from the list view control's parent. For example, if the <code>LVITEM.mask</code> has the <code>LVIF_TEXT</code> flag set, and the item has its text set to <code>LPSTR_TEXTCALLBACK</code>, then the list view needs to consult its parent to get the text. </p>
<p> The list view control sends the <code>LVN_GETDISPINFO</code> message to its parent, saying, "Hey, somebody is looking for information; please provide the information that is requested in the <code>LVITEM.mask</code> member." </p>
<p> After the parent handles the message, the results are returned back to the original caller. </p>
<p> There's a little bonus step that occurs just before the results are returned: If the parent set the <code>LVIF_DI_SETITEM</code> flag in the <code>LVITEM.mask</code>, then the returned values are also saved into the list view control as if you had sent a <code>LVM_SETITEM</code> message. For example, if you set the <code>LVIF_DI_SETITEM</code> flag in response to a request for <code>LVIF_TEXT</code>, then the text you return will be saved into the list view item, overwriting the previous value of <code>LPSTR_TEXTCALLBACK</code>. This is handy if you only want to compute the result once and let the list view cache the result from the on. </p>
<p> Notice that throughout this process, the <code>LVITEM.mask</code> controls what information is being requested by the original caller of the list view as well as what is being requested by the list view of its parent. If you <a href="http://groups.google.com/groups?selm=37C3DC97-DFD4-4C62-A6EA-2244F8A91A32@microsoft.com"> make the mistake of changing the value of <code>LVITEM.mask</code></a> (aside from setting the <code>LVIF_DI_SETITEM</code> flag, as noted in the "bonus step"), then you interfere with this game of "pass the buck". </p>
<p> After the parent handles the message, the results are returned back to the original caller. But if you have modified the <code>LVITEM.mask</code>, then the results being returned back to the caller aren't the same as the ones the caller requested! For example, if the list view sees the <code>LVIF_TEXT</code> flag set, then it will copy the string provided by the parent back into the caller's buffer. But wait a second, if the parent is the one who set the <code>LVIF_TEXT</code> flag, that means that the original caller didn't ask for the text. There is no buffer to copy the results back into. The list view copies the string to an unintialized pointer, and all sorts of memory corruption occurs as a result. </p>
<p> Moral of the story: When responding to a <code>XXN_GETDISPINFO</code> notification, respect the <code>mask</code>. It's the bookkeeping that specifies what information you're being asked to provide (and therefore what information will be copied back to the original caller). If you change this bookkeeping, the original caller is in for a big surprise. It's like being the cook in a restaurant modifying the customer's order. "Oh, you didn't want the salad; let me give you the veal instead." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (1)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-480423">
				<div id="div-comment-480423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070308-00/?p=27703#comment-480423">
			March 8, 2007 at 4:38 pm</a>		</div>

		<p>What I don&#8217;t understand (and maybe I&#8217;m being dense here) is why the poster&#8217;s problem only shows up when he compiles in Unicode mode.</p>
<div class=post>[<i>I&#8217;ll leave that as an exercise. Hint: Thunk. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

