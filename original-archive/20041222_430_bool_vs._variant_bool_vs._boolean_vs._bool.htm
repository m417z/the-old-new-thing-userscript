<html>
<head>
<title>BOOL vs. VARIANT_BOOL vs. BOOLEAN vs. bool</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>BOOL vs. VARIANT_BOOL vs. BOOLEAN vs. bool</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 22, 2004 / year-entry #431</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>29</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Still more ways of saying the same thing. Why so many? Because each was invented by different people at different times to solve different problems. BOOL is the oldest one. Its definition is simply typedef int BOOL; The C programming language uses "int" as its boolean type, and Windows 1.0 was written back when C was...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Still more ways of saying the same thing.
Why so many?
</p>
<p>
Because each was invented by different people
at different times to solve different problems.
</p>
<p>
<code>BOOL</code> is the oldest one.  Its definition is simply
</p>
<pre>
typedef int BOOL;
</pre>
<p>
The C programming language uses "int" as its boolean type,
and Windows&nbsp;1.0 was written back when C was the cool
language for systems programming.
</p>
<p>
Next came <code>BOOLEAN</code>.
</p>
<pre>
typedef BYTE  BOOLEAN;
</pre>
<p>
This type was introduced by the
OS/2&nbsp;NT team when they decided to write a new
operating system from scratch.  It lingers in Win32
in the places where the original NT&nbsp;design peeks through,
like the security subsystem and interacting with drivers.
</p>
<p>
Off to the side came <code>VARIANT_BOOL</code>.
</p>
<pre>
typedef short VARIANT_BOOL;
#define VARIANT_TRUE ((VARIANT_BOOL)-1)
#define VARIANT_FALSE ((VARIANT_BOOL)0)
</pre>
<p>
This was developed by the Visual Basic folks.
Basic uses <code>-1</code> to represent "true"
and <code>0</code> to represent "false",
and <code>VARIANT_BOOL</code> was designed to preserve this behavior.
</p>
<p>
<strong>Common bug</strong>:  When manipulating <code>VARIANT</code>s
of type <code>VT_BOOL</code>, and you want to set a boolean value to "true",
you must use <code>VARIANT_TRUE</code>.
Many people mistakenly use <code>TRUE</code> or <code>true</code>,
which are not the same thing as <code>VARIANT_TRUE</code>.
You can cause problem with scripting languages if you get them confused.
(For symmetry, you should also use <code>VARIANT_FALSE</code>
instead of <code>FALSE</code> or <code>false</code>.
All three have the same numerical value, however.
Consequently, a mistake when manipulating "false" values is not fatal.)
</p>
<p>
Newest on the scene is <code>bool</code>, which is a C++ data type
that has the value <code>true</code> or <code>false</code>.
You won't see this used much (if at all) in Win32 because Win32 tries to
remain C-compatible.
</p>
<p>
(Note that C-compatible isn't the same as C-friendly.
Although you can do COM from C, it isn't fun.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (29)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-236483">
				<div id="div-comment-236483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pedro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236483">
			December 22, 2004 at 7:07 am</a>		</div>

		<p>It&#8217;s funny to see this posting above one called &quot;Sometimes people don&#8217;t like it when you enforce a standard&quot;. Selective soapboxing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236493">
				<div id="div-comment-236493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Golick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236493">
			December 22, 2004 at 7:27 am</a>		</div>

		<p>The important thing to remember is not to compare any of the bool values to true, (TRUE, or VARIANT_TRUE)</p>
<p>Instead of:<br />
<br />if (x == TRUE)</p>
<p>use:<br />
<br />if (x)</p>
<p>or:<br />
<br />if (x != VARIANT_FALSE)</p>
<p>Your guarnateed that someone will put something other than 1 (-1) in as a true value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236503">
				<div id="div-comment-236503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dennis Jackson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236503">
			December 22, 2004 at 7:58 am</a>		</div>

		<p>People wonder why simple bugs can slip into any software so easily.  if the foundations are a mess, what do you expect the top layers to look like?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236513">
				<div id="div-comment-236513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236513">
			December 22, 2004 at 8:13 am</a>		</div>

		<p>Pedro: The great thing about standards is there are so many to choose from! C uses one method for booleans, BASIC another, C++ yet another. If you want to complain, complain to the language designers for continually inventing new ways of expressing booleans.</p>
<p>Dennis Jackson: Or you can use a language like VB that isolates the language interop issues. If you choose a low-level language like C or C++ then you are effectively volunteering to handle all the interop issues yourself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236533">
				<div id="div-comment-236533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236533">
			December 22, 2004 at 8:46 am</a>		</div>

		<p>C99 has a real boolean type called _Bool that behaves pretty much like C++&#8217;s bool. Though you need stdbool.h (or your own macros) to define true and false.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236543">
				<div id="div-comment-236543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236543">
			December 22, 2004 at 8:51 am</a>		</div>

		<p>Stuart Ballard: True there are still more boolean-ish types, but I tried to stick to the ones you would find in C/C++ code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236553">
				<div id="div-comment-236553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sab39.dev.netreach.com/' rel='external nofollow' class='url'>Stuart Ballard</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236553">
			December 22, 2004 at 8:55 am</a>		</div>

		<p>You could still find System.Boolean in Managed C++ (or it&#8217;s Whidbey incarnation as C++/CLI)&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236583">
				<div id="div-comment-236583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236583">
			December 22, 2004 at 10:36 am</a>		</div>

		<p>&#8230; to Raymond, probably the hardest-working technical blogger on the planet. Long may he continue to blog!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236613">
				<div id="div-comment-236613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jeff_robertson.blogspot.com' rel='external nofollow' class='url'>Jeff Robertson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236613">
			December 22, 2004 at 11:11 am</a>		</div>

		<p>Don&#8217;t forget CORBA&#8217;s &quot;Boolean&quot; type. That turns up alot in C++, or at least it does where I work.</p>
<p>If you&#8217;re going to count Java, there&#8217;s also java.lang.Boolean. Nasty primitive/object dichotomy&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236633">
				<div id="div-comment-236633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.lazycoder.com' rel='external nofollow' class='url'>Scott</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236633">
			December 22, 2004 at 11:54 am</a>		</div>

		<p>So just to summarize.<br />
<br />BOOL != BOOLEAN != VARIANT_BOOL != bool</p>
<p>is that right? ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236653">
				<div id="div-comment-236653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spaces.msn.com/members/mpll' rel='external nofollow' class='url'>Pavel Lebedinsky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236653">
			December 22, 2004 at 1:13 pm</a>		</div>

		<blockquote><p>
  All three have the same numerical value,<br />
  <br />&gt; however. Consequently, a mistake when<br />
  <br />&gt; manipulating &quot;false&quot; values is not fatal.</p>
<p>That&#8217;s why we also have S_FALSE :)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236683">
				<div id="div-comment-236683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/EricLippert' rel='external nofollow' class='url'>Eric Lippert</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236683">
			December 22, 2004 at 3:17 pm</a>		</div>

		<p>I discussed the reason why VB/VBScript use -1 for VARIANT_TRUE instead of 1 here:</p>
<p><a target="_new" href="http://blogs.msdn.com/EricLippert/archive/2004/07/15/184431.aspx" rel="nofollow">http://blogs.msdn.com/EricLippert/archive/2004/07/15/184431.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236723">
				<div id="div-comment-236723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236723">
			December 22, 2004 at 4:05 pm</a>		</div>

		<p>Actually among all of the C/C++ boolean types, the oldest is&#8230;</p>
<p>int</p>
<p>(without being typedef&#8217;ed to any leaky abstracting nicer-looking identifiers, even if the abstraction leakage that was imported by overloading boolean meanings onto int wasn&#8217;t enough already).</p>
<p>By the way, after gradually learning how Microsoft isn&#8217;t as monolithic internally as it is in crushing the marketplace, I wonder how it avoided one boolean problem that was common elsewhere?  The problem came because everyone knew it would be prettier to name their booleans boolean instead of int, and everyone knew what true and false meant, so everyone did define boolean and true and false.  And if any C source file had to #include two header files that were written by such clever people, then the chances were high of having two incompatible definitions for boolean and/or true and/or false.  Of course the definitions would all have the same effects if any one of them had been chosen, it didn&#8217;t matter which one, but a declaration as an enum isn&#8217;t compatible with a typedef of int, a #define to 1 isn&#8217;t compatible with a #define to !false, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236523">
				<div id="div-comment-236523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sab39.dev.netreach.com/' rel='external nofollow' class='url'>Stuart Ballard</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236523">
			December 22, 2004 at 8:34 am</a>		</div>

		<p>You forgot &quot;boolean&quot; (invented by Sun when they created Java as a brand-new language with C-like syntax) and System.Boolean (the .NET Framework BCL boolean type) and Boolean (the way you&#8217;d normally actually *type* System.Boolean because you normally have the System namespace in scope) and &quot;bool&quot; (in it&#8217;s C# incarnation as an alias for System.Boolean).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236573">
				<div id="div-comment-236573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236573">
			December 22, 2004 at 9:07 am</a>		</div>

		<p>Stuart Ballard &#8211; Yeah, but as he said, he tried to stick to the ones you&#8217;d find in C/C++ code. *ahem*</p>
<p>I&#8217;ve still yet to find a good reason to actually use managed C++.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236743">
				<div id="div-comment-236743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.cadencoding.net/blogs/users/cornbread/default.aspx' rel='external nofollow' class='url'>Andy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236743">
			December 22, 2004 at 6:07 pm</a>		</div>

		<p>&quot;I&#8217;ve still yet to find a good reason to actually use managed C++&quot; &#8211; Simon Cooke</p>
<p>Simon I posted a response here so this post doesn&#8217;t get to off topic.<br />
<br /><a target="_new" href="http://www.cadencoding.net/blogs/users/cornbread/permalink.aspx?id=108" rel="nofollow">http://www.cadencoding.net/blogs/users/cornbread/permalink.aspx?id=108</a></p>
<p>Raymond I love these historical posts of yours. I can&#8217;t get enough of them. Have you ever considered gathering up the &quot;history of the many strange and forgotten things about windows&quot; and putting them in a book. I for one would buy it in a heart beat.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236753">
				<div id="div-comment-236753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236753">
			December 22, 2004 at 6:31 pm</a>		</div>

		<p>He already wrote that.</p>
<p><a target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2003/10/08/55204.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2003/10/08/55204.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236783">
				<div id="div-comment-236783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.cadencoding.net/blogs/users/cornbread/default.aspx' rel='external nofollow' class='url'>Andy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236783">
			December 22, 2004 at 7:38 pm</a>		</div>

		<p>Thank you for the link Miss Fox. It explains a lot.</p>
<p>Well in that case keep on rocking Raymond I really like your blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236643">
				<div id="div-comment-236643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.kernelmustard.com' rel='external nofollow' class='url'>Steve Dispensa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236643">
			December 22, 2004 at 12:46 pm</a>		</div>

		<p>Quoth the Raymond:<br />
<br />&gt; The C programming language uses &quot;int&quot; as its boolean type, and Windows&#160;1.0 was written back when C was the cool language for systems programming.</p>
<p>&#8212;</p>
<p>Funny thing to say &#8211; there was a lot of assembly in the world at the time, and in particular in Windows 1.0, no?  I still occasionally work with a little assembly for Windows 98/Me drivers.  </p>
<p>OTOH, I&#8217;d go out on a limb and say that C *is* the cool language for systems programming, at least judging by market share:  Windows NT/2k/xp/2k3, Linux, *BSD, Mac OSX, &#8230; not much left.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236663">
				<div id="div-comment-236663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://kentb.blogspot.com' rel='external nofollow' class='url'>Kent</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236663">
			December 22, 2004 at 2:32 pm</a>		</div>

		<p>To all those saying &quot;don&#8217;t forget such and such a language&quot; . . .</p>
<p>Sure, most languages will have a boolean type. Some languages (eg. C#) will have several ways of using said type (bool, System.Boolean). However, I think Raymond&#8217;s point is that &#8211; when coding in C/C++ &#8211; you have several choices that *do not amount to the same thing*.</p>
<p>This has long been a point of confusion for me when coding in C++ as I am predominantly a C# coder. I try to use bool but then I find myself using other forms (eg. BOOL) because of my reliance on third-party libraries.</p>
<p>I guess the trick is to choose one and stick to it in your public APIs, converting other forms to your chosen one.</p>
<p>Thanks for clearing this up Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236903">
				<div id="div-comment-236903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://members.rogers.com/sometimesboredinottawa/' rel='external nofollow' class='url'>roy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236903">
			December 23, 2004 at 1:14 pm</a>		</div>

		<p>Here&#8217;s one for you.  If you run Windows XP French OS, and you are doing some VBScript, you get back &quot;vrai&quot; or &quot;faux&quot; (string)!!!</p>
<p>I&#8217;m not kidding.  I totally forget how we solved it, probably dealt with the numerical value (0,1) rather than having it check for:</p>
<p>If X = &quot;true&quot; Then &#8230;</p>
<p>This failed because the returned string was &quot;vrai.&quot;</p>
<p>Have any of you that use a different language OS encountered some differences like that?</p>
<p>Hey raymond, what&#8217;s true or false in swedish :-P?</p>
<p>Btw, that bug took me a whole day to find because I code in English, and keep my French on the side.  Didn&#8217;t see that one coming!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-236913">
				<div id="div-comment-236913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236913">
			December 23, 2004 at 2:11 pm</a>		</div>

		<p>I know VB(script) does a lot of conversions for you, but a two-way conversion between boolean and string values? I can see converting it to string for output, then the localization makes sense. But on the input side (string &quot;false&quot;,&quot;False&quot;,&quot;FAUX&quot; ==&gt; boolean false)? Why not make &quot;no&quot;, &quot;never&quot;, and &quot;not-gonna-do-it&quot; map to false as well? :)</p>
<p>My candidate for most unexpected value goes to S_FALSE, ASSERT(S_FALSE==TRUE) always succeeds.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-236933">
				<div id="div-comment-236933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-236933">
			December 23, 2004 at 6:19 pm</a>		</div>

		<p>12/23/2004 1:14 PM roy</p>
<p>&gt; Have any of you that use a different<br />
<br />&gt; language OS encountered some differences<br />
<br />&gt; like that?</p>
<p>One answer in Windows was the first public version of the Microsoft Baseline Security Analyzer.  For all four of the zones that Internet Explorer groups sites into, MBSA recommended setting security to Low.  And the maker called themselves a security company, so I sent a rather nasty note about that.  If they can&#8217;t figure out what zone they&#8217;re talking about, they&#8217;re far better off saying so and/or defaulting security to High.</p>
<p>In the Linux world there are problems like this all the time.  It is frequently recommended that root&#8217;s locale should be US English regardless of the locale used by everyone else, so that most scripts will see things the way that the script writers expected.  Of course Linux includes quite a lot of multilingual support but it seems that scripts are one place where there haven&#8217;t been a lot of volunteers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237273">
				<div id="div-comment-237273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jfoscoding/archive/2004/12/24/331885.aspx' rel='external nofollow' class='url'>jfo's coding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-237273">
			December 24, 2004 at 5:44 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237563">
				<div id="div-comment-237563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-237563">
			December 27, 2004 at 12:56 am</a>		</div>

		<p>In VB you can do this:</p>
<p>If SomeBooleanVariable = flase then<br />
<br />&#8230;<br />
<br />End If</p>
<p>It works because flase is undeclared, so it is intialized to a zero of some sort, the same value as False.</p>
<p>I just wish it were so easy to decipher the rest of the program that used it&#8230;..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237573">
				<div id="div-comment-237573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-237573">
			December 27, 2004 at 2:21 am</a>		</div>

		<p>Microsoft also invented special kind of BOOL value with three distinct meanings. See for instance GetMessage() API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238603">
				<div id="div-comment-238603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Johann</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-238603">
			December 30, 2004 at 4:03 am</a>		</div>

		<p>roy wrote:</p>
<p>&gt; Hey raymond, what&#8217;s true or false in swedish :-P? </p>
<p>&quot;sant&quot; and &quot;falskt&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-578913">
				<div id="div-comment-578913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/drnick/archive/2007/12/19/windows-and-upn-format-credentials.aspx' rel='external nofollow' class='url'>MSDN Blog Postings &raquo; Windows and UPN Format Credentials</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-578913">
			December 19, 2007 at 8:30 am</a>		</div>

		<p>PingBack from <a href="http://blogs.msdn.com/drnick/archive/2007/12/19/windows-and-upn-format-credentials.aspx" rel="nofollow">http://blogs.msdn.com/drnick/archive/2007/12/19/windows-and-upn-format-credentials.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-702593">
				<div id="div-comment-702593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.hilpers.com/273259-com-schnittstele-c-client' rel='external nofollow' class='url'>Com-Schnittstele - C# Client | hilpers</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041222-00/?p=36923#comment-702593">
			January 20, 2009 at 11:24 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.hilpers.com/273259-com-schnittstele-c-client" rel="nofollow">http://www.hilpers.com/273259-com-schnittstele-c-client</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

