<html>
<head>
<title>Using the MNS_DRAGDROP style: Dragging out</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Using the MNS_DRAGDROP style: Dragging out</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 28, 2011 / year-entry #307</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Windows 2000 introduced the MNS_DRAG­DROP menu style, which permits drag/drop operations in a menu. Nobody uses this style, probably because it's totally undiscoverable by the end-user. But I'll write a sample program anyway. Mind you, I knew nothing about the MNS_DRAG­DROP menu style until I started writing this entry. But I simply read the documentation, which...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Windows&nbsp;2000 introduced the <code>MNS_<wbr>DRAG&shy;DROP</code> menu
style, which permits drag/drop operations in a menu.
Nobody uses this style, probably because it's totally undiscoverable
by the end-user.
But I'll write a sample program anyway.
</p>
<p>
Mind you, I knew nothing about the <code>MNS_<wbr>DRAG&shy;DROP</code>
menu style until I started writing this entry.
But I simply read the documentation, which says that if you set this
style, you will receive <code>WM_<wbr>MENU&shy;DRAG</code>
and
<code>WM_<wbr>MENU&shy;GET&shy;OBJECT</code>
messages.
The
<code>WM_<wbr>MENU&shy;DRAG</code> message is sent when the user
drags a menu item, so let's go with that first.
The documentation says that you get information about the item
that was dragged, and then you return a code that specifies
whether you want the menu to remain up or whether you want it torn down.
</p>
<p>
Simple enough. Let's do it.
</p>
<p>
Start with
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/07/23/54576.aspx">
the scratch program</a>,
add
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/09/20/231739.aspx">
the function <code>Get&shy;UI&shy;Object&shy;Of&shy;File</code></a>
and
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/12/06/275659.aspx">
the class <code>CDrop&shy;Source</code></a>,
and change the calls to
<code>Co&shy;Initialize</code> and <code>Co&shy;Uninitialize</code>
into
<code>Ole&shy;Initialize</code> and <code>Ole&shy;Uninitialize</code>,
respectively.
Next, define the menu we're going to play with:
</p>
<pre>
// resource header file
#define IDM_MAIN 1
#define IDC_CLOCK 100

// resource file
IDM_MAIN MENU PRELOAD
BEGIN
    POPUP "&amp;Test"
    BEGIN
        MENUITEM "&amp;Clock", IDC_CLOCK
    END
END
</pre>
<p>
Now we can add some new code to our scratch program.
First, we add a menu to our window and
enable drag/drop on it:
</p>
<pre>
BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
 <font COLOR=blue>MENUINFO mi = { sizeof(mi), MIM_STYLE, MNS_DRAGDROP };
 return SetMenuInfo(GetMenu(hwnd), &amp;mi);</font>
}

// InitApp
 <font COLOR=red>// <strike>wc.lpszMenuName = NULL;</strike></font>
 <font COLOR=blue>wc.lpszMenuName = MAKEINTRESOURCE(IDM_MAIN);</font>
</pre>
<p>
For both dragging and dropping, we need a way to obtain the
COM object associated with a menu item,
so I'll put them in this common helper function:
</p>
<pre>
HRESULT GetMenuObject(HWND hwnd, HMENU hmenu, UINT uPos,
                      REFIID riid, void **ppvOut)
{
 HRESULT hr = E_NOTIMPL;
 *ppvOut = NULL;
 if (hmenu == GetSubMenu(GetMenu(hwnd), 0)) {
  switch (GetMenuItemID(hmenu, uPos)) {
  case IDC_CLOCK:
   hr = GetUIObjectOfFile(hwnd, L"C:\\Windows\\clock.avi",
                                             riid, ppvOut);
   break;
  }
 }
 return hr;
}
</pre>
<p>
If the menu is our "Test" popup menu, then 
we know how to map the menu items to COM objects.
For now, we have only one item,
namely <i>Clock</i>,
which corresponds to
the <code>C:\Windows\clock.avi</code>&sup1; file.
</p>
<p>
Now we can hook up a handler to the
<code>WM_<wbr>MENU&shy;DRAG</code> message:
</p>
<pre>
#define HANDLE_WM_MENUDRAG(hwnd, wParam, lParam, fn) \
 (fn)((hwnd), (UINT)(wParam), (HMENU)(lParam))

LRESULT OnMenuDrag(HWND hwnd, UINT uPos, HMENU hmenu)
{
 LRESULT lres = MND_CONTINUE;
 IDataObject *pdto;
 if (SUCCEEDED(GetMenuObject(hwnd, hmenu, uPos,
                                 IID_PPV_ARGS(&amp;pdto)))) {
  IDropSource *pds = new(std::nothrow) CDropSource();
  if (pds) {
   DWORD dwEffect;
   if (DoDragDrop(pdto, pds, DROPEFFECT_COPY | DROPEFFECT_LINK,
                  &amp;dwEffect) == DRAGDROP_S_DROP) {
    lres = MND_ENDMENU;
   }
   pds-&gt;Release();
  }
  pdto-&gt;Release();
 }
 return lres;
}
</pre>
<p>
This function is where the magic happens,
but it's really not all that magical.
We get the data object for the menu item being dragged
and tell OLE to do a drag/drop operation with it.
Just to make things interesting, I'll say that the
menu should be dismissed if the user dropped the object somewhere;
otherwise, the menu remains on the screen.
</p>
<p>
Finally, we hook up the message handler to our window procedure:
</p>
<pre>
HANDLE_MSG(hwnd, WM_MENUDRAG, OnMenuDrag);
</pre>
<p>
And there you have it.
A program that calls up a menu with drag enabled.
If you drag the item labeled <i>Clock</i>, then the drag/drop
operation proceeds as if you were dragging the
<code>clock.avi</code> file.
</p>
<p>
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/12/29/10251523.aspx">
Next time</a>,
we'll look at the drop half of drag and drop.
</p>
<p>
<b>Footnote</b>
</p>
<p>
&sup1; I hard-coded the <code>clock.avi</code> file
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/12/06/275659.aspx">
for old time's sake</a>.
Yes, I know the file is no longer included with Windows.
That'll teach people to use hard-coded paths!</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-955643">
				<div id="div-comment-955643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783#comment-955643">
			December 28, 2011 at 9:30 am</a>		</div>

		<p>For people using windows 7 where &quot;C:Windowsclock.avi&quot; doesn&#39;t exist:</p>
<p>Relpace this line;</p>
<p>hr = GetUIObjectOfFile(hwnd, L&quot;C:\Windows\clock.avi&quot;,</p>
<p>with this:</p>
<p>hr = GetUIObjectOfFile(hwnd, L&quot;C:\Users\Public\Videos\Sample Videos\Wildlife.wmv&quot;,</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-955653">
				<div id="div-comment-955653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WndSks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783#comment-955653">
			December 28, 2011 at 9:56 am</a>		</div>

		<p>If the native menu in 2000 supports both D&amp;D and right-clicks(TPM_RECURSE), why are the startmenu submenus implemented with toolbar+pager? D&amp;D re-order? Hold shift to stay open?</p>
<div class="post">[<i>For the same reason <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/01/19/10117410.aspx" rel="nofollow">NASA didn&#39;t use the space shuttle to rescue the Apollo 13 astronauts</a>: Windows 2000 didn&#39;t exist in 1995. Or because the built-in functionality <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/01/04/10252869.aspx#10253330" rel="nofollow">doesn&#39;t quite do everything they needed</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-955673">
				<div id="div-comment-955673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sunil Joshi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783#comment-955673">
			December 28, 2011 at 10:15 am</a>		</div>

		<p>Why was this feature implemted? What was the envisioned use?</p>
<div class="post">[<i>No idea. Maybe the menu manager folks were jealous of the Start menu. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-955683">
				<div id="div-comment-955683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WndSks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783#comment-955683">
			December 28, 2011 at 10:45 am</a>		</div>

		<p>@Raymond: IIRC Win95 used a normal menu and did support right-click, that stuff was added in the IE4 shellupdate/Win98.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-955693">
				<div id="div-comment-955693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WndSks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783#comment-955693">
			December 28, 2011 at 10:48 am</a>		</div>

		<p>did NOT (Damn you comment system forcing me to re-type)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-955703">
				<div id="div-comment-955703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783#comment-955703">
			December 28, 2011 at 1:01 pm</a>		</div>

		<p>WndSks:</p>
<p>Even if it was added to the start menu in Win98, that doesn&#39;t mean that the native menus supported this kind of thing in Win98.</p>
<p>As you pointed out, Win98 had to fake it to be able to get this kind of functionality and then the native menu ability to do this was added at a later point.</p>
<p>As to why the Windows 2000 start menu was still written with the old code, well, if it isn&#39;t broke then don&#39;t fix it. What they introduced with Win98 worked perfectly well, so without a good reason it would have been daft for them to rewrite the start menu code and potentially introduce more bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-955723">
				<div id="div-comment-955723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783#comment-955723">
			December 28, 2011 at 2:10 pm</a>		</div>

		<p>Facinating. Personally, I think this was for the cascading toolbars, which appeared on the NT branch in 2000. If the IE update that backported it to NT4 backported this also it would make perfect sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-955773">
				<div id="div-comment-955773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111228-00/?p=8783#comment-955773">
			December 28, 2011 at 8:26 pm</a>		</div>

		<p>As for the undiscoverability, this is true to some extent. But a lot of people know that you can drag around icons in the start menu and in the Favourites menu, so if you make your icons look like that, people will try it. By the way, is it really necessary to use owner draw to get that effect or is there an easier way? I&#39;ve found the standard menu icon functionality doesn&#39;t do what I want &#8211; the icons invert when I mouseover them.</p>
<div class="post">[<em>Stay tuned for <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/12/30/10251751.aspx" rel="nofollow">the exciting conclusion</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

