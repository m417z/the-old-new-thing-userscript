<html>
<head>
<title>A very brief anecdote about Windows 3.0</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>A very brief anecdote about Windows 3.0</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 7, 2004 / year-entry #134</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In an earlier comment, Larry Osterman described why Windows 3.0 was such a runaway success. He got a little of the timeline wrong, so I'll correct it here. Windows 2.0 did support protected mode. And it was Windows/386, which came out before Windows 3.0, which first used the new virtual-x86 mode of the 80386 processor...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://blogs.msdn.com/oldnewthing/archive/2004/03/11/87941.aspx#88383">  In an earlier comment, Larry Osterman described why Windows 3.0 was  such a runaway success</a>.  He got a little of the timeline wrong,  so I'll correct it here.</p>
<p>  Windows 2.0 did support protected mode.  And it was Windows/386, which came out before Windows 3.0,  which first used the new virtual-x86 mode of the 80386 processor  to support pre-emptively multitasked DOS boxes.  The old Windows 2.0 program was renamed "Windows/286" to keep  the names in sync.  </p>
<p>  The three modes of Windows then became "real mode" (Windows 1.0 style),  "standard mode" (Windows/286 style) and "enhanced mode" (Windows/386 style).  Amazingly, even though the way the operating system used the processor was  radically different in each of the three modes, a program written for  "real mode" successfully ran without change in the other two modes.  You could write a single program that ran on all three operating systems.  </p>
<p>  And then Windows 3.0 came out and the world changed.  Sales were through the roof.  I remember that some major software reseller (Egghead?)  was so pleased with the success of Windows 3.0 that  it bought bought every Microsoft employee a Dove ice cream bar.  (Even the employees like me who were working on OS/2.)  I was sitting in my office and some people came in  with a big box of ice cream bars and they handed me one.  "This is from Egghead. Thank you for making Windows 3.0 a success," they said.  </p>
<p>  It was a strange feeling, getting a thank-you for something  you not only didn't work on, but something which totally destroyed  the project you were working on!  </p>
<p>  [Raymond is currently on vacation; this message was pre-recorded.]  </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-161573">
				<div id="div-comment-161573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.joelonsoftware.com' rel='external nofollow' class='url'>Joel Spolsky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161573">
			April 7, 2004 at 8:56 am</a>		</div>

		<p>Egghead was owned by the same company that owned a supermarket chain, QFC.</p>
<p>And the dove bars (I remember them) were months past their expiration date. I was sort of surprised at how bad they tasted.</p>
<p>So I think egghead, a fairly inept operation to begin with, was just dumping leftover inventory from their supermarkets.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-161593">
				<div id="div-comment-161593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Js</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161593">
			April 7, 2004 at 10:39 am</a>		</div>

		<p>You had to ruin the story didn&#8217;t you Joel?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-161633">
				<div id="div-comment-161633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Catatonic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161633">
			April 7, 2004 at 5:38 pm</a>		</div>

		<p>That&#8217;s funny for so many reasons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-161643">
				<div id="div-comment-161643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MIke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161643">
			April 7, 2004 at 7:24 pm</a>		</div>

		<p>I love your blog, and am a regular reader, but I had to comment on this: &quot;Windows 2.0 did support protected mode&#8230; The old Windows 2.0 program was renamed &quot;Windows/286&quot; to keep the names in sync. &quot;</p>
<p>Are you sure about that? The only 286-specific feature I remember about Windows 2.x/286 was that they could enable the A20 line (via himem.sys) and use the memory between 1024-1088K for the windows environment. I always remembered that protected mode execution of kernel/user/gdi was added in 3.x.</p>
<p>The story behind that I had heard was that some Microsoft employee was inspired and tried to port the Windows kernel to protected mode himself. After he got it working, he demoed it to senior management (Gates/Ballmer??) who saw the implications right away.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-161653">
				<div id="div-comment-161653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B.Y.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161653">
			April 7, 2004 at 8:10 pm</a>		</div>

		<p>Yeah, I remember reading a book that said David Weiss did it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-161693">
				<div id="div-comment-161693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.redwoodroot.org' rel='external nofollow' class='url'>Peter Evans</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161693">
			April 7, 2004 at 10:30 pm</a>		</div>

		<p>Joel, so the dates were expired.  What made you want to taste them so bad?  Was it the bright shiny packaging.</p>
<p>Ah win3.0,the good old days when configuration madness was somewhat manageable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-161723">
				<div id="div-comment-161723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeremy Bloath</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161723">
			April 8, 2004 at 6:28 am</a>		</div>

		<p>Peter Evans, you clearly have never seen developers get their hands on free food.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-161733">
				<div id="div-comment-161733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.smackfu.com' rel='external nofollow' class='url'>Scott</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161733">
			April 8, 2004 at 6:45 am</a>		</div>

		<p>&quot;Geez, those donuts are leftover from yesterday, that&#8217;s lame&#8230; hey, who ate them all without throwing out the box?!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-161823">
				<div id="div-comment-161823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RomanP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161823">
			April 8, 2004 at 9:50 am</a>		</div>

		<p>Mike,</p>
<p>I&#8217;m sure that Windows 2.0 was capable of using (almost) all of 16M of 80286 Protected Mode address space. Of course, those were segments of 64K and two descriptor tables inside which made coding for this architecture quite difficult, so not too many applications actually took advantage of this. I remember the joy of allocating arrays bigger then 64K. Because of those descriptor tables it was even more complicated then in Real Mode, i.e. some techniques didn&#8217;t work.</p>
<p>It was until Win 3.0 with Win32s, when plain address space became available and everyone just fell in love with it and huge wave of applications emerged on this platform.</p>
<p>As of A20 and himem.sys, that could be done in DOS completely in Real Mode. The only reason Protected Mode was required is that upper 64K-16 bytes was actually a window, through which all the upper memory could be accessed. It was implemented by going to Protected Mode and copying requested segments of memory into this window. There was a trick of getting back into the real mode, since 80286 wasn’t capable of going back, it had to be restarted (by causing double fault, if I’m not mistaken). BIOS was capable of recognizing this kind of restart and not initiating POST sequence.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-161843">
				<div id="div-comment-161843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://members.cox.net/menright1' rel='external nofollow' class='url'>ATZ Man</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161843">
			April 8, 2004 at 11:52 am</a>		</div>

		<p>RomanP,</p>
<p>The PC-AT&#8217;s keyboard controller could restart the CPU, and the CPU could tell the controller to do it.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-161873">
				<div id="div-comment-161873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161873">
			April 8, 2004 at 3:13 pm</a>		</div>

		<p>&quot;I&#8217;m sure that Windows 2.0 was capable of using (almost) all of 16M of 80286 Protected Mode address space.&quot;</p>
<p>Ok&#8230; there&#8217;s a difference between &quot;using all of the protected mode address space&quot; and &quot;running in protected mode&quot;. Are you referring to Windows switching to protected mode to copy segments to and from memory &gt;1MB, and then switching back to real mode to actually execute Windows and user apps?</p>
<p>&quot;Of course, those were segments of 64K and two descriptor tables inside which made coding for this architecture quite difficult,&quot;</p>
<p>Heh&#8230; trust me&#8230; I remember __ahincr and __ahshift quite well. :-)</p>
<p>&quot;It was until Win 3.0 with Win32s, when plain address space became available and everyone just fell in love with it and huge wave of applications emerged on this platform. &quot;</p>
<p>My understanding of the timing is this:</p>
<p>Windows 1.0-2.x and /286, /386 &#8211; Windows and Windows applications run in real mode with (segment*16+offset) addressing. Windows has facilities to page unlocked segments to and from EMS and XMS memory.</p>
<p>Windows /386 &#8211; This is Windows 2.x with the VxD style 32-bit multitasker underneath.  Windows still runs in real mode, but this time in a V86 session alongside ofther V86 sessions that can run DOS applications.</p>
<p>Windows 3.0 &#8211; Windows can run in real, standard, or 386 enhancded mode. Real mode is analagous to Windows 2.x. Standard Mode and Enhanced mode have made the major change that the Windows environment itself (kernel/gdi/user) runs in protected mode with descriptor_table[selector]+offset addressing.  386 enhanced mode runs an updated version of the VxD 32-bit layer that also acts as a DPMI server to provide the services to allow the Windows environment to run in protected mode.</p>
<p>Windows 3.1 &#8211; Adds ExecPE and other parts of the mechanism to support Win32s.</p>
<p>Windows 3.11 &#8211; Moves some entry points around to break OS/2 for Windows. :-)</p>
<p>Windows for Workgroups 3.11 &#8211; Notable for moving the FAT file system code from real-mode into the 32-bit VxD part of the OS. This is called 32 Bit File Access.</p>
<p>&quot;As of A20 and himem.sys, that could be done in DOS completely in Real Mode.&quot;</p>
<p>That&#8217;s the 1024-1088K thing I mentioned.</p>
<p>&quot;The only reason Protected Mode was required is that upper 64K-16 bytes was actually a window, through which all the upper memory could be accessed. It was implemented by going to Protected Mode and copying requested segments of memory into this window. There was a trick of getting back into the real mode, since 80286 wasn’t capable of going back,&quot;</p>
<p>Okay, based on this, is my first statment true?</p>
<p>That is &quot;Windows/286 ran all of its applications in real mode, but switched into protected mode to allow copying information to and from&quot; memory &gt;1MB?&quot;</p>
<p>Thanks,<br />
<br />Mike</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-161903">
				<div id="div-comment-161903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161903">
			April 8, 2004 at 3:52 pm</a>		</div>

		<p>Windows 2.0 supported two modes, &quot;real mode&quot; and &quot;standard mode&quot;. Standard mode used the 80286 16-bit protected mode.</p>
<p>Windows/386 added &quot;enhanced mode&quot; which used the 80386 32-bit protected mode to provide virtual memory to the 80286 16-bit protected mode kernel.</p>
<p>By the time you reached Windows 3.0, the only time you ran in real mode was to change the size of your pagefile. (This operation could not be done whle the pagefile was in used, so you had to do it from real mode.)</p>
<p>The weirdness that RomanP refers to is that memory blocks larger than 64K used multiple consecutive selectors, where &quot;consecutive&quot; means that each one is the previous one plus 4. (The bottom two bits of the selector encodes ring information.) So the byte after xxxx:FFFF was (xxxx+4):0000 if you&#8217;re in protected mode [assuming it was part of a contiguous allocation], but it&#8217;s (xxxx+4096):0000 if you&#8217;re in real mode.</p>
<p>RomanP&#8217;s remark about the &quot;64K-16 bytes&quot; is talking about something else entirely (the HMA). It is irrelevant to Windows protected mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-161973">
				<div id="div-comment-161973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161973">
			April 8, 2004 at 9:20 pm</a>		</div>

		<p>Before continuing, I really do enjoy your blog, despite being a little blockheaded about this whole protected mode Windows/286 thing. :-)</p>
<p>&#8216;Windows 2.0 supported two modes, &quot;real mode&quot; and &quot;standard mode&quot;. Standard mode used the 80286 16-bit protected mode. &#8216;</p>
<p>This is what I dispute.  According to Microsoft Knowledge Base article 58315, entitled &quot;Summary of new features in Windows 3.0&quot;, the first entry on the list is &quot;Windows now runs in protected mode on appropriate configurations. This gives applications direct access to extended memory and allows more simultaneous applications to be run. &quot;</p>
<p>In Knowledge Base article 58317, &quot;Windows 3.0 Modes and Memory Requirements&quot;, the summary line reads &quot;This article contains information on the processor and memory requirements for the three different operating modes of Microsoft Windows version 3.0. These modes are real mode (similar to Windows/286 versions 2.x), 286 standard mode (also known as 286 protected mode), and 386 enhanced mode (also known as 386 protected mode). &quot;</p>
<p>KB 32905 also mentions &quot;Windows runs in protected mode&quot; as the first feature listed for version 3.0.</p>
<p>BTW, I do not dispute that XMS memory might have required switching to and from protected mode, but I&#8217;ve always gotten the impression that was solely to copy memory blocks &gt;1MB into the real-mode address space so that real mode processes could access the data. I honestly don&#8217;t know/remember.</p>
<p>&quot;The weirdness that RomanP refers to is that memory blocks larger than 64K used multiple consecutive selectors, where &quot;consecutive&quot; means that each one is the previous one plus 4. &quot;</p>
<p>That was what I was referring to when I spoke of __ahincr and __ahshift. The only documentation I still have on this is in Schulman&#8217;s &quot;Undocumented Windows&quot;, but I&#8217;m pretty sure that they were documented parts of 3.1, since I was using them to access huge arrays before I had the book.</p>
<p>&quot;RomanP&#8217;s remark about the &quot;64K-16 bytes&quot; is talking about something else entirely (the HMA).&quot;</p>
<p>And that was what I was referring to when I mentioned the range of memory at 1024-1088K and the A20 line.</p>
<p>This discussion has brought back another distant memory. Wasn&#8217;t there a way to run 32-bit user code in Windows 3.0 that predated Win32S} IIRC it didn&#8217;t allow any kind of API access, and was basically entirely useful for computational kernels, etc.. I seem to remember seeing something about that in the old Microsoft help file that shipped with Turbo Pascal for Windows 1.0 (even though TPW didn&#8217;t support 32-bit compilation, of course).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-161993">
				<div id="div-comment-161993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040407-00/?p=39893#comment-161993">
			April 8, 2004 at 9:40 pm</a>		</div>

		<p>Rats, you may be right, Mike. I can&#8217;t remember any more&#8230;</p>
<p>Yes, there was a library for 32-bit memory in Windows 3.z but I too forgot the name&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

