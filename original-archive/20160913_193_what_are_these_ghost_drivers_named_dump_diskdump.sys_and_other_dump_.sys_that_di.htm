<html>
<head>
<title>What are these ghost drivers named dump_diskdump.sys and other dump_*.sys that didn't come from any file?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What are these ghost drivers named dump_diskdump.sys and other dump_*.sys that didn&#8217;t come from any file?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 13, 2016 / year-entry #194</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Send in the clones.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Run
Process Explorer with administrative privileges,
select Options, Verify Signatures,
pick the System process,
then
open the DLL view.
In that view, you'll find some drivers with names
like
<code>dump_diskdump.sys</code>,
<code>dump_dumpfve.sys</code>,
and
<code>dump_storahci.sys</code>.
The Verified Signer column says
"An error occurred while reading or writing to a file,"
these drivers have no description,
no company name,
and their reported path points to nonexistent files like
<code>
C:\<wbr>Windows\<wbr>System32\<wbr>Drivers\<wbr>dump_<wbr>diskdump.sys</code>.
What are these things?
Does the computer have a virus?
</p>
<p>
These are virtual drivers that are used for creating crash dumps.&sup1;
</p>
<p>
Creating a crash dump is a bit of a catch-22:
When the crash occurs, the system is in an unknown state,
which means that you can't trust anything, not even the file
system or block device drivers.
After all, the crash may have been in one of those drivers!
</p>
<p>
When the system starts up,
it preallocates space on the hard drive to record
crash dump information, in case that becomes necessary.
It also clones the drivers needed to write to the disk.
If a crash occurs,
the kernel doesn't trust the drivers that were running
the show.
Instead, it asks these clones to step in and write
the crash data.
The theory here is that these clone drivers have been
kept in a state of suspended animation immediately
after they've been initialized,
in order to minimize the chance that they have
gotten into a corrupted state that would prevent them from doing
their job.&sup2;
</p>
<p>
These virtual drivers
show up in Process Explorer
with no description or other metadata
because Process Explorer takes the reported path and
extracts the metadata from that path.
But these drivers weren't loaded from a file,
so there is nothing to show.
</p>
<p>
<b>Bonus chatter</b>:
Most of the driver names are self-explanatory.
The one that may not be obvious is <code>dumpfve</code>:
"fve" is short for Full Volume Encryption,
more commonly known as BitLocker.
</p>
<p>
&sup1;
Also hibernation files, but crash dumps are the interesting
part of the story.
</p>
<p>
&sup2;
Of course, if a driver is so buggy that it can't
even initialize itself without corrupting itself,
then you're screwed.
Let's hope that by the time a driver passes WHQL,
it can at least initialize itself without corrupting itself.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-bboorman even thread-even depth-1 parent" id="comment-1264785">
				<div id="div-comment-1264785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264785">
			September 13, 2016 at 7:14 am</a>		</div>

		<p>Not to be confused with the virtual drivers (VxD) introduced with Windows 386.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1264925">
				<div id="div-comment-1264925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264925">
			September 14, 2016 at 1:43 am</a>		</div>

		<p>Thankfully, it died with the Windows 9X branch, and it never was a part of the Windows NT branch.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1264815">
				<div id="div-comment-1264815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://damsteen.nl' rel='external nofollow' class='url'>Sebastiaan Dammann</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264815">
			September 13, 2016 at 8:11 am</a>		</div>

		<p>These cloned drivers may also been corrupted in memory, if a driver does a bad write, right? Does Windows anything to mitigate that or are such bad writes impossible?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-ramon-sola odd alt depth-2" id="comment-1264825">
				<div id="div-comment-1264825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ram%C3%B3n+Sola' rel='external nofollow' class='url'>Ram√≥n Sola</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264825">
			September 13, 2016 at 9:20 am</a>		</div>

		<p>It seems the kernel checks the integrity of the components that are involved in writing a crash dump.<br />
<a href="https://blogs.technet.microsoft.com/askperf/2008/01/08/understanding-crash-dump-files/" rel="nofollow">https://blogs.technet.microsoft.com/askperf/2008/01/08/understanding-crash-dump-files/</a><br />
<a href="http://windowsitpro.com/systems-management/crash-dump-analysis" rel="nofollow">http://windowsitpro.com/systems-management/crash-dump-analysis</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1264835">
				<div id="div-comment-1264835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kemp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264835">
			September 13, 2016 at 9:37 am</a>		</div>

		<p>Are there cases where the &#8220;live&#8221; driver could have left things in a bad/unknown state that would cause problems for the clone coming in (which doesn&#8217;t know about anything that has happened)? I assume the initialisation process would sort most things out and you&#8217;re not relying on hardware that has persistent state as such, but in cases where it happened to be mid-way through updating the directory entry for the location that the dump will be written to for example.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1264845">
				<div id="div-comment-1264845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim P.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264845">
			September 13, 2016 at 10:06 am</a>		</div>

		<p>&#8220;When the system starts up, it preallocates space on the hard drive to record crash dump information.&#8221; Is this simply to avoid having to create files and allocate space and all that other potentially-troublesome bookkeeping? Or is it additionally so that the system can simply remember the physical blocks on disk occupied by that crash dump file and then just write into it without having to also clone the filesystem drivers?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1264855">
				<div id="div-comment-1264855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264855">
			September 13, 2016 at 11:34 am</a>		</div>

		<p>My guess is that this prevents the crash handler from being unable to write out the file due to lack of space. Reducing the number of driver layers could definitely be a factor too, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1264866">
				<div id="div-comment-1264866" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264866">
			September 13, 2016 at 12:28 pm</a>		</div>

		<p>That strategy is pretty common when you absolutely need to be able to handle/log a catastrophic failure. You make sure you build the concrete tornado bunker before you build the house.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1264955">
				<div id="div-comment-1264955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1264955">
			September 14, 2016 at 6:42 pm</a>		</div>

		<p>I have a Windows 10 machine that will bluescreen immediately on taking the anniversary update and roll it back. I ended up with a support case involved with the bluescreen. In this case it was via accessibility support, to the limit of the support case was find out why the bluescreen is not generating a dump.</p>
<p>From this blog I believe I have the answer. The kernel crashed before the dump_* drivers were cloned (which means before the hardware IO was completely initialized). The bluescreens themselves seem to be due to memory corruption, which is not immediately debuggable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1265105">
				<div id="div-comment-1265105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1265105">
			September 16, 2016 at 10:41 am</a>		</div>

		<p>Immediately before hibernation, the kernel loads the same crashdump driver, but with hiber_ prefix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1 parent" id="comment-1265106">
				<div id="div-comment-1265106" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1265106">
			September 16, 2016 at 10:42 am</a>		</div>

		<p>&gt;When the system starts up, it preallocates space on the hard drive to record crash dump information,</p>
<p>This place is actually called pagefile.sys. The crashdump goes to pagefile. On reboot after crash, a new pagefile will be created and the memory dump will be written out of the old pagefile.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1265215">
				<div id="div-comment-1265215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jakub Bere≈ºa≈Ñski</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160913-00/?p=94305#comment-1265215">
			September 19, 2016 at 9:38 am</a>		</div>

		<p>&gt; The crashdump goes to pagefile.<br />
Unless you change it using the DedicatedDumpFile registry value.<br />
<a href="https://blogs.msdn.microsoft.com/ntdebugging/2010/04/02/how-to-use-the-dedicateddumpfile-registry-value-to-overcome-space-limitations-on-the-system-drive-when-capturing-a-system-memory-dump/" rel="nofollow">https://blogs.msdn.microsoft.com/ntdebugging/2010/04/02/how-to-use-the-dedicateddumpfile-registry-value-to-overcome-space-limitations-on-the-system-drive-when-capturing-a-system-memory-dump/</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

