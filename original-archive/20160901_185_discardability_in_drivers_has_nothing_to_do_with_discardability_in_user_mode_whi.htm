<html>
<head>
<title>Discardability in drivers has nothing to do with discardability in user-mode (which has nothing to do with discardability, really)</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Discardability in drivers has nothing to do with discardability in user-mode (which has nothing to do with discardability, really)</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 1, 2016 / year-entry #186</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>39</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Overloaded flags.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Some time ago
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2012/07/13/10329051.aspx">
we discussed what the <code>DISCARDABLE</code> keyword means</a>.
In summary: It has no effect in user mode,
and in kernel mode, it means that the memory should be thrown away
after initialization is complete.
</p>
<p>
The two uses for the <code>DISCARDABLE</code> flag aren't really
all that related to each other.
They are just two components (the
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2012/06/22/10322767.aspx">
16-bit Windows memory manager</a>
and the 32-bit Windows device driver loader)
that evolved independently,
both of which saw a bit and said,
"Hey, I can use this for something!"
but they each used it for something different.
</p>
<p>
Once upon a time, back in the days when
two megabytes was a decent amount of memory,
someone came up with an optimization:
Since driver initialization code and driver initialization data
are both thrown away at the end of initialization,
we can merge them into the same page and save
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20090611-00/?p=17933">
4KB</a> of memory.
Multiply this by the number of drivers in the system, and that's
a lot of memory being saved at system boot,
which in turn means that we can boot in less memory.
This is
important when you are trying to minimize your system requirements.
</p>
<p>
The 32-bit device driver folks needed a bit in the segment
attributes to say
"This memory should be thrown away once initialization is complete."
They saw a bit lying around with the sticker
<code>DISCARDABLE</code> written on it and said,
"Discardable, yeah, that perfectly describes what we want.
Thanks for reserving that bit for us!"
</p>
<p>
Okay, so that explains the <code>DISCARDABLE</code> bit,
and the important-at-the-time 4KB memory savings explains
why driver initialization code and data are merged into a single page.
But this results in a dreaded W|X page,
which negates any benefit of DEP!
Why are drivers still using this optimization that isn't
that useful any more?
</p>
<p>
Inertia, probably.
</p>
<p>
You had a driver originally written in the days when 4KB was
a lot of memory, so it used this one weird trick to save 4KB of memory.
The driver then evolves over time,
but the merging of driver initialization code and data hangs around
because things stay the same until something makes them change.
</p>
<p>
Who knows, maybe there will someday be evolutionary pressure
to get all the old drivers to change their section attributes.
(I suspect pressure is low because the W|X page is not in memory
for very long, so the attack window is hard to hit reliably.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (39)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1262895">
				<div id="div-comment-1262895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">HK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262895">
			September 1, 2016 at 7:52 am</a>		</div>

		<p>What is a W|X page? Tried to google it to no avail.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-raykoopa odd alt depth-2" id="comment-1262905">
				<div id="div-comment-1262905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ray+Koopa' rel='external nofollow' class='url'>Ray Koopa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262905">
			September 1, 2016 at 7:57 am</a>		</div>

		<p>Write or executable memory page, I guess</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1262915">
				<div id="div-comment-1262915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arezz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262915">
			September 1, 2016 at 8:03 am</a>		</div>

		<p>W|X = Write Or Execute (logical or), while you usually want W^X (Write Xor Execute), so that an executable page is not writable (and as such is e.g. protected against buffer overflows).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1263005">
				<div id="div-comment-1263005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263005">
			September 1, 2016 at 12:01 pm</a>		</div>

		<p>But I like writing</p>
<p>int func(int arg)<br />
{<br />
    int innerfunc(char *a, char *b)<br />
   {<br />
       return arg ? strcmp(a, b) : stricmp(a, b);<br />
    }<br />
    &#8230;<br />
    qsort(&#8230;, &#8230;, innerfunc);<br />
    &#8230;<br />
}</p>
<p>For the uninitiated, this puts a trampoline on the stack.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1263065">
				<div id="div-comment-1263065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tristan Miller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263065">
			September 1, 2016 at 2:01 pm</a>		</div>

		<p>Any compiler I&#8217;ve seen doesn&#8217;t put innerfunc&#8217;s machine code on the stack; it&#8217;s ultimately just a scoping thing.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1263135">
				<div id="div-comment-1263135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VinDuv</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263135">
			September 2, 2016 at 12:26 am</a>		</div>

		<p>innerfunc’s code isn’t on the stack, but an executable trampoline is. innerfunc needs to capture the “arg” variable from the outer function, so it’s compiled as a function taking three arguments (arg, a, and b). A pointer to innerfunc is really a pointer to a trampoline, put on the stack, which adds arg to the argument list and jumps to innerfunc. (It needs to be the stack since the value of arg will change from call to call).</p>
<p>If you build code with an inner function on Linux with gcc, you’ll notice that taking the pointer to an inner function returns a pointer on the stack, and that the stack is rwx instead of rw- when the program is running.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-4 parent" id="comment-1263075">
				<div id="div-comment-1263075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263075">
			September 1, 2016 at 2:38 pm</a>		</div>

		<p>It&#8217;s always hard to recognize sarcasm on the internet, so I hope you&#8217;re not serious. </p>
<p>If you are: Using non standard extensions that open gigantic security holes is a horrible, horrible idea.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1263525">
				<div id="div-comment-1263525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263525">
			September 3, 2016 at 10:37 am</a>		</div>

		<p>Executable stack isn&#8217;t a security hole. Non-executable stack was defeated for stack smashing years and years ago.</p>
<p>I was in fact in possession of the knowledge of how to do it in 2001, and did not recognize the malicious use possible of such a thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1263575">
				<div id="div-comment-1263575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263575">
			September 4, 2016 at 2:05 pm</a>		</div>

		<p>Yes there are return to libc attacks but things like ASLR, flow guard (has that one been broken yet? Haven&#8217;t heard anything) and similar protections make this a great deal harder. On the other hand an executeable stack is basically childs play to exploit.</p>
<p>And return to libc has been around for waaay longer than 2001, so wouldn&#8217;t have been particularly note worthy back then indeed :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1264875">
				<div id="div-comment-1264875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Patrick Star</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1264875">
			September 13, 2016 at 1:24 pm</a>		</div>

		<p>This is dealt with by special casing in the kernel, not by making the stack executable (at least not in proper DEP/NX implementations).<br />
When there&#8217;s a fault caused by attempting to execute code on the stack, the instructions are checked to see if they match a generated trampoline. In that case the trampoline behavior is emulated instead of killing the process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1264915">
				<div id="div-comment-1264915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1264915">
			September 13, 2016 at 11:49 pm</a>		</div>

		<p>@Patrick Star: No, GCC does it by making the stack executable.  It uses an assembler directive like</p>
<p>.section    .note.GNU-stack,&#8221;x&#8221;,@progbits</p>
<p>to mark the object file containing the function as requiring an executable stack, which the linker will dutifully follow by creating an ELF with an executable stack when linking in that object file.  Check the output of &#8220;execstack -q&#8221; on such an executable.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-exchange-development-blog-team odd alt depth-2" id="comment-1263495">
				<div id="div-comment-1263495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">exchange development blog team</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263495">
			September 2, 2016 at 9:24 pm</a>		</div>

		<p>If you thought googling W|X pages was hard, just be glad we don&#8217;t have /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.[\W]).{8,}$/ pages.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ranta even thread-odd thread-alt depth-1" id="comment-1262925">
				<div id="div-comment-1262925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ranta' rel='external nofollow' class='url'>ranta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262925">
			September 1, 2016 at 8:09 am</a>		</div>

		<p>&#8220;Driver Compatibility with Device Guard&#8221; says it makes the INIT section not writable. That closes the W|X attack window entirely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1262935">
				<div id="div-comment-1262935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262935">
			September 1, 2016 at 8:21 am</a>		</div>

		<p>The solution to the W|X issue is to have separate pages for initialization code and initialization data.  Now you&#8217;re using twice as much memory (assuming that both actually fit into a single page. but bloat has been affecting drivers too), but not only is 8K not problematic, **it doesn&#8217;t matter anyway because it is going to be discarded**.</p>
<p>The effective benefit is the releasing of the memory, not the merging of two sections that have very limited lifetime anyway.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-davebacher even depth-2 parent" id="comment-1263335">
				<div id="div-comment-1263335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263335">
			September 2, 2016 at 9:52 am</a>		</div>

		<p>The optimization may predate Windows 3.1.</p>
<p>On Windows 1 through Windows 3.0, you had real mode.  I believe Windows 1 ran in 256k, and know it ran in 384k.  8k versus 4k, times even the much lower number of drivers loaded in that era, was really significant.  Even if you&#8217;re discarding it.  You had maybe a 5mb, 10mb hard drive &#8212; and you&#8217;re trying to fit everything you need in there.  And it was slow and noisy.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-3" id="comment-1263465">
				<div id="div-comment-1263465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263465">
			September 2, 2016 at 4:21 pm</a>		</div>

		<p>Windows in the standard mode (80286) didn&#8217;t care about pages</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-koldude even thread-odd thread-alt depth-1 parent" id="comment-1262945">
				<div id="div-comment-1262945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262945">
			September 1, 2016 at 8:41 am</a>		</div>

		<p>In all honesty I wouldn&#8217;t be surprised if the Kernel folks just load the page twice now. The likelihood of self modifying code is near zero these days as the performance penalty would be atrocious. As such it should be safe to load the page twice, once marked write, the other execute. Heck, if driver inits are not run at <code>DISPATCH</code> IRL then they could just mark it as executable and handle the access violation to do a copy on write if necessary.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-ranta odd alt depth-2 parent" id="comment-1262975">
				<div id="div-comment-1262975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ranta' rel='external nofollow' class='url'>ranta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262975">
			September 1, 2016 at 10:01 am</a>		</div>

		<p>Sure you could load the page twice to physical memory, but where would you put the copy in virtual memory?<br />
Code in other pages may call functions defined in the INIT page, and vice versa. Those calls are PC-relative and don&#8217;t have any relocation, so you cannot patch them if you move the executable version of the INIT page to a relative virtual address other than what the driver expects.<br />
Other pages may also contain pointers to objects or functions defined in the INIT page. Those have relocations but you don&#8217;t know whether they are intended to point to code or to data.<br />
You could try to put both versions of the page at the same virtual address, and activate the correct one during each page fault. But IIRC, x86 and amd64 page tables do not support unreadable executable pages, so if code in the INIT page reads a variable from the INIT page, it would get the original value from the executable version and not the current value from the writable version.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1263025">
				<div id="div-comment-1263025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IInspectable</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263025">
			September 1, 2016 at 1:06 pm</a>		</div>

		<p>&#8220;Other pages may also contain pointers to objects or functions defined in the INIT page.&#8221;<br />
After reading today&#8217;s blog entry you should be able to explain, why this won&#8217;t happen.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-ranta odd alt depth-4 parent" id="comment-1263155">
				<div id="div-comment-1263155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ranta' rel='external nofollow' class='url'>ranta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263155">
			September 2, 2016 at 1:14 am</a>		</div>

		<p>It would be OK to have a pointer from another page to the INIT page if the driver ensures that the pointer isn&#8217;t dereferenced after the INIT page has been discarded, e.g. by changing the pointer to NULL at the end of DriverEntry. But I now checked the Windows-driver-samples source tree and you seem to be right that this doesn&#8217;t happen in practice.</p>
<p>However, relocatable pointers from the INIT page to the INIT page certainly do happen; see filesys\miniFilter\minispy\filter\RegistrationData.c. There you again have the problem how to check whether the pointer needs to point to code or to data, if you want to move the writable version of the INIT page to a different virtual address.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude even depth-5" id="comment-1263175">
				<div id="div-comment-1263175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263175">
			September 2, 2016 at 5:05 am</a>		</div>

		<p>Not really? This is a loader issue. Since drivers are fundamentally DLLs; and DLLs do this quite literally all the time&#8230; it&#8217;s really not an issue to do exactly that. Recall that the loader has to do fixups ANYWAY just to load the page into memory since drivers have to be HE-ALSR compatible already. The fact that we&#8217;re in kernel mode is just an artifact. The real killer would be IRQ level. But <a href="https://msdn.microsoft.com/en-us/library/windows/hardware/ff544113(v=vs.85).aspx" rel="nofollow"><code>DriverEntry</code></a> runs at <code>PASSIVE_LEVEL</code> so there is no reason that the loader couldn&#8217;t do any of this.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-koldude odd alt depth-3" id="comment-1263055">
				<div id="div-comment-1263055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263055">
			September 1, 2016 at 1:44 pm</a>		</div>

		<p>No but it supports Execute pages that aren&#8217;t writable, any attempt to write would trigger a GP fault IIRC.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1263015">
				<div id="div-comment-1263015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263015">
			September 1, 2016 at 12:55 pm</a>		</div>

		<p>Tell that to graphics driver writers.  Although in this case it was user mode, I once dealt with a user-mode graphics driver helper that generated code at runtime inside my process, but didn&#8217;t then call RtlAddFunctionTable.  The lovely undebuggable crashes when the driver had a bug were just awesome&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-even depth-1 parent" id="comment-1262955">
				<div id="div-comment-1262955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262955">
			September 1, 2016 at 9:42 am</a>		</div>

		<p>You need to tell your comrades at MS to stop sweating about saving non-paged and paged code space in kernel, and pay more attentions to PNP paged tag leaks and MS antivirus (i guess) allocating unhealthy amounts of paged pool. They&#8217;re being penny-smart but pound-foolish.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1262995">
				<div id="div-comment-1262995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262995">
			September 1, 2016 at 11:37 am</a>		</div>

		<p>You seem to be under the impression that the people who maintain the driver loader are also the people who write PnP drivers and anti-virus software.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-3 parent" id="comment-1263115">
				<div id="div-comment-1263115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263115">
			September 1, 2016 at 9:24 pm</a>		</div>

		<p>No, but people who set &#8220;performance&#8221; targets for these things (&#8220;if you shrink total non-pageable code by 1 megabyte, and pagefile usage by 10 meg, you get a bonus!&#8221;) don&#8217;t have a clue about the big picture.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-4 parent" id="comment-1263275">
				<div id="div-comment-1263275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263275">
			September 2, 2016 at 8:02 am</a>		</div>

		<p>Not sure what your point is. Are you saying that the people who set performance targets should reassign people from the loader team to the PNP team or the anti-malware team? (And accept the fact that those people will basically be the &#8220;new guy on the team&#8221; who has to learn how the system works.)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-5" id="comment-1263355">
				<div id="div-comment-1263355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263355">
			September 2, 2016 at 10:31 am</a>		</div>

		<p>No, I believethat  saving 5 MB of nonpaged pool or 20 MB of pagefile commit (at a cost of having bugs hard to disgnose) should not be a performance target at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1263445">
				<div id="div-comment-1263445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263445">
			September 2, 2016 at 12:32 pm</a>		</div>

		<p>Not every device with Windows has loads of RAM&#8230; (and more VMs per physical machine is always desired and competitive advantage)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-5" id="comment-1263406">
				<div id="div-comment-1263406" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263406">
			September 2, 2016 at 4:23 pm</a>		</div>

		<p>I can understand wanting to be able to run more VMs with less memory pressure, but this is where memory de-duplication would help A LOT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1263555">
				<div id="div-comment-1263555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263555">
			September 4, 2016 at 11:30 am</a>		</div>

		<p>Deduplication can get you only so far. Also it (and memory compression) won&#8217;t help you much with cheap devices like 200USD tablets&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1263145">
				<div id="div-comment-1263145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The_Assimilator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263145">
			September 2, 2016 at 12:56 am</a>		</div>

		<p>Which part of &#8220;Once upon a time, back in the days when two megabytes was a decent amount of memory&#8221; did you miss?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev even depth-3" id="comment-1263345">
				<div id="div-comment-1263345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263345">
			September 2, 2016 at 10:27 am</a>		</div>

		<p>You won&#8217;t believe how much some kernel people of MS still believe in memory pressure savings of paged code. &#8220;It lets us run 1001 VM rather than 1000&#8221;. Never mind that I personally encountered at least two regressions (bugchecks) in MS code caused by that. How many are still there who knows.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1 parent" id="comment-1262965">
				<div id="div-comment-1262965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1262965">
			September 1, 2016 at 10:01 am</a>		</div>

		<p>There are two hard things in computer programming.  Naming things is one, and I forget the other&#8230;  :-)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-2 parent" id="comment-1263045">
				<div id="div-comment-1263045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263045">
			September 1, 2016 at 1:37 pm</a>		</div>

		<p>There are two hard things in computer science, naming things, cache invalidation and off by one errors.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dwalker-wk odd alt depth-3" id="comment-1263305">
				<div id="div-comment-1263305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263305">
			September 2, 2016 at 8:12 am</a>		</div>

		<p>Oh yes, that&#8217;s it exactly!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1263185">
				<div id="div-comment-1263185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AlexShalimov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263185">
			September 2, 2016 at 5:09 am</a>		</div>

		<p>Ah, the good old days days when every byte was valuable. I&#8217;m glad they are gone.</p>
<p>&#8220;this one weird trick&#8221; — finally a perfectly justified usage of this phrase.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman odd alt depth-2" id="comment-1263245">
				<div id="div-comment-1263245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263245">
			September 2, 2016 at 7:52 am</a>		</div>

		<p>Come over the embedded microcontroller world. Here bytes still matter. It&#8217;s surprising what you can do with 4K FLASH and 512 bytes RAM if you&#8217;re careful.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1263515">
				<div id="div-comment-1263515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160901-00/?p=94225#comment-1263515">
			September 3, 2016 at 8:37 am</a>		</div>

		<p>BinScope will fail any driver that still does this. We in security land are fighting the inertia :)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

