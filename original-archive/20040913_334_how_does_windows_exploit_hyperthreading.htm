<html>
<head>
<title>How does Windows exploit hyperthreading?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How does Windows exploit hyperthreading?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 13, 2004 / year-entry #335</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>42</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Depends which version of Windows.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
It depends which version of Windows you're asking about.
</p>
<p>
For Windows&nbsp;95, Windows&nbsp;98, and Windows&nbsp;Me,
the answer is simple: Not at all.
These are not multiprocessor operating systems.
</p>
<p>
For Windows&nbsp;NT and Windows&nbsp;2000, the answer is
"It doesn't even know."
These operating systems are not hyperthreading-aware
because they were written before hyperthreading was invented.
If you enable hyperthreading, then each of your CPUs looks
like two separate CPUs to these operating systems.
(And will get charged as two separate CPUs for licensing
purposes.)
Since the scheduler doesn't realize the connection between
the virtual CPUs, it can end up doing a worse job than
if you had never enabled hyperthreading to begin with.
</p>
<p>
Consider a dual-hyperthreaded-processor machine.
There are two physical processors A and B, each with
two virtual hyperthreaded processors, call them A1, A2,
B1, and B2.
</p>
<p>
Suppose you have two CPU-intensive tasks.
As far as the Windows&nbsp;NT
and Windows&nbsp;2000 schedulers are concerned, all four
processors are equivalent, so it figure it doesn't matter which two 
it uses.  And if you're unlucky, it'll pick
A1 and A2, forcing one physical processor to shoulder two
heavy loads (each of which will probably run at something
between half-speed and three-quarter speed),
leaving physical processor B idle;
completely unaware that it could have done a better job
by putting one on A1 and the other on B1.
</p>
<p>
Windows&nbsp;XP and Windows Server&nbsp;2003 are hyperthreading-aware.
When faced with the above scenario, those schedulers will know
that it is better to put one task on one of the A's and the other
on one of the B's.
</p>
<p>
Note that even with a hyperthreading-aware processor, 
you can concoct pathological scenarios where hyperthreading ends
up a net loss.  (For example, if you have four tasks, two of which
rely heavily on L2 cache and two of which don't, you'd be better
off putting each of the L2-intensive tasks on separate processors,
since the L2 cache is shared by the two virtual processors.
Putting them both on the same processor would result in a lot of L2-cache
misses as the two tasks fight over L2 cache slots.)
</p>
<p>
When you go to the expensive end of the scale (the Datacenter Servers,
the Enterprise Servers), things get tricky again.
I refer still-interested parties to the
<a HREF="http://www.microsoft.com/whdc/hwdev/platform/proc/HT-Windows.mspx">
Windows Support for Hyper-Threading Technology</a> white paper.
</p>
<p>
<b>Update 06/2007</b>: The white paper
<a HREF="http://www.microsoft.com/whdc/system/CEC/HT-Windows.mspx">
appears to have moved</a>.
</p>
<p>
<b>Update 10/2016</b>: The white paper
<a HREF="https://view.officeapps.live.com/op/view.aspx?src=http://download.microsoft.com/download/5/7/7/577a5684-8a83-43ae-9272-ff260a9c20e2/Hyper-thread_Windows.doc">
moved again</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (42)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-209633">
				<div id="div-comment-209633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.zero-one-zero.com/makeexe' rel='external nofollow' class='url'>Jonathan Payne</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209633">
			September 13, 2004 at 7:11 am</a>		</div>

		<p>OK, I know it probably isn’t your decision and it is great that Microsoft is proving lots of documentation and white papers but who thought an executable, zipped Word document was the best way of distributing a something that only contains text.  There must be a better way of presenting text on a web site.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209653">
				<div id="div-comment-209653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209653">
			September 13, 2004 at 7:45 am</a>		</div>

		<p>This question was raised the last time I posted a link to a whitepaper.</p>
<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/04/15/113811.aspx#113943" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/04/15/113811.aspx#113943</a></p>
<p>and the answer came a little while later</p>
<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/04/15/113811.aspx#114321" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/04/15/113811.aspx#114321</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209663">
				<div id="div-comment-209663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.zero-one-zero.com/makeexe' rel='external nofollow' class='url'>Jonathan Payne</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209663">
			September 13, 2004 at 8:09 am</a>		</div>

		<p>&lt;pointless-rant&gt;<br />
<br />Wouldn&#8217;t a web page served from Microsoft&#8217;s web server provide the same level of reassurance that a technical paper was indeed from Microsoft?</p>
<p>There is also a technology called PDF that some people use that is really useful for distributing signed documents with rich content – it doesn’t even require you to run any executable files on your PC to read a document.<br />
<br />&lt;/pointless-rant&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209673">
				<div id="div-comment-209673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209673">
			September 13, 2004 at 8:18 am</a>		</div>

		<p>There&#8217;s a rule that all files available for download must be digitally signed. I didn&#8217;t make the rule and I think it&#8217;s silly for things like documents, but that&#8217;s the rule. The rule was probably created by lawyers. Lawyers are the source of lots of silly rules.</p>
<p>Signing the actual download does mean that you can give the file to somebody offline and they can confirm that the document is signed. Whereas under the &quot;trust the site&quot; method the person has no way of verifying that you didn&#8217;t tamper with the file before giving it to them. So there is some merit to the rule.</p>
<p>Also, somebody could launch a DNS attack against microsoft.com and start handing out bogus documents. But they wouldn&#8217;t be able to forge the digital signature. A theoertical possibility but one I&#8217;m sure the lawyers worried about.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209683">
				<div id="div-comment-209683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209683">
			September 13, 2004 at 8:28 am</a>		</div>

		<p>Does Microsoft plan on releasing a patch for 2000 and/or NT to support hyperthreading?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209693">
				<div id="div-comment-209693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.waterwheel.ca' rel='external nofollow' class='url'>Phil Renouf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209693">
			September 13, 2004 at 8:41 am</a>		</div>

		<p>Thanks for the information on hyperthreading Raymond. We got bitten by a DB server that had this enabled and it took us a while to figure out what the root cause was, but even after being told to disable hyperthreading we still didn&#8217;t really understand why it caused the issue.</p>
<p>Very interesting as usual :)</p>
<p>Phil</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209743">
				<div id="div-comment-209743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209743">
			September 13, 2004 at 11:44 am</a>		</div>

		<p>As was pointed out in <a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/04/15/113811.aspx#114321" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/04/15/113811.aspx#114321</a> &#8211; DOCs can be signed as well, without being put into an EXE. So digital signatures can&#8217;t be the reason why documents are put into executables.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209753">
				<div id="div-comment-209753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209753">
			September 13, 2004 at 12:37 pm</a>		</div>

		<p>Yes and if you read through to the end, you&#8217;ll see why it&#8217;s not used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209773">
				<div id="div-comment-209773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209773">
			September 13, 2004 at 12:57 pm</a>		</div>

		<p>Requiring docs to be signed makes sense because of all of the macro/VBA stuff that we have today.  Opening a .doc could mean running code.  Do you trust the source enough to allow the code to run?<br />
<br />IE checks signatures of .exe&#8217;s that are downloaded.  That&#8217;s why .doc&#8217;s are rolled into .exe&#8217;s and signed.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209783">
				<div id="div-comment-209783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gordon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209783">
			September 13, 2004 at 1:13 pm</a>		</div>

		<p>I know Microsoft loves to eat their own dog food, but as someone who&#8217;s both interested in what they&#8217;re doing and uninterested in owning a Windows PC and MSWord, I&#8217;d prefer it if they&#8217;d just use an (gasp) open format like PDF.</p>
<p>Obviously MS doesn&#8217;t care what one die-hard Linux user thinks, but it&#8217;d be nice if they&#8217;d show even the slightest amount of consideration.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209803">
				<div id="div-comment-209803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">El Lobo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209803">
			September 13, 2004 at 1:52 pm</a>		</div>

		<p>@Gordon, And why, may I ask must Coca Cola take any consideration with the Pepsi buyers? Why must MS have any consideratiion with a Linux user that aint using any MS product at all? After all this is BUSINESS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209813">
				<div id="div-comment-209813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209813">
			September 13, 2004 at 1:55 pm</a>		</div>

		<p>I&#8217;m on a HT P4 machine now, and in Device Manager the computer is listed as &quot;ACPI Multiprocessor PC&quot;. Is that correct? Given that XP recognizes HT CPUs, I would&#8217;ve expected XP to show a different string on a HT machine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209823">
				<div id="div-comment-209823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209823">
			September 13, 2004 at 2:19 pm</a>		</div>

		<p>PDF is not open &#8211; talk to Adobe about it and there are lots of viewers for word docs &#8211; such as open office ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209863">
				<div id="div-comment-209863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David the Irked</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209863">
			September 13, 2004 at 4:34 pm</a>		</div>

		<p>Brian: I&#8217;m not Raymond and you didn&#8217;t ask me, but I&#8217;ll bet the answer is no. Hyperthreading support is a New Feature, and Microsoft would be foolish to backport it to older releases. Basically it would be a large expense (HT support is surely a major scheduler change, with all the testing that implies) for, in all probability, a loss in sales.</p>
<p>Everyone: As for the way MS distributes white papers, I see how MS&#8217;s lawyers have left few options but it&#8217;s still a bad idea. That goes for any file format which is executable in whole or in part, not just the ones MS comes up with. Think about that the next time you download an academic paper in PostScript format.</p>
<p>I guess the real question here isn&#8217;t why MS distributes papers in EXEs. It&#8217;s why there aren&#8217;t any widely accepted non-executable file formats which can be signed. What I&#8217;d really like to see is a file format which can contain any type of file along with its digital signature. There wouldn&#8217;t need to be anything Windows-specific about such a format, nor should there be.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209793">
				<div id="div-comment-209793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://tcom.modelmatter.com/blog/imariano/archive/2004/09/13/232.aspx' rel='external nofollow' class='url'>Ian Mariano</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209793">
			September 13, 2004 at 4:41 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209873">
				<div id="div-comment-209873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mjmd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209873">
			September 13, 2004 at 5:23 pm</a>		</div>

		<p>Q.  On the original question, (&quot;How does Windows exploit HT?&quot;), what benefit is there in HT on a single processor system?<br />
<br />In this case I&#8217;m talking about XP so the OS is fully aware.  How can it derive any benefit?</p>
<p>Is there a lower level benefit?  Such as in the BIOS?</p>
<p>Can the next person to discuss signed publications start a new thread.  I believe this is HT here.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209883">
				<div id="div-comment-209883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209883">
			September 13, 2004 at 5:35 pm</a>		</div>

		<p>There are many web pages devoted to the advantages of hyperthreading.  Pop it into &quot;google&quot; and you&#8217;ll have plenty of reading. It is generally a benefit, but as I noted, you can create (arguably pathological) situations where it is turns out to have been a net loss, especially when the OS doesn&#8217;t support hyperthreading.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209893">
				<div id="div-comment-209893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209893">
			September 13, 2004 at 6:40 pm</a>		</div>

		<p>One benefit of hyperthreading was surely unintended but has turned out to be valuable.  If an out-of-control process wants 100% of the CPU, and if the process&#8217;s code is unaware of the possibility of hyperthreading, then it only gets 50% of the CPU.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209913">
				<div id="div-comment-209913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.goombas.org/' rel='external nofollow' class='url'>Jim</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209913">
			September 13, 2004 at 6:48 pm</a>		</div>

		<p>David the Irked: Calling the Postscript format executable calls into question the definition of &quot;executable.&quot;  As the language is Turing-complete, I&#8217;d agree that it is executable under at least one reasonable definition.  Under that same definition, however, wouldn&#8217;t the Word-format file in question be an executable whether or not it was wrapped in a native executable?  Last I checked (which was a long time ago, admittedly), Word documents supported embedded scripting.</p>
<p>Ideally, programs that deal with &quot;live&quot; &quot;data&quot; would provide a limited API and be free of security holes.  This is not the case, of course, but it doesn&#8217;t even set a useful lower limit to say that executables, by the Turing-complete definition, are dangerous, because people have found exploitable security holes in GIF and MP3 decoders as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209923">
				<div id="div-comment-209923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209923">
			September 13, 2004 at 7:04 pm</a>		</div>

		<p>What with the upcoming releases of dual-core processors, does anyonw know how windows licensing treat them? Will a dual-core proc be treated as two physical processors, or as two logical processors?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209933">
				<div id="div-comment-209933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Lineker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209933">
			September 13, 2004 at 7:38 pm</a>		</div>

		<p>So does this mean i should turn off HT on a dual xeon with HT machine running 2k server?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209763">
				<div id="div-comment-209763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209763">
			September 13, 2004 at 12:45 pm</a>		</div>

		<p>Are future (or current) compilers going to be hyperthreading aware?  Ie, &quot;compile this and optimize for a 2-CPU hyperthreaded system&quot;?  Seems like that would help out even in the pathological sense.  And if hyperthreading is accepted as viable (and becomes pervasive), it seems a necessary step.</p>
<p>I agree with the .exe complaint, regardless of lawyers.  There is a lot of Microsoft content out there in raw HTML that is not digitally signed.  What, someone is going to sue MS because they designed something based on a whitepaper and the whitepaper was *tampered* with?  Isn&#8217;t that the point of disclaimers, or putting source URLs at the bottom?</p>
<p>Then again, I don&#8217;t trust any web content that is even vaguely executable, and run in Opera with most things turned off.  Even if it were a plain .doc file I would not download it.  So I&#8217;m not really a &quot;normal&quot; user.  (friends get mad when I won&#8217;t read their .doc attachments and force them to resend in plaintext when I *know* the content is plaintext to begin with!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209943">
				<div id="div-comment-209943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David the Irked</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209943">
			September 13, 2004 at 10:58 pm</a>		</div>

		<p>Jim: I don&#8217;t see how calling PostScipt executable stretches the definition. PostScript is a programming language like any other, albeit a special-purpose one. As far as my previous point is concerned, a PostScript porgram can write arbitrary data to any file that the user running it has permission to write to. On most systems that&#8217;s enough to cause arbitrary code to be executed at some point in the future.</p>
<p>You&#8217;ve hit the nail on the head with your comments about Word. I&#8217;m not only arguing against embedding Word documents in executables. I&#8217;m also arguing that MS Word, like PostScript, is an inappropriate format for document distribution. RTF would be acceptable, since (I think) it doesn&#8217;t allow embedded scripts.</p>
<p>You&#8217;re right that there is a security risk inherent in any program which handles input from outside sources. However, that doesn&#8217;t mean we need to make things worse by using file formats whose very design supports the execution of arbitrary code on the viewing machine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209963">
				<div id="div-comment-209963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ryan Heath</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209963">
			September 14, 2004 at 12:54 am</a>		</div>

		<p>Can the CLR exploit the use of hyperthreading?<br />
<br />Or is it like other programs subject to what the OS is telling?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209973">
				<div id="div-comment-209973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dmitriy Kostovetskiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209973">
			September 14, 2004 at 1:19 am</a>		</div>

		<p>If Microsoft is so enthusiastic about digital signatures, why doesn&#8217;t it use digital signatures to help users distinguish legitimate traffic from spyware, viruses and other kinds of malware?</p>
<p>If you look at the list of processes in the task manager &#8211; you can&#8217;t tell right away which processes are part of windows and which are some kinds of malware. Malicious processes often disguise themselves as windows processes.</p>
<p>It would be nice if every executable in Windows was signed and task manager would indicate which process is signed and which is unsigned (for instance by showing green icon for signed process and red icon for unsigned).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209983">
				<div id="div-comment-209983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dmitriy Kostovetskiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209983">
			September 14, 2004 at 1:25 am</a>		</div>

		<p>I meant &quot;legitimate processes&quot; instead of &quot;legitimate traffic&quot;. I should really proofread before posting, sorry:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209903">
				<div id="div-comment-209903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209903">
			September 13, 2004 at 6:43 pm</a>		</div>

		<p>I wish these blog comments were threaded.  Sorry to keep this off-topic signing conversation going.  I&#8217;ve tried using a different title for my comments, hoping that anyone here wanting to read about hyperthreading will notice the topic change and skip to the next relevant comment.</p>
<p>David the Irked:<br />
<br />There are about a dozen different kinds of signing used by Microsoft alone.  IE uses Authenticode signatures.  Authenticode started as an IE feature, in fact.  Today Authenticode is a part of PKI, in Windows security, separate from the IE team.<br />
<br />It would be really nice if there were a pluggable architecture to sign/verify, making it easier for other MSFT teams to have the download manager check their sigs and even enabling 3rd parties to write their own verification snap-ins.  We have something like that.  The ancient, crusty CryptSIP* APIs can be used to install new Subject Interface Packages (someone must have thought that name was meaningful once) to verify different kinds of signatures.  Unfortunately, the SIP stuff is kind of brittle and very poorly documented.  And even if there were a new SIP installed, I&#8217;m pretty sure that IE only uses the Authernticode one.<br />
<br />I test Authenticode at the API level.  Our team would like to redesign signing, making new, friendlier APIs and getting all of Microsoft to adopt them.  And, of course, document them so that everyone (PGP, maybe?) could benefit.  We don&#8217;t have room in the schedule at the moment, but I hope happen in some release after Longhorn*. </p>
<p>* I would call that &quot;Blackcomb&quot;, but according to Xeno&#8217;s paradox, there is always another release half-way between here and Blackcomb.  ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209993">
				<div id="div-comment-209993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.divil.co.uk/net' rel='external nofollow' class='url'>Tim Dawson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-209993">
			September 14, 2004 at 3:08 am</a>		</div>

		<p>I really like that idea. If the task manager could show some kind of information on whether modules loaded were signed it would make it much easier to locate those non-critical processes that could safely be killed.</p>
<p>I&#8217;m sure as developers and IT professionals we&#8217;ve all had to help friends out when their PCs get infested with malware, and killing those processes is one of the first things we have to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-210033">
				<div id="div-comment-210033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210033">
			September 14, 2004 at 8:01 am</a>		</div>

		<p>David the Irked: Since when did Postscript programs get access to the file-system?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-210043">
				<div id="div-comment-210043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210043">
			September 14, 2004 at 8:09 am</a>		</div>

		<p>Code signing proves next to nothing, and solves very few problems. Almost no-one looks at the details of certificates. Most of the CAs are just in it for the money and don&#8217;t give a damn about checking identity thoroughly (why would they want to turn customers away?). So the bad guys just get a certificate for Bad Guys Inc. (or maybe for Microsoft Corporation if Verisign is really asleep that day), sign their bad code, and no-one&#8217;s any the wiser.</p>
<p>Microsoft took the code signing route before with ActiveX, and look what that did for the average computer user. .NET can provide sandboxes like Java does and might server to replace ActiveX but I fear that commercial pressure and demand for a &quot;rich user experience&quot; will lead to stretching and breaking of the sandbox for those that can buy code signatures.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-210163">
				<div id="div-comment-210163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David the Irked</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210163">
			September 14, 2004 at 9:26 am</a>		</div>

		<p>Ben: Since Level 2 at least. If you&#8217;re curious, have a look at section 3.8 of the PLRM, 3rd ed. You should be able to find a copy online. </p>
<p>It was a bit of a shock to me too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-210223">
				<div id="div-comment-210223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gordon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210223">
			September 14, 2004 at 10:16 am</a>		</div>

		<p>David the Irked: I&#8217;m flying the BS flag. PS can access files, but that access is mediated by the OS. Since the PS interpreter doesn&#8217;t run as root, the amount of damage that could be done by a PS file is completely out of proportion to the amount of time it would take to create it. </p>
<p>El Lobo: If they&#8217;re publishing a whitepaper that they want to make public, they should use an open format so that it&#8217;s actually public. Shoot, they could just use ASCII text with a plain old PKI signed digest.</p>
<p>Dave (presumably un-irked): As soon as MS releases a new Word version, OO.o has to start the process of reverse-engineering the file format all over again. I don&#8217;t want to have to depend on them to read anything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-210233">
				<div id="div-comment-210233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210233">
			September 14, 2004 at 10:37 am</a>		</div>

		<p>Sorry, Raymond.  This has turned into a signing conversation.</p>
<p>Dmitriy: I don&#8217;t think I&#8217;d claim that all of Microsoft is enthusiastic about digital signatures.  I am, though.<br />
<br />Showing processes with only signed (by trusted entities) files loaded is an interesting idea, but I&#8217;m not sure how it would work.  With some of the changes in Longhorn, this might not be necessary, though.  (Not sure what I&#8217;m allowed to disclose, so I&#8217;ll have to be mysterious.)</p>
<p>Ben: I agree that expecting users to manually check signatures is ridiculous, but programmatically checking them is goodness.  Software Restriction Policies are cool!  (ok &#8211; I&#8217;m a geek &#8211; I&#8217;ve just outed myself)  I&#8217;m not sure it&#8217;s so easy to get a spoofed cert from a reputable CA.  Yes, I know that Verisign has issued &quot;Microsoft&quot; certs before, but it&#8217;s not the kind of thing that happens often and we have revocation for those times when it does.  I&#8217;m already taking up too much of Raymond&#8217;s blog space, so I&#8217;ll skip my rant on &quot;chains of trust&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-210343">
				<div id="div-comment-210343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Swaim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210343">
			September 14, 2004 at 1:30 pm</a>		</div>

		<p>PS Level 1 supported filesystems. I remember a coworker being baffled as his scripts worked fine on his sparcstation, but failed when he sent them to the printer. His code was pulling in data from the computer&#8217;s filesystem, which the LaserWriter didn&#8217;t have access to.<br />
<br />  If you wanted to really do evil PS, you might be able to write a trojan to get the printer to copy files being printed to your IP address.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-210463">
				<div id="div-comment-210463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.kostovetskiy.com' rel='external nofollow' class='url'>Dmitriy Kostovetskiy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210463">
			September 14, 2004 at 7:14 pm</a>		</div>

		<p>Drew and Ben Hutchings:</p>
<p>I didn&#8217;t mean the kind of system used for signing ActiveX where third-party &quot;trusted entities&quot; can sign executables. Only Microsoft should be able to sign windows components. Microsoft could have a private key specifically for signing Windows components.</p>
<p>Viruses/Trojans/spyware usually install themselfs into Windows or WindowsSystem directories and choose names that appear to be legitimate Windows system files. If task manager would show which files are indeed windows components then it would be harder for malware to disguise itself as windows components.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-210523">
				<div id="div-comment-210523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210523">
			September 14, 2004 at 10:36 pm</a>		</div>

		<p>And back to hyperthreading: I can offer a real-life example of when it hurts performance.</p>
<p>I&#8217;m a developer of a fairly large software project. Our compile process is multi-proc aware, and can utilize as many procs as it finds. I have a dual-Xeon machine, which is also HT-capable (to 4 logical procs).</p>
<p>I found that once I enable HT, these 4 compiler processes just consume all of my memory, and thrash the page file, and actually degrade compile time.</p>
<p>Lesson learned: You should think about performance wholistically&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-210543">
				<div id="div-comment-210543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210543">
			September 14, 2004 at 11:12 pm</a>		</div>

		<p>Dmitriy:<br />
<br />Microsoft does sign all Windows binaries.  Most of them are indirectly signed (catalog-signed &#8211; that stuff under %windir%system32catroot and catroot2).  The key is kept in a vault somewhere (I&#8217;ve never seen it) and a nice guy named Walt (whom I&#8217;ve never met in person but seems friendly in email) signs everything (to the best of my knowledge) that Microsoft ships.<br />
<br />The really geeky tool to check out signatures is signtool/capicom &#8211; downloadable SDK tools that will give very detailed info about signatures, even dumping cert and timestamp info inverbose mode.  The less geeky way is using sigverif.exe which ships with Windows.  Understated disclaimer: sigverif is *not* my favorite tool.  Raymond covered it here:<br />
<br /><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/06/16/157084.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/06/16/157084.aspx</a></p>
<p>Maybe I should start my own blog and stop hijacking Raymond&#8217;s, eh?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-210703">
				<div id="div-comment-210703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210703">
			September 15, 2004 at 8:21 am</a>		</div>

		<p>&lt;i&gt; &lt;pointless-rant&gt;<br />
<br />[PDF] doesn’t even require you to run any executable files on your PC to read a document.<br />
<br />&lt;/pointless-rant&gt;&lt;/i&gt;</p>
<p>Erm, try viewing PDF without Adobe Reader installed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-210843">
				<div id="div-comment-210843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-210843">
			September 15, 2004 at 6:31 pm</a>		</div>

		<p>9/14/2004 10:36 PM Jonathan</p>
<p>&gt; once I enable HT, these 4 compiler processes<br />
<br />&gt; just consume all of my memory, and thrash<br />
<br />&gt; the page file, and actually degrade compile<br />
<br />&gt; time</p>
<p>The shortage of RAM is equally to blame as the presence of HT.  The shortage of RAM would be equally apparent if you had 4 real processors as it is when you have 4 virtual processors.</p>
<p>&gt; You should think about performance<br />
<br />&gt; wholistically</p>
<p>Bingo (except for spelling).</p>
<p>By the way&#8230;  9/13/2004 6:43 PM Drew<br />
<br />&gt; I wish these blog comments were threaded.</p>
<p>It&#8217;s hyperthreaded, with two threads going on in parallel  ^u^</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-213033">
				<div id="div-comment-213033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/09/21/228780.aspx#232313' rel='external nofollow' class='url'>Ronald</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-213033">
			September 21, 2004 at 3:50 am</a>		</div>

		<p>Quote &#8211; &lt;i&gt;Jonathan Payne&lt;/i&gt;<br />
<br />&quot;There is also a technology called PDF that some people use that is really useful for distributing signed documents with rich content – it doesn’t even require you to run any executable files on your PC to read a document.&quot;</p>
<p>I thought that acrobat reader was needed :?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-215143">
				<div id="div-comment-215143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://br.thespoke.net/MyBlog/fabiog/MyBlog.aspx' rel='external nofollow' class='url'>Fabio Galuppo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-215143">
			October 6, 2004 at 6:15 am</a>		</div>

		<p>Inspired by this post:<br />
<br /> <a target="_new" href="http://br.thespoke.net/BlogReader/SingleEntry.aspx?ID=4679" rel="nofollow">http://br.thespoke.net/BlogReader/SingleEntry.aspx?ID=4679</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-215163">
				<div id="div-comment-215163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040913-00/?p=37883#comment-215163">
			October 6, 2004 at 7:03 am</a>		</div>

		<p>Note that Fabio&#8217;s article assumes that no other vendor (AMD, Cyrix, Transmeta, &#8230;) will ever implement hyperthreading.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

