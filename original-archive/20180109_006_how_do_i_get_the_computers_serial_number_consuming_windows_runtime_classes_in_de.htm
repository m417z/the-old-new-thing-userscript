<html>
<head>
<title>How do I get the computer's serial number? Consuming Windows Runtime classes in desktop apps, part 4: C#</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I get the computer&#8217;s serial number? Consuming Windows Runtime classes in desktop apps, part 4: C#</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 9, 2018 / year-entry #7</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Over into managed code.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Continuing our series on getting the computer's serial number
in desktop apps in various languages,
we look at C#.
</p>
<p>
From Visual Studio, create a new C# Console Application
that goes like this:
</p>
<pre>
class Program
{
  static public void Main()
  {
    var serialNumber = Windows.System.Profile.SystemManufacturers.
                       SmbiosInformation.SerialNumber;
    System.Console.WriteLine($"Serial number = {serialNumber}");
  }
}
</pre>
<p>
Before building, you'll have to prepare the project,
and the preparation is particularly ugly.
</p>
<ul>
<li>
<p>Close the solution in Visual Studio and open the
<code>*.csproj</code> file in a text editor.
</p>
</li>
<li>
<p>
Add
</p>
<pre>
    &lt;TargetPlatformVersion&gt;8.0&lt;/TargetPlatformVersion&gt;
</pre>
<p>
to the main <code>PropertyGroup</code>.
This requirement is
<a HREF="https://msdn.microsoft.com/en-us/library/hh708954(v=vs.110).aspx">
obscurely documented on MSDN</a>.
<a HREF="https://www.hanselman.com/blog/HowToCallWinRTAPIsInWindows8FromCDesktopApplicationsWinRTDiagram.aspx">
Scott Hanselman tipped me off</a>.
</p>
</li>
<li>
<p>
Reopen the project,
right click the References node and select
<i>Add Reference</i>.
</p>
</li>
<li>
<p>
The magic XML you added to the <code>*.csproj</code> enables
a new node in the dialog box called <i>Windows</i>.
Expand it, click on <i>Core</i>,
and then check
<code>Windows.</code><code>System</code>
because we are using
<code>Windows.</code><code>System.</code><code>BlahBlah</code>.
In general, check each second-level namespace your program uses.
</p>
</li>
</ul>
<p>
Adding a reference from <i>Core</i> will access the information
from your development machine,
so it assumes that your development machine is running the same
or greater version of Windows than your target.
If you are doing cross-targeting,
then instead of referencing the <code>Windows.</code><code>Blah</code>
namespaces under <i>Core</i>,
go to the <i>Browse</i>
option and browse to
<code>C:\</code><code>Program Files (x86)\</code><code>Windows Kits\</code><code>10\</code><code>References\</code><code>CONTRACT\</code><code>VERSION\</code><code>CONTRACT.winmd</code>.
</p>
<p>
In our case,
<code>Windows.</code><code>System.</code><code>Profile.</code><code>SystemManufacturers.</code><code>SmbiosInformation</code> is in the
<code>Windows.</code><code>System.</code><code>Profile.</code><code>System&shy;Manufacturers.</code><code>System&shy;Manufacturers&shy;Contract</code> contract.
I got this information from
<a HREF="https://docs.microsoft.com/en-us/uwp/api/Windows.System.Profile.SystemManufacturers.SmbiosInformation">
the documentation for the
<code>Smbios&shy;Information</code> class</a>:
Look under <b>API contract</b>.
</p>
<p>
That documentation also says that the
<code>Smbios&shy;Information</code> class</a>
was introduced in v1, so the minimum version I need is 1.0.0.0.
The full path is therefore
</p>
<pre>
C:\Program Files (x86)\
  Windows Kits\
    10\
      References\
        Windows.System.Profile.SystemManufacturers.SystemManufacturersContract\
          1.0.0.0\
            Windows.System.Profile.SystemManufacturers.SystemManufacturersContract.winmd
</pre>
<p>
Repeat for each contract your program requires.
Most classes are in the
<code>Windows.</code><code>Foundation.</code><code>Universal&shy;Api&shy;Contract</code>
contract.
</p>
<p>
The last bit is another
<a HREF="https://msdn.microsoft.com/en-us/library/windows/apps/jj856306.aspx">
obscure piece of information on MSDN</a>:
Adding a reference to <code>System.Runtime</code>.
If you use a Windows Runtime class that projects as an <code>IDictionary</code> or
some other fancy type, then you will get the error message
"The type 'IDictionary`2' is defined in an assembly that is not referenced.
You must add a reference to assembly 'System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'."
But when you go to the <i>Add Reference</i> dialog,
you won't see it!
It's telling me to add a reference to an assembly that doesn't exist!
</p>
<p>
That's because it's hidden away somewhere that Visual Studio doesn't show you.
Go to the <i>Browse</i> tab,
click the Browse button,
and then go to
<code>%ProgramFiles(x86)%\</code><code>Reference Assemblies\</code><code>Microsoft\</code><code>Framework.</code><code>NETFramework\</code><code>v4.5\</code><code>Facades\</code><code>System.Runtime.dll</code>,
substituting the version of the .NET Framework that applies to your project.
</p>
<p>
Okay, now that you got all the references set up,
you can build and run the program.
</p>
<p>
It takes some work to set up, but personally I find C# to be
the most convenient way of consuming Windows Runtime classes.
</p>
<p>
Next up is PowerShell.
Just warning you ahead of time:
You're going to be underwhelmed.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20180109-00/?p=97745#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://blogs.msdn.microsoft.com/oldnewthing/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="4" aria-required="true"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required='true' required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required='true' required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" /></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit btn btn-default" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='97745' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="1107d44c11" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="105"/></p>			</form>
			</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1320215">
				<div id="div-comment-1320215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745#comment-1320215">
			January 9, 2018 at 7:19 am</a>		</div>

		<p>Why is it so ugly ? Will the VS GUI be updated so it can become more discoverable ?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745&#038;replytocom=1320215#respond' onclick='return addComment.moveForm( "div-comment-1320215", "1320215", "respond", "97745" )' aria-label='Reply to xcomcmdr'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1320235">
				<div id="div-comment-1320235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Florian S.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745#comment-1320235">
			January 9, 2018 at 10:26 am</a>		</div>

		<p>I guess you are not really supposed to consume those APIs from &#8220;traditional&#8221; Windows application, UWP is preferred, that&#8217;s why it is kind of a hidden feature.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745&#038;replytocom=1320235#respond' onclick='return addComment.moveForm( "div-comment-1320235", "1320235", "respond", "97745" )' aria-label='Reply to Florian S.'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1320255">
				<div id="div-comment-1320255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745#comment-1320255">
			January 9, 2018 at 10:47 am</a>		</div>

		<p>In which way is a C# application not an UWP app? Does MS really expect C# to go away? That will fail just the same as Windows 8 &amp; Windows Phone.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745&#038;replytocom=1320255#respond' onclick='return addComment.moveForm( "div-comment-1320255", "1320255", "respond", "97745" )' aria-label='Reply to Someone'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1320265">
				<div id="div-comment-1320265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745#comment-1320265">
			January 9, 2018 at 11:00 am</a>		</div>

		<p>A C# application is not a UWP app if it&#8217;s not a UWP app?</p>
<p>I suspect they are less worried about .NET developers switching to UWP since there&#8217;s less of a change. So while C++ folks get stepping stones to entice them into UWP C# folks are expected to just jump in. There&#8217;s the option to mix the two worlds if you want to but it&#8217;s not the main path they expect people to go down so there&#8217;s no great push to polish it up.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745&#038;replytocom=1320265#respond' onclick='return addComment.moveForm( "div-comment-1320265", "1320265", "respond", "97745" )' aria-label='Reply to Wear'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1320275">
				<div id="div-comment-1320275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745#comment-1320275">
			January 9, 2018 at 11:29 am</a>		</div>

		<p>If so many years after introducation of the Windows store, C# as *the* Number 1 language for Windows apps still has not real easy-to-use connection to this UWP thing, MS can just scrap UWP entirely. It makes development complicated beyond believe, for no positive result, not for the developer and not for the user.<br />
.Net programs need to be &#8220;UWP&#8221; by the existing .Net framework. Anything else will just fail.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4" id="comment-1320285">
				<div id="div-comment-1320285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745#comment-1320285">
			January 9, 2018 at 11:40 am</a>		</div>

		<p>I don&#8217;t quite understand the question. C# is a language. You can write a UWP app in that language (for which Visual Studio has some templates pre-made for you). Or you can write a desktop app in that language (for which Visual Studio also has templates pre-made for you). The UWP C# template is all ready to consume Windows Runtime classes. The desktop C# templates are not.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745&#038;replytocom=1320285#respond' onclick='return addComment.moveForm( "div-comment-1320285", "1320285", "respond", "97745" )' aria-label='Reply to Raymond Chen - MSFT'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1320286">
				<div id="div-comment-1320286" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745#comment-1320286">
			January 9, 2018 at 4:48 pm</a>		</div>

		<p>The people who want to use an exceedingly rare scenario are expected to do a bit of legwork themselves. This really shouldn&#8217;t come as a surprise, the same is true for almost everything.</p>
<p>If you want a really easy to use way to invoke winrt then use c# in a UWP app, it&#8217;ll go just out of the box there.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745&#038;replytocom=1320286#respond' onclick='return addComment.moveForm( "div-comment-1320286", "1320286", "respond", "97745" )' aria-label='Reply to Voo'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1320216">
				<div id="div-comment-1320216" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CMDBob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745#comment-1320216">
			January 9, 2018 at 8:47 am</a>		</div>

		<p>I just looked up the Powershell version myself, and it&#8217;s exactly as underwhelming as you said. It&#8217;s literally one line of code underwhelming. The C# solution preparation seems a bit obtuse, hopefully (in VS2018 or whatever) it&#8217;ll be made simpler.</p>
<p>One quick question, more just to make sure I understand something; the System.Runtime facade DLL &#8220;redirects&#8221; (for lack of a better term that I can think of right now) the object that the Windows Runtime uses back to the ones in the core .net framework? So instead of going &#8220;oh, I don&#8217;t have IDictionary right now&#8221; it goes &#8220;it&#8217;s located in the core framework, use that version&#8221;?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180109-00/?p=97745&#038;replytocom=1320216#respond' onclick='return addComment.moveForm( "div-comment-1320216", "1320216", "respond", "97745" )' aria-label='Reply to CMDBob'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

