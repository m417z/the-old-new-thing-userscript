<html>
<head>
<title>Using the wrong HINSTANCE in RegisterClass is like identity theft</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Using the wrong HINSTANCE in RegisterClass is like identity theft</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 15, 2011 / year-entry #172</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>19</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Last year, I left you with a teaser for a problem that resulted in the CResource­Exception being thrown. Studying the function that threw the exception revealed that it was thrown due to a failed call to Register­Class. And studying the parameters that were passed to Register­Class revealed that HINSTANCE parameter did not match the DLL....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Last year, I left you with a teaser for <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/30/10044061.aspx"> a problem that resulted in the <code>CResource&shy;Exception</code> being thrown</a>.</p>
<p> Studying the function that threw the exception revealed that it was thrown due to a failed call to <code>Register&shy;Class</code>. And studying the parameters that were passed to <code>Register&shy;Class</code> revealed that <code>HINSTANCE</code> parameter did not match the DLL. Instead of being the instance handle of the DLL, it was the instance handle of the host application. </p>
<p> Okay, now let's apply what we learned a few years ago about <a href="http://blogs.msdn.com/b/oldnewthing/archive/2005/04/18/409205.aspx"> the significance of the <code>HINSTANCE</code> parameter passed to the <code>Register&shy;Class</code> function</a>. By passing the <code>HINSTANCE</code> of the host application, the class was registered against the namespace of the host rather than the namespace of the DLL. It's like signing up for a credit card using somebody else's name or checking a book out of the library with somebody else's library card. </p>
<p> In this case, the module in question was a plug-in. It tried to register a class called, say, <code>My&shy;Class</code>, and instead of registering against itself, it registered against the host application. Fortunately, the host application didn't have a class called <code>My&shy;Class</code>, so the incorrect registration didn't cause a conflict. The book got checked out to the wrong person, but as far as the library can tell, nothing has gone wrong. It merely looks like the host application checked out a book. </p>
<p> So why did the call to <code>Register&shy;Class</code> fail? Because <i>some other plug-in made the same mistake</i>. Plug-in&nbsp;B also registered its class against the host application, and by an amazing coincidence, its class was also called <code>My&shy;Class</code>. (If you look at how MFC auto-generates class names, you can see that this name collision can happen quite easily.) If both plug-ins had registered their classes properly, there would have been no problem, because each class would have been registered against their respective DLLs, and no conflict would have arisen. But instead, two wrongs make a wronger, and since both plug-ins incorrectly registered their classes against the host, the first plug-in to register succeeds, and the second one crashes. </p>
<p> (One might argue that this is another special case of <a href="http://blogs.msdn.com/oldnewthing/archive/2005/06/07/426294.aspx"> <i>What if two programs did this?</i></a>) </p>
<p> Both plug-ins tried to sign up for a credit card in the name of the host application. The first one got the card, and the second one was informed by the credit card company, "Your application was denied because you already have a card from us." </p>
<p> Why did these plug-ins register against the host application instead of against their own library cards? I don't know for sure, but my guess is that it was due to ignorance.&sup1; When reading the documentation, they found that they needed to fill in the <code>hInstance</code> member of the <code>WNDCLASS</code> structure. Gosh, where do I get an <code>HINSTANCE</code> from? Oh wait, I found a function that returns an <code>HINSTANCE</code>: <code>Get&shy;Module&shy;Handle</code>. And hey look, if I pass <code>NULL</code>, a valid <code>HINSTANCE</code> comes out. I'll just <a href="http://www.bing.com/search?q=%22wc.hInstance+=+GetModuleHandle(NULL)%22"> set <code>wndclass.<wbr>hInstance = Get&shy;Module&shy;Handle(NULL);</wbr></code></a> and try it. Hey, look, it works! </p>
<p> <b>Footnote</b> </p>
<p> &sup1; This reminds me of a story that took place at an administrative hearing. The government agency representative presented as evidence that the other party admitted in a telephone conversation to being ignorant of the applicable regulations. </p>
<p> The other party angrily interrupted. </p>
<p> "I'm not ignorant! I simply didn't know what the rules were." </p>
<p> The judge patiently explained, "That's what the word <i>ignorant</i> means." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-925043">
				<div id="div-comment-925043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tringi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925043">
			July 15, 2011 at 7:49 am</a>		</div>

		<p>It is far too common to assume that GetModuleHandle(NULL) is equivalent to something like GetCurrentModuleHandle (which is not that difficult to write yourself, google for it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925053">
				<div id="div-comment-925053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925053">
			July 15, 2011 at 8:11 am</a>		</div>

		<p>I&#39;m in the habit of saving my HINSTANCE in DLLMain to avoid this kind of problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd even thread-even depth-1" id="comment-925063">
				<div id="div-comment-925063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925063">
			July 15, 2011 at 8:40 am</a>		</div>

		<p>My mom still believes that ignorant means going out of your way to be mean. We&#39;ve tried to tell her that that&#39;s not what it means, but she claims that&#39;s how everyone else (ie, everyone but her spouse and children) uses the word.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925073">
				<div id="div-comment-925073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925073">
			July 15, 2011 at 9:43 am</a>		</div>

		<p>&quot;Two wrongs make a wronger&quot;. &nbsp;How true. &nbsp;I&#39;ll have to remember that phrase.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925093">
				<div id="div-comment-925093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925093">
			July 15, 2011 at 9:46 am</a>		</div>

		<p>Ah, the politician&#39;s fallacy: &nbsp;&quot;Something must be done. &nbsp;This is something. &nbsp;Therefore we must do this.&quot; &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925103">
				<div id="div-comment-925103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Disparato</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925103">
			July 15, 2011 at 9:54 am</a>		</div>

		<p>How can I get the correct HINSTANCE if my code lives in a static library that is used both for building EXEs and DLLs? Passing in an HINSTANCE is not an option.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925113">
				<div id="div-comment-925113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925113">
			July 15, 2011 at 10:08 am</a>		</div>

		<p>@Disparato</p>
<p>Raymond has covered this before. Search for __ImageBase.</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2004/10/25/247180.aspx" rel="nofollow">blogs.msdn.com/&#8230;/247180.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925123">
				<div id="div-comment-925123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeremy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925123">
			July 15, 2011 at 10:32 am</a>		</div>

		<p>If a person knows or finds out that a valid library card is required to check out a book, I cannot believe that a &quot;reasonable person&quot; (<a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Reasonable_person" rel="nofollow">en.wikipedia.org/&#8230;/Reasonable_person</a>) would think that using someone else&#39;s library card without their knowledge would be a viable solution. &nbsp;I think in this case, ignorance is neglegence. &nbsp;We need some sort of protection against neglegent and reckless programmers!</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Mens_rea" rel="nofollow">en.wikipedia.org/&#8230;/Mens_rea</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-925133">
				<div id="div-comment-925133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925133">
			July 15, 2011 at 11:39 am</a>		</div>

		<p>In Redmond, library cards require a PIN for self-checkout. &nbsp;Not sure how your identity is verified when you check out at the librarian&#39;s desk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925143">
				<div id="div-comment-925143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark (The other Mark)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925143">
			July 15, 2011 at 12:20 pm</a>		</div>

		<p>Does anyone have a reference to the story in the footnote? That sounds interesting, but right now my searches mostly point to blogs copying this one.</p>
<div class="post">[<i>Reference: Personal communication. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925183">
				<div id="div-comment-925183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925183">
			July 15, 2011 at 4:57 pm</a>		</div>

		<p>If you don&#39;t like the __ImageBase trick, or you&#39;re using a different compiler like GCC, you can also do this, if you can require XP or later:</p>
<p>static const wchar_t s_empty[] = L&quot;&quot;;</p>
<p>if (!GetModuleHandleExW(GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS | GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT, s_empty, &amp;wndclass.hInstance))</p>
<p>{</p>
<p>&nbsp;// error</p>
<p>}</p>
<p>s_empty will be within your module.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925233">
				<div id="div-comment-925233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MJP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925233">
			July 17, 2011 at 4:51 pm</a>		</div>

		<p>@Ray: Try translating this article to german with the MS Translator&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-925253">
				<div id="div-comment-925253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925253">
			July 18, 2011 at 3:20 am</a>		</div>

		<p>@Myria: If you check the link posted by Moi you will see the GetModuleHandleEx trick and the older VirtualQuery variant&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925263">
				<div id="div-comment-925263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hagenp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925263">
			July 18, 2011 at 3:44 am</a>		</div>

		<p>&quot;When reading the documentation, they found that they needed to fill in the hInstance member of the WNDCLASS structure.&quot;&#8230;but no additional information or example that explains _why_ and how to use the function. Hence documentation-induced errors are created.</p>
<div class="post">[<i>Its purpose is explained in the <a href="http://msdn.microsoft.com/en-us/library/ms633574(v=VS.85).aspx" rel="nofollow">overview article</a>. And the &quot;Reference&quot; section of the WNDCLASS documentation links to all the overview articles. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925283">
				<div id="div-comment-925283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925283">
			July 18, 2011 at 6:09 am</a>		</div>

		<p>It is documented, it just so happens that the documentation assumes that the reader knows what an instance is in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925503">
				<div id="div-comment-925503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925503">
			July 18, 2011 at 6:48 pm</a>		</div>

		<p>API is not helping. Should be designed better.</p>
<div class="post">[<i><a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/09/3769001.aspx" rel="nofollow">It&#39;s not enough to say that something is bad; you have to say what would be better</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925663">
				<div id="div-comment-925663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925663">
			July 19, 2011 at 9:04 am</a>		</div>

		<p>I don&#39;t get paid for designing windows api, i&#39;m only the sucker who use them. Please google (or bing!) on &quot;pit of success&quot;.</p>
<div class="post">[<i>You don&#39;t have to design it, just say wat would be better &#8212; i.e., how you would prefer to use it. &quot;I don&#39;t want to have to pass an instance handle parameter. The system should just figure it out somehow.&quot; (Answer: &quot;Somehow&quot; involves guessing.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925683">
				<div id="div-comment-925683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-925683">
			July 19, 2011 at 11:17 am</a>		</div>

		<p>@640k: to expand on Raymond&#39;s point a little, a guess is likely to be wrong in at least some cases, because there are at least three entirely different use cases for a DLL registering a window class: (1) the DLL is going to create windows itself, (2) the DLL is providing the behaviour for windows that the main application (or some other DLL also loaded by the application) is going to create, or (3) the DLL is simply registering the class on behalf of a caller, and is in no way involved with any interpretation of what the parameters mean. &nbsp;So either you expand the API to account for all these possibilities (possibly along with others I haven&#39;t thought of), or you require the DLL to provide details of a namespace of some kind. &nbsp;Now, the instance handle is probably the best bet for a namespace, because it is the only thing that changes if the same code is included twice in two different DLLs (e.g. because two different parts of an application are using two different versions of the same DLL).</p>
<p>The only other possibilityies increase the complexity of creating windows (because they prevent you from using constant class names to identify the type of window you&#39;re creating; you&#39;d need to use either some kind of window class handle or a pointer to a WNDCLASS structure or similar), which is hardly beneficial. &nbsp;All to save people having to store a handle in a global variable at startup time? &nbsp;Absurd.</p>
<p>Now, don&#39;t get me wrong, the Windows API is a long way from flawless, but this doesn&#39;t seem too bad to me. &nbsp;No other possible choices look all that much better from where I&#39;m sitting.</p>
<p>[Aside &#8212; I don&#39;t suppose anyone knows why I always have to enter my posts twice whenever I&#39;m trying to post here, do you? &nbsp;It&#39;s quite predictable. &nbsp;Using Firefox 3.6 on XP, noscript enabled but allowing scripts to run on msdn.com and microsoft.com]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926313">
				<div id="div-comment-926313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110715-00/?p=10133#comment-926313">
			July 22, 2011 at 1:35 am</a>		</div>

		<p>If there 3 completely different use cases for a single API function, that function should be spit into three different functions.</p>
<p>But if doesn&#39;t help, the whole architecture should be changed to not require the &quot;api user&quot; to guess.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

