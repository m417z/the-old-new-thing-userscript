<html>
<head>
<title>What can influence how much stack is consumed when sending a message?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What can influence how much stack is consumed when sending a message?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 21, 2018 / year-entry #143</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180621-00/?p=99065</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>2</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Who wants to know? No really, that's the answer.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Last time, we looked at
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20180620-00/?p=99055#comment-1348075">
a simple program that recursively sent itself a message</a>,
and we wondered, "Which will run out first?
The user-mode stack or the kernel-mode stack?"
Some of the calculations are under your control, but others can
change at runtime.
</p>
<p>
If the destination window belongs to the same thread as the sender,
and there are no applicable window hooks,
then the user-mode portion of <code>Send&shy;Message</code> says,
"Well, I can handle this all by myself.
I don't need to ask for any help from kernel mode at all!"
In that case, the entire message processing happens in user mode,
and no kernel mode stack is consumed at all.
</p>
<p>
On the other hand, if a window hook exists, then the user-mode
portion of <code>Send&shy;Message</code> needs to call into kernel
mode to dispatch the hooks,
and in that case, it means that there will be stack consumed in
kernel mode.
</p>
<p>
The effect of window hooks means that the same program may
crash in different ways depending on the configuration of the system
it is running on.
A program that installs a global message hook will change the
failure mode.
</p>
<p>
If you ran the program from last time and encountered a stack overflow
in user mode, then you can make these changes to install your own hook
and watch the failure mode change:
</p>
<pre>
<font COLOR="blue">HHOOK hhk;

LRESULT CALLBACK MessageHookProc(int nCode,
     WPARAM wParam, LPARAM lParam)
{
  return CallNextHookEx(hhk, nCode, wParam, lParam);
}</font>

int WINAPI WinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPSTR lpCmdLine, int nShowCmd)
{
    ...
        <font COLOR="blue">hhk = SetWindowsHookEx(WH_CALLWNDPROC, MessageHookProc,
            hinst, GetCurrentThreadId());</font>

        while (GetMessage(&amp;msg, NULL, 0, 0)) {
            ...
        }

        <font COLOR="blue">UnhookWindowsHookEx(hhk);</font>
        ...
}
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (2)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1348215">
				<div id="div-comment-1348215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180621-00/?p=99065#comment-1348215">
			June 21, 2018 at 3:43 pm</a>		</div>

		<p>If the hook is only for the current thread, like in your example, why does it need to go through kernel-mode to call it?<br />
Couldn&#8217;t it call it from user-mode like it does for the window proc?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1348235">
				<div id="div-comment-1348235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180621-00/?p=99065#comment-1348235">
			June 21, 2018 at 6:21 pm</a>		</div>

		<p>It needs to go through kernel mode because the hook chain is maintained in kernel mode.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

