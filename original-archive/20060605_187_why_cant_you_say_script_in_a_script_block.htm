<html>
<head>
<title>Why can't you say </script> in a script block?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why can&#8217;t you say &lt;/script&gt; in a script block?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 5, 2006 / year-entry #188</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>61</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Because it ends the script block, of course. Duh, what's so hard about that? Because if you have script that generates script, you'll find yourself caught out if you're not careful. For example, you can't say document.write("<SCRIPT>blahblah</SCRIPT>"); in a script block because the HTML parser will see the </SCRIPT> and conclude that your script block...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Because it ends the script block, of course.
Duh, what's so hard about that?
</p>
<p>
Because if you have script that generates script, you'll find
yourself caught out if you're not careful.  For example, you can't say
</p>
<pre>
document.write("&lt;SCRIPT&gt;blahblah&lt;/SCRIPT&gt;");
</pre>
<p>
in a script block because the HTML parser will see the 
<code>&lt;/SCRIPT&gt;</code>
and conclude that your script block is over.
In other words, the script block extends as far as the
highlighted section below:
</p>
<pre>
&lt;SCRIPT&gt;
<font COLOR=blue>document.write("&lt;SCRIPT&gt;blahblah</font>&lt;/SCRIPT&gt;");
&lt;/SCRIPT&gt;<font COLOR=red>&lt;!-- mismatched tag --&gt;</font>
</pre>
<p>
The parser doesn't understand "quoted strings" or "comments" or
anything like that.
It just looks for the nine characters
"&lt;",
"/",
"S",
"C",
"R",
"I",
"P",
"T", and
"&gt;".
When it sees them, it decides that the script block is over and
returns to HTML parsing.
</p>
<p>
Why doesn't the parser understand quoted string?
</p>
<p>
Well, in order to parse quoted strings, you have to be able to
parse comments:
</p>
<pre>
&lt;SCRIPT&gt;
/* unmatched quotation mark " ignored since it's in a comment */
&lt;/SCRIPT&gt;&lt;!-- you might expect this to end the script block --&gt;
</pre>
<p>
But every language has a different comment syntax.
JScript uses <code>/* ... */</code> and <code>//</code>,
Visual Basic uses <code>'</code>,
perl uses <code>#</code>, and so on.
And even if you got comments figured out, you also would
need to know how to parse quoted strings.
Perl, for example, has a very large vocabulary for expressing
quoted strings,
from the simple <code>"..."</code> and <code>'...'</code>
to the idiosyncratic <code>qq:...:</code>.
And I lied about the JScript comment and quotation syntax;
it's actually more complicated than I suggested:
</p>
<pre>
/"//"&lt;/SCRIPT&gt;is this inside or outside quotes?
</pre>
<p>
That first quotation mark is itself quoted and does not count as
a "beginning of quoted string" marker.
And the <code>//</code> sequence is not a comment marker.
The first slash in the <code>//</code> sequence ends the
regular expression, and the second is a division operator.
</p>
<p>
It would be unreasonable to expect the HTML parser to be able to
understand every language both present and future.
(At least not until clairvoyance has been perfected.)
</p>
<pre>
&lt;SCRIPT&gt;
'is this a quoted string?'&lt;/SCRIPT&gt;
Is this inside or outside the script block?
'&lt;SCRIPT&gt;' is this a new script block
or the continuation of the previous one?
&lt;/SCRIPT&gt;
</pre>
<p>
One "solution" would be to require all languages to conform
to one of a fixed number of quotation and comment syntaxes.
Nevermind that not even JScript conforms to the basic
syntax, as we saw above, thanks to the complicated
quotation rules implied by regular expression shorthand.
And do you really want all HTML parsers to understand perl?
</p>
<p>
Another "solution" would be to have the language processor
do the parsing and tell the HTML parser where the
<code>&lt;/SCRIPT&gt;</code> tag is.
This has its own problems, however.
First, it means that the HTML parser would still have to
load the language parser even for <code>DEFER</code>
script blocks, which sort of defeats one of the
purposes of <code>DEFER</code>.
Even worse, it means that a web page that used a language
that the system didn't support would become unparseable:
</p>
<pre>
&lt;SCRIPT LANG="unknown-language"&gt;
<a HREF="http://www.lipsum.com/">Lorem ipsum</a> dolor sit amet,
...
</pre>
<p>
If a language parser were required to locate the end of the
script block, it would be impossible to parse past this point.
</p>
<p>
So how do you work around this aspect of HTML parsing?
You have to find an alternate way of expressing the
string you want.
Typically, this is done by breaking in up into two strings
that you then reassemble:
</p>
<pre>
document.write("&lt;SCRIPT&gt;blahblah&lt;/SCRI"+"PT&gt;");
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (61)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-larryosterman even thread-even depth-1" id="comment-387833">
				<div id="div-comment-387833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387833">
			June 5, 2006 at 10:15 am</a>		</div>

		<p>And of course the last is how the MySpace &quot;worm&quot; worked (it wasn&#8217;t a worm, it was a self-propogating cross-site-scripting exploit).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-387843">
				<div id="div-comment-387843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Einars Lielmanis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387843">
			June 5, 2006 at 10:37 am</a>		</div>

		<p>Or, alternatively, you could just hide the script in the HTML comments,<br />
<br />&lt;script type=&#8221;text/javascript&#8221;&gt;<br />
<br />&lt;!&#8211;<br />
<br />document.write(&#8216;&lt;script&gt;alert(&#8220;Rules!&#8221;)&lt;/script&gt;&#8217;);<br />
<br />&#8211;&gt;<br />
<br />&lt;/script&gt;</p>
<div class="post">[<i>That just swaps out one problem for<br />
another. Then the title of this article becomes &#8220;Why can&#8217;t you say<br />
&#8211;&gt; in a script block?&#8221;: <code>&lt;script&gt;&lt;!&#8211; document.write(&#8220;Click<br />
here &#8211;&gt;&#8221;); &#8230; &#8211;&gt;&lt;/script&gt;</code> -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-387853">
				<div id="div-comment-387853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ww.martin-probst.com' rel='external nofollow' class='url'>Martin Probst</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387853">
			June 5, 2006 at 10:41 am</a>		</div>

		<p>Oh please. Don&#8217;t post something like this if it&#8217;s wrong!</p>
<p>In HTML it&#8217;s illegal to use the &#8216;&lt;&#8216; character in plain text.<br />
You always need to escape it as &#8216;&amp;lt;&#8217;. (I hope this survives<br />
the comment form). Just like in XML and XHTML. It has never been legal.<br />
And all HTML parsers are required to transcode it properly.</p>
<p>So do use &amp;lt;/SCRIPT&gt;. Also use &amp;lt;SCRIPT&gt;<br />
for that matter, and use &#8220;if (5 &amp;lt; 10) &#8230;&#8221;. Everything else<br />
is not HTML. It will work because the browsers know that HTML authors<br />
are ignorant, but as this is a non-standard fixup, you can&#8217;t rely on it<br />
working and maybe the fixup starts to work in a different way later on?<br />
Then don&#8217;t complain about these browsers all rendering your page in<br />
wrong way &#8230;</p>
<p>Nice issue with your headline though &#8211; the day all earth comes down<br />
in ashes, the sole thing surviving will be a wrongly double-escaped<br />
string ;-)</p>
<div class="post">[<i>Fixed the headline. Stupid autoposter. I need to talk to the person who wrote it. Oh wait, that&#8217;s me. (And I fixed your &lt; characters.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-387873">
				<div id="div-comment-387873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387873">
			June 5, 2006 at 10:47 am</a>		</div>

		<p>Except that &quot;&lt;!&#8211;&quot; isn&#8217;t valid javascript.</p>
<p>If you want a safe alternative, use an external script file:</p>
<p>&lt;script type=&quot;text/javascript&quot; src=&quot;script.js&quot; /&gt;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-387893">
				<div id="div-comment-387893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://cheerleader.yoz.com/' rel='external nofollow' class='url'>Yoz</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387893">
			June 5, 2006 at 11:11 am</a>		</div>

		<p>Just to add to the cavalcade of &quot;except that&quot; or &quot;alternately&quot; comments &#8211; document.write() is not just an outdated method, it actually won&#8217;t work on proper XHTML documents. See here for more info:<br />
<br /><a rel="nofollow" target="_new" href="http://ln.hixie.ch/?start=1091626816&amp;count=1" rel="nofollow">http://ln.hixie.ch/?start=1091626816&#038;count=1</a></p>
<p>Instead, you should remove the need for writing &lt;/SCRIPT&gt; by not actually writing the raw HTML in your code, and creating the node the proper DOM way:</p>
<p>var scriptNode = document.createElement(&quot;script&quot;);<br />
<br />scriptNode.setAttribute(&quot;type&quot;, &quot;text/javascript&quot;);</p>
<p>etc.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-387903">
				<div id="div-comment-387903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387903">
			June 5, 2006 at 11:15 am</a>		</div>

		<p>Oops, my previous reply was to Einars Lielmanis.</p>
<p>Other stuff posted since I started writing that:</p>
<p>Adam: &nbsp;Right idea, but your self-closing script tag doesn&#8217;t work in IE6SP1 (not sure on SP2). &nbsp;For some reason, that browser requires two separate tags; otherwise it won&#8217;t &quot;see&quot; the script. &nbsp;You can&#8217;t combine them like that, even though there&#8217;s no content and IIRC XML says you should be able to in that case.</p>
<p>And Martin Probst: not all browsers actually parse entity references in script code, even though the content of the script tag is supposed to be &quot;parsed CDATA&quot;. &nbsp;I know some don&#8217;t change &amp;amp;&amp;amp; into &amp;&amp; before passing it to the script engine, for instance. &nbsp;I&#8217;m not sure about &amp;lt; though &#8212; it may work.</p>
<p>OTOH, external scripts &quot;always&quot; work. &nbsp;If you need to handle events, hook them up in window.onload inside the external script, and unhook them in window.onunload if you need to do that to prevent a memory leak.</p>
<p>Yoz: &nbsp;Yep. &nbsp;I&#8217;m not sure how to add content to that script tag in the DOM, though &#8212; perhaps:</p>
<p>var txtNode = document.createTextNode(&quot;script code here&quot;);<br />
<br />scriptNode.appendChild(txtNode);</p>
<p>would work? &nbsp;Never tried it (my scripts have always been &quot;static&quot;; I&#8217;ve never tried creating one from another script).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-387913">
				<div id="div-comment-387913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387913">
			June 5, 2006 at 11:20 am</a>		</div>

		<p>[So how do you work around this aspect of HTML parsing? You have to find an alternate way of expressing the string you want. Typically, this is done by breaking in up into two strings that you then reassemble:</p>
<p>document.write(&quot;&lt;SCRIPT&gt;blahblah&lt;/SCRI&quot;+&quot;PT&gt;&quot;);]</p>
<p>Another solution, recommended by comp.lang.javascript, is to escape the forward slash in the &lt;/SCRIPT&gt; tag:</p>
<p>&lt;script type=&quot;text/javascript&quot;&gt;<br />
<br />document.write(&#8216;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;hi&quot;);&lt;/script&gt;&#8217;);<br />
<br />&lt;/script&gt;</p>
<p>It should work in all web browsers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-387953">
				<div id="div-comment-387953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.ipona.com/james' rel='external nofollow' class='url'>James Hart</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387953">
			June 5, 2006 at 11:59 am</a>		</div>

		<p>According to the HTML language spec (<a rel="nofollow" target="_new" href="http://www.w3.org/TR/html401/appendix/notes.html#notes-specifying-data" rel="nofollow">http://www.w3.org/TR/html401/appendix/notes.html#notes-specifying-data</a>), it&#8217;s not just &lt;/script&gt; that should break out of a script element &#8211; it&#8217;s the sequence &#8216;&lt;/&#8217;. They give the following as an example of script that won&#8217;t work:</p>
<p> &nbsp; &nbsp;&lt;SCRIPT type=&quot;text/javascript&quot;&gt;<br />
<br /> &nbsp; &nbsp; &nbsp;document.write (&quot;&lt;EM&gt;This won&#8217;t work&lt;/EM&gt;&quot;)<br />
<br /> &nbsp; &nbsp;&lt;/SCRIPT&gt;</p>
<p>In reality, this script actually -does- work, at least in IE6 and Firefox&#8230;</p>
<p>What&#8217;s worrying, to my mind, though, is that following the absolute letter of the HTML spec, the character sequence &#8216;&lt;/&#8217; is simply illegal in a &lt;script&gt; element. Bad news if you want to specify a Javascript regex literal that matches strings ending in a less-than character.</p>
<p>In the course of investigating this I found out that the following actually appears to be syntactically valid Javascript, although it is, of course, semantically utter nonsense:</p>
<p>&lt;script&gt;<br />
<br /> var a = / &lt;/i&gt; 1;<br />
<br /> document.write (a);<br />
<br />&lt;/script&gt;</p>
<p>Imagine you&#8217;re an XML-ish parser. That does look -awfully- like a well-formedness-breaking closing &lt;/i&gt; tag nested inside that &lt;script&gt; element, doesn&#8217;t it..?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-387963">
				<div id="div-comment-387963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387963">
			June 5, 2006 at 12:18 pm</a>		</div>

		<p>BrianK: Oh, thanks for that. Unfortunately, I can&#8217;t test for and work around every browser incompatibility there is, especially for browsers that aren&#8217;t available on my platform. The empty &lt;script&gt; tag works fine in Firefox and Konqueror, and is fine according to the w3c validator, so that&#8217;s good enough for me.</p>
<p>I&#8217;m also able to really not care as my site is perfectly functional if you have javascript turned off (or just not available), so the worst that will happen for IE users is that they won&#8217;t get some of the non-content-related-but-flashy doodahs.</p>
<p>I guess users of Explorer had better keep putting that pressure on their vendor to improve support for the spec if they want their doodahs though! :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-387973">
				<div id="div-comment-387973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387973">
			June 5, 2006 at 12:53 pm</a>		</div>

		<p>CDATA is the way to go&#8230;</p>
<p>Q: How do you embed ]]&gt; in a script block?<br />
<br />A: ]]&amp;gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-387983">
				<div id="div-comment-387983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387983">
			June 5, 2006 at 1:55 pm</a>		</div>

		<p>Maurits: But if it&#8217;s CDATA, is the &amp;gt; going to be parsed as an entity reference and replaced with the appropriate characters before being passed on to the script engine? &nbsp;Based on what I know of XML, I don&#8217;t think it will be.</p>
<p>Adam: Yeah, I wish I didn&#8217;t have to do that either; it&#8217;s several characters that I wouldn&#8217;t have to type every time I refer to a script. &nbsp;Unfortunately for me, everyone in the company uses IE6 SP1 or SP2, and they&#8217;d get a little annoyed if the flashy stuff that I told them I was doing didn&#8217;t show up. &nbsp;Even if it wasn&#8217;t required to use the site (and it isn&#8217;t), they&#8217;d still be annoyed.</p>
<p>(Actually, I&#8217;m not sure whether &lt;script /&gt; works in the IE7 betas either. &nbsp;Haven&#8217;t tried it.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-387993">
				<div id="div-comment-387993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387993">
			June 5, 2006 at 1:59 pm</a>		</div>

		<p>Well, there&#8217;s this way too:<br />
<br /><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/CDATA_section" rel="nofollow">http://en.wikipedia.org/wiki/CDATA_section</a></p>
<p>&lt;![CDATA[foo]]]]&gt;&lt;![CDATA[&gt;bar]]&gt;</p>
<p>becomes: foo]]&gt;bar</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388003">
				<div id="div-comment-388003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ookii.org' rel='external nofollow' class='url'>Sven Groot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388003">
			June 5, 2006 at 2:40 pm</a>		</div>

		<blockquote><p>
  var scriptNode = document.createElement(&quot;script&quot;);<br />
  <br />&gt; scriptNode.setAttribute(&quot;type&quot;, &quot;text/javascript&quot;); </p>
<p>Actually, that also won&#8217;t work in XHTML, provided you did use the application/xhtml+xml MIME-type. To complicate matters further, you must use document.createElementNS and pass the proper XHTML namespace, document.createElement won&#8217;t work in a true XHTML-compliant browser.</p>
<p>And it&#8217;s not necessary to use setAttribute, you can just do scriptNode.type = &quot;text/javascript&quot; (that&#8217;s a DOM Level 1 attribute).</p>
<p>And BrianK, I expect using createTextNode should work for setting the script, although I have not actually tried this myself.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-387883">
				<div id="div-comment-387883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387883">
			June 5, 2006 at 10:57 am</a>		</div>

		<p>Except that&#8217;s not going to work according to the XML standard:</p>
<p><a rel="nofollow" target="_new" href="http://www.mit.edu/~ddcc/xhtmlref/text.html" rel="nofollow">http://www.mit.edu/~ddcc/xhtmlref/text.html</a></p>
<p>&quot;Encasing scripts and style sheets in comment delimiters (&lt;!&#8211; &#8211;&gt;) does not officially work. According to the W3C, the parser may remove all comments before passing the code onto the user agent. In addition, C-like languages, including Javascript, have a decrement operator (&quot;&#8211;&quot;) that just happens to be the SGML comment delimiter.&quot;</p>
<p>Also:</p>
<p>&quot;Interestingly, XML has a special construct designed to deal with the script and style sheet problem. Anything wrapped between &quot;&lt;![CDATA[&quot; and &quot;]]&gt;&quot; is treated as CDATA. Thus, using the same example, the fragment of code could be rewritten this way:</p>
<p>&lt;script type=&quot;text/javascript&quot;&gt; &lt;![CDATA[ if (h &amp;&amp; i) j(); ]]&gt; &lt;/script&gt;</p>
<p>The problem with this solution is that not many browsers understand this synatx either. You might try wrapping the CDATA markers inside comments. (Use the comments of your scripting or style-sheet language, mind you. If you use the SGML-style comments, all sorts of nastiness may ensue.) The other problem is that if your script or style-sheet actually contains the sequence &quot;]]&gt;,&quot; you&#8217;re out of luck again.&quot;</p>
<p>And the last quote from that page:</p>
<p>&quot;Lastly, your best solution may be just to use external scripts and style sheets, avoiding this whole big mess.&quot;</p>
<p>Which is what I do.</p>
<p>(This is also part of the &quot;Unobtrusive Javascript&quot; idea, which holds that putting *any* script code inside your HTML file is a mistake. &nbsp;This is for the same reason that using *any* inline style attribute is a mistake &#8212; if you want to change the style (or the code), you&#8217;ll potentially have to edit all your HTML files, instead of the stylesheet (or script file).)</p>
<p>&lt;script type=&quot;text/ecmascript&quot; src=&quot;blah.js&quot;&gt;&lt;/script&gt;</p>
<p>works just fine. &nbsp;;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388043">
				<div id="div-comment-388043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sebastian Redl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388043">
			June 5, 2006 at 6:06 pm</a>		</div>

		<p>Still various errors here. The HTML 4.01 spec says:</p>
<p>&#8212;<br />
<br />Although the STYLE and SCRIPT elements use CDATA for their data model, for these elements, CDATA must be handled differently by user agents. Markup and entities must be treated as raw text and passed to the application as is. The first occurrence of the character sequence &quot;&lt;/&quot; (end-tag open delimiter) is treated as terminating the end of the element&#8217;s content. In valid documents, this would be the end tag for the element.<br />
<br />&#8212;</p>
<p>Entities must be treated as raw text; &amp;lt; in a script block is just &amp;lt; to a script, and any browser replacing the entity is not conformant.</p>
<p>To the HTML spec, at least. In XHTML, the content type of the script element is PCDATA, so there markup and entities do get parsed. Great, huh?</p>
<p>I agree with previous comments: just make the script external.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-387933">
				<div id="div-comment-387933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A/C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-387933">
			June 5, 2006 at 11:38 am</a>		</div>

		<p>Wouldn&#8217;t the parser start a new script block at the document.write(&quot;&lt;SCRIPT&gt;&#8230; and then end *that* one when it finds the &lt;/SCRIPT&gt; ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388113">
				<div id="div-comment-388113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.coldwire.net/blogs/styx31/archive/2006/06/06/19787.aspx' rel='external nofollow' class='url'>Blog-a-Styx</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388113">
			June 6, 2006 at 5:23 am</a>		</div>

		<p>Un petit article sympa que je viens de lire sur un nouveau blog trouv&amp;#233; ce (dur) matin&amp;#160;: celui de Raymond&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388123">
				<div id="div-comment-388123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack V.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388123">
			June 6, 2006 at 6:59 am</a>		</div>

		<p>If you were changing the script tag syntax, surely the simplest mod would be to be able to specify the closing tag, a la &lt;&lt; in perl. Eg.</p>
<p>&lt;script close=&quot;THISISREALLYTHEEND&quot;&gt;<br />
<br />// &lt;/script&gt; That didn&#8217;t matter<br />
<br />THISISREALLYTHEEND&gt;</p>
<p>You might or might not specify where the close appear on the line, or if you can/must have a &lt;/script&gt; after it as well.</p>
<p>But the HTML parser only needs to know one new thing, and everyone who invents a language where THISISREALLYTHEEND is the assignment operator can just choose another string, maybe a multiiline string.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388133">
				<div id="div-comment-388133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388133">
			June 6, 2006 at 8:27 am</a>		</div>

		<p>To say that you can&#8217;t determine the language of the script and hence the comment/quoting style is pretty lame.</p>
<p>Clearly IE makes assumptions about the script type ANYWAY, so why not just use that format (the assumed script language) to decide what quotes/comments are?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388173">
				<div id="div-comment-388173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388173">
			June 6, 2006 at 10:13 am</a>		</div>

		<p>Don&#8217;t forget that each external script file is a synchronous network request that must be processed before parsing of your page can complete (document.write can&#8217;t be deferred).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388193">
				<div id="div-comment-388193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388193">
			June 6, 2006 at 10:23 am</a>		</div>

		<p>Jack, Silkio: Consider applications that want to parse HTML that aren&#8217;t full-blown browsers. Or even browsers that don&#8217;t support scripting. Do you think all browsers should have to fully parse even JavaScript just to be able to find the end script tag, even if they&#8217;re not going to <em>do</em> anything with the script?</p>
<p>HTML is <em>NOT</em> a programming language. It is a <em>document markup</em> language. A parser should be able to determine where the markup sections start and stop with /relative/ simplicity.</p>
<p>On top of this, even according to the HTML specs (particular wording here taken from HTML 4.01 Appendix B.1 at <a rel="nofollow" target="_new" href="http://www.w3.org/TR/html4/appendix/notes.html" rel="nofollow">http://www.w3.org/TR/html4/appendix/notes.html</a> but most versions of HTML have a section like it) a user-agent should be able to handle markup it doesn&#8217;t recognise:</p>
<p>* If a user agent encounters an element it does not recognize, it should try to render the element&#8217;s content.</p>
<p>Of course, rendering content shouldn&#8217;t apply to elements in the &lt;head&gt; of a document, but such a user-agent should still be able to reliably <em>find</em> <em>the</em> <em>end</em> of the element it needs to ignore.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388203">
				<div id="div-comment-388203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388203">
			June 6, 2006 at 10:27 am</a>		</div>

		<p>Neil: The external script file (as with external style sheet files) should be cacheable, even if the rest of your site isn&#8217;t. e.g. if it&#8217;s some kind of database-backed shopping site, etc&#8230;</p>
<p>Using external script files can decrease your total bandwidth usage quite a bit, and may well speed up all page views to your site bar the first if the script(s) are large.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388283">
				<div id="div-comment-388283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388283">
			June 6, 2006 at 12:45 pm</a>		</div>

		<p>Jack, in order for the &quot;heredoc&quot; (the name of the Unix shell feature that Perl includes) paradigm to work, it would need to have been included in HTML back in the early 1990s. Why?</p>
<p>Well, an HTML parser that doesn&#8217;t know about scripts would never know to look for the sentinel at the end of the script. The only way for the naive parser to be able to find it is if the &#8216;close&#8217; attribute were already defined as an option on every single element. That way a parser would automatically look for a &#8216;close&#8217; attribute on every tag, whether it understands the tag or not.</p>
<p>Similarly, a &#8216;render=false&#8217; option would have been nice also. That way in-line scripts and stylesheets would have a way to indicate to downlevel browsers that they should not render the contents of their tags.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388553">
				<div id="div-comment-388553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388553">
			June 6, 2006 at 9:11 pm</a>		</div>

		<p>Adam:</p>
<p>Like I said, if the browser chooses not to process the javascript, then there is no issue. The only confusion occurs is where PART of your javascript is processed due to a script tag in the middle of it.</p>
<p>I&#8217;m not asking non-&quot;script&quot; processing browsers to start processing it, I&#8217;m saying that if they DO process the script, and DO execute part of it, we have a right to be a little upset that they decided to be ignorant about the script tag embedded inside.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388633">
				<div id="div-comment-388633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388633">
			June 7, 2006 at 3:05 am</a>		</div>

		<p>Sorry silkio, but it still won&#8217;t work. Any browser that doesn&#8217;t know your scripting language won&#8217;t know when to stop parsing as script and when to start parsing as HTML again.</p>
<p>A browser that doesn&#8217;t understand ANY scripts will render them all as text anyway, so it won&#8217;t care about whether the &lt;/SCRIPT&gt; tag embedded in them should be rendered or not.</p>
<p>However any browser (Lynx comes to mind) that knows about scripts will never want to render the content of the script block whether it knows how to parse the language or not. You want to be able to write:</p>
<p>&lt;script language=&quot;PerlScript&quot;&gt;<br />
<br /># this is a &lt;script&gt;&lt;/script&gt; block<br />
<br />document.write(qq!&lt;script&gt;$script&lt;/script&gt;!)<br />
<br />&lt;/script&gt;</p>
<p>Unfortunately, only browsers that understand PerlScript know how to parse it properly. All others would show &quot;block document.write(qq!!)&quot;. Since PerlScript it a pluggable script engine, my browser understands it but yours might not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388643">
				<div id="div-comment-388643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388643">
			June 7, 2006 at 3:15 am</a>		</div>

		<p>Silkio:</p>
<p>But this isn&#8217;t just about what browsers that <em>do</em> understand javascript have to do.</p>
<p>You can&#8217;t say &quot;&lt;/script&gt;&quot; in a script block because browsers/parsers/applications that <em>don&#8217;t</em> understand scripts still have to be able to tell where the end of the script block is so they can process the rest of the page correctly.</p>
<p>If you allow &quot;&lt;/script&gt;&quot; in the script block in any form (either in a literal string, or in some other case) then <em>all</em> these other programs need to understand enough javascript to be able to spot a literal string, and a regular expression, and a comment, etc, etc, etc&#8230; Basically, they need to fully understand javascript in order to find the &quot;real&quot; end of the script.</p>
<p>For this reason, you cannot <em>allow</em> &quot;&lt;/script&gt;&quot; tags inside a script, in order for non-script processors to be able to understand HTML.</p>
<p>Therefore, even browsers that <em>do</em> understand scripts cannot allow this either. If such browsers did support embedded &quot;&lt;/script&gt;&quot; tags, people would write code that did that, test it in their browser, see that it worked as expected and assume it was fine. However, non-script-enabled browsers would just break, having found the &quot;&lt;/script&gt;&quot; tag that they thought was the end and trying to process the rest of the script as HTML.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388663">
				<div id="div-comment-388663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388663">
			June 7, 2006 at 3:34 am</a>		</div>

		<p>Gabe/Adam:</p>
<p>What I&#8217;m saying is that if the browser processes the script at all, it can&#8217;t pretend that it doesn&#8217;t know how to find comments/text.</p>
<p>That is to say, the following code:</p>
<p>============<br />
<br />&lt;script&gt;<br />
<br />alert(1);<br />
<br />//&lt;/script&gt;<br />
<br />alert(2);<br />
<br />&lt;/script&gt;<br />
<br />=============</p>
<p>should produce either:<br />
<br /> &#8211; alert 1<br />
<br /> &#8211; alert 2</p>
<p>or<br />
<br /> &#8211; NOTHING.</p>
<p>i.e, the processor has <em>already</em> figured out what language it is, so why does it sit back and declare &quot;oh no, i don&#8217;t know how to find comments, i&#8217;ll just end now.&quot;</p>
<p>and about lynx; even though it&#8217;s textbased it still needs (or at least <em>should</em>) process script &#8230; obviously not all script is for visual purposes.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388673">
				<div id="div-comment-388673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388673">
			June 7, 2006 at 4:31 am</a>		</div>

		<p>Silkio&gt; &quot;and about lynx; even though it&#8217;s textbased it still needs (or at least <em>should</em>) process script &#8230; obviously not all script is for visual purposes.&quot;</p>
<p>Ah &#8211; now I see <em>where</em> our differences lie. :)</p>
<p>This is the statment I disagree with. And I&#8217;m not conviced why it should be the case. IMO, an HTML parser should be able to parse HTML without having to be able to parse JavaScript too. Why do you think otherwise?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388683">
				<div id="div-comment-388683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388683">
			June 7, 2006 at 4:52 am</a>		</div>

		<p>Also, not all HTML parsers are in web browsers.</p>
<p>What about spiders, like googlebot? Should that have to be able to parse javascript so that it doesn&#8217;t think you have the text &quot;alert(2);&quot; in your web page?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388693">
				<div id="div-comment-388693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388693">
			June 7, 2006 at 6:12 am</a>		</div>

		<p>Adam:</p>
<p>I don&#8217;t think browsers should have to parse javascript or any script. What I&#8217;m saying, though, is that if they <em>TRY</em>, then must assume a certain type of script to do so.</p>
<p>IE will assume javascript, if it&#8217;s not specified.</p>
<p>For example, the following won&#8217;t popup a message box in IE unless &quot;type=&#8217;vbscript&#8217;&quot; is specified:</p>
<p>============<br />
<br />&lt;script&gt;<br />
<br />MsgBox(&quot;1&quot;)<br />
<br />&lt;/script&gt;<br />
<br />============</p>
<p>I still think you are missing my main point &#8230; that if the browser DOES try and guess the language (which IE <em>clearly</em> does) then it&#8217;s a lie to say you don&#8217;t know how to resolve comments and strings.</p>
<p>Spiders will need to process javascript anyway, but if they don&#8217;t, that&#8217;s totally fine, they can just find the &lt;/script&gt; block where it lies. Other script-aware HTML parsers have no programmatic excuse for acting so ignorant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388703">
				<div id="div-comment-388703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388703">
			June 7, 2006 at 6:45 am</a>		</div>

		<p>Silkio&gt; &quot;Spiders will need to process javascript anyway &#8230;&quot;</p>
<p>Why? Please explain the logic underlying that conclusion.</p>
<p>Silkio&gt; &quot;&#8230;but if they don&#8217;t, that&#8217;s totally fine, they can just find the &lt;/script&gt; block where it lies.&quot;</p>
<p>Huh? But if you have an embedded &lt;/script&gt; tag, that&#8217;s the one that non-javascript-aware HTML parsers will hit. They <em>can&#8217;t</em> find the proper end of the script block. That&#8217;s the whole point! That&#8217;s why embedded &lt;/script&gt; tags <em>must</em> be disallowed.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388723">
				<div id="div-comment-388723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388723">
			June 7, 2006 at 7:39 am</a>		</div>

		<p>I give up.</p>
<p>I&#8217;ll just say that I&#8217;d hate to try to write an HTML parser one weekend in a world where you controlled the HTML standards. :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388843">
				<div id="div-comment-388843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ross Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388843">
			June 7, 2006 at 11:50 am</a>		</div>

		<p>&quot;Consider the page consisting of:<br />
<br />&lt;script language=&quot;javascript&quot;&gt;document.location = &#8216;realhomepage.html&#8217;;&lt;/script&gt;&quot;</p>
<p>You don&#8217;t need Javascript to do redirects. &nbsp;Use either an HTTP header or a &lt;meta&gt; tag to redirect instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388713">
				<div id="div-comment-388713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388713">
			June 7, 2006 at 6:53 am</a>		</div>

		<p>Adaim:</p>
<p>:|</p>
<p>&gt; Silkio&gt; &quot;Spiders will need to process<br />
<br />&gt; javascript anyway &#8230;&quot;<br />
<br />&gt;<br />
<br />&gt; Why? Please explain the logic underlying that<br />
<br />&gt; conclusion.</p>
<p>Consider the page consisting of:<br />
<br />&lt;script language=&quot;javascript&quot;&gt;document.location = &#8216;realhomepage.html&#8217;;&lt;/script&gt;</p>
<p>my point was not &quot;All bots should process javascript so that can discover valid ending script tags&quot; it was &quot;a smart bot will process javascript [which isn&#8217;t really relevant to our discussion anyway]&quot;.</p>
<p>&gt; Silkio&gt; &quot;&#8230;but if they don&#8217;t, that&#8217;s totally &gt; fine, they can just find the &lt;/script&gt; block &gt; where it lies.&quot;<br />
<br />&gt;<br />
<br />&gt; Huh? But if you have an embedded &lt;/script&gt;<br />
<br />&gt; tag, that&#8217;s the one that non-javascript-aware<br />
<br />&gt; &nbsp;HTML parsers will hit. They _can&#8217;t_ find the<br />
<br />&gt; &nbsp;proper end of the script block. That&#8217;s the<br />
<br />&gt; whole point! That&#8217;s why embedded &lt;/script&gt;<br />
<br />&gt; tags _must_ be disallowed. </p>
<p>Because different parsers may see different html output based on what scripting language they support? Sure, I agree. That&#8217;s seems like an okay reason to disallow it &#8230; not great, but &#8230;</p>
<p>All I was initially trying to say is that Raymond&#8217;s comment that he doesn&#8217;t know HOW to find the script tag is not true. IE *can* figure out if it&#8217;s a valid ending tag if it wanted to, but it doesn&#8217;t want to. It&#8217;s not a programming problem (like Raymond was trying to say) it&#8217;s a logical one &#8230; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-388943">
				<div id="div-comment-388943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388943">
			June 7, 2006 at 8:38 pm</a>		</div>

		<p>Ross: Yes, but that&#8217;s not at all the point.</p>
<p>Adam: :) Come on now, I&#8217;m really not trying to say that all parsers<br />
have to implement script-parsing, I am just saying that if they do,<br />
they should be able to detect a script tag.</p>
<div class="post">[<i>Where is the /script tag in the following:</p>
<pre>&lt;SCRIPT LANGUAGE="leandra"&gt;<br />.&lt;/SCRIPT&gt;'&lt;/SCRIPT&gt;"&lt;/SCRIPT&gt;;(&lt;/SCRIPT&gt;)<br />&lt;/SCRIPT&gt;#&lt;/SCRIPT&gt;<br />&lt;/SCRIPT&gt;#&lt;/SCRIPT&gt;<br /></pre>
<p>How would you write the parser that figures out which of those &#8220;&lt;/SCRIPT&gt;&#8221;s is the real /SCRIPT tag? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-388973">
				<div id="div-comment-388973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-388973">
			June 7, 2006 at 10:51 pm</a>		</div>

		<p>Raymond: What do you mean? I don&#8217;t know &#8220;leandre&#8221; language, so I would take the first one.</p>
<p>If I did know leandra language, I would try and parse that script<br />
using it&#8217;s grammar. If I failed (i.e invalid token or something), i&#8217;d<br />
take the next /script tag at the index of where i failed. if I passed,<br />
I&#8217;d know where it ends and also take the next /script tag.</p>
<p>&#8230;</p>
<p>?</p>
<div CLASS=post>[<i>And that&#8217;s my point. You don&#8217;t know leandra. The browser doesn&#8217;t know leandra. How should it know which is the real /script tag? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389053">
				<div id="div-comment-389053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389053">
			June 8, 2006 at 2:21 am</a>		</div>

		<p>If it doesn&#8217;t know leandra it takes the first tag.</p>
<p>This is what I&#8217;ve been saying all along. If you can&#8217;t/dont want to process the language, then it doesn&#8217;t need to try.</p>
<div class="post">[<i>In<br />
other words, you are okay with a web page parsing in two completely<br />
different ways depending on whether the browser supports the leandra<br />
language. Good luck writing an HTML validator! And if the browser does support it, it&#8217;ll have to load the leandra parser in order to find the correct end tag, which completely ruins the DEFER attribute. Wait a second, i&#8217;m just repeating myself. This is exactly what I wrote in the main article! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389113">
				<div id="div-comment-389113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389113">
			June 8, 2006 at 6:56 am</a>		</div>

		<p>Raymond:</p>
<p> In the OP you said it <em>wasn&#8217;t possible</em>. Clearly it is possible; that&#8217;s <em>all</em> I was trying to say.</p>
<p> I&#8217;ve never used the &#8220;DEFER&#8221; attribute so I&#8217;ll take your word that it will become useless.</p>
<p> I don&#8217;t mind the way it currently works, [not that I&#8217;d expect a<br />
chance if I didn&#8217;t] and I don&#8217;t neccessarily think that it would be bad<br />
thing to ask the language for the ending /script tag. It seems to be<br />
the most intuitive.</p>
<p> Either way, all I was trying to point out is that your OP is wrong &#8230;</p>
<div CLASS=post>[<i>Allow me to clarify for nitpickers: It&#8217;s not possible without sacrificing obvious principles like &#8220;It should be possible to write HTML such that every browser will agree on how it is parsed.&#8221; Because if you lose that, then how can you write HTML? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389133">
				<div id="div-comment-389133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389133">
			June 8, 2006 at 9:45 am</a>		</div>

		<p>Silkio: Are you under some kind of delusion that javascript is either part of the HTML spec, or that HTML has some kind of special relationship with javascript that it doesn&#8217;t have with other scripting languages (such as leandre)?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389193">
				<div id="div-comment-389193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389193">
			June 8, 2006 at 5:46 pm</a>		</div>

		<p>AC: no.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389223">
				<div id="div-comment-389223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389223">
			June 8, 2006 at 7:19 pm</a>		</div>

		<p>AC. </p>
<p>As I said in my earlier posts, I don&#8217;t think this is the best way for the parses to operate; I was only commenting on Raymonds wording in the OP. </p>
<p>&#8211; </p>
<p>To answer your question though; the processing of javascript can change the document that the parsers parse <em>anyway</em>, so what&#8217;s the big deal? </p>
<p>Both parsers are correct; one just implements JS and is able to understand the document better.</p>
<div CLASS=post>[<i>I stand by my original statement: &#8220;If a language parser were required to locate the end of the script block, it would be impossible to parse past this point.&#8221; If a leandra parser is required in order to parse past the &lt;script language=&#8221;leandra&#8221;&gt; block and you don&#8217;t have a leandra parser, then you can&#8217;t parse any further. The statement is practically a tautology. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389233">
				<div id="div-comment-389233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389233">
			June 8, 2006 at 7:33 pm</a>		</div>

		<p>Raymond: What&#8217;s wrong with this process: </p>
<p>&#8211; get script language <br />&#8211; if known lang, request /script index <br />&#8211; if unknown lang, /script index = first from this point </p>
<p>..? </p>
<p>(Other then the fact it will lead to different parsing structure depending on known languages.)</p>
<div CLASS=post>[<i>That&#8217;s like asking, &#8220;What&#8217;s wrong with this key aside from the fact that it doesn&#8217;t open the lock?&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389243">
				<div id="div-comment-389243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389243">
			June 8, 2006 at 7:36 pm</a>		</div>

		<p>OK. If that particular script does nothing than execute those two alerts, and does not change the document in any way, and assuming that the rest of the document is otherwise valid, would you say that the document should be considered valid HTML 4?</p>
<p>If you think the document is valid HTML 4, how can you claim that the non-js-aware parser is correct if it misidentifes the document as being invalid?</p>
<p>(And as an aside &#8211; what would be a good way for the non-js-aware parser to operate?)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389253">
				<div id="div-comment-389253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389253">
			June 8, 2006 at 7:47 pm</a>		</div>

		<p>Raymond:</p>
<p>Ok. We disagree then.</p>
<p>AC: As I said, this method has issues, but it&#8217;s not impossible. Clearly the fact that the tags you choose to use are up to the script will then change the way your document validates. I don&#8217;t actually think it&#8217;s bad that document validation depends on script; browsers interpret script as well, and you can currently easily make a valid document invalid with the simplest bit scripting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389263">
				<div id="div-comment-389263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389263">
			June 8, 2006 at 8:07 pm</a>		</div>

		<p>Humour me. This exact document:</p>
<p>&lt;!DOCTYPE HTML PUBLIC<br />
<br /> &nbsp; &nbsp;&quot;-//W3C//DTD HTML 4.01//EN&quot;<br />
<br /> &nbsp; &nbsp;&quot;<a rel="nofollow" target="_new" href="http://www.w3.org/TR/html4/strict.dtd&quot;&gt;" rel="nofollow"></a><a href="http://www.w3.org/TR/html4/strict.dtd&quot;&#038;gt" rel="nofollow">http://www.w3.org/TR/html4/strict.dtd&quot;&#038;gt</a>;<br />
<br />&lt;html&gt;<br />
<br />&lt;head&gt;<br />
<br />&lt;title&gt;test&lt;/title&gt;<br />
<br />&lt;script&gt;<br />
<br />alert(1);<br />
<br />//&lt;/script&gt;<br />
<br />alert(2);<br />
<br />&lt;/script&gt;<br />
<br />&lt;/head&gt;<br />
<br />&lt;body&gt;<br />
<br />&lt;p&gt;test&lt;/p&gt;<br />
<br />&lt;/body&gt;<br />
<br />&lt;/html&gt;</p>
<p>Should it be considered valid HTML? Yes or no?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389273">
				<div id="div-comment-389273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389273">
			June 8, 2006 at 8:12 pm</a>		</div>

		<p>Doh. Missed &#8216;type=&quot;text/javascript&quot;&#8217; attribute from the &lt;script&gt; tag. Pretend it&#8217;s there.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389283">
				<div id="div-comment-389283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389283">
			June 8, 2006 at 8:20 pm</a>		</div>

		<p>AC: Well it depends if the validator implements the javascript language, doesn&#8217;t it :)</p>
<p>I am the validator, and I happen to understand javascript, so yes, I will call that document valid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389293">
				<div id="div-comment-389293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389293">
			June 8, 2006 at 8:38 pm</a>		</div>

		<p>Therefore, are you saying that an HTML parser that correctly follows every last paragraph of the HTML spec, but is not js-aware, is an incorrect HTML parser[0]?</p>
<p>Don&#8217;t you think there&#8217;s a slight internal inconsistency with that?</p>
<p>(Have you ever been to Milliways restaurant?)</p>
<p>[0] Or do you think that the correctness of a parser can be measured other than by whether it follows the spec it is implementing, and whether it can determine if a document also follows that spec?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389303">
				<div id="div-comment-389303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389303">
			June 8, 2006 at 8:39 pm</a>		</div>

		<p>No, it doesn&#8217;t depend if the validator implements the javascript language.</p>
<p>The definition of HTML 4.01 (as defined in (&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;<a rel="nofollow" target="_new" href="http://www.w3.org/TR/html4/strict.dtd&quot;&gt;" rel="nofollow"></a><a href="http://www.w3.org/TR/html4/strict.dtd&quot;&#038;gt" rel="nofollow">http://www.w3.org/TR/html4/strict.dtd&quot;&#038;gt</a>;) does not understand javascript. </p>
<p>Therefore, by definition, this is not a valid HTML document. &nbsp;Period. &nbsp;End of story. &nbsp;No amount of asserting that the parser understands multiple languages will make it a valid 4.01 document.</p>
<p>It may be a valid Silkio-browser document, but it is not a valid HTML 4.01 document.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389313">
				<div id="div-comment-389313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389313">
			June 8, 2006 at 8:44 pm</a>		</div>

		<p>Guys: </p>
<p>You&#8217;re not getting it. I&#8217;ve said in almost every post of mine that this method has issues. I agree that a non-js-parsing validator will see this documetn as invalid. That&#8217;s what I said would happen. </p>
<p>I even said I don&#8217;t think this is a great way of doing things; but on othe other hand, is it so bad that scripting languages &#8211; something which can CURRENTLY affect the structure of a doc &#8211; become a part of the document validation process? I don&#8217;t think so. </p>
<p>OF COURSE this method does not meet the current HTML 4.01 spec. </p>
<p>To clarify: If &#8220;silkio-validating&#8221; was implemented, the spec would need to be changed.</p>
<div class=post>[<i>Today, script cannot affect the parsing of a document. Sure, running the script may modify the document, but that&#8217;s not at issue here. The issue here is parsing. And if parsing is dependent on something outside the HTML author&#8217;s control, how can an HTML author write markup with any confidence? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389323">
				<div id="div-comment-389323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389323">
			June 8, 2006 at 8:56 pm</a>		</div>

		<p>Raymond: Right.</p>
<p>The suggestion here is that &quot;parsing&quot; of a html document should include executing and processing of the script areas.</p>
<p>(Yes, there are issues with this. Putting it lightly&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389343">
				<div id="div-comment-389343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389343">
			June 8, 2006 at 9:01 pm</a>		</div>

		<p>HOW?</p>
<p>I&#8217;m trying to be hypothetical and move away from the current spec into a &quot;how would you have this work then&quot; kind of vibe, and trying to understand where you&#8217;re coming from, but&#8230;</p>
<p>How would you change the spec so, such that a validating parser could possibly be written without being internally inconsistent?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389353">
				<div id="div-comment-389353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389353">
			June 8, 2006 at 9:13 pm</a>		</div>

		<p>AC:</p>
<p>By having the spec include a spec for processing javascript? But then you&#8217;d have to have specs for all scripting languages &#8230;</p>
<p>So the spec could just say : &quot;execute and process script to get actual page structure&quot;.</p>
<p>Then each validator/&quot;parser&quot; can implement as many scripting languages as it likes, and validate away, meeting the spec!</p>
<p>If it doesn&#8217;t have any scripting langauges, then that&#8217;s fine, it can&#8217;t get the desired page structure and will call the doc invalid due to unknown script. [of course it can still <em>display</em> as much of the doc as it could].</p>
<p>Obviously all hypothetical, and written on the fly, so give me a break if I made a typo/omission :)</p>
<p>Hopefully it&#8217;s clear &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389213">
				<div id="div-comment-389213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389213">
			June 8, 2006 at 6:47 pm</a>		</div>

		<p>Oh.</p>
<p>So in that case, for the following HTML that you posted:</p>
<p>&lt;script&gt;<br />
<br />alert(1);<br />
<br />//&lt;/script&gt;<br />
<br />alert(2);<br />
<br />&lt;/script&gt;</p>
<p>You think that:</p>
<p>1) A js-aware HTML parser should see the first &lt;/script&gt; as a comment, the &quot;alert(2);&quot; as part of the script, and the second &lt;/script&gt; as the end-of-script tag.</p>
<p>2) A non-js-aware HTML parser should see the first &lt;/script&gt; as the end-of-script, the &quot;alert(2);&quot; as text in the enclosing element (should be the enclosing head element, where text is not allowed), and the second &lt;/script&gt; as an invalid close tag that doesn&#8217;t match an open tag.</p>
<p>Is that correct? Two validating HTML parsers, which both fully support the HTML 4 spec, should be able to treat the same HTML document differently, and for one to find the document valid, and the other to find it broken?</p>
<p>Which parser is correct? Both? Is one more correct than the other? If one *is* more correct than the other, why should the &quot;less correct&quot; parser not need to be fixed to be &quot;more correct&quot;?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389373">
				<div id="div-comment-389373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389373">
			June 9, 2006 at 4:18 am</a>		</div>

		<p>AC: [if you can still read after that exploison].</p>
<p>The spec isn&#8217;t change so that it&#8217;s impossible to reliably pass. You can still reliably find the script blocks of a document. All you do is write your parser so that it does NOT implement a scripting language, and simply goes for the first &nbsp;/script it finds.</p>
<p>If you DO choose to write a parser that understands a given script language, your parser just must request the ending script tag from the appropriate language parser.</p>
<p>I don&#8217;t see how this suggests a spec which is impossible to reliably parse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389403">
				<div id="div-comment-389403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389403">
			June 9, 2006 at 8:26 am</a>		</div>

		<p>BryanK:</p>
<p>Different &#8220;types&#8221; of parses will get different results. Javascript-enabled parsers will get <em>better</em> results.</p>
<p>&#8211;</p>
<p>Think about what the spec is trying to do. Scripts have a special<br />
ability in HTML; they can modify the code that is parsed. They can<br />
create more, or delete some, or change parts. This affects the end<br />
result to the user, and the reason we even <em>have</em> validators is so that<br />
the end user sees the same thing everywhere [in all browsers].</p>
<p>The point is, by processing/parsing the SCRIPT of a document, you can gain a better understanding of it.</p>
<p>This can only be a good thing.</p>
<p>You are saying it&#8217;s bad because a given validator understands a given doc better then another; I say, what&#8217;s wrong with that? </p>
<p>It&#8217;s hardly a crime to have a tool that gives more accurate results!</p>
<div CLASS=post>[<i>What about a language where it is legal to just say &#8220;&lt;/script&gt; outside of quotation marks? The parser for that language would never find the end of the script block since any time it saw &#8220;&lt;/script&gt;&#8221; it would say, &#8220;Oh, yeah, that&#8217;s legal in my language. I&#8217;m still parsing.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389363">
				<div id="div-comment-389363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389363">
			June 9, 2006 at 2:34 am</a>		</div>

		<p>So, you are actually saying that you want to change the spec so that it&#8217;s impossible to write a parser that can reliably tell which parts of the document are _not_ script, and therefore have _no way_ of knowing which parts of the document it is even _meant_ to process.</p>
<p>No, I can make that simpler. You are actually saying that you want to change the spec so that HTML is impossible to reliably parse.</p>
<p>And you don&#8217;t think that just having to break up &quot;&lt;/script&gt;&quot; in a string literal or comment is the simpler and more sensible thing to do? Even though you&#8217;re smart enough to not speak in l33t, to write with correct grammar and basically to be all articulate and everything?</p>
<p>But&#8230;, but&#8230;, but&#8230;, *head explodes*<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389863">
				<div id="div-comment-389863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Conrad</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389863">
			June 9, 2006 at 3:07 pm</a>		</div>

		<p>&quot;You&#8217;re not getting it. I&#8217;ve said in almost every post of mine that this method has issues.&quot;</p>
<p>I get it. You&#8217;re saying that this method is both broken and not-broken. But I think it&#8217;s actually broken OR not-broken. Specifically, broken.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-389393">
				<div id="div-comment-389393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389393">
			June 9, 2006 at 8:10 am</a>		</div>

		<p>You may be able to &quot;reliably&quot; (though I&#8217;m not sure how you can justify that part) find the script block. &nbsp;But you *cannot* reliably find the end. &nbsp;You can find *an* end, but if it&#8217;s not always *the* *same* end, then you do *not* have a reliable parser.</p>
<p>IMO, in order to &quot;reliably&quot; parse anything, you need to always get the same parse tree, no matter what optional (or &quot;extra&quot;) parts of the spec you support. &nbsp;If you don&#8217;t, then the spec has problems.</p>
<p>Note that I&#8217;m not talking about one parser always getting the same result, I&#8217;m talking about *all* (compliant) parsers always getting the same result as each other.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-389613">
				<div id="div-comment-389613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-389613">
			June 9, 2006 at 11:35 am</a>		</div>

		<p>What&#8217;s wrong with that is that there&#8217;s no way to *reliably* come up with HTML that includes script code (reliably as in: people always see the same thing before the script runs). &nbsp;Today, people see different &quot;end&quot; web pages depending on whether they have JS enabled or not, yes. &nbsp;But if your version of HTML existed, people that didn&#8217;t have JS enabled would (potentially) see a bunch of gobbledeygook code in the middle of the HTML, which may also include various other elements that *weren&#8217;t* supposed to be output.</p>
<p>How is it better to (1) not have the script be able to modify the document, *and* *also* (2) see a bunch of text you don&#8217;t understand and don&#8217;t care about? &nbsp;That goes against every &quot;fail gracefully&quot; maxim in existence. &nbsp;JS is supposed to fail gracefully if the user-agent doesn&#8217;t understand it; so is CSS.</p>
<p>&gt; It&#8217;s hardly a crime to have a tool that gives more accurate results!</p>
<p>No, but it is a crime to artificially cripple tools just because they don&#8217;t understand the language you used.</p>
<p>My basic axiom is: &nbsp;A document should be either valid all the time, or invalid all the time. &nbsp;You *can&#8217;t* make a document&#8217;s validity depend on how well the validator understands script. &nbsp;The whole *point* of validation is to give your document a prayer of showing up the same way regardless of browser (as long as the browser complies with the standard). &nbsp;If you suddenly introduce some feature that makes random script text show up in some browsers, you&#8217;ve broken that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-541063">
				<div id="div-comment-541063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dascritch.net/blog.php/post/2007/08/22/Pour-quelques-Javascripts-de-plus' rel='external nofollow' class='url'>Da Scritch Net Works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060605-00/?p=30983#comment-541063">
			August 22, 2007 at 12:30 pm</a>		</div>

		<p>C&#8217;est bien joli de mettre des effets partout&#8230; Mais si &#231;a doit rendre un site tr&#232;s lent, la java en vaut-elle le lag ? Pendant la reconception de mon site, je me suis furieusement gratt&#233; la t&#234;te pour vous.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

