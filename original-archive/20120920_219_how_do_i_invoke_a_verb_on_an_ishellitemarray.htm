<html>
<head>
<title>How do I invoke a verb on an IShellItemArray?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I invoke a verb on an IShellItemArray?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 20, 2012 / year-entry #220</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120920-00/?p=6553</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>3</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to invoke a command on multiple items at once. I have an IShellItemArray, and I want to invoke a verb with that array as the parameter. I know that I can invoke a verb on a single IShellItem by the code below, but how do I pass an entire array? void InvokeVerbOnItem(__in...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to invoke a command on multiple items at once.
</p>
<blockquote class=q>
<p>
I have an <code>IShellItemArray</code>,
and I want to invoke a verb with that array as the parameter.
I know that I can invoke a verb on a single <code>IShellItem</code>
by the code below, but how do I pass an entire array?
</p>
<pre>
void InvokeVerbOnItem(__in IShellItem *psi,
                      __in_opt PCWSTR pszVerb)
{
 PIDLIST_ABSOLUTE pidl;
 HRESULT hr = SHGetIDListFromObject(psi, &amp;pidl);
 if (SUCCEEDED(hr)) {
  SHELLEXECUTEINFO sei = { sizeof(sei) };
  sei.fMask = SEE_MASK_UNICODE |
              SEE_MASK_INVOKEIDLIST |
              SEE_MASK_IDLIST;
  sei.lpIDList = pidl;
  sei.lpVerb = pszVerb;
  sei.nShow = SW_SHOWNORMAL;
  ShellExecuteEx(&amp;sei);
  CoTaskMemFree(pidl);
 }
}
</pre>
</blockquote>
<p>
The function <code>Invoke&shy;Verb&shy;On&shy;Item</code>
invokes the command by extracting the pidl,
then asking <code>Shell&shy;Execute&shy;Ex</code> to invoke
the command on the pidl.
A limitation of <code>Shell&shy;Execute*</code> is that
it can invoke on only one pidl.
What if you want to invoke it on a bunch of pidls at once?
(Doing it all at once gives the target program the opportunity
to optimize the multi-target invoke.)
</p>
<p>
<a HREF="http://msdn.microsoft.com/en-us/library/bb759784(VS.85).aspx">
As noted in the documentation</a>,
passing
<code>SEE_<wbr>MASK_<wbr>INVOKE&shy;ID&shy;LIST</code> flag
tells the
<code>Shell&shy;Execute&shy;Ex</code> 
to
"use the <b>IContextMenu</b> interface of the selected item's
shortcut menu handler."
</p>
<p>
So if you are frustrated by the limitations of the middle man,
then cut out the middle man!
</p>
<pre>
void InvokeVerbOnItemArray(__in IShellItemArray *psia,
                           __in_opt PCWSTR pszVerb)
{
 IContextMenu *pcm;
 HRESULT hr = psia-&gt;BindToHandler(BHID_SFUIObject,
                                  IID_PPV_ARGS(&amp;pcm));
 if (SUCCEEDED(hr)) {
  ... <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/09/20/231739.aspx">context menu invoke incorporated by reference</a> ...
  pcm-&gt;Release();
 }
}
</pre>
<p>
If you think about it, the original
<code>Invoke&shy;Verb&shy;On&shy;Item</code>
function could've avoid the middle man too.
It converted an <code>IShellItem</code>
(a live object which encapsulates an
<code>IShell&shy;Folder</code> and a child pidl)
into an absolute pidl (a dead object),
which then passed it to
<code>Shell&shy;Execute&shy;Ex</code>,
which had to reanimate the object back into an
<code>IShell&shy;Folder</code> and child pidl
so it could call
<code>Get&shy;UI&shy;Object&shy;Of</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1012073">
				<div id="div-comment-1012073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120920-00/?p=6553#comment-1012073">
			September 20, 2012 at 7:16 am</a>		</div>

		<p>What does SEE_MASK_UNICODE actually do? ShellExecute is a A/W function so it is not for the strings you pass in. Is it for DDE or something like that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1012083">
				<div id="div-comment-1012083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120920-00/?p=6553#comment-1012083">
			September 20, 2012 at 7:24 am</a>		</div>

		<p>Dealing with shell item arrays is easy, the hard part is getting the association array correct so you can call CDefFolderMenu_Create2 or SHCreateDefaultContextMenu when the pidls are not in the same parent IShellFolder (like Win+F or other search views)!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012133">
				<div id="div-comment-1012133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120920-00/?p=6553#comment-1012133">
			September 20, 2012 at 4:36 pm</a>		</div>

		<p>Great, now how do you invoke a verb on multiple items that don&#39;t all share a common parent folder?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

