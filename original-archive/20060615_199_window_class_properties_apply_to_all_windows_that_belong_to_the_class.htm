<html>
<head>
<title>Window class properties apply to all windows that belong to the class</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Window class properties apply to all windows that belong to the class</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 15, 2006 / year-entry #200</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060615-00/?p=30863</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Window class properties apply to all windows that belong to the class. That's why they're called class properties. This seems like an obvious thing to say when put in so many words, but I see many "solutions" that lose sight of this simple fact. All the properties that you set in the WNDCLASS (or WNDCLASSEX)...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Window class properties apply to all windows that belong to the class</a>.
That's why they're called class properties.
This seems like an obvious thing to say when put in so many words,
but I see many "solutions" that lose sight of this simple fact.
</p>
<p>
All the properties that you set in the <code>WNDCLASS</code>
(or <code>WNDCLASSEX</code>)
are window class properties,
as are the properties that you can access via
<code>Get/SetClassWord/Long/LongPtr</code>.
This means that
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2006/02/27/539880.aspx">
when you change those properties,
they affect the entire class</a>.
For example, if you write
</p>
<pre>
SetClassLongPtr(hwnd, GCLP_HCURSOR, (LONG_PTR)hcurNew);
</pre>
<p>
then you aren't just changing the cursor for the window
specified by <code>hwnd</code>.
You're changing the cursor for all windows of the same class
as <code>hwnd</code>.
For example, if <code>hwnd</code> is an edit control,
then you changed the default cursor for all edit controls.
</p>
<p>
But what if you want to change a class property for just one
particular window instead of for all windows of a class?
</p>
<p>
If you want to change the menu, background, cursor, or icon
for a particular window,
you can override the class default
on a per-window basis:
</p>
<table BORDER=1 BORDERCOLOR=black STYLE="border-collapse: collapse">
<tr>
<th>Property</th>
<th>Method</th>
</tr>
<tr>
<td VALIGN=BASELINE>Menu</td>
<td VALIGN=BASELINE><code>SetMenu(hwnd, hmenuNew)</code> +
                        destroy the old menu</td>
</tr>
<tr>
<td VALIGN=BASELINE>Background</td>
<td VALIGN=BASELINE>Override <code>WM_ERASEBKGND</code></td>
</tr>
<tr>
<td VALIGN=BASELINE>Cursor</td>
<td VALIGN=BASELINE>Override <code>WM_SETCURSOR</code></td>
</tr>
<tr>
<td VALIGN=BASELINE>Icon</td>
<td VALIGN=BASELINE><code>SendMessage(hwnd, WM_SETICON, iconSize, (LPARAM)hiconNew)</code></td>
</tr>
</table>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-391943">
				<div id="div-comment-391943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060615-00/?p=30863#comment-391943">
			June 15, 2006 at 11:11 am</a>		</div>

		<p>What about subclassing each individual window/control with a simple implementation that otherwise just passes everything to the previous class&#8217; window procedure?</p>
<div CLASS=post>[<i>What about it? If that&#8217;s all it did, it seems like an awfully expensive nop. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-392133">
				<div id="div-comment-392133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ring Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060615-00/?p=30863#comment-392133">
			June 15, 2006 at 6:54 pm</a>		</div>

		<p>It would probably have been wiser for functions like SetClassLongPtr to take a WNDCLASS or an ATOM instead of an HWND. It makes more sense, and I bet nobody would&#8217;ve made the mistake of thinking the new value only applied to the one window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-392203">
				<div id="div-comment-392203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060615-00/?p=30863#comment-392203">
			June 15, 2006 at 9:13 pm</a>		</div>

		<blockquote><p>
  Menu<br />
  <br />&gt;SetMenu(hwnd, hmenuNew) + destroy the old menu</p>
<p>It always makes me nervous, trying to figure out if an old menu (or font or whatever) should be destroyed. &nbsp;If the old object belonged to a window class, and we destroy the old object, how do we know that other windows of the same class aren&#8217;t going to get in trouble?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-392213">
				<div id="div-comment-392213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060615-00/?p=30863#comment-392213">
			June 15, 2006 at 9:52 pm</a>		</div>

		<p>I always liked the Set[Class|Window].* functions &#8212; so obviously additional memory allocated at the end of a C struct (at least to my way of thinking, could&#8217;ve been assembler originally). And definitely an interface designed by and for people of, dare I say, a bygone age.</p>
<p>The other thing of note, is the lack of orthogonality in the ways the class defaults are overridden.</p>
<p>I&#8217;m not saying these are bad, they&#8217;re simply not something anyone would design in 2006. Right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-392713">
				<div id="div-comment-392713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060615-00/?p=30863#comment-392713">
			June 18, 2006 at 5:28 am</a>		</div>

		<p>&gt; What about it? If that&#8217;s all it did, it seems<br />
<br />&gt; like an awfully expensive nop.</p>
<p>I think what I was trying to ask is *how much* really expensive is<br />
the overhead? Especially compared with the relative simplicity of then<br />
being able to use those class functions to change a parameter when<br />
needed, and, erm, let the OS worry about it?</p>
<p>I agree it&#8217;s messier at runtime, but if some app requires multiple<br />
windows/controls like that, writing a single MakeNewClass function and<br />
a generic minimal window procedure for it can look more appealing then<br />
overriding specific messages per-control in several different window<br />
procedure of the application.</p>
<p>BTW, off-topic, but your in-comment replies do not show up in<br />
comment feeds. You may want to raise a request to have a comment<br />
updated in the feeds when it&#8217;s edited. It&#8217;s a very safe assumption that<br />
your replies are important to everyone monitoring a post here, so when<br />
you do reply people shouldn&#8217;t see that there are no new comments on the<br />
post&#8230;</p>
<div CLASS=post>[<i>If you want to register one generic class and subclass it every time you create it, then you can do that. You can work out the overhead yourself (a few extra calls at window creation, plus a few more at every window message) &#8211; you get to decide if it&#8217;s worth it. Note of course that if you do this then anybody who tries to manipulate your program via FindWindow (e.g. your automated testing system) will be in for a surprise. If you want to request features for the blog software, you can raise them to the software vendor. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393413">
				<div id="div-comment-393413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">testing123</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060615-00/?p=30863#comment-393413">
			June 20, 2006 at 10:53 am</a>		</div>

		<p>Is automated testing systems incompatible with subclassed windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

