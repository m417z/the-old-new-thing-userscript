<html>
<head>
<title>Deleted but not yet forgotten</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Deleted but not yet forgotten</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 7, 2004 / year-entry #223</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Earlier, I discussed the interactions of the various FILE_SHARE_* flags, then Larry Osterman took this as inspiration to give a history of the file sharing flags. If a file is opened with delete-sharing enabled and you delete the file, the file doesn't actually go away until the open handles are closed. In the meantime, the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://weblogs.asp.net/oldnewthing/archive/2004/05/11/129759.aspx">  Earlier, I discussed the interactions of the various FILE_SHARE_* flags</a>,  then <a href="http://weblogs.asp.net/LarryOsterman">Larry Osterman</a> took this as  inspiration to give  <a href="http://weblogs.asp.net/LarryOsterman/archive/2004/05/13/131263.aspx">a  history of the file sharing flags</a>.</p>
<p>  If a file is opened with delete-sharing enabled and you delete the file,  the file doesn't actually go away until the open handles are closed.  In the meantime, the file hangs around as a zombie.  (Under Unix, a deleted file with open handles is removed from the  directory and merely floats around in the happy sea of inodes  with no name.)  </p>
<p>  Why doesn't the file go away?  </p>
<p>  Well, one reason is that  <a href="http://msdn.microsoft.com/library/en-us/kmarch/hh/kmarch/k112__2003_2xf6.asp">  device drivers can ask for the name of the file that corresponds  to an open handle</a>.  If the directory entry were removed, then there would be no name  to return!  (What would you expect to be returned from GetModuleFileName if  the module no longer exists?  Should it be possible for  GetModuleFileName to return ERROR_FILE_NOT_FOUND?)  </p>
<p>  Another reason is that if power were to be lost while a  "forgotten but not lost" handle was still open,  you would now have  lost clusters on the disk.  </p>
<p>  And a final reason is that a "pending delete" file isn't  actually gone for good.  A driver can  <a href="http://weblogs.asp.net/larryosterman/archive/2004/05/13/131263.aspx#132439">  "undelete" the file by clearing the delete-on-close flag</a>!  </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-181353">
				<div id="div-comment-181353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.smackfu.com' rel='external nofollow' class='url'>Scott</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181353">
			June 7, 2004 at 7:52 am</a>		</div>

		<p>The Unix way has the advantage of allowing you to replace an in-use file.</p>
<p>Relying on applications using a specific flag like delete-sharing doesn&#8217;t do much good since most applications don&#8217;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181373">
				<div id="div-comment-181373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181373">
			June 7, 2004 at 7:54 am</a>		</div>

		<p>These are excuses to get around Win32&#8217;s coupling of the directory structure and files.  The device driver and GetModuleFileName situations are not so much problems with architecture as they are design limitations in Win32.  If a file handle could have no assiciated file, then people would get used to it pretty fast.  Same with modules.  There are plenty of other idiosyncracies with Win32 that people have to learn over the years.</p>
<p>As for &quot;forgotten but not lost,&quot; when a file gets deleted, put the file node number in a list on the filesystem of nodes that need to get deleted on next boot in the case of a power loss.  Simple.</p>
<p>This is unfortunately another blog entry where the answer to Win32&#8217;s aberrent behavior is justified, but the real answer is that it&#8217;s because Win32 is what it is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-181393">
				<div id="div-comment-181393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181393">
			June 7, 2004 at 7:58 am</a>		</div>

		<p>Yes, that&#8217;s just the way it is. I&#8217;m not so much justifying the original design as justifying why it can&#8217;t be changed at this point. Too much relies on the old behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181413">
				<div id="div-comment-181413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181413">
			June 7, 2004 at 8:16 am</a>		</div>

		<p>Actually, I have once had an experience of accidentally deleting a file while it was being used. “Oops! If I close that media player, the file will be gone; I do not have the skill of ‘clearing the delete-on-close flag’, so this is not an option; what if I reset the machine?” So I did, and after a bootup and a chkdsk the file was there intact. I’d be really impressed (and disappointed) if Windows remembered that this file had been condemned.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-181473">
				<div id="div-comment-181473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181473">
			June 7, 2004 at 9:33 am</a>		</div>

		<p>How come handle to filename mapping isn&#8217;t exposed in the win api?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181483">
				<div id="div-comment-181483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181483">
			June 7, 2004 at 9:52 am</a>		</div>

		<p>I don&#8217;t know. Probably because there hasn&#8217;t been a good reason to, and because if you do it, then people will rely on it even more than they inadvertently do now, making it even harder to change the behavior in the future.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-181493">
				<div id="div-comment-181493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181493">
			June 7, 2004 at 9:59 am</a>		</div>

		<p>Since a file shared with FILE_SHARE_DELETE can be renamed while it&#8217;s still open, the name can become invalid at any time even though the file can&#8217;t be deleted. So any program that relies on re-opening such a file by name is already broken. This kluge just reduces the problem to a race condition.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181503">
				<div id="div-comment-181503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181503">
			June 7, 2004 at 10:03 am</a>		</div>

		<p>I&#8217;m mostly curious have programs like this work:</p>
<p><a target="_new" href="http://www.sysinternals.com/ntw2k/freeware/handle.shtml" rel="nofollow">http://www.sysinternals.com/ntw2k/freeware/handle.shtml</a></p>
<p>&#8230; that actually get the filename from the handle.  I&#8217;m sure if I dust off Advanced Windows I can find it in the kernel section, but that&#8217;s at home right now :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-181423">
				<div id="div-comment-181423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181423">
			June 7, 2004 at 8:22 am</a>		</div>

		<p>Scott: Of course many said applications *rely* on the file not being deleted while it&#8217;s open. For example, they may try to open it a second time and not handle the error case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181523">
				<div id="div-comment-181523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181523">
			June 7, 2004 at 10:06 am</a>		</div>

		<p>Ben: But a program that opens *without* FILE_SHARE_DELETE can be certain that the file cannot even be renamed. It&#8217;s the programs that open without FILE_SHARE_DELETE (i.e.: nearly all of them) that I&#8217;m concerned about.</p>
<p>Jack: That program installs a driver and therefore can use the driver function.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-181643">
				<div id="div-comment-181643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mgrier' rel='external nofollow' class='url'>Michael</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181643">
			June 7, 2004 at 6:34 pm</a>		</div>

		<p>Re: handle to name mapping:</p>
<p>The Win32 layer is actually just that &#8211; a layer on top of the underlying NT operating system APIs which are mostly in the kernel.</p>
<p>The kernel does keep track of the name of the file that was opened, but it&#8217;s in the kernel NT namespace, not in the win32 namespace and sometimes it&#8217;s not possible to (easily) map back from the NT namespace to the Win32 namespace.</p>
<p>So, to do this reliably would entail the Win32 layer somehow capturing the original path and keeping it associated with the handle.  So then either Win32 handles aren&#8217;t kernel handles any more or the kernel handle table rundown needs to understand managing lifetime of the copy of the win32 path.</p>
<p>(You can get a perspective on playing with the NT namespace by using \? paths with the Win32 APIs &#8211; they are tunnelled through to the NT namespace by replacing the 2nd slash with another question mark &#8211; e.g. &quot;\?foo&quot; turns into &quot;??foo&quot;.)</p>
<p>For the most part the NT layer is a much better API set than the Win32 layer although more complicated in many respects (disassemble kernel32!CreateFileW some time in a debugger).</p>
<p>But this file handle/deletion semantic is actually very deep in the NT model also.  It&#8217;s believed that if someone were able to call CreateFileW() on c:foo.txt and then later on call it again without having closed the handle and end up with a different handle on a different file that happens to be at the same point in the namespace there would be massive compatibility problems.</p>
<p>I&#8217;m somewhat skeptical but I do beat on the FS guys about this somewhat regularly.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181683">
				<div id="div-comment-181683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.digitalfanatics.org' rel='external nofollow' class='url'>Johan Thelin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181683">
			June 7, 2004 at 9:38 pm</a>		</div>

		<p>Would this be useable to create auto-self-deleting temporary files as one can in Unix? (If I look to the other comments, it does not seem so&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-181693">
				<div id="div-comment-181693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181693">
			June 7, 2004 at 10:07 pm</a>		</div>

		<p>re: auto-self-deleting temporary files</p>
<p>Isn&#8217;t that what the FILE_FLAG_DELETE_ON_CLOSE flag is for?</p>
<p>As far as I&#8217;m concerned the only thing that&#8217;s broken here is that FILE_SHARE_DELETE isn&#8217;t the default. Applications shouldn&#8217;t restrict the user&#8217;s ability to delete and rename files unless there are very good reasons to do so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181703">
				<div id="div-comment-181703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181703">
			June 7, 2004 at 11:05 pm</a>		</div>

		<p>FILE_SHARE_DELETE is off by default because programs designed for Windows 95/98/Me assume that files cannot be deleted while they are open. (Notice that Windows 95/98/Me didn&#8217;t support FILE_SHARE_DELETE.)</p>
<p>In other words, we&#8217;re stuck with the default being &quot;deny delete&quot; for compatibility reasons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-181733">
				<div id="div-comment-181733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Bartrum</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181733">
			June 8, 2004 at 3:54 am</a>		</div>

		<p>Raymond: Would it be possible to change the default for programs written for Longhorn?</p>
<p>That way, you could have your cake and eat it too.  At the cost of increased complexity in the API, of course.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181743">
				<div id="div-comment-181743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181743">
			June 8, 2004 at 4:49 am</a>		</div>

		<p>This reminds me of a bug I discovered in Windows 2000 (well, probably, it could have been our bug but it seemed unlikely). I put it down to the delete on close flag not quite being used in the right way. The problem did not occur on Windows XP.</p>
<p>We had a custom USB driver that had the usual GUID named device nodes in the NT namespace. Our application kept the device node open some of the time and it was possible for the following sequence of events to occur:</p>
<p>1. Device is opened by application.</p>
<p>2. Device is physically disconnected. Windows tries to delete the device node and fails because it is still open. Instead it just marks it for deletion on close.</p>
<p>3. Device is reconnected. Windows tries to recreate the device nodes but they already exist. :(</p>
<p>4. The application finally notices that the device has gone away and it closes the device. The device nodes are now deleted.</p>
<p>So, you&#8217;re left with an attached device that no longer has its device nodes. The only solution I found was to disconnect the device and reconnect it again.</p>
<p>Mike.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-181883">
				<div id="div-comment-181883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181883">
			June 9, 2004 at 7:14 am</a>		</div>

		<p>Who is the person that determines that handle to filename mapping isn&#8217;t important enough to be in the winapi but relatively useless functions like GetMessageExtraInfo/SetMessageExtraInfo and GetBitmapDimensionEx/SetBitmapDimensionEx (first question, why did they even bother to make an ex version? second question, if windows doesn&#8217;t use this information at all why does msdn say what the units of measurement are?) should be?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-181913">
				<div id="div-comment-181913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040607-00/?p=38993#comment-181913">
			June 9, 2004 at 7:50 am</a>		</div>

		<p>Those functions are historical; the Win32 team had no choice but to support them. (The Ex versions were necessary during the conversion from Win16 to Win32.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

