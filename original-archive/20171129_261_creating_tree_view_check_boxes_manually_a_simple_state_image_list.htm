<html>
<head>
<title>Creating tree view check boxes manually: A simple state image list</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Creating tree view check boxes manually: A simple state image list</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 29, 2017 / year-entry #262</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Rebuilding the states, maybe with some new ones.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Before the introduction of the <code>TVS_</code><code>CHECK&shy;BOXES</code>
style,
you had to create your own state images which consisted
of a checked and unchecked check box.
To draw check boxes manually,
you used the
<code>Draw&shy;Frame&shy;Control</code> function.
So let's do that:
Build check boxes with
the <code>Draw&shy;Frame&shy;Control</code> function.
</p>
<p>
As a bonus, we will add an "indeterminate" check box state
and two "disabled" check box states (unchecked and checked).
</p>
<p>
Recall that the state image list for a tree view is an
image list whose images correspond to the parameter passed
to the
<code>INDEX&shy;TO&shy;STATE&shy;IMAGE&shy;MASK</code>
macro.
In other words, to get state image 1, you set the
<code>TVIS_</code><code>STATE&shy;IMAGE&shy;MASK</code>
bits in your <code>stateMask</code> and set
the <code>state</code> to include
<code>INDEX&shy;TO&shy;STATE&shy;IMAGE&shy;MASK(1)</code>.
</p>
<p>
Image zero in the image list is not used.
If you set the overlay index to zero,
then you get no state image at all.
(Note that the nonexisting state image occupies
no space.
If you want to show a blank space where the
state image would have been,
then you need to add an explicit state image
which is blank.
We leave that as an exercise for the reader.)
</p>
<pre>
HIMAGELIST CreateTreeViewCheckBoxes(HWND hwnd, int cx, int cy)
{
  const int frames = 6;

  // Get a DC for our window.
  HDC hdcScreen = GetDC(hwnd);

  // Create a 32bpp bitmap that holds the desired number of frames.
  BITMAPINFO bi = { sizeof(BITMAPINFOHEADER), cx * frames, cy, 1, 32 };
  void* p;
  HBITMAP hbmCheckboxes = CreateDIBSection(hdcScreen, &amp;bi,
    DIB_RGB_COLORS, &amp;p, nullptr, 0);

  // Create a compatible memory DC.
  HDC hdcMem = CreateCompatibleDC(hdcScreen);

  // Select our bitmap into it so we can draw to it.
  HBITMAP hbmOld = SelectBitmap(hdcMem, hbmCheckboxes);

  // Set up the rectangle into which we do our drawing.
  RECT rc = { 0, 0, cx, cy };

  // Frame 0 is not used. Draw nothing.
  OffsetRect(&amp;rc, cx, 0);

  // Flags common to all of our DrawFrameControl calls:
  // Draw a flat checkbox.
  UINT baseFlags = DFCS_FLAT | DFCS_BUTTONCHECK;

  // Frame 1: Unchecked.
  DrawFrameControl(hdcMem, &amp;rc, DFC_BUTTON,
    baseFlags);
  OffsetRect(&amp;rc, cx, 0);

  // Frame 2: Checked.
  DrawFrameControl(hdcMem, &amp;rc, DFC_BUTTON,
    baseFlags | DFCS_CHECKED);
  OffsetRect(&amp;rc, cx, 0);

  // Frame 3: Indeterminate.
  DrawFrameControl(hdcMem, &amp;rc, DFC_BUTTON,
    baseFlags | DFCS_CHECKED | DFCS_BUTTON3STATE);
  OffsetRect(&amp;rc, cx, 0);

  // Frame 4: Disabled, unchecked.
  DrawFrameControl(hdcMem, &amp;rc, DFC_BUTTON,
    baseFlags | DFCS_INACTIVE);
  OffsetRect(&amp;rc, cx, 0);

  // Frame 5: Disabled, checked.
  DrawFrameControl(hdcMem, &amp;rc, DFC_BUTTON,
    baseFlags | DFCS_INACTIVE | DFCS_CHECKED);

  // The bitmap is ready. Clean up.
  SelectBitmap(hdcMem, hbmOld);
  DeleteDC(hdcMem);
  ReleaseDC(hwnd, hdcScreen);

  // Create an imagelist from this bitmap.
  HIMAGELIST himl = ImageList_Create(cx, cy, ILC_COLOR, frames, frames);
  ImageList_Add(himl, hbmCheckboxes, nullptr);

  // Don't need the bitmap any more.
  DeleteObject(hbmCheckboxes);

  return himl;
}
</pre>
<p>
Okay, what happened here?
</p>
<p>
We created an image list to hold
<var>N</var>&#x2005;+&#x2005;1 state images,
because image zero is not used,
then we draw the various images.
We draw the images with the
<code>DFCS_</code><code>FLAT</code> style
because we don't want any 3D effects.
(Note also that I am ignore RTL issues.)
</p>
<p>
Let's take this for a spin.
Start with our
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20030723-00/?p=43073">
scratch program</a>
and make these changes:
</p>
<pre>
<font COLOR="blue">void PopulateTreeView(HWND hwnd)
{
  TVINSERTSTRUCT tvis;
  tvis.hParent = TVI_ROOT;
  tvis.hInsertAfter = TVI_LAST;
  tvis.item.mask = TVIF_TEXT | TVIF_STATE;
  tvis.item.stateMask = TVIS_STATEIMAGEMASK | TVIS_EXPANDED;
  tvis.item.state = INDEXTOSTATEIMAGEMASK(0) | TVIS_EXPANDED;
  tvis.item.pszText = TEXT("Root");

  tvis.hParent = TreeView_InsertItem(g_hwndChild, &amp;tvis);

  tvis.item.pszText = TEXT("0");
  tvis.item.state = INDEXTOSTATEIMAGEMASK(0);
  TreeView_InsertItem(g_hwndChild, &amp;tvis);

  tvis.item.pszText = TEXT("1");
  tvis.item.state = INDEXTOSTATEIMAGEMASK(1);
  TreeView_InsertItem(g_hwndChild, &amp;tvis);

  tvis.item.pszText = TEXT("2");
  tvis.item.state = INDEXTOSTATEIMAGEMASK(2);
  TreeView_InsertItem(g_hwndChild, &amp;tvis);

  tvis.item.pszText = TEXT("3");
  tvis.item.state = INDEXTOSTATEIMAGEMASK(3);
  TreeView_InsertItem(g_hwndChild, &amp;tvis);

  tvis.item.pszText = TEXT("4");
  tvis.item.state = INDEXTOSTATEIMAGEMASK(4);
  TreeView_InsertItem(g_hwndChild, &amp;tvis);

  tvis.item.pszText = TEXT("5");
  tvis.item.state = INDEXTOSTATEIMAGEMASK(5);
  TreeView_InsertItem(g_hwndChild, &amp;tvis);
}</font>

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
  <font COLOR="blue">g_hwndChild = CreateWindow(WC_TREEVIEW,
    nullptr,
    TVS_HASBUTTONS | TVS_HASLINES | TVS_LINESATROOT |
    WS_CHILD | WS_VISIBLE,
    CW_USEDEFAULT, CW_USEDEFAULT,
    CW_USEDEFAULT, CW_USEDEFAULT,
    hwnd, nullptr, g_hinst, 0);

  HIMAGELIST himl = CreateClassicTreeViewCheckBoxes(g_hwndChild,
   16, 16);
  TreeView_SetImageList(g_hwndChild, himl, TVSIL_STATE);

  PopulateTreeView(g_hwndChild);</font>

  return TRUE;
}

void
OnDestroy(HWND hwnd)
{
  <font COLOR="blue">ImageList_Destroy(TreeView_SetImageList(
    g_hwndChild, nullptr, TVSIL_STATE));</font>
  PostQuitMessage(0);
}
</pre>
<p>
Yes, it's anachronistic using <code>nullptr</code> in 1995.
Work with me here.
</p>
<p>
Note the destruction code here is the same code we use
to avoid the image list leak.
It's more obvious in this formulation that the destruction is
necessary,
seeing as we created the image list in the first place.
</p>
<p>
We aren't responding to clicks on the check box yet.
We'll add that next time.
But for now, you can run the program and observe that
we displayed check box state images next to items
1 through 5.
Item 0 does not have a state image because a state image
index of zero means "No state image."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1317185">
				<div id="div-comment-1317185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317185">
			November 29, 2017 at 7:21 am</a>		</div>

		<p>Small Typo: &#8220;am ignore RTL&#8221; instead of ignoring.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1 parent" id="comment-1317195">
				<div id="div-comment-1317195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317195">
			November 29, 2017 at 7:29 am</a>		</div>

		<p>I agree that the flat style looks best for classic but how are you going to keep it later on? The EX checkbox styles are not usable here and are Vista+. On XP/2003 you will have to draw with the Theme API and there is no flat style there.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1317205">
				<div id="div-comment-1317205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317205">
			November 29, 2017 at 8:50 am</a>		</div>

		<p>&#8220;EX checkbox styles&#8221;?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-3 parent" id="comment-1317215">
				<div id="div-comment-1317215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317215">
			November 29, 2017 at 10:02 am</a>		</div>

		<p>TVS_EX_*CHECKBOXES, see <a href="https://social.msdn.microsoft.com/Forums/vstudio/en-US/5df59c17-9ff5-44dc-89ba-f0732a66000b/ctreectrl-tristate-checkboxes-possible?forum=vcgeneral" rel="nofollow">https://social.msdn.microsoft.com/Forums/vstudio/en-US/5df59c17-9ff5-44dc-89ba-f0732a66000b/ctreectrl-tristate-checkboxes-possible?forum=vcgeneral</a></p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1317225">
				<div id="div-comment-1317225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317225">
			November 29, 2017 at 10:27 am</a>		</div>

		<p>Ah right, those. I imagine what&#8217;s being done here is what is done if you select the Windows Classic theme for the whole system&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1317196">
				<div id="div-comment-1317196" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">creaothceann</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317196">
			November 29, 2017 at 8:43 am</a>		</div>

		<p>Easy: just discontinue support for anything below 10.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1317235">
				<div id="div-comment-1317235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317235">
			November 29, 2017 at 12:36 pm</a>		</div>

		<p>Is the indeterminate checkbox supposed to show up as a grayed checked box? It does for me on Windows 7, at least.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1317245">
				<div id="div-comment-1317245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317245">
			November 29, 2017 at 12:55 pm</a>		</div>

		<p>Also what RTL issues are there with checkbox states? The only RTL issue I can see in the DrawFrameControl() docs have to do with submenu item arrows&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1317315">
				<div id="div-comment-1317315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317315">
			November 30, 2017 at 1:00 pm</a>		</div>

		<p>And I might as well ask this too just to get it out there, even though at this point I am asking way too many questions: where does the 16&#215;16 metric come from? Is it just an example for the purpose of a Little Program, or is it a metric that we should actually use in our own code? Yeah, I know this is pushing it, but I might as well :S</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-the-wench odd alt thread-even depth-1 parent" id="comment-1317255">
				<div id="div-comment-1317255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Monochrome+Wench' rel='external nofollow' class='url'>Monochrome Wench</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317255">
			November 29, 2017 at 3:26 pm</a>		</div>

		<p>I wonder how many issues would have been avoided had nullptr existed in 1995</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1317265">
				<div id="div-comment-1317265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317265">
			November 29, 2017 at 3:41 pm</a>		</div>

		<p>Not too many. People quickly learned to not make functions that were overloads of pointers and integers.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1317275">
				<div id="div-comment-1317275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317275">
			November 29, 2017 at 6:26 pm</a>		</div>

		<p>Not to mention that in the specific case mentioned in this and the previous article (the use of SAL macros like _In_opt_ to say &#8220;this parameter can be a null pointer&#8221;) the existence of nullptr doesn&#8217;t really mean anything special as nullptr is a C++-specific name that solves C++-specific problems and that the older NULL is equivalent (so just replace nullptr with NULL if you want that code to look straight out of 1995).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1317295">
				<div id="div-comment-1317295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317295">
			November 29, 2017 at 11:40 pm</a>		</div>

		<p>Two jobs and maybe fifteen years ago, I used a variation of this technique to implement a tree view where each item could have four checkboxes. It was in a user privilege configuration dialog, and the checkboxes represented the rights to see, read, write and something else that I don’t remember clearly. Maybe delete.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1317375">
				<div id="div-comment-1317375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171129-00/?p=97485#comment-1317375">
			December 2, 2017 at 3:10 am</a>		</div>

		<p>Where is it documented that the images should be 16×16?</p>
<p>Also, I assume a real program would loop though an array of DFCS_ styles instead of quintuplicating code.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

