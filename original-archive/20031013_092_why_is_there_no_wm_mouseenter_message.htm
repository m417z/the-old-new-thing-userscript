<html>
<head>
<title>Why is there no WM_MOUSEENTER message?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is there no WM_MOUSEENTER message?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 13, 2003 / year-entry #93</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20031013-00/?p=42193</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There is a WM_MOUSELEAVE message. Why isn't there a WM_MOUSEENTER message? Because you can easily figure that out for yourself. When you receive a WM_MOUSELEAVE message, set a flag that says, "The mouse is outside the window." When you receive a WM_MOUSEMOVE message and the flag is set, then the mouse has entered the window....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
        There is a <code>WM_MOUSELEAVE</code> message. Why isn't there a <code>WM_MOUSEENTER</code> message? 
    </p>
<p>
        Because you can easily figure that out for yourself. 
    </p>
<p>
        When you receive a <code>WM_MOUSELEAVE</code> message, set a flag that says, "The
        mouse is outside the window." When you receive a <code>WM_MOUSEMOVE</code> message
        and the flag is set, then the mouse has entered the window. (And clear the flag while
        you're there.) 
    </p>
<p>
        Let's illustrate this with our sample program, just to make sure you get the idea: 
    </p>
<pre>BOOL g_fMouseInClient;
void OnMouseMove(HWND hwnd, int x, int y, UINT keyFlags)
{
    if (!g_fMouseInClient) {
        g_fMouseInClient = TRUE;
        MessageBeep(0);
        TRACKMOUSEEVENT tme = { sizeof(tme) };
        tme.dwFlags = TME_LEAVE;
        tme.hwndTrack = hwnd;
        TrackMouseEvent(&amp;tme);
    }
}
    case WM_MOUSELEAVE: g_fMouseInClient = FALSE; return 0;
    HANDLE_MSG(hwnd, WM_MOUSEMOVE, OnMouseMove);
</pre>
<p>
        This program beeps whenever the mouse enters the client area. 
    </p>
<p>    Exercise: If the program starts with the mouse already in the client area without
    moving, why do you get a beep? 
</body></p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-127653">
				<div id="div-comment-127653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dotsql.dyndns.org:8674/weblog/' rel='external nofollow' class='url'>Damit</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031013-00/?p=42193#comment-127653">
			October 13, 2003 at 12:42 pm</a>		</div>

		<p>Is it because g_fMouseInClient is initialized to 0 (FALSE) ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-127663">
				<div id="div-comment-127663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.gotdotnet.com/raymondc/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031013-00/?p=42193#comment-127663">
			October 13, 2003 at 12:44 pm</a>		</div>

		<p>That&#8217;s half of it. But the mouse never moved, so why does it beep?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-127673">
				<div id="div-comment-127673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://thoemmi.dyndns.org/tfr/' rel='external nofollow' class='url'>Thomas Freudenberg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031013-00/?p=42193#comment-127673">
			October 13, 2003 at 12:54 pm</a>		</div>

		<p>YOu explained it two weeks ago in your post &quot;Why do I get spurious WM_MOUSEMOVE messages?&quot;: &quot;Often, Windows wants to do that follow-on work even though the mouse hasn&#8217;t actually moved. The most obvious example is when a window is shown, hidden or moved.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-127683">
				<div id="div-comment-127683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ian.joeuser.com' rel='external nofollow' class='url'>Ian Hanschen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031013-00/?p=42193#comment-127683">
			October 13, 2003 at 1:14 pm</a>		</div>

		<p>just taking a stab at it..</p>
<p>When an app calls GetMessage(), the WM not only dispatches messages from other threads and clears out the message queue, but it also checks the system input queue.  &lt;guessing part because I&#8217;ve not verified&gt; This code checks the win32thread structure for the timestamp of the last mouse message sent.  If it is 0, or does not match,  a WM_MOUSEMOVE input message with the current timestamp is pushed onto the message queue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-127693">
				<div id="div-comment-127693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dmitriy Zaslavskiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031013-00/?p=42193#comment-127693">
			October 13, 2003 at 1:59 pm</a>		</div>

		<p>Raymond,<br />
 Sorry for off topic question, could you blog about using user API from multiple theads, and GUI api (i.e. painting from multiple threads onto the same window). Normally user handles are scopped by desktop and so it seems that multiple threads are already using user/gui subsystems from multiple threads, yet there are some API such as DestroyWindow that require explicitly to be called from the creator thread. There are also some info about &quot;trying&quot; not creating parent/child windows from diff. threads.<br />
Could you comment on the source of all that. Is GDI/USER code multithread safe or not?<br />
Thanks in advance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-127703">
				<div id="div-comment-127703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://supersat.livejournal.com/' rel='external nofollow' class='url'>Karl</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031013-00/?p=42193#comment-127703">
			October 13, 2003 at 3:29 pm</a>		</div>

		<p>I would assume Windows sends a WM_MOUSEMOVE to apps on startup if the cursor is inside the client area because some apps need to know the position of the mouse cursor whenever it is inside the client area to maintain a consistant user experience. For example, if you launch a web browser with a page that has a link directly under the mouse cursor, you&#8217;d expect the cursor to change immediately to indicate it&#8217;s a link.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

