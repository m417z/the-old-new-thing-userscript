<html>
<head>
<title>The dialog manager, part 5: Converting a non-modal dialog box to modal</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The dialog manager, part 5: Converting a non-modal dialog box to modal</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 4, 2005 / year-entry #85</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Let's apply what we learned from last time and convert a modeless dialog box into a modal one. As always, start with the scratch program and make the following additions: INT_PTR CALLBACK DlgProc( HWND hdlg, UINT uMsg, WPARAM wParam, LPARAM lParam) { switch (uMsg) { case WM_INITDIALOG: SetWindowLongPtr(hdlg, DWLP_USER, lParam); return TRUE; case WM_COMMAND: switch...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Let's apply
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/04/01/404531.aspx">
what we learned from last time</a>
and convert a modeless dialog box into a modal one.
As always,
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2003/07/23/54576.aspx">
start with the scratch program</a>
and make the following additions:
</p>
<pre>
INT_PTR CALLBACK DlgProc(
    HWND hdlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
 switch (uMsg) {
 case WM_INITDIALOG:
  SetWindowLongPtr(hdlg, DWLP_USER, lParam);
  return TRUE;
 case WM_COMMAND:
  switch (GET_WM_COMMAND_ID(wParam, lParam)) {
  case IDOK:
   EndDialog(hdlg, 2005);
   break;
  case IDCANCEL:
   EndDialog(hdlg, 1776);
   break;
  }
 }
 return FALSE;
}

int DoModal(HWND hwnd)
{
 return DialogBox(g_hinst, MAKEINTRESOURCE(1), hwnd, DlgProc);
}

void OnChar(HWND hwnd, TCHAR ch, int cRepeat)
{
 switch (ch) {
 case ' ': DoModal(hwnd); break;
 }
}

// Add to WndProc
   HANDLE_MSG(hwnd, WM_CHAR, OnChar);

// Resource file
1 DIALOGEX DISCARDABLE  32, 32, 200, 40
STYLE DS_MODALFRAME | DS_SHELLFONT | WS_POPUP |
      WS_VISIBLE | WS_CAPTION | WS_SYSMENU
CAPTION "Sample"
FONT 8, "MS Shell Dlg"
BEGIN
 DEFPUSHBUTTON "OK",IDOK,20,20,50,14
 PUSHBUTTON "Cancel",IDCANCEL,74,20,50,14
END
</pre>
<p>
Not a very exciting program, I grant you that.
It just displays a dialog box and returns a value
that depends on which button you pressed.
The <code>DoModal</code> function
uses
<a HREF="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/dialogboxes/dialogboxreference/dialogboxfunctions/dialogbox.asp">
the <code>DialogBox</code> function</a>
to do the real work.
</p>
<p>
Now let's convert the <code>DoModal</code>
function so it implements the modal loop directly.
Why?  Just to see how it's done.
In real life, of course, there would normally be no reason to
undertake this exercise;
the dialog box manager does a fine job.
</p>
<p>
First, we need to figure out where we're going to
keep track of the flag we called &lt;dialog still active&gt;
last time.  We'll keep it in a structure that we hang off
the dialog box's <code>DWLP_USER</code> window bytes.
(I sort of planned ahead for this by having the <code>DlgProc</code>
function stash the <code>lParam</code> into the
<code>DWLP_USER</code> extra bytes when the dialog is initialized.)
</p>
<pre>
// fEnded tells us if the dialog has been ended.
// When ended, iResult contains the result code.

typedef struct DIALOGSTATE {
 BOOL fEnded;
 int iResult;
} DIALOGSTATE;

void EndManualModalDialog(HWND hdlg, int iResult)
{
 DIALOGSTATE *pds = reinterpret_cast&lt;DIALOGSTATE*&gt;
     (GetWindowLongPtr(hdlg, DWLP_USER));
 if (pds) {
  pds-&gt;iResult = iResult;
  pds-&gt;fEnded = TRUE;
 }
}
</pre>
<p>
The <code>EndManualModalDialog</code>
takes the place of
<a HREF="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/dialogboxes/dialogboxreference/dialogboxfunctions/enddialog.asp">
the <code>EndDialog</code> function</a>:
Instead of updating the dialog manager's internal
"is the dialog finished?" flag, we update ours.
</p>
<p>
All we have to do to convert our <code>DlgProc</code>
from one using the dialog manager's modal loop to our custom
modal loop, then,
is to change the calls to
<code>EndDialog</code> to call our function instead.
</p>
<pre>
INT_PTR CALLBACK DlgProc(
    HWND hdlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
 switch (uMsg) {
 case WM_INITDIALOG:
  SetWindowLongPtr(hdlg, DWLP_USER, lParam);
  return TRUE;
 case WM_COMMAND:
  switch (GET_WM_COMMAND_ID(wParam, lParam)) {
  case IDOK:
   <font COLOR=blue>EndManualModeDialog</font>(hdlg, 2005);
   break;
  case IDCANCEL:
   <font COLOR=blue>EndManualModeDialog</font>(hdlg, 1776);
   break;
  }
 }
 return FALSE;
}
</pre>
<p>
All that's left is to write the custom dialog message loop.
</p>
<pre>
int DoModal(HWND hwnd)
{
 DIALOGSTATE ds = { 0 };
 HWND hdlg = CreateDialogParam(g_hinst, MAKEINTRESOURCE(1),
             hwnd, DlgProc, reinterpret_cast&lt;LPARAM&gt;(&amp;ds));
 if (!hdlg) {
  return -1;
 }

 EnableWindow(hwnd, FALSE);
 MSG msg;
 msg.message = WM_NULL; // anything that isn't WM_QUIT
 while (!ds.fEnded &amp;&amp; GetMessage(&amp;msg, NULL, 0, 0)) {
  if (!IsDialogMessage(hdlg, &amp;msg)) {
   TranslateMessage(&amp;msg);
   DispatchMessage(&amp;msg);
  }
 }
 if (msg.message == WM_QUIT) {
  PostQuitMessage((int)msg.wParam);
 }
 EnableWindow(hwnd, TRUE);
 DestroyWindow(hdlg);
 return ds.iResult;
}
</pre>
<p>
Most of this should make sense given what we've learned
over the past few days.
</p>
<p>
We start by creating the dialog modelessly, passing
a pointer to our dialog state as the creation parameter,
which as we noted earlier, our dialog procedure squirrels
away in the <code>DWLP_USER</code> window bytes for
<code>EndManualModalDialog</code> to use.
</p>
<p>
Next we disable the owner window; this is done after creating
the modeless dialog,
observing
<a HREF="http://weblogs.asp.net/oldnewthing/archive/2004/02/27/81155.aspx">
the rules for enabling and disabling windows</a>.
We then fall into our message loop, which looks exactly
like what we said it should look.
All we did was substitute <code>!ds.fEnded</code>
for the pseudocode
&lt;dialog still active&gt;.
After the modal loop is done, we continue with the standard
bookkeeping: Re-posting any quit message, re-enabling the
owner before destroying the dialog, then returning the result.
</p>
<p>
As you can see, the basics of modal dialogs are really not that
exciting.  But now that you have this basic framework,
you can start tinkering with it.
</p>
<p>
First, however, your homework is to find a bug in the above
code.  It's rather subtle.  Hint: Look closely at the interaction
between <code>EndManualModalDialog</code> and the modal message loop.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-cornedbee even thread-even depth-1" id="comment-269243">
				<div id="div-comment-269243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CornedBee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269243">
			April 4, 2005 at 10:18 am</a>		</div>

		<p>Does the bug have anything to do with ds.iResult being garbage if the modal loop was terminated by WM_QUIT?</p>
<p>On a side note, can you suggest to the page engineers to add login/register buttons to all pages, not just the global front page? It gets quite confusing if you want to add a comment, but there is not a single link on the whole page where you can do so!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269253">
				<div id="div-comment-269253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anders</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269253">
			April 4, 2005 at 11:01 am</a>		</div>

		<p>ds.iResult is not garbage, it&#8217;s inited to 0</p>
<p>As for the new design, I&#8217;m not a big fan of the navigation stuff on the right&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269263">
				<div id="div-comment-269263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">carlso</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269263">
			April 4, 2005 at 12:30 pm</a>		</div>

		<p>The code will not work if EndManualModeDialog() is called due to a SendMessage() done on another thread.</p>
<p>Remember that SendMessage() can also dispatch messages.  The scenario here is that the DoModal loop is waiting in the call to GetMessage() for a message to appear &#8212; the queue is currently empty.  But another thread calls SendMessage(hdlg, WM_COMMAND, IDCANCEL, NULL) to end the dialog.</p>
<p>The EndManualModeDialog() function will be called from the SendMessage() call, but DoModal would still be stuck in GetMessage() waiting for a message to appear in the queue.</p>
<p>The fix is to add a PostMessage(hdlg, WM_NULL, 0, 0) as the last line of the EndManualModeDialog() function so that the GetMessage() call in the modal loop will return.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269273">
				<div id="div-comment-269273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">carlso</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269273">
			April 4, 2005 at 12:58 pm</a>		</div>

		<p>Just to clarify my last comment (after re-reading, I should have stated things a bit more clearly)&#8230;</p>
<p>When a SendMessage(hdlg,&#8230;) is done from another thread, a context switch will occur so that the call to the WndProc/DlgProc/EndManualModalDialog() is made on the same thread that called CreateDialogParam().  The call to EndManualModalDialog() will be done on top of the stack frame that currently has GetMessage on top.  SendMessage never posts a message into the queue &#8212; the message is executed immediately, and in this case, the message is handled while the thread is waiting in the GetMessage() call.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269283">
				<div id="div-comment-269283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boxmonkey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269283">
			April 4, 2005 at 5:23 pm</a>		</div>

		<p>Suddenly your blog is hideous in FireFox. Until I tell it to lie to the server and say that it&#8217;s IE 6.0&#8230;then everything is peachy. Well, mostly. Posting comments requires you to be logged on now?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269293">
				<div id="div-comment-269293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ndiamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269293">
			April 4, 2005 at 9:05 pm</a>		</div>

		<blockquote><p>
  while (!ds.fEnded &amp;&amp; GetMessage(&amp;msg, NULL, 0, 0)) {</p>
<p>I think that every time you post that code, you do need to post a reminder that you&#8217;ve omitted error checking in order to present an example of something else.  If anyone finds this page via Google and does a copy-and-paste from it, they get a bug.</p>
<p>Your page looked bad in IE6 this morning too, but it&#8217;s getting better now.</p>
<p>I agree with the other person&#8217;s request for a login button.  If it weren&#8217;t for that comment, I&#8217;d have thought comments were no longer allowed at all, but how did some others sneak in.  Then I found the main page that someone talked about.</p>
<p>Your &quot;contact&quot; page is still broken.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-nickfitz even thread-even depth-1" id="comment-269303">
				<div id="div-comment-269303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NickFitz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269303">
			April 5, 2005 at 5:31 am</a>		</div>

		<p>Hi Raymond,</p>
<p>The whole login before commenting/comment form on separate page stuff about which people are voicing concerns might be related to the issues discussed at</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/cyrusn/archive/2005/04/02/404932.aspx" rel="nofollow">http://blogs.msdn.com/cyrusn/archive/2005/04/02/404932.aspx</a></p>
<p>particularly the first comment by ScottW.</p>
<p>HTH</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269313">
				<div id="div-comment-269313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/04/05/405518.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269313">
			April 5, 2005 at 9:03 am</a>		</div>

		<p>Fixing some bugs from last time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269333">
				<div id="div-comment-269333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050404-48/?p=35983#comment-269333">
			April 5, 2005 at 7:18 pm</a>		</div>

		<blockquote><p>
  In real life, of course, there would normally be no reason to undertake this exercise; the dialog box manager does a fine job. </p>
<p>MFC does this so it can handle keyboard messages and call TranslateAccelerator on AX controls in the dialog, so you can tab through the UIs of AX controls (eg the WebBrowser control).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

