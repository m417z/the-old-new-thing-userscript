<html>
<head>
<title>When you break into a user-mode application in the kernel debugger, how do you connect a user-mode debugger?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>When you break into a user-mode application in the kernel debugger, how do you connect a user-mode debugger?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 23, 2016 / year-entry #202</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Make the program its own bridge.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
If you need to transfer control from one user-mode debugger to another,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20100107-00/?p=15363">
you can use a non-invasive debugger as a bridge</a>.
But what if you are broken into the kernel debugger,
and you want to connect a user-mode debugger to the process?
Since the system is broken into the kernel debugger,
it is completely frozen.
How do you unfreeze the system while still letting the
crashed app sit in limbo?
</p>
<p>
What I do is patch in an infinite loop.
</p>
<p>
Change the bytes at the current instruction to
EB FE,
which
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20041111-00/?p=37333">
as I noted some time ago</a>
is an unconditional short jump instruction,
with an offset of &minus;2.
Since the jump target is calculated relative to the
start of the instruction <i>after</i> the jump instruction,
and since short jump instriction is itself two bytes long,
jumping backward two bytes means that the jump instruction
jumps to itself.
In other words, you patched in an infinite loop.
</p>
<p>
Once that's done, resume execution in the kernel debugger.
The system will roar back to life,
except for the thread that crashed,
which is now
<a HREF="https://www.amazon.com/dp/B00YTWEMUO/?tag=tholneth-20">
sitting and spinning</a>.
At this point, you can open a command prompt or whatever
and connect the debugger of your choice.
When that debugger breaks into the process,
go find the thread that originally crashed,
either by recognizing the thread by ID,
or recognizing the stack,
or by simply looking for the thread that is
stuck in a tight infinite loop.
</p>
<p>
At this point, you can patch the original instruction back in
and resume your debugging.
</p>
<p>
Note that this technique freezes only the thread that crashed.
When you resume system execution, the threads that didn't crash
will continue execution.
Therefore,
this solution works well if the problem involves only the
thread that crashed or other threads which are not running
(say, because they are blocked on a synchronization object).
if the problem involves a thread that is running (say,
because you have a race condition),
then allowing those threads to continue execution means that
you lose their state when the system resumes.
</p>
<p>
<b>Exercise</b>:
Suppose there is no user-mode debugger installed on the system
at all, and you can't install one.
What can you do to at least get a user-mode dump of the crashed
process, so you can analyze it offline?
</p>
<p>
<b>Exercise</b>:
In the case where the problem involves multiple threads,
what can you do to preserve the states of all the threads?</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1265816">
				<div id="div-comment-1265816" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Koopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265816">
			September 23, 2016 at 7:12 am</a>		</div>

		<p>Exercies 2&#8230; uhm&#8230; I&#8217;m not good at these things, but&#8230; wouldn&#8217;t I just patch EB FE into all the other threads too, having fun if I have 20 threads of which I should write down the original instructions? =3 Please enlighten me&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle odd alt depth-2 parent" id="comment-1265885">
				<div id="div-comment-1265885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265885">
			September 23, 2016 at 1:55 pm</a>		</div>

		<p>I feel like it&#8217;d be easier to just suspend the process at that point by invoking the necessary function, then let the user-mode debugger handle the threads once it&#8217;s attached.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1265925">
				<div id="div-comment-1265925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://harryjohnston.wordpress.com' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265925">
			September 23, 2016 at 5:47 pm</a>		</div>

		<p>The kernel-mode PsSuspendProcess function?  I can&#8217;t find very much information about it, but I&#8217;m doubtful that it would help with a race condition &#8211; I&#8217;m not sure that it&#8217;s atomic, and even if it is, I&#8217;m not sure how you&#8217;d call it in such a way as to ensure that it ran before the threads in question had had a chance to.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle odd alt depth-4 parent" id="comment-1266035">
				<div id="div-comment-1266035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1266035">
			September 26, 2016 at 9:01 am</a>		</div>

		<p>I was working under the supposition that you&#8217;d call it in the kernel debugger prior to switching to the user-mode debugger.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-5" id="comment-1266045">
				<div id="div-comment-1266045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1266045">
			September 26, 2016 at 9:11 am</a>		</div>

		<p>That doesn&#8217;t work because the kernel debugger is broken into user mode.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1265825">
				<div id="div-comment-1265825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265825">
			September 23, 2016 at 7:58 am</a>		</div>

		<p>The answer to exercise #1 is either:<br />
1. Patch in an invalid instruction, resume, then hope WER left the dump somewhere on the machine or,<br />
2. Assuming the former did not work, find a code cave somewhere and put in just enough instructions to (optionally) load dbghelp.dll, call MiniDumpWriteDump, and exit, then patch in a jump to that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1265826">
				<div id="div-comment-1265826" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265826">
			September 23, 2016 at 8:40 am</a>		</div>

		<p>Exercise 1) Patch in a call to KeBugCheck?</p>
<p>Exercise 2) Patch in a call to KeBugCheck and then pack up a go home.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1265835">
				<div id="div-comment-1265835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265835">
			September 23, 2016 at 8:46 am</a>		</div>

		<p>Patching in a call to KeBugCheck wouldn&#8217;t work because you can&#8217;t call it from user-mode code. Besides, it creates a kernel-mode dump, not a user-mode dump.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev even depth-3 parent" id="comment-1265895">
				<div id="div-comment-1265895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265895">
			September 23, 2016 at 2:22 pm</a>		</div>

		<p>You can have a full memory dump, if your system is set up for that.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4 parent" id="comment-1265905">
				<div id="div-comment-1265905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265905">
			September 23, 2016 at 2:25 pm</a>		</div>

		<p>But that&#8217;s less than a user-mode dump because it doesn&#8217;t capture data from the pagefile (which is not in memory).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-kwadwomi even depth-5" id="comment-1266135">
				<div id="div-comment-1266135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Master+Programmer' rel='external nofollow' class='url'>Master Programmer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1266135">
			September 26, 2016 at 8:28 pm</a>		</div>

		<p>I imagine if you had the kernel debugger attached you could use the .pagein to make sure the user mode memory is present in the dump file.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1265845">
				<div id="div-comment-1265845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://aloiskraus.wordpress.com/' rel='external nofollow' class='url'>Alois Kraus</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265845">
			September 23, 2016 at 10:25 am</a>		</div>

		<p>Patch in an __int 3 and let the crash handler create a dump of the process fast enough to get all threads of the process in the right states? That should be most of the time enough. Not sure if suspending a thread is easily possible from the kernel debugger.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1265866">
				<div id="div-comment-1265866" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Benjamin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160923-00/?p=94375#comment-1265866">
			September 23, 2016 at 12:10 pm</a>		</div>

		<p>I feel like this is too obvious to be the right answer, but can&#8217;t you just use Task Manager or ProcDump to get a user-mode dump while the problem thread is spinning?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

