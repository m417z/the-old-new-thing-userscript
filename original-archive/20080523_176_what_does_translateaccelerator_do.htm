<html>
<head>
<title>What does TranslateAccelerator do?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What does TranslateAccelerator do?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 23, 2008 / year-entry #177</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">For some reason, there appears to be some confusion over what TranslateAccelerator does. It's very simple, and it's all spelled out in the documentation. You give it a message, and if the message is a keypress that matches an entry in the accelerator table, the corresponding WM_COMMAND or WM_SYSCOMMAND message is sent to the window...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
For some reason, there appears to be some confusion over
what <code>TranslateAccelerator</code> does.
It's very simple, and
<a HREF="http://msdn2.microsoft.com/en-us/ms646373.aspx">
it's all spelled out in the documentation</a>.
You give it a message, and if the message is a keypress that
matches an entry in the accelerator table,
the corresponding <code>WM_COMMAND</code> or <code>WM_SYSCOMMAND</code>
message is sent to the window you said you are translating messages for.
</p>
<p>
One point of confusion is which window receives the translated
message.
Is it the window in the <code>MSG</code> structure or the window
passed as the first parameter to
<code>TranslateAccelerator</code>?
This confusion shouldn't last long, though, because of the two options,
one of them raises more questions than it resolves.
</p>
<ul>
<li>If it went to the window in the <code>MSG</code> structure,
    then there would be no need for a
    <code>hWnd</code> parameter to
    <code>TranslateAccelerator</code>,
    since it wouldn't be used for anything.</p>
<li>If it went to the window in the <code>MSG</code> structure,
    there wouldn't be much need to have a <code>TranslateAccelerator</code>
    function anyway, because even without it,
    the message would have gone to the window in the <code>MSG</code>
    structure anyway.
</ul>
<p>
If the message matches an accelerator,
the <code>WM_COMMAND</code> or <code>WM_SYSCOMMAND</code> message
goes to the window you passed as the first parameter to
<code>TranslateAccelerator</code>.
</p>
<p>
Once you understand this, you can answer the next question:
</p>
<blockquote CLASS=q><p>
My program has two dialogs containing tabs, both running on the
same UI thread.
I want to make sure that the Ctrl+Tab hotkey switches between the
tabs on the correct dialog.
I've already created an accelerator table,
but how do I decide which window to pass as the first parameter
to <code>TranslateAccelerator</code>?
Right now, I'm using <code>GetForegroundWindow()</code>.
</p>
</blockquote>
<p>
Well, first off, <code>GetForegroundWindow()</code> is completely
wrong, since the foreground window need not be one of your two
dialogs.
The user may be working with Notepad,
and now you sent a <code>WM_COMMAND</code> to Notepad with one
of your private command codes,
a command code that has a completely different meaning to Notepad.
</p>
<p>
Okay, back to the question.
How do you know which window to pass as the first parameter
to <code>TranslateAccelerator</code>?
Well, it's the window that you want the <code>WM_COMMAND</code>
message to go to:
You want it to go to the dialog that contains the window
that the user typed Ctrl+Tab into.
You can determine this window by looking at the <code>MSG</code>
structure, since keyboard messages are delivered to the window
with keyboard focus.
</p>
<pre>
if (IsChild(hwnd1, msg.hwnd))
    TranslateAccelerator(hwnd1, hAccel, &amp;msg);
else if (IsChild(hwnd2, msg.hwnd))
    TranslateAccelerator(hwnd2, hAccel, &amp;msg);
</pre>
<p>
The window handle in the <code>MSG</code> structure tells
you which window the user typed the key into;
if that window is part of the first dialog,
then translate the message and send any translated message
to the first dialog.
Otherwise, check the same thing with the second dialog.
</p>
<p>
Easy as pie.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-632553">
				<div id="div-comment-632553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632553">
			May 23, 2008 at 10:26 am</a>		</div>

		<p>Is this the reason why it&#8217;s a bad idea to associate one of the Ctrl-X, Ctrl-C or Ctrl-V to an accelerator in a window that contains some edit controls ? The keystroke would be intercepted by the window instead of going to the editbox ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-632583">
				<div id="div-comment-632583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632583">
			May 23, 2008 at 2:16 pm</a>		</div>

		<p>These sort of postings are my favorite. Keep up the good work, Raymond!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-632613">
				<div id="div-comment-632613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chrismcb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632613">
			May 23, 2008 at 8:11 pm</a>		</div>

		<p>Man if ONLY pies were this easy!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-632623">
				<div id="div-comment-632623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">yme</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632623">
			May 23, 2008 at 11:27 pm</a>		</div>

		<p>Near the end, in &#8220;&#8230; tells you which window the user typed the key into; if that message is part of the first dialog &#8230;&#8221;, I guess &#8220;message&#8221; should be &#8220;window&#8221;?</p>
<div class=post>[<i>Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-632643">
				<div id="div-comment-632643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poenits</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632643">
			May 24, 2008 at 5:08 am</a>		</div>

		<p>If WM_KEYUP/KEYDOWN messages are sent to a top-level window, TranslateAccelerator is never called.</p>
<p>I&#8217;d add else TranslateAccelerator(msg.hwnd, hAccel, &amp;msg);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-632653">
				<div id="div-comment-632653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frymaster</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632653">
			May 24, 2008 at 6:10 am</a>		</div>

		<p>&quot;Is this the reason why it&#8217;s a bad idea to associate one of the Ctrl-X, Ctrl-C or Ctrl-V to an accelerator in a window that contains some edit controls ? The keystroke would be intercepted by the window instead of going to the editbox ?&quot;</p>
<p>I&#8217;d say it was a bad idea just because of the confusion. &nbsp;Whether it was the edit box or the window, you can bet at least one person would want their ctrl-x to be intercepted by the other one</p>
<p>(and why do ctrl-insert, shift-insert and shift-delete never get the wub?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-632683">
				<div id="div-comment-632683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632683">
			May 25, 2008 at 1:44 am</a>		</div>

		<p>Wait a minute, semantically GetForegroundWindow is wrong. &nbsp;But in practice, how could it be wrong? &nbsp;</p>
<p>If you are getting the keyboard messages, then the user is not working in another application. &nbsp;You have the keyboard the focus; &nbsp;the foreground window is one of your windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-632693">
				<div id="div-comment-632693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bigfoot</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632693">
			May 25, 2008 at 8:55 am</a>		</div>

		<p>&quot;Easy as pie&quot;</p>
<p>How easy is this?</p>
<p>Is it so easy even a caveman could do it? (ok, ok, caveperson)</p>
<p>Does the type of pie affect this, and is it relative? I prefer cherry over apple &#8211; is cherry easier for me and harder for someone else?</p>
<p>Who knew that Windows had such subtleties!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-632703">
				<div id="div-comment-632703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632703">
			May 25, 2008 at 12:54 pm</a>		</div>

		<p>&quot;If you are getting the keyboard messages, then the user is not working in another application. &nbsp;You have the keyboard the focus; &nbsp;the foreground window is one of your windows.&quot;</p>
<p>It might have been the foreground window when the key was pressed, but there is no guarantee that it still is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-632713">
				<div id="div-comment-632713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">blip</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632713">
			May 25, 2008 at 5:43 pm</a>		</div>

		<p>@Ulric: Getting focus doesn&#8217;t mean raising to the top. Assuming that ruins everything for those who configure Windows to set focus on mouse hover. Those who hate it also turned on auto-raise, which sucks. But focus-on-hover is great, you should try it! (with 0ms delay, of course)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-632733">
				<div id="div-comment-632733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632733">
			May 26, 2008 at 12:40 am</a>		</div>

		<p>@blip, The ForeGround window is not the window on top. &nbsp;It is defined as the one the user is working in, not the Z order.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-632743">
				<div id="div-comment-632743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632743">
			May 26, 2008 at 7:45 am</a>		</div>

		<p>@Ulric: The reason you shouldn&#8217;t use GetForegroundWindow() is because the code is executed asyncronously from the keypress (during the message queue loop), and the user may have switched the foreground window before the code is executed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-632753">
				<div id="div-comment-632753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080523-00/?p=22203#comment-632753">
			May 26, 2008 at 8:43 am</a>		</div>

		<p>@Andy:</p>
<p>Many programmers ignore that Windows is a preemptive multitasking OS. Sad but true.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

