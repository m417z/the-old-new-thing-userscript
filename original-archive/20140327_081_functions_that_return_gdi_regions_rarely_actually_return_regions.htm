<html>
<head>
<title>Functions that return GDI regions rarely actually return regions</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Functions that return GDI regions rarely actually return regions</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 27, 2014 / year-entry #82</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">For reasons I don't quite understand, the only functions in GDI and USER which create GDI regions are the functions with Create in their name, like Create­Rect­Rgn or Create­Polygon­Rgn. All the other functions which return a region require you to pass an existing region to use as the output. I can see this being useful...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
For reasons I don't quite understand,
the only functions in GDI and USER which create GDI regions
are the functions with <code>Create</code> in their name,
like
<code>Create&shy;Rect&shy;Rgn</code> or
<code>Create&shy;Polygon&shy;Rgn</code>.
All the other functions which return a region require you
to pass an existing region to use as the output.
</p>
<p>
I can see this being useful for
<code>Combine&shy;Rgn</code>,
because you can set your output region to be equal
to one of the input regions in order to update a region
in place.
</p>
<pre>
// hrgnTotal |= hrgnSegment
CombineRgn(hrgnTotal, hrgnTotal, hrgnSegment, RGN_OR);

// hrgnTotal &amp;= hrgnClip
CombineRgn(hrgnTotal, hrgnTotal, hrgnClip, RGN_AND);
</pre>
<p>
But for all of the <code>Get</code> functions,
having to create an output region is usually just
an annoyance.
</p>
<pre>
// Create a dummy region - contents not important
HRGN hrgnClip = CreateRectRgn(0, 0, 0, 0);

// Ask for the clipping region to be copied to the dummy region
int status = GetClipRgn(hdc, hrgnClip);
</pre>
<p>
I guess it lets you reuse a single dummy region over and over
again, but in practice, you're just going to destroy the region
when you're done to free up the GDI region memory.
</p>
<p>
Whatever the historical reason for this, we're stuck with it.
It may be an ugly pattern, but at least it's a pattern.
</p>
<p>
<b>The things I do for you</b>:
I asked a colleague who worked on Windows&nbsp;3.0
if he knew the reason for this design pattern.
He didn't know but suggested that I ask another person
who retired from Microsoft many, many years ago.
Fortunately, I happened to have his email address even though we
aren't really that close.
And the second person also didn't know.
"This behavior was already in place when I joined the Windows 1.03 project.
Maybe you can ask
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2012/06/18/10321212.aspx">
Rao</a>."
Unfortunately, I don't have Rao's email address,
so the trail ran cold.
But I burned a favor for you guys.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1116013">
				<div id="div-comment-1116013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VIMH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116013">
			March 27, 2014 at 7:15 am</a>		</div>

		<p>&quot;But I burned a favor for you guys.&quot;</p>
<p>And we are grateful for that, Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1116023">
				<div id="div-comment-1116023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Another Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116023">
			March 27, 2014 at 8:06 am</a>		</div>

		<p><a href="mailto:RaoR@CronusVentures.com">RaoR@CronusVentures.com</a></p>
<p>The people need to know.</p>
<div class="post">[<em>Good. You too can <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/01/18/10116870.aspx">be somebody</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1116033">
				<div id="div-comment-1116033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116033">
			March 27, 2014 at 8:41 am</a>		</div>

		<p>Could it be that the GetXxxRgn functions aren&#39;t allowed to run out of memory?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1116043">
				<div id="div-comment-1116043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116043">
			March 27, 2014 at 8:46 am</a>		</div>

		<p>Alternatively, looking at the Word 1.1a code (which is now public), all calls to CreateRectRgn are done in init functions and appear to be long-lived, so perhaps the assumption of freeing it up isn&#39;t true?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1116053">
				<div id="div-comment-1116053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116053">
			March 27, 2014 at 8:50 am</a>		</div>

		<p>More like that the GetXxxRgn function aren&#39;t allowed to run out of handles.</p>
<p>The size of region data depends a lot on the geometry of the region. So worst case is that you rotate a rectangle geometry: Original could be stored in a single RECT structure. The output however is a list of rectangles (internally probably handled as bitmap mask).</p>
<p>(And no. Region Data is NOT vector data, no matter that this is what you would expect it to be on first sight)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1116063">
				<div id="div-comment-1116063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre Lebeaupin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116063">
			March 27, 2014 at 9:06 am</a>		</div>

		<p>Far be it from me to have the intent to start a flamewar, but the trail might even go up to Bill Atkinson, since QuickDraw region functions share that pattern.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1116133">
				<div id="div-comment-1116133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Willie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116133">
			March 27, 2014 at 12:16 pm</a>		</div>

		<p>This is the type of content that drew me to this blog. &nbsp;It&#39;s so interesting to see the history behind these well known products.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1116143">
				<div id="div-comment-1116143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Just a guess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116143">
			March 27, 2014 at 1:25 pm</a>		</div>

		<p>This behavior is arisen in the dark era of insufficient RAM combined with &quot;primitive&quot; memory management. Intensive creating and destroying objects has probably fragmented the heap way too fast. The memory (de)allocation has never been really cheap operation, so performance difference might also become a part of the motivation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1116073">
				<div id="div-comment-1116073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zonk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116073">
			March 27, 2014 at 9:23 am</a>		</div>

		<p>Isn&#39;t it just naming convention, that Create**** calls always need corresponding Release**** call, and Get**** just shows you something not yours?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1116183">
				<div id="div-comment-1116183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116183">
			March 28, 2014 at 5:26 am</a>		</div>

		<p>This reminds me of an undocumented function (which presumably no longer exists anyway) that I used in a screen-capturing program that I wrote; the function returned the internal region object corresponding to the visible part of a window, which was handy when I wanted to work out what I could capture. (Obviously it would have been a very bad idea to pass this region to one of the Get functions.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1116403">
				<div id="div-comment-1116403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140327-00/?p=1383#comment-1116403">
			March 31, 2014 at 8:39 am</a>		</div>

		<p>@Neil: My experiments on Win9x indicated that visibility of a window was handled directly as a set of rectangles and multiple WM_PAINT methods were generated: one for each visible rectangle.</p>
<p>For the program that allowed me to notice I&#39;m really glad I implemented the code for only repainting the visible region rather than the whole window (.5 seconds to repaint whole window is slooow).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

