<html>
<head>
<title>How do IsThemeActive, IsAppThemed, and IsCompositionActive differ?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do IsThemeActive, IsAppThemed, and IsCompositionActive differ?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 26, 2011 / year-entry #129</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>16</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There are three functions which test very similar things, and sometimes applications pick the wrong one. Here's the rundown: IsThemeActive checks whether visual styles are enabled for the user. This is not an application-specific setting; it tells you whether visual styles are enabled in general. Note that this does not tell you whether the current...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>There are three functions which test very similar things, and sometimes applications pick the wrong one. Here's the rundown:</p>
<ul>
<li><code>IsThemeActive</code> checks whether visual styles     are enabled for the user.     This is not an application-specific setting; it tells you     whether visual styles are enabled in general.     Note that this does not tell you whether the current     application is using visual styles. </li>
<li><code>IsAppThemed</code> checks whether visual styles     are enabled for the current application.     Windows may disable visual styles for a specific application     (even though they are enabled in general)     for compatiblity reasons. </li>
<li><code>IsCompositionActive</code> checks whether desktop     composition is enabled for the current application.     As with visual styles,     Windows may disable desktop composition for a specific application     (even though it is enabled in general)     for compatiblity reasons. </li>
</ul>
<p> Note that these functions do not answer the question "Is the application using the visual-styles-enabled version of the common controls library?" That question is harder to answer because the decision to use the visual-styles-enabled version of the common controls library is not a process-wide one but is rather made on a window-by-window basis. You can have an application where half of the button controls are the old non-visual-styles version and half of the button controls participate in visual styles. (You may have seen this in action in Explorer, where the OK button on the <i>Run</i> dialog participates in visual styles, yet a button in a shell extension does not.) </p>
<p> How can you tell whether a particular button is an old-school button or a fancy new button? I don't know either. </p>
<p> <b>Bonus emphasis</b>: From the comments, it appears that people have confused "a window was created with the visual-styles-enabled version of the common controls library" with "themes are enabled". The two are independent concepts. All four combinations are possible. I thought I called this out in the article, but apparently I didn't call it out clearly enough. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-915353">
				<div id="div-comment-915353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915353">
			May 26, 2011 at 7:30 am</a>		</div>

		<p>Out of inexperience, why would someone need to know?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-915363">
				<div id="div-comment-915363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS Bangs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915363">
			May 26, 2011 at 7:36 am</a>		</div>

		<p>So why is theming enabled per-window rather than per-process? I find that somewhat counterintuitive, but I assume there must be a good reason. (And I assume that when you say &quot;window-by-window basis&quot; you mean window = HWND, rather than window = top-level window (the layman&#39;s definition.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-915373">
				<div id="div-comment-915373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dalek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915373">
			May 26, 2011 at 7:36 am</a>		</div>

		<p>&quot;How can you tell whether a particular button is an old-school button or a fancy new button? I don&#39;t know either.&quot; Wow, maybe the end of the world did start last Saturday, it&#39;s just not happening as fast as everyone expects :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-915383">
				<div id="div-comment-915383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915383">
			May 26, 2011 at 7:45 am</a>		</div>

		<p>@Adam I actually found myself in a position where I needed to know. &nbsp;Due to some bugs in Windows Forms, toolbars and a few other controls, when placed in a tab page, would not correctly pick up the white background of the tabpage, resulting in a slightly jarring (to me, at least) visual experience. &nbsp;The only solution I found, ultimately, was to check for themes, and if so, manually set the toolbar background color to the background color of the tabpage. &nbsp;It&#39;s an ugly way to do things, I know. &nbsp;Don&#39;t chastise me too much :).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-915393">
				<div id="div-comment-915393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roland</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915393">
			May 26, 2011 at 8:09 am</a>		</div>

		<p>I use GetWindowTheme(buttonhwnd) to determine whether a button is themed or not, and it seems to work reliably.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-915413">
				<div id="div-comment-915413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915413">
			May 26, 2011 at 9:32 am</a>		</div>

		<p>@JS Bangs: If theming were per-process, an appcompat-requiring shell extension would cause all windows of Explorer.exe to be unthemed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-915423">
				<div id="div-comment-915423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915423">
			May 26, 2011 at 9:41 am</a>		</div>

		<p>Here are some ideas of stuff to look at (given a hwnd) to find out if it is fancy:</p>
<p>window procedure (better have a plan for those chained ones)</p>
<p>window class (remember to check the hinstance too)</p>
<p>window extra data</p>
<div class="post">[<i>Yay, relying on undocumented behavior. Keeping the application compatibility team in business! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-915433">
				<div id="div-comment-915433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915433">
			May 26, 2011 at 9:59 am</a>		</div>

		<p>Okay, apparently anything Raymond says he doesn&#39;t know is a challenge.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-915463">
				<div id="div-comment-915463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915463">
			May 26, 2011 at 11:13 am</a>		</div>

		<p>Joshua: Everything Raymond says people see as a challenge, period. 2/3rds of the comments here are people trying to &quot;correct&quot; Raymond&#39;s post, generally either by being a pedant nitpicker, or by putting forth arguments he already addressed in the post.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-915473">
				<div id="div-comment-915473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nitpicker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915473">
			May 26, 2011 at 1:56 pm</a>		</div>

		<p>James: Let me tell you something about that&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-915483">
				<div id="div-comment-915483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WndSks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915483">
			May 26, 2011 at 2:28 pm</a>		</div>

		<p>The MSDN pages for IsThemeActive and IsAppThemed both talk about the current application and not the user, this confuses me every time I have to look this stuff up.</p>
<p>IsAppThemed can&#39;t be trusted anyway, it will return 0 if you &quot;Disable visual themes&quot; on the compatibility tab, but it will return != 0 for a simple hello world app without a manifest (If themes (Visual Styles really) are on systemwide). I&#39;m guessing IsAppThemed returns true if comctl v6 is used to draw, even when using the classic look. This probably makes sense internally, but most people would expect IsAppThemed to return false for a app with the classic look.</p>
<p>What most people care about is if comctl v6 is used or not since it provides more features so you don&#39;t have to owner draw (Listview/Header sort arrow, EM_SETCUEBANNER etc), I don&#39;t know if it is a good idea to use IsAppThemed to detect the version, it is probably better to stick with DllGetVersion.</p>
<p>The hard part is to detect classic look (comctl v4/5 &amp; v6) vs &quot;real&quot; visual styles (Luna etc). Most people probably don&#39;t need to know, but there might be edge cases where classic look is drawn differently&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-915493">
				<div id="div-comment-915493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915493">
			May 26, 2011 at 7:48 pm</a>		</div>

		<p>The &quot;manifest&quot; does not enable theming in your application. Theming is a feature provided by the operating system, exposed as a set of APIs. Your application is free to use, or not use them, at your own discretion. If you create your own controls, then you should pay your taxes and be sure to respect the users preferences &#8211; in this case their visual styles.</p>
<p>Your app is also free to use whatever 3rd party controls you like. Microsoft even updated their &quot;common controls&quot; library to take advantage of the theme API. These updated controls are available in version 6 of the common controls library, which are available as a side-by-side assembly. That&#39;s what the manifest gets you: a version of the common controls that draw themselves with the theme API (if available).</p>
<p>You can still call the theme API and not load v6 common controls. Your app can draw itself themed, while not using any common controls. Nothing requires a themed application to have a manifest.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-915503">
				<div id="div-comment-915503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WndSks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915503">
			May 26, 2011 at 10:09 pm</a>		</div>

		<p>@Ian Boyd: Yes, I skipped talking about activation contexts and the horrible ISOLATION_AWARE_ENABLED headerfile hack. I only said &quot;without a manifest&quot; to make it clear that I tried to opt-out of getting the v6 comctl. My point was that the look/style/mode of the v6 common controls might not match the return value of IsAppThemed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-915523">
				<div id="div-comment-915523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdbsd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915523">
			May 27, 2011 at 7:00 am</a>		</div>

		<p>@WndSks: Re-read what Ian Boyd is talking about, you&#39;re clearly not getting it. To simplify matters further, here&#39;s a table:</p>
<p>V5comctl: NOT themed.</p>
<p>V6comctl: themed, if IsAppThemed returns true.</p>
<p>comctl = HasManifest ? V6comctl : V5comctl.</p>
<p>In other words, if you don&#39;t have a manifest, you&#39;re creating V5 common controls and it does not matter what IsAppThemed returns &#8211; they&#39;re not styled.</p>
<p>On the other hand, some other DLL in your application could explicitly access theming API and draw themed controls. Even though you&#39;re not getting any!</p>
<p>Manifest is not some magic &quot;enable/disable themes&quot; thing. It&#39;s just &quot;replace STANDARD controls by themed versions&quot;. IsAppThemed does not talk about comctl, it talks about themes at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-915723">
				<div id="div-comment-915723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915723">
			May 30, 2011 at 3:04 am</a>		</div>

		<p>How can common controls V6 usage be determined on a per-window basis? Isn&#39;t it rather on a per-module basis, depending on each module&#39;s manifest?</p>
<p>If it is indeed on a per-window basis, how does one choose?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-915733">
				<div id="div-comment-915733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DaveK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110526-00/?p=10563#comment-915733">
			May 30, 2011 at 6:04 am</a>		</div>

		<p>@Joel: Why wouldn&#39;t just always indiscriminately manually setting the toolbar background colour to the tabpage background colour work, regardless of themes or no themes?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

