<html>
<head>
<title>How can I get the memory manager to prefetch bigger chunks of data from my memory-mapped file?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I get the memory manager to prefetch bigger chunks of data from my memory-mapped file?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 9, 2016 / year-entry #192</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Explicit prefetch.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had a memory-mapped file and they found that
when they accessed a page in the mapping,
Windows paged in 32KB of memory,
even though
<a HREF="https://msdn.microsoft.com/en-us/library/ms810613.aspx">
the documentation says that only 4KB gets
paged in</a>.
The customer's application reads 100 small
records from a memory-mapped file on an SSD,
so latency is the most important factor.
They were hoping for a way to get the
prefetcher to prefetch bigger chunks of the
memory-mapped file.
</p>
<p>
Okay, let's take things one issue at a time.
</p>
<p>
Why are they observing 32KB reads when
the documentation says 4KB?
The operating system's contractual obligation
is to bring in the entire page,
which is 4KB on x86-class machines.
However, the operating system is allowed
to perform speculative reads,
and Windows will
read up to 32KB of memory around
the faulting page.
The precise amount depends on a
variety of factors, including
how the memory was mapped,
which pages are already present,
and (for pagefile-backed memory),
whether the pages are contiguous
in the pagefile.&sup1;
</p>
<p>
What the customer can do is
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091">
call <code>Prefetch&shy;Virtual&shy;Memory</code></a>
to initiate explicit prefetching.
</p>
<p>
The customer wrote back that with the
explicit call to
<code>Prefetch&shy;Virtual&shy;Memory</code>,
the I/O system sends all the requests to
the device at once,
"which seems to be exactly what we need."
</p>
<p>
&sup1;The maximum automatic prefetch for
pagefile-backed memory is 64KB,
but this increase is not as big a deal as
it sounds, because
in practice,
consecutive addresses in memory
tend not to be assigned to consecutive
pages in the pagefile,
so the speculative read from the
pagefile tends not to read very much.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1264535">
				<div id="div-comment-1264535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264535">
			September 9, 2016 at 7:22 am</a>		</div>

		<p>The article title doesn&#8217;t seem to match the first paragraph.</p>
<p>The customer wanted bigger chunks read in?  Yet they noticed that 32KB is being read when the doc says 4KB will be read?</p>
<p>32KB is bigger than 4KB.  Unless they are wanting chunks BIGGER than 32KB.  In the third sentence, the antecendent of &#8220;bigger&#8221; is not clear&#8230;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1264555">
				<div id="div-comment-1264555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264555">
			September 9, 2016 at 7:47 am</a>		</div>

		<p>They wanted even bigger than 32KB. Math says that they wanted 100 x 4KB = 400KB.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1264556">
				<div id="div-comment-1264556" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264556">
			September 9, 2016 at 11:31 am</a>		</div>

		<p>I didn&#8217;t know they wanted 100 4K records; all I knew was that they wanted 100 small records.  Small could have meant ten bytes for all I knew!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1 parent" id="comment-1264636">
				<div id="div-comment-1264636" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264636">
			September 12, 2016 at 6:04 am</a>		</div>

		<p>The customer didn&#8217;t know what they&#8217;re doing.<br />
If you want your data in memory, just allocate the 400K and read data into it.<br />
If you want to write the modified data back, just write those 400K back.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1264715">
				<div id="div-comment-1264715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264715">
			September 12, 2016 at 8:24 am</a>		</div>

		<p>Memory-mapped I/O is much more useful than you suggest.  Among other things, the coherence between multiple views on the same machine makes it possible to do things that explicit I/O never can.  For another, memory usage is reduced because you don&#8217;t have two copies of the same page, one in the disk cache, one in your application.<br />
These advantages are balanced by the drawback that torn updates and intermediate states are visible, and maybe even persistent if your process crashes.  (With synchronous I/O, partial writes are only a concern if the whole OS goes down, not just your app).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-3" id="comment-1264765">
				<div id="div-comment-1264765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264765">
			September 13, 2016 at 4:41 am</a>		</div>

		<p>From the description, the application was just reading the file. And 400 K is not the size to worry about memory usage.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

