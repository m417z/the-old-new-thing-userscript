<html>
<head>
<title>How do I customize how my application windows are grouped in the Taskbar?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I customize how my application windows are grouped in the Taskbar?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 20, 2012 / year-entry #194</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Benjamin Smedberg wants to know how to customize the icon used in the Taskbar for applications that are grouped, when the application is a runtime for multiple applications. (This is the other scenario I hinted at last time.) Actually, customizing the icon is only part of what you want to happen when your application is...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Benjamin Smedberg wants to know
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/20/10040074.aspx#10040417">
how to customize the icon used in the Taskbar</a>
for applications that are grouped,
when the application is a runtime for multiple applications.
(This is the other scenario I hinted at
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2012/08/17/10340743.aspx">
last time</a>.)
</p>
<p>
Actually, customizing the icon is only part of what you want to happen
when your application is a runtime.
In that case, you really want each inner application to be exposed
to the user as an entirely separate application.
In other words,
if your application is hosting Product&nbsp;A and Product&nbsp;B,
you want the windows for Product&nbsp;A and
Product&nbsp;B to group separately,
have separate icons,
maintain separate jump lists,
all that stuff.
Because from the user's point of view, they are separate programs.
It just happens that under the covers, they're all being driven
by a single EXE.
</p>
<p>
In Windows, the concept of an application is captured in
something called an <i>Application User Model ID</i>,
or <i>AppID</i> for short.
For backward compatibility, if your application does not provide
an explicit AppID,
the shell will autogenerate one based on your EXE name.
Therefore,
the starting point for AppIDs is that an AppID maps to an EXE.
But once you start customizing your AppID, you can play with
this default correspondence.
</p>
<p>
All the information in this article came from the article
<a HREF="http://msdn.microsoft.com/en-us/library/dd378459(v=VS.85).aspx">
Application User Model IDs (AppUserModelIDs)</a> in MSDN.
</p>
<p>
Okay, so suppose your application is really a runtime for
other applications.
What you need to do is assign a different AppID to each of
the applications you are hosting.
The mechanism for this is up to you.
Your applications might explicitly provide a unique ID,
or you may be able to infer one.
For example, if you are Internet Explorer and your "applications"
are
<a HREF="http://msdn.microsoft.com/en-us/library/gg131029(v=VS.85).aspx">
pinned Web sites</a>,
you can use the URL of the site being pinned as the unique ID.
</p>
<p>
You then get to take your unique IDs and create AppIDs for them.
<a HREF="http://msdn.microsoft.com/en-us/library/dd378459(v=VS.85).aspx#how">
The format of an AppID</a> is
</p>
<pre>
CompanyName.ProductName.SubProduct.VersionInformation
</pre>
<p>
where the Sub&shy;Product is optional,
and the Version&shy;Information is present only if you want
different versions of your app to be treated as distinct.
(If you want an upgraded version to be a replacement for the old
version, then omit the Version&shy;Information so that the old and
new versions use the same AppID.)
</p>
<p>
Note that you have to be careful how you auto-generate your AppIDs,
since the resulting AppID needs to be legal.
For example, you cannot just take a URL and use it as the Sub&shy;Product
of an AppID.
URLs contain embedded periods, which violates the overall format,
and they can be longer than 128 characters and can contain spaces,
both of which are also called out in the documentation as prohibited.
Internet Explorer addresses this problem by using a hash of the URL as
its Sub&shy;Product rather than the full URL.
</p>
<p>
You then assign this AppID to every window associated with
the "application".
You can do this for an entire process by
calling
<code>SetCurrentProcessExplicitAppUserModelID</code>,
or you can do it on a
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx">
window-by-window basis</a>
by setting the
<code>PKEY_AppUserModel_ID</code> property.
</p>
<p>
Okay, let's write a program that shows how a runtime for other applications
can use AppIDs to control its treatment in the taskbar.
Of course,
our sample won't actually be a runtime for anything;
the "applications" that it hosts will simply be icons.
</p>
<p>
Start with the
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a>
and make these changes:
</p>
<pre>
<font COLOR=blue>
#include &lt;shellapi.h&gt;
#include &lt;shlobj.h&gt;
#include &lt;strsafe.h&gt;

#define HOSTAPPID L"Contoso.Host"

void SetProcessAppId(LPCWSTR pszTarget)
{
  if (pszTarget[0]) {
    WCHAR szAppId[256];
    DWORD dwHash = 0;
    HashData((BYTE*)pszTarget, wcslen(pszTarget) * sizeof(WCHAR),
             (BYTE*)&dwHash, sizeof(dwHash));
    StringCchPrintfW(szAppId, ARRAYSIZE(szAppId),
                     L"%s.hosted-%08x", HOSTAPPID, dwHash);
    SetCurrentProcessExplicitAppUserModelID(szAppId);
  } else {
    StringCchPrintfW(szAppId, ARRAYSIZE(szAppId),
                     L"%s.main", HOSTAPPID);
  }
}</font>

int WINAPI <font COLOR=blue>wWinMain</font>(HINSTANCE hinst, HINSTANCE hinstPrev,
                   <font COLOR=blue>LPWSTR</font> lpCmdLine, int nShowCmd)
{
  <font COLOR=blue>SetProcessAppId(lpCmdLine);</font>

    ...
    ShowWindow(hwnd, SW_NORMAL);

    <font COLOR=blue>SetWindowText(hwnd, lpCmdLine);
    if (lpCmdLine[0]) {
      WCHAR szIcon[256];
      StringCchCopyW(szIcon, ARRAYSIZE(szIcon), ptszCmdLine);
      int iIcon = PathParseIconLocation(szIcon);
      <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/05/26/422076.aspx">if (iIcon == -1) iIcon = 0;</a>
      HICON hico = ExtractIcon(hinst, szIcon, iIcon);
      SendMessage(hwnd, WM_SETICON, ICON_BIG, (LPARAM)hico);
    }</font>
    ...
}
</pre>
<p>
Our simple host program just hosts an icon.
The path to the icon is passed on the command line in the form
"path,id",
and for good measure, we put the icon path in the caption so you can
see how it groups.
</p>
<p>
The real work happens in the
<code>SetProcessAppId</code> function.
If there is no command line, then we are running in standalone mode
and set our Sub&shy;Product to <code>main</code>.
If we have a command line, then we hash it and use the hash to build
our Sub&shy;Product.
I'm just using a four-byte hash with a simple has function;
depending on how paranoid you are, you could use some other hash
function, but make sure you can get the resulting AppID to fit
into 128 characters.
(This means that hex-encoded SHA512 is too big.)
</p>
<p>
Once we figure out what our AppID is, we set it for the entire
process by calling
<code>SetCurrentProcessExplicitAppUserModelID</code>.
</p>
<p>
Okay, let's take this program out for a spin.
You can run it with the command lines
</p>
<pre>
scratch %windir%\explorer.exe,0
scratch %windir%\explorer.exe,0
scratch %windir%\explorer.exe,1
scratch %windir%\explorer.exe,1
</pre>
<p>
to see four copies of the program,
two with one icon and two with another.
Observe that when they group in the taskbar,
the icon for the group is preserved,
and that the two sets of programs group separately.
</p>
<p>
Note also that if you create shortcuts to your host program
with a command line,
<a HREF="http://msdn.microsoft.com/en-us/library/dd378459(v=VS.85).aspx#where">
you need to set the AppID in your shortcut, too</a>.
(Otherwise the shell won't know what the AppID of the 
resulting program will be, since you are setting it at runtime.)
</p>
<p>
Note also that we did not need to
<a HREF="http://msdn.microsoft.com/en-us/library/dd378459(v=VS.85).aspx#host">
register the application as a host process</a>
because we explicitly set an AppID in our application
and in our shortcuts.
(Or at least, we said that we would.
I didn't actually do it.)
</p>
<p>
<b>Bonus reading</b>:
<a HREF="http://windowsteamblog.com/windows/b/developers/archive/2009/06/18/developing-for-the-windows-7-taskbar-application-id.aspx">
Developing for the Windows 7 Taskbar &mdash; Application ID</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1006143">
				<div id="div-comment-1006143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006143">
			August 20, 2012 at 7:37 am</a>		</div>

		<p>And going the other way (Two EXE&#39;s in the same group) has been possible since XP with the undocumented &quot;TaskbarExceptionsIcons&quot; registry key.</p>
<p>And for people that don&#39;t like grouping? Explorer does not care about you: <a rel="nofollow" target="_new" href="http://windowssucks.wordpress.com/2011/09/14/never-means-never-unless-you-are-the-taskbar/" rel="nofollow">windowssucks.wordpress.com/&#8230;/never-means-never-unless-you-are-the-taskbar</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006153">
				<div id="div-comment-1006153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006153">
			August 20, 2012 at 10:17 am</a>		</div>

		<p>Uhm, URLs can&#39;t contain spaces. Any such nonsense is the browser messing with the user by automatically doing substitution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1006173">
				<div id="div-comment-1006173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Avi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006173">
			August 20, 2012 at 11:42 am</a>		</div>

		<p>@WndSks:</p>
<p>The screenshot in that blog post shows two invocations of calc and one of notepad. &nbsp;The taskbar shows 2 buttons for calc and one for notepad. &nbsp;I think someone doesn&#39;t know what Explorer means by &quot;combine&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006183">
				<div id="div-comment-1006183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006183">
			August 20, 2012 at 11:52 am</a>		</div>

		<p>@Avi: &nbsp;I think the complaint is that the two buttons for calc are connected to each other whereas the other buttons have space between them. &nbsp;I tried it on my machine and it looks a bit odd.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1006193">
				<div id="div-comment-1006193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Avi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006193">
			August 20, 2012 at 12:06 pm</a>		</div>

		<p>@John:</p>
<p>That&#39;s my thought as well. &nbsp;Unfortunately for the whiners, though, that&#39;s never what Explorer meant by &quot;Never combine&quot;, at least in my experience.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006203">
				<div id="div-comment-1006203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SomeGuyOnTheInternet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006203">
			August 20, 2012 at 7:26 pm</a>		</div>

		<p>VB.NET WinForms version&#8230; (I hope I got the declare correct!)</p>
<p>Public Class frm1EXE2Group</p>
<p>&nbsp;&#39;Reference: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2012/08/20/10341464.aspx" rel="nofollow">blogs.msdn.com/&#8230;/10341464.aspx</a></p>
<p>&nbsp;Declare Function SetCurrentProcessExplicitAppUserModelID Lib &quot;Shell32.dll&quot; (AppID As String) As Integer</p>
<p>&nbsp;Private mstrAppID As String</p>
<p>&nbsp;Public Sub New()</p>
<p>&nbsp; &nbsp;&#39; This call is required by the designer.</p>
<p>&nbsp; &nbsp;InitializeComponent()</p>
<p>&nbsp; &nbsp;&#39; Add any initialization after the InitializeComponent() call.</p>
<p>&nbsp; &nbsp;&#39;AppID controls taskbar grouping. It is in the form CompanyName.ProductName.SubProduct.VersionInformation where SubProduct and VersionInformation are optional</p>
<p>&nbsp; &nbsp;Randomize()</p>
<p>&nbsp; &nbsp;mstrAppID = &quot;EDS.App&quot; &amp; Format(Int(Rnd() * 1000).ToString) &#39;for demonstration purposes, generate a random AppID</p>
<p>&nbsp; &nbsp;Call SetCurrentProcessExplicitAppUserModelID(mstrAppID) &#39;N.B. this sets the AppID for the whole instance</p>
<p>&nbsp; &nbsp;Me.Text = mstrAppID</p>
<p>&nbsp;End Sub</p>
<p>&nbsp;Private Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Button1.Click</p>
<p>&nbsp; &nbsp;Dim f As New Form</p>
<p>&nbsp; &nbsp;f.Text = &quot;Child window of &quot; &amp; mstrAppID</p>
<p>&nbsp; &nbsp;f.Show()</p>
<p>&nbsp;End Sub</p>
<p>End Class</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1006213">
				<div id="div-comment-1006213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006213">
			August 20, 2012 at 9:03 pm</a>		</div>

		<p>Once again: Total end user control over the dumbed down Taskbar: <a rel="nofollow" target="_new" href="http://rammichael.com/7-taskbar-tweaker" rel="nofollow">rammichael.com/7-taskbar-tweaker</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006223">
				<div id="div-comment-1006223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006223">
			August 20, 2012 at 10:22 pm</a>		</div>

		<p>@WndSks: Combine means something different than &#39;group&#39;. Combine means they become ONE icon/entry. Which it is not doing. Don&#39;t see the problem, really.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1006233">
				<div id="div-comment-1006233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006233">
			August 21, 2012 at 12:42 am</a>		</div>

		<p>@Avi, @Draks, MS is to blame here. They changed the meaning of &quot;group&quot; and &quot;combine&quot;. In XP, there was &quot;grouping&quot; with actually the buttons were combined. In Windows 7, what was &quot;grouping&quot; behavior in XP is now &quot;combining&quot; and only combining can be disabled. Grouping of multiple windows of same app can&#39;t be disabled unless you change the AppIDs (not an end user thing)-7TT does it. Taking away options was Julie Larson Green&#39;s idea who was in charge of Windows 7 taskbar UX.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1006243">
				<div id="div-comment-1006243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006243">
			August 21, 2012 at 3:11 am</a>		</div>

		<p>My point is that you cannot get a Win95-Win2000 style taskbar without 3rd party apps in Win7+, at least in XP and Vista you have a choice.</p>
<p>Combining/Grouping makes no sense to me, I might have two Notepad windows open at the same time but that does not mean that they are related in any way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1006253">
				<div id="div-comment-1006253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006253">
			August 21, 2012 at 6:47 am</a>		</div>

		<p>@WndSks: &nbsp;That&#39;s what the preview thumbnails are for. &nbsp;Sure, you can say you don&#39;t like them, and that&#39;s a legitimate point of view. &nbsp;Over time, however, I&#39;ve found for me that they&#39;re usually better than what you get from full-size taskbar buttons, for most windows, and grouped taskbar icons eliminate the problem of shrinking taskbar buttons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006283">
				<div id="div-comment-1006283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006283">
			August 21, 2012 at 7:36 am</a>		</div>

		<p>In my experience, the preview thumbnails are practically useless. &nbsp;Three Notepad windows always look identical from the thumbnail. &nbsp;For that matter, I generally have the same problem with multiple windows from the same app.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1006313">
				<div id="div-comment-1006313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006313">
			August 21, 2012 at 7:52 am</a>		</div>

		<p>@JamesJohnston, that is sometimes a problem. &nbsp;Sometimes you can tell from the shape what the right document is, though. &nbsp;It&#39;s probably easier if you&#39;re looking at code instead of text.</p>
<p>Web browsers are where the thumbnails are great, as long as you don&#39;t have a bunch of tabs open to the same page, or to similar pages on the same site.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006433">
				<div id="div-comment-1006433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jas71_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jas71@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006433">
			August 21, 2012 at 9:32 am</a>		</div>

		<p>From the fact this works with four separate instances of scratch, I take it this would work with, say, scratch32 and scratch64, without resorting to the undocumented registry key WndSks mentioned? (If I remember, I&#39;ll try it once I&#39;m at a Windows machine.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1006443">
				<div id="div-comment-1006443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006443">
			August 21, 2012 at 10:12 am</a>		</div>

		<p>@jas88: AppUserModelIDs are Win7+ but they are much better than the registry key since you have grouping control over other things, not just the exe name. Besides, maybe someone else has the same .exe name as you&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1006483">
				<div id="div-comment-1006483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Programmerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1006483">
			August 21, 2012 at 12:43 pm</a>		</div>

		<p>Great, so the thumbnails are nearly useless. Hover over one for a moment and that window is brought to the front and all other windows are made fully transparent. Look at the content to see if it&#39;s what you want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1007273">
				<div id="div-comment-1007273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120820-00/?p=6813#comment-1007273">
			August 25, 2012 at 1:36 am</a>		</div>

		<p>@Programmerman: Read above. The preview is of low quality (bilinear filtering) and in many cases the preview cannot distinguish instances uniquely.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

