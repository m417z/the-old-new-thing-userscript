<html>
<head>
<title>Forcing a file handle closed when it has been opened remotely</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Forcing a file handle closed when it has been opened remotely</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 16, 2013 / year-entry #245</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program closes a file handle that was opened remotely. It builds on previous discussion on how to use the Net­Xxx functions. int __cdecl wmain(int argc, wchar_t **argv) { FILE_INFO_3 *pinfo3; NET_API_STATUS status; DWORD_PTR resumeHandle = 0; do { DWORD actual, estimatedTotal; status = NetFileEnum(NULL, NULL, NULL, 3, (LPBYTE*)&pinfo3, MAX_PREFERRED_LENGTH, &actual, &estimatedTotal, &resumeHandle); if...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program closes a file handle that was opened remotely.
It builds on
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/03/11/10399694.aspx">
previous discussion on how to use the <code>Net&shy;Xxx</code> functions</a>.
</p>
<pre>
int __cdecl wmain(int argc, wchar_t **argv)
{
 FILE_INFO_3 *pinfo3;
 NET_API_STATUS status;
 DWORD_PTR resumeHandle = 0;
 do {
  DWORD actual, estimatedTotal;
  status = NetFileEnum(NULL, NULL, NULL, 3,
                       (LPBYTE*)&amp;pinfo3,
                       MAX_PREFERRED_LENGTH,
                       &amp;actual,
                       &amp;estimatedTotal,
                       &amp;resumeHandle);
  if (status == NERR_Success ||
      status == ERROR_MORE_DATA) {
   for (DWORD i = 0; i &lt; actual; i++) {
    <font COLOR=blue>if (lstrcmpiW(argv[1], pinfo3[i].fi3_pathname) == 0) {
     wprintf(L"Closing %ls result %d\n", pinfo3[i].fi3_pathname,
             NetFileClose(NULL, pinfo3[i].fi3_id));
     status = ERROR_NO_MORE_FILES;
     break;
    }</font>
   }
   NetApiBufferFree(pinfo3);
  }
 } while (status == ERROR_MORE_DATA);
 return 0;
}
</pre>
<p>
Forcing a network file handle closed does <i>not</i>
actually close the handle.
This makes it very different from
<a HREF="http://technet.microsoft.com/en-us/magazine/2009.04.windowsconfidential.aspx">
the various "force handle closed"
utilities out there</a>.
Rather, forcing a network file handle closed is accomplished by
simulating a network failure,
so that when the remote machine tries to use the handle again,
it's told, "Wha? I'm sorry, we must have a bad connection,
because I'm not sure what you're talking about."
Since programs which access network resources must deal with
the possibility of network connectivity loss,
this deception does not violate the interface contract.
</p>
<p>
(Doing this to handles to local resources is a much riskier
undertaking, because applications expect access to local files
to remain valid for the lifetime of the handle.
There is no equivalent of transient network connectivity failure
for local files on non-removable drives.
There is also no API for simulating it.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1077893">
				<div id="div-comment-1077893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1077893">
			September 16, 2013 at 7:45 am</a>		</div>

		<p>You should call NetApiBufferFree only in the success and the &quot;more data&quot; cases (e.g. inside the if). Unless there&#39;s something you know that can&#39;t be read in the documentation.</p>
<div class="post">[<em>Fixed. Thanks. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1077913">
				<div id="div-comment-1077913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1077913">
			September 16, 2013 at 8:39 am</a>		</div>

		<p>I had used these &quot;force handle close&quot; utilities back in the past, oblivious to the incredible danger. Just how invasive are these programs? Should it be harder for an application to do this to another? Process Explorer tells me &quot;Forcing a handle closed can lead to an application crash and system instability&quot;, but this seems quite mild compared to &quot;may cause random corruption of your data&quot;. Should process explorer have a better warning?</p>
<div class="post">[<em>There are two types of &quot;forcing handles closed&quot;. One is forcing a <code>Close&shy;Handle</code>, which is <a href="http://technet.microsoft.com/en-us/magazine/2009.04.windowsconfidential.aspx">horribly dangerous</a>. The other is disconnecting the handle from the underlying medium, which is what we&#39;re doing here, and which means that the handle goes into a permanent error state (but it&#39;s still a valid handle). How dangerous that is depends on how well the app recovers from I/O errors. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1077923">
				<div id="div-comment-1077923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A person</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1077923">
			September 16, 2013 at 9:17 am</a>		</div>

		<p>The warning should probably be &quot;Forcing a handle closed is bad and you should feel bad.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1077933">
				<div id="div-comment-1077933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1077933">
			September 16, 2013 at 9:28 am</a>		</div>

		<p>Forcing a handle closed is like playing Russian Roulette, it is just a matter of time&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1077963">
				<div id="div-comment-1077963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1077963">
			September 16, 2013 at 11:41 am</a>		</div>

		<p>When a handle to a network file is &quot;disconnected&quot;, is there any mediation taken by the filesystem to attempt to &quot;reconnect&quot; the handle later on once the resource is available again? Say that I have a file open on a Windows networked drive and I unplug the cable &#8212; if the handle enters this state, is it entirely up to the application to restore the handle, or will the OS assist (for example, on the next ReadFile)?</p>
<p>One reason I ask is that when I was a sysadmin I would need to restart our Windows file servers after installing updates. I always wondered how disruptive that was to users that (for example) left a Word document open overnight. Obviously all the state on the server was lost, but it seemed like the clients might be able to reconnect and continue where they left off. The main problem I presume is that any file sharing access has been blown away, and that goes double for files with unsaved modifications.</p>
<p>I looked around online at one point, but couldn&#39;t find a good answer to this.</p>
<div class="post">[<em>The automatic reconnection happens at the virtual circuit level. You cannot safely reconnect after the server timed out the connection, because during the interim, the original assumptions may have been violated. E.g. the app opened a file in deny-write mode, then the connection is lost, and the server declares the client dead. The file is now closed on the server, and somebody else can modify it. If the client reconnects and says, &quot;Sorry, I lost connectivity for a little while. Can you get things back the way they were?&quot; the server will say &quot;Sorry, no can do.&quot; If you force the file closed on the server, then the answer will always be &quot;Sorry, no can do.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1077993">
				<div id="div-comment-1077993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1077993">
			September 16, 2013 at 12:54 pm</a>		</div>

		<p>@Crescens2k: If the issue ever comes up for me again, I&#39;ll build that tool that replaces the closed handle with a handle to NUL so CreateFile doesn&#39;t reissue it.</p>
<div class="post">[<em>The problem then is that the app doesn&#39;t get any errors, so it thinks the data got written successfully when in fact it was all thrown away. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078043">
				<div id="div-comment-1078043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078043">
			September 16, 2013 at 4:36 pm</a>		</div>

		<p>[The problem then is that the app doesn&#39;t get any errors, so it thinks the data got written successfully when in fact it was all thrown away. -Raymond]</p>
<p>Not if I open the handle with access mask 0.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078053">
				<div id="div-comment-1078053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078053">
			September 16, 2013 at 5:41 pm</a>		</div>

		<p>&gt; forcing a CloseÂ­Handle, which is horribly dangerous</p>
<p>Unless you&#39;re Chuck Norris. Any application that even dreams of misbehaving when Chuck Norris forces any of its handles closed better wake up and apologise. &lt;/obligatory&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1078063">
				<div id="div-comment-1078063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078063">
			September 16, 2013 at 10:39 pm</a>		</div>

		<p>Is it possible to do this with .NET API too? I mean without cheating and importing Win32 functions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078153">
				<div id="div-comment-1078153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078153">
			September 17, 2013 at 10:05 am</a>		</div>

		<p>Is there any situation in which forcing a [local] handle closed is a better idea than terminating the process? If not, why do these tools exist?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078173">
				<div id="div-comment-1078173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078173">
			September 17, 2013 at 11:00 am</a>		</div>

		<p>@Random832, so you can sh0wz ur l33t sk1lz.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078183">
				<div id="div-comment-1078183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078183">
			September 17, 2013 at 12:26 pm</a>		</div>

		<p>Yeah blah. Look, I got problems with handles in XP. First thing I do is download and install Unlocker, it gives you also a nice GUI interface on who still has handles to the file you can&#39;t delete. Try this, create a file, write something in it, keep it open in Notepad, run Unlocker. It will show it&#39;s only Notepad who got handles open to that file. Now, while still opened go Win+E and delete it (or try actually). Zbang, Monsieur Exploiter whines it can&#39;t delete. Fine, now go and close Notepad and good luck deleting the file from Exploiter. And if you run Unlocker it will show that the only handles opened to that file belongs to Explorer only. And funny thing is, as long as you keep it open in Notepad, each time you try to delete it another handle is opened by Explorer to that file. So, like I said, blah on your 2009 rant on &quot;stoled and replaced bags&quot; Ray. The reason these utilities are a necessity is because of the above scenario. Once I force close the handles I can delete the file just fine and Explorer will run nicely. And this is a nuisance only in XP, because in 7 you guys seems to corrected this &quot;behavior&quot; (let&#39;s not use the word &quot;bug&quot;). Now, once I close the file in Notepad I can delete it just fine from Explorer afterwards. Don&#39;t know when this was corrected because I jumped from XP to 7 directly (sorry 2003, Vista and 2008, you don&#39;t exist for me or my clients).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078213">
				<div id="div-comment-1078213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078213">
			September 17, 2013 at 4:27 pm</a>		</div>

		<p>//There is also no API for simulating it</p>
<p>You provocating me.. I can&#39;t resist this.. ;(</p>
<p>So, while there&#39;is no InvalidateHandleApi, there&#39;is DuplicateHandle. And SuspendThread (and sith&#39; know how to do same for process with same easy manner). So.. Suspend victim, and while he&#39;is under anaesthesia &#8211; ablate neccessary handle with DuplicateProcess(&#8230;DUPLICATE_CLOSE_SOURCE..).. and dont forget to put an implant &#8211; duplicate useless file handle (no read, no write, no animal, no plants..) handle instead of initial one: repeat DuplicateHandle until handle value matches.. After it matched &#8211; remove unneccessary implants.. Now its time to awake patient, and hope he will survive..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078223">
				<div id="div-comment-1078223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078223">
			September 17, 2013 at 5:05 pm</a>		</div>

		<p>Random832: One use case for closing a handle is when you have a major app (or worse yet, a server you can&#39;t restart) that has a handle leak.</p>
<p>Let&#39;s say your IDE has a problem where the built-in debugger opens a handle to your EXE and forgets to close it when you&#39;re done debugging. Since there is an open handle to your EXE, you can&#39;t compile anymore until you either close your IDE or close the handle. Considering the enormous hassle of closing and opening your IDE versus the easr of simply closing a handle, I&#39;d say this is a very good use case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078233">
				<div id="div-comment-1078233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078233">
			September 17, 2013 at 5:09 pm</a>		</div>

		<p>Random832: One use case for closing a handle is when you have a major app (or worse yet, a service you can&#39;t restart) that has a handle leak.</p>
<p>Let&#39;s say your IDE has a problem where the built-in debugger opens a handle to your EXE and forgets to close it when you&#39;re done debugging. Since there is an open handle to your EXE, you can&#39;t compile anymore until you either close your IDE or close the handle. Considering the enormous hassle of closing and opening your IDE versus the easr of simply closing a handle, I&#39;d say this is a very good use case.</p>
<p>Another time I had a service that leaked a handle. Since it was hosted in a process with many other services, closing the handle was the only way to fix it short of restarting all the other services (and their dependencies) in the same host process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1078293">
				<div id="div-comment-1078293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078293">
			September 18, 2013 at 10:29 am</a>		</div>

		<p>@Danny:</p>
<p>It&#39;s because you have some buggy extension loaded to your Explorer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078303">
				<div id="div-comment-1078303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078303">
			September 18, 2013 at 10:43 am</a>		</div>

		<p>@alegr1 &#8211; dude, first try it on XP then post, ok? It&#39;s a &quot;thing&quot; XP explorer does, right from the start &#8211; do you need a dropbox link to a empty vmware xp machine? or you feel knowledgeable enough to make one yourself? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078313">
				<div id="div-comment-1078313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078313">
			September 18, 2013 at 10:52 am</a>		</div>

		<p>@Danny: You sound like a whiny child. &nbsp;Regardless, I have just tried your test (on XP SP3), and Notepad does not even hold an open handle to the file. &nbsp;Explorer then has no problem deleting it while it is open in Notepad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078363">
				<div id="div-comment-1078363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078363">
			September 18, 2013 at 2:44 pm</a>		</div>

		<p>@Danny,</p>
<p>Also, the guy&#39;s name is Raymond, not Ray. &nbsp;It&#39;s not as if he doesn&#39;t sign every comment he edits. &nbsp;Why do you feel the need to change his name? &nbsp;Would you like it if someone came in and crapped all over your living room?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078403">
				<div id="div-comment-1078403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078403">
			September 18, 2013 at 9:10 pm</a>		</div>

		<p>Say I have a process to update files on a remote machine that I have admin access to and want to kill handles to those files before overwrite. I do not necessarily have admin access to other machines that have handle locks (e.g. someone is running a program in that folder from the network from some other machine). This NetFileClose API call doesn&#39;t do the &quot;network connectivity loss&quot; thing so the handle can be re-obtained seamlessly from what I can tell. Is there some way via Win32 api (or otherwise) to remotely cause that &quot;network connectivity loss&quot;?</p>
<div class="post">[<em>The handle obviously cannot be recovered seamlessly because you changed the file! Imagine if one of the handles you disconnected was &quot;deny write&quot;. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078773">
				<div id="div-comment-1078773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078773">
			September 19, 2013 at 6:48 pm</a>		</div>

		<p>Sorry I mean that if someone is running the program from the network and I terminate the handles using these API methods, I didn&#39;t think the user of the app from the remote machine would notice at all. Windows seems to recover from the handles being closed in this scenario and the program continues to function without the user seeing that the handles were severed?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078793">
				<div id="div-comment-1078793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078793">
			September 19, 2013 at 6:52 pm</a>		</div>

		<p>&quot;The handle obviously cannot be recovered seamlessly because you changed the file!&quot;</p>
<p>Sorry to clarify &#8211; I was thinking more from the angle of &quot;how can I prevent or reduce the probability a process will re-obtain a handle quickly/automatically before I am able to complete my redeployment&quot;&#8230; so when I was referring to &quot;recovered seamlessly&quot;, I meant from the perspective of handles to the files preventing update, not so much attempts to obtain handles to files that actually have been updated. In that situation, crashing the app is not an issue (we don&#39;t mind that).</p>
<div class="post">[<em>I guess I don&#39;t understand the question. If the handle is forced closed on the server, then it is unrecoverable. A handle is recoverable if the client loses connectivity, then regains connectivity before the server forces the handle closed due to loss of communication. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078893">
				<div id="div-comment-1078893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130916-00/?p=3233#comment-1078893">
			September 20, 2013 at 11:33 am</a>		</div>

		<p>I understand Marc&#39;s question. He wants to replace the file while leaving the handles open (let&#39;s say for argument it&#39;s read only from the clients&#39; perspective). Unfortunately, unless the file is designed like a database (in which case there is an API to update in place), trying to do this will surely blow it up as the handle carries file offsets which will now be in the middle of records.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

