<html>
<head>
<title>Why do NTFS and Explorer disagree on filename sorting?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why do NTFS and Explorer disagree on filename sorting?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 17, 2005 / year-entry #154</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Some people have noticed that NTFS automatically sorts filenames, but does so in a manner different from Explorer. Why is that? For illustration purposes, I created files with the following names: Name Code point Description a U+0061 Latin small letter A b U+0062 Latin small letter B × U+00D7 Multiplication sign å U+00E5 Latin small...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Some people have noticed that NTFS automatically sorts filenames, but does so in a manner different from Explorer. Why is that?</p>
<p> For illustration purposes, I created files with the following names: </p>
<table>
<tr>
<th>Name    </th>
<th>Code                          point </th>
<th>Description           </th>
</tr>
<tr>
<td>a</td>
<td>U+0061</td>
<td>Latin small letter A  </td>
</tr>
<tr>
<td>b</td>
<td>U+0062</td>
<td>Latin small letter B  </td>
</tr>
<tr>
<td>&times;</td>
<td>U+00D7</td>
<td>Multiplication sign   </td>
</tr>
<tr>
<td>&aring;</td>
<td>U+00E5</td>
<td>Latin small letter A                                         with ring above       </td>
</tr>
<tr>
<td>&oslash;</td>
<td>U+00F8</td>
<td>Latin small letter O                                         with stroke           </td>
</tr>
</table>
<p> And here's the sort order for various scenarios, at least on my machine. (You'll later see why it's important whose machine you test on.) </p>
<table>
<tr>
<th>Plain "dir" command</th>
</tr>
<tr>
<td>a</td>
<td>U+0061</td>
<td>Latin small letter A  </td>
</tr>
<tr>
<td>b</td>
<td>U+0062</td>
<td>Latin small letter B  </td>
</tr>
<tr>
<td>&aring;</td>
<td>U+00E5</td>
<td>Latin small letter A                                         with ring above       </td>
</tr>
<tr>
<td>&times;</td>
<td>U+00D7</td>
<td>Multiplication sign   </td>
</tr>
<tr>
<td>&oslash;</td>
<td>U+00F8</td>
<td>Latin small letter O                                         with stroke           </td>
</tr>
<tr>
<td>&nbsp;</td>
</tr>
<tr>
<th>"dir /on"</th>
</tr>
<tr>
<td>&times;</td>
<td>U+00D7</td>
<td>Multiplication sign   </td>
</tr>
<tr>
<td>a</td>
<td>U+0061</td>
<td>Latin small letter A  </td>
</tr>
<tr>
<td>&aring;</td>
<td>U+00E5</td>
<td>Latin small letter A                                         with ring above       </td>
</tr>
<tr>
<td>b</td>
<td>U+0062</td>
<td>Latin small letter B  </td>
</tr>
<tr>
<td>&oslash;</td>
<td>U+00F8</td>
<td>Latin small letter O                                         with stroke           </td>
</tr>
<tr>
<td>&nbsp;</td>
</tr>
<tr>
<th>Explorer sorted by name</th>
</tr>
<tr>
<td>&times;</td>
<td>U+00D7</td>
<td>Multiplication sign   </td>
</tr>
<tr>
<td>a</td>
<td>U+0061</td>
<td>Latin small letter A  </td>
</tr>
<tr>
<td>&aring;</td>
<td>U+00E5</td>
<td>Latin small letter A                                         with ring above       </td>
</tr>
<tr>
<td>b</td>
<td>U+0062</td>
<td>Latin small letter B  </td>
</tr>
<tr>
<td>&oslash;</td>
<td>U+00F8</td>
<td>Latin small letter O                                         with stroke           </td>
</tr>
</table>
<p> First, notice that Explorer and "dir /on" agree on the alphabetic sort order. (<a href="http://blogs.msdn.com/michkap/archive/2005/01/05/346933.aspx">Once you throw digits into the mix, things diverge</a>.) This is not a coincidence. Both are using the default locale's word sort algorithm. </p>
<p> Why does the raw NTFS sort order differ? </p>
<p> Because NTFS's raw sort order has different goals. </p>
<p> The "dir /on" and Explorer output are sorting the items for humans. When sorting for humans, you need to respect their locale. If my computer were in Sweden, Explorer and "dir /on" would have sorted the items in a different order: </p>
<table>
<tr>
<td>&times;</td>
<td>U+00D7</td>
<td>Multiplication sign   </td>
</tr>
<tr>
<td>a</td>
<td>U+0061</td>
<td>Latin small letter A  </td>
</tr>
<tr>
<td>b</td>
<td>U+0062</td>
<td>Latin small letter B  </td>
</tr>
<tr>
<td>&aring;</td>
<td>U+00E5</td>
<td>Latin small letter A                                         with ring above       </td>
</tr>
<tr>
<td>&oslash;</td>
<td>U+00F8</td>
<td>Latin small letter O                                         with stroke           </td>
</tr>
</table>
<p> You can ask a Swede why this is the correct sort order if you're that curious.  My point is that different locales have different sorting rules. </p>
<p> NTFS's raw sort order, on the other hand, is not for humans. As we saw above, sorting for humans can result in different results depending on which human you ask. But there is only one order for files on the disk, and NTFS needs to apply a consistent rule so that it can find a file when asked for it later. </p>
<p> In order to maintain this consistency, the NTFS raw sort order cannot be dependent upon such fickle properties as the current user's locale.  It needs to lock in a sort algorithm and stick to it. As Michael Kaplan pointed out earlier, <a href="http://blogs.msdn.com/michkap/archive/2005/01/16/353873.aspx"> NTFS captures the case mapping table at the time the drive is formatted</a> and continues to use that table, even if the OS's case mapping tables change subsequently. Once the string has been converted to uppercase, it then needs to be sorted. Since this is not for humans, there's no need to implement the complex rules regarding secondary and tertiary keys, the interaction between alphanumerics and punctuation, and all the other things that make sorting hard. It just compares the code points as binary values, also known as <a href="http://blogs.msdn.com/michkap/archive/2004/12/29/344136.aspx"> an ordinal sort</a>. </p>
<p> In summary, therefore, Explorer sorts the items so you (a human) can find them. NTFS sorts the items so it (the computer) can find them. If you're writing a program and you want the results of a directory listing to be sorted, then sort it yourself according to the criteria of your choice. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-283463">
				<div id="div-comment-283463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spaces.msn.com/member/andyandyx' rel='external nofollow' class='url'>Andreas Haeber</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283463">
			June 17, 2005 at 12:36 pm</a>		</div>

		<p>Just a little trivia, but I never knew that Swedes sort &#248; and &#229; different then (us) Norwegians. In Norway the end of the alphabet is: x, y, z, &#230;, &#248;, &#229;.</p>
<p>Btw. here is the complete Swedish variant of the latin alphabet <a rel="nofollow" target="_new" href="http://sv.wikipedia.org/wiki/Latinska_alfabetet" rel="nofollow">http://sv.wikipedia.org/wiki/Latinska_alfabetet</a>, if anybody else is curious :) Funny that it is the opposite of the Norwegian alphabet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-283503">
				<div id="div-comment-283503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Will Sullivan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283503">
			June 17, 2005 at 1:27 pm</a>		</div>

		<p>What I wanna know is why, if I drag a sorted list of files from an explorer window to a program, the files are sent not in order, but with the first five or so in the list appended to the end of the list.  THAT&#8217;S what I wanna know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-283513">
				<div id="div-comment-283513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283513">
			June 17, 2005 at 2:13 pm</a>		</div>

		<p>Will Sullivan: From my experience (and cursory experimentation now), progs get the files by the order they appear. But, the file you drag with (the &quot;active&quot; file?) gets to be first. So, if you have 1,2,3,4,5 selected, and you drag 3 to a prog, it becomes 3,1,2,4,5.</p>
<p>(And Outlook Express reverses the order as well, so it becomes 5,4,2,1,3)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-283523">
				<div id="div-comment-283523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283523">
			June 17, 2005 at 3:07 pm</a>		</div>

		<p>So NTFS organizes its directories by sorted trees (like a B+ tree)? For FAT, it&#8217;s not sorted at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-283623">
				<div id="div-comment-283623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">michkap</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283623">
			June 17, 2005 at 9:21 pm</a>		</div>

		<p>One interesting point about the casing rules of NTFS is that the table is really not exposed to developers, so there is a ton of code that assumes the current OS tables are the right ones. So you end up with situations where you can do some things with files that you cannot do, asnd other things that you can. But only for people trying to use files that ought not to be allowed to co-exist&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-283683">
				<div id="div-comment-283683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283683">
			June 18, 2005 at 7:07 am</a>		</div>

		<p>What I want to know is why NTFS preserves case of files but yet is case insensitive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000300008195987d even thread-even depth-1" id="comment-283713">
				<div id="div-comment-283713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Spire' rel='external nofollow' class='url'>Spire</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283713">
			June 18, 2005 at 12:22 pm</a>		</div>

		<blockquote><p>
  What I want to know is why NTFS preserves case of files but yet is case insensitive.</p>
<p>Probably for some degree of backward compatibility with FAT, which was also case-insensitive. (Or at least the DOS API calls were &#8212; but only on the input side of things. If you used a disk editor to hand-edit non-LFN FAT directory entries to use lowercase characters, DOS would completely fail to find the files.)</p>
<p>DOS users were used to typing commands in all-lowercase, even though filenames were displayed and handled internally as all-uppercase. If the Windows command processor suddenly started requiring uppercase-only access for all old files, users would not be happy at all. Almost every batch file in existence would break. So would many applications.</p>
<p>Case preservation was a desirable new feature in NTFS, but they didn&#8217;t have to do away with case-insensitivity to add this feature, so they didn&#8217;t.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-283813">
				<div id="div-comment-283813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lars Viklund</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283813">
			June 20, 2005 at 3:38 am</a>		</div>

		<p>It&#8217;s actually possible to enable case sensitivity on NTFS drives in Windows.</p>
<p>I&#8217;m unsure of how you do it manually, but the Services For Unix installer asks you if you want to enable it for greater compability with SFU applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-283833">
				<div id="div-comment-283833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lars Olaussen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-283833">
			June 20, 2005 at 5:45 am</a>		</div>

		<p>Actually, &#248; is the Norwegian and Danish equivalent character to the Swedish &#246; (U+00F6).</p>
<p>Anyway, an &quot;interesting&quot; feature with the Norwegian locale sorting is that aa is treated as &#229;, since aa is used for &#229; in many names of people and places.</p>
<p>Just a little tip when you can&#8217;t find your files starting with aa and you&#8217;re using the Norwegian locale.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-calvin_hsia odd alt thread-odd thread-alt depth-1" id="comment-287343">
				<div id="div-comment-287343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/CalvinH' rel='external nofollow' class='url'>CalvinH</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-287343">
			June 28, 2005 at 1:33 pm</a>		</div>

		<p>If you have some folders named â1â, â2â, â3â and â10â, and display them sorted by name using Windows Explorer, they will be sorted numerically rather than alphanumerically. This can lead to confusion if you have folders like â200008â, 200009â, â20000814â, which will show August, then September, then August 14th.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-602153">
				<div id="div-comment-602153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://soci.hu/blog/index.php/2008/02/19/sql-server-2008-ujdonsagok-23-ordered-sqlclr-table-valued-functions/' rel='external nofollow' class='url'>Soci blog &raquo; Blog Archive &raquo; SQL Server 2008 ??jdons??gok 23. - Ordered SQLCLR table-valued functions</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050617-10/?p=35293#comment-602153">
			February 19, 2008 at 7:44 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://soci.hu/blog/index.php/2008/02/19/sql-server-2008-ujdonsagok-23-ordered-sqlclr-table-valued-functions/" rel="nofollow">http://soci.hu/blog/index.php/2008/02/19/sql-server-2008-ujdonsagok-23-ordered-sqlclr-table-valued-functions/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

