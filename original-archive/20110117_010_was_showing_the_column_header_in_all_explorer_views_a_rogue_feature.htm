<html>
<head>
<title>Was showing the column header in all Explorer views a rogue feature?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Was showing the column header in all Explorer views a rogue feature?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 17, 2011 / year-entry #11</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>63</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">User :( asks whether the Explorer feature that shows the column headers in all views was a rogue feature or a planned one. If it was a rogue feature, it was a horribly badly hidden one. One of the important characteristics of the rogue feature is that you not be able to tell that the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
User :(
asks
<a HREf="http://blogs.msdn.com/oldnewthing/archive/2009/07/08/9823258.aspx#9825086">
whether
the Explorer feature that shows the column headers in all views
was a rogue feature or a planned one</a>.
</p>
<p>
If it was a rogue feature, it was a horribly badly hidden one.
</p>
<p>
One of the important characteristics of the rogue feature is that
you not be able to tell that the feature is there unless you go
looking for it.
If the feature is right there on the screen as soon as you
open an Explorer window,
odds are that somebody is going to notice and say something about it.
(For example,
the designer who is responsible for Explorer is probably going
to notice that every screenshot of Explorer doesn't match the spec.)
</p>
<p>
That's why rogue features typically take the form of
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2007/10/11/5395501.aspx">
a hotkey</a> or
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2009/07/08/9823258.aspx">
holding a modifier key in conjunction with another
operation</a>.
</p>
<p>
Writing up this characterization of rogue features reminds
me that I myself am responsible for a rogue feature of Windows&nbsp;95.
If you go to an MS-DOS box, select Edit, then Mark,
then select a section of the window for copying,
if you hold the Ctrl key while dragging the mouse,
the shape of the selection changes from a box to,
um, I'm not sure the shape has a name.
But it includes all the text between the start point and the end point,
as if the contents of the window had come from an edit control.
Something like this:
</p>
<pre>
xxxxxxxx<span STYLE="background: #8080C0">XXXXXXXX
XXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXX
XXX</span>xxxxxxxxxxxxx
</pre>
<p>
Since this was a rogue feature, it was never tested,
and I suspect that it didn't work on Hebrew or Arabic systems.
</p>
<p>
I must've chickened out, or maybe my rogue feature was found out,
because the code for streamed selections was ifdef'd out
before Windows&nbsp;95 shipped.
So at least I can still honestly say that I never shipped a rogue feature.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (63)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-888493">
				<div id="div-comment-888493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888493">
			January 17, 2011 at 7:18 am</a>		</div>

		<p>And I cry out in anguish that your selection mode wasn&#39;t made the default&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888503">
				<div id="div-comment-888503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888503">
			January 17, 2011 at 7:18 am</a>		</div>

		<p>I wish your rogue feature had been promoted to the default. The square selection in cmd.exe is one of my most hated &quot;features&quot; of it. It&#39;d be much better to be able to select off the end of lines, a la your feature there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888513">
				<div id="div-comment-888513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888513">
			January 17, 2011 at 7:19 am</a>		</div>

		<p>I was disappointed when Windows 7 removed the &quot;Always show listview header&quot; from Explorer, I liked that.</p>
<p>That rogue console feature would actually be quite useful since most console apps display text just like any text box app, so selection really should be like text boxes. &nbsp;Rectangle selection is really only useful for edge cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888523">
				<div id="div-comment-888523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888523">
			January 17, 2011 at 7:19 am</a>		</div>

		<p>I would call it char-wise or (for the CSS wranglers) inline style selection.</p>
<p>I was going to ask if there&#39;s alternate UI for sorting if the headers weren&#39;t visible, but it&#39;s All There in the Context Menu. &nbsp;Including the (new to Vista?) &quot;More&#8230;&quot; option which lets me view the 35mm focal length or Telex of my folders, iso images,&quot;ntuser.dat.LOG2&quot; files, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888533">
				<div id="div-comment-888533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdbsd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888533">
			January 17, 2011 at 7:21 am</a>		</div>

		<p>Microsoft,</p>
<p>Y U NO SHIP THIS FEATURE</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888543">
				<div id="div-comment-888543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dalek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888543">
			January 17, 2011 at 7:23 am</a>		</div>

		<p>#ifdef _ROGUE_FEATURES ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson even thread-even depth-1" id="comment-888563">
				<div id="div-comment-888563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888563">
			January 17, 2011 at 7:40 am</a>		</div>

		<p>Whoever #ifdef&#39;d out that cmd.exe selection mode needs to be hunted down and made to pay. Assets frozen, communications subpoenaed, kitten photos seized&#8230; that kind of thing.</p>
<div class="post">[<i>Thinking back on it, it was almost certainly me who #ifdef&#39;d it out. I think it was because a tester discovered it and found bugs. It&#39;s hard to justify fixing bugs in rogue features. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888573">
				<div id="div-comment-888573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kelden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888573">
			January 17, 2011 at 8:05 am</a>		</div>

		<p>That&#39;s what I was always looking for and now it&#39;s gone in Windows 7. Please bring it back. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888583">
				<div id="div-comment-888583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888583">
			January 17, 2011 at 8:10 am</a>		</div>

		<p>This is one of those things that you learn a few painful years into a programming career. &nbsp;You just want to make a great product and you know the blessed spec has missed some really important feature that customers are going to be missing (though they may not know why they are unhappy enough to get things into the blessed spec&#8230;!). &nbsp;But you know how to do it, just a few hundred lines of codes (or maybe just a few in this case?), so you code it up, test it some and get busy with something else, check it in a few weeks later and forget about it. &nbsp;Then one week before shipping somebody logs a critical crash somewhere in your fix (of course this is because some <em>other</em> bit of code changed since you last tested it, and since it wasn&#39;t blessed your testing isn&#39;t part of the standard regression suite&#8230;.) &nbsp;Doh&#39;t. &nbsp;Mgmt of course wants to know <em>why</em>. &nbsp;You explain that you just need to change two lines and we can ship. &nbsp;They still want to know <em>why</em>, but finally agree to let you fix it since taking it out entirely might break something else. &nbsp;You ship, customers may or may not find your feature as useful as you thought (since of course it wasn&#39;t documented since it wasn&#39;t tested since it is not being blessed.) and all anybody really remembers is what a screw up you are. &nbsp;Eventually you learn to either just clock in and do your work, or politic for your features ahead of time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888593">
				<div id="div-comment-888593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas Rejbrand</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888593">
			January 17, 2011 at 8:15 am</a>		</div>

		<p>Well, the only thing I really doesn&#39;t like in Windows 7 is that the wonderful, omnipotent and omnipresent list-view header control (from Windows Vista) isn&#39;t there anymore. I really would love to hear of a way of making it come back, but I suppose no registry hack in the world can accomplish that (or?).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888613">
				<div id="div-comment-888613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sukru</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888613">
			January 17, 2011 at 8:35 am</a>		</div>

		<p>I agree on the rouge feature being better than the current selection mechanism. It would make cmd.exe console a much more useful one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888623">
				<div id="div-comment-888623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888623">
			January 17, 2011 at 8:48 am</a>		</div>

		<p>Are &#39;rouge features&#39; the ones that are more highly polished on delivery?</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Jeweller%27s_rouge#Polishing" rel="nofollow">en.wikipedia.org/&#8230;/Jeweller%27s_rouge</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888633">
				<div id="div-comment-888633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas Rejbrand</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888633">
			January 17, 2011 at 8:56 am</a>		</div>

		<p>Ian Prest: Thank you very much! It works!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888643">
				<div id="div-comment-888643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">db2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888643">
			January 17, 2011 at 9:07 am</a>		</div>

		<p>Ohhhhhh god, bring back the sane selection mode in console windows. Rectangular selection is atrocious.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888653">
				<div id="div-comment-888653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888653">
			January 17, 2011 at 9:33 am</a>		</div>

		<p>Wow, some people actually liked that always-visible header in Vista? &nbsp;I thought it was unnecessary clutter, a waste of space, but worst of all a very irritating stop in the tab order when using a file open/save dialog. &nbsp;It was one of the reasons I stopped using Explorer for file/folder work and switched to a third-party app. &nbsp;Whoever fixed this for Windows 7 should get a raise&#8230; &nbsp;unless it was the person responsible for implementing it in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888663">
				<div id="div-comment-888663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888663">
			January 17, 2011 at 9:40 am</a>		</div>

		<p>Escalation procedure to add a much-needed feature to a program:</p>
<ol>
<li>
<p>Just write the code, hoping no one notices.</p>
</li>
<li>
<p>Argue for it with passion and data points in design meeting.</p>
</li>
<li>
<p>If all else fails, blog about it so there&#39;s a public out-cry asking for it.</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888673">
				<div id="div-comment-888673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888673">
			January 17, 2011 at 10:02 am</a>		</div>

		<p>If a rogue feature doesn&#39;t ship, is it really a rogue feature?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888683">
				<div id="div-comment-888683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888683">
			January 17, 2011 at 10:03 am</a>		</div>

		<p>Another vote for the cmd.exe rogue feature back &#8211; the number of times I&#39;ve been caught out by the current selection mode! &nbsp;All too often I end up just missing a single character or two at the end of the line. &nbsp;Bring it back!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888693">
				<div id="div-comment-888693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888693">
			January 17, 2011 at 10:05 am</a>		</div>

		<p>Streamed selections should have been promoted from rogue to documented, with a button on the toolbar to toggle it. Rectangular selections make sense when the console window contains several text windows (I.E., the multiple document mode of QuickBasic/Edit 5.0). But for many (most?) people, the main use of the console window is to run a command line interpreter. There, I find myself having to copy a 80 character-wide rectangular selection, and then pasting in an auxiliary text document, stripping the beginning of the first line and the ending of the last one, and copying it again. A lot of work.</p>
<p>About the always-visible column header: it&#39;s good it&#39;s there. It allows you to show and easily change the sorting order now that menus are hidden by default. Without it, most people wouldn&#39;t know how to sort the items when not in details view. The problem was, of course, the changed tab order. That&#39;s what hampered Vista: it&#39;s a great OS, but came out half-baked, because they had to cut the development, and had about the quality of a typical Microsoft RC (which, by the way, isn&#39;t low by any standards, but isn&#39;t high enough for the average user). The idea was great, but it suffered a lot from those little details that didn&#39;t have enough time to get fixed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888703">
				<div id="div-comment-888703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888703">
			January 17, 2011 at 10:26 am</a>		</div>

		<p>I agree with the people who wish that would rather have the &#39;streaming&#39; selection&#8230; but on my list of complaints about that terminal window, the selection mode is probably about #47. (#1 is probably &quot;why can I resize it just by dragging the border&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888733">
				<div id="div-comment-888733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolmm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888733">
			January 17, 2011 at 11:47 am</a>		</div>

		<p>Ah, box selection! I remember being so happy when I discovered BOX COPY and BOX PASTE in TPU on VMS systems [wonders if anyone else even knows what he means].</p>
<p>So, perversely, I wish I could find a Windows editor that uses fixed font (or can be set to use a fixed font) and do BOX COPY/BOX PASTE&#8230;</p>
<p>Although, stream selection in CMD.EXE would also be cool at times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-888743">
				<div id="div-comment-888743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888743">
			January 17, 2011 at 12:43 pm</a>		</div>

		<p>&quot;I suspect that it didn&#39;t work on Hebrew or Arabic systems. &quot;</p>
<p>BTW, why was Arabic console support never added to NT?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888753">
				<div id="div-comment-888753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888753">
			January 17, 2011 at 12:56 pm</a>		</div>

		<p>Evan: Windows does not have a terminal emulator anymore (HyperTerm no longer ships with Windows). Windows has a console window which, as Raymond describes, is more like a frame buffer. It makes no attempt to emulate a terminal beyond a few rudimentary control codes (BEL, TAB, CR, LF).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888763">
				<div id="div-comment-888763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888763">
			January 17, 2011 at 1:24 pm</a>		</div>

		<p>@Malcomm:</p>
<p>Any Visual Studio, Alt+Click-drag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888773">
				<div id="div-comment-888773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888773">
			January 17, 2011 at 1:35 pm</a>		</div>

		<p>Box selection by holding down Alt works in other editors, too. Like e.g. Notepad++.</p>
<p>Sometimes this comes in quite handy, but there&#39;s a reason it&#39;s not the default. Having CMD do line selection would be a great usability improvement.</p>
<div class="post">[<i>Not sure why you&#39;re asking CMD to do anything here. CMD has nothing to do with selection. It&#39;s just a console app, like /bin/sh. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888783">
				<div id="div-comment-888783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888783">
			January 17, 2011 at 2:19 pm</a>		</div>

		<p>Of course you&#39;re right, I&#39;ve obviously meant the console window or whatever is responsible for that.</p>
<p>The point still stands though, your &quot;rogue feature&quot; would have been very handy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888813">
				<div id="div-comment-888813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888813">
			January 17, 2011 at 3:05 pm</a>		</div>

		<p>My application contains a rogue feature placed by me that I&#39;ve carefully protected (by assigning all bugs in that area to myself) despite multiple bugs in it. Basically, if you know the hidden back-end key of a patient record, you can bring up that record in a search. This makes it possible to pass identifiers to and from support teams with no fear at all of anybody intercepting them, because nobody else can use them. For the complexities of debugging when dealing with sensitive data, we really do need it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888823">
				<div id="div-comment-888823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888823">
			January 17, 2011 at 3:19 pm</a>		</div>

		<p>@Antonio Rodríguez: Yes, I agree, doing that is a lot of work. &nbsp;If you use Cygwin, Cygwin provides a /dev/clipboard pseudofile that you can write to to copy data to the clipboard or that you can read from to paste data from the clipboard.</p>
<p>It&#39;s very handy: if I want to copy the output of a command to the clipboard, I just run &quot;command &gt; /dev/clipboard&quot;; if I want to save the clipboard data to a file, I just do &quot;cat /dev/clipboard &gt; filename&quot;. &nbsp;I also use head(1) and tail(1) to pick out the lines of output I want, if I don&#39;t want the entire command output.</p>
<p>If you don&#39;t use Cygwin, it&#39;s very easy to write a command line program that does a similar thing. &nbsp;You just need to read in data on stdin, call OpenClipboard(NULL), EmptyClipboard(), GlobalAlloc(GMEM_MOVEABLE), GlobalLock(), SetClipboardData(CF_TEXT), and CloseClipboard(). &nbsp;Put that program in your $PATH, and off you go.</p>
<p>(And consider this another vote for the &quot;streamlined selection would be far, far more useful than the current rectangular selection in Windows consoles.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888833">
				<div id="div-comment-888833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888833">
			January 17, 2011 at 3:39 pm</a>		</div>

		<p>@Raymond: &quot;Windows uses the screen buffer model where the console window is a viewport into the screen buffer. Unix seems to have two screen buffer models, one for streamlike apps and one for fullscreen apps (like emacs).&quot;</p>
<p>And yet what I said still holds true for both modes, at least in Linux: you can resize a terminal running emacs and Emacs will adjust itself (reflowing text unless truncate-lines is on). There&#39;s a SIGWINCH that can notify console programs of the WINdow size CHange. (Wikipedia says &quot;some Unixes&quot; support this symbol; I&#39;m not sure what happens on ones that don&#39;t.)</p>
<p>And it&#39;s not like Windows console programs don&#39;t already have to deal with the resizing issue: the user can presumably change the buffer size while a console program is running, by going the long way &#39;round.</p>
<p>@Gabe: &quot;Windows does not have a terminal emulator anymore (HyperTerm no longer ships with Windows). Windows has a console window which, as Raymond describes, is more like a frame buffer. It makes no attempt to emulate a terminal beyond a few rudimentary control codes (BEL, TAB, CR, LF).&quot;</p>
<p>As far as the user&#39;s concerned this should be six of one, half a dozen of another. Maybe Windows should get a true terminal emulator? I don&#39;t know, and I don&#39;t particularly care. All I care about is the fact that I hate using the command prompt in Windows because I find it a PITA, and a big part of that is this resizing issue.</p>
<p>When MS announced PowerShell I was really hopefully that they would improve the situation, but all they did was stick PS in the same crappy console window. So I&#39;m stuck using 3rd party programs to get a usable shell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888853">
				<div id="div-comment-888853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tyler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888853">
			January 17, 2011 at 3:58 pm</a>		</div>

		<p>@Malcolmm Acutaly a Console application can be told when the window has been resized, but you have to tell it that you WANT that information, otherwise it&#39;s ignored.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888863">
				<div id="div-comment-888863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888863">
			January 17, 2011 at 4:21 pm</a>		</div>

		<p>@Malcolmm: &quot;What happens as soon as you run a non-CONHOSTEX app? Does it then disallow resizing, leaving you back at step 1?&quot;</p>
<p>I&#39;m not sure, but (1) that solution alone would be leaps and bounds better than what we have now, and (2) what happens if you resize the buffer on such a program now? Because whatever the answer to that is, it could continue to do that.</p>
<p>Because you&#39;re still ignoring the fact that what I want is already possible, just with a bad UI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888873">
				<div id="div-comment-888873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolmm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888873">
			January 17, 2011 at 4:27 pm</a>		</div>

		<p>@Tyler: That&#39;s kind of similar to the Unix/xterm model. You resize the xterm &#8230; it sends SIGWINCH to its child processes (I&#39;m not sure whether that&#39;s just to direct children only and they&#39;re responsible for passing it on, or to the entire process tree &#8230; I guess the latter). The child processes are responsible for redrawing themselves, should they wish to do so, by implementing a handler for the SIGWINCH signal.</p>
<p>But consider a hypothetical Win32 application which doesn&#39;t listen for the window resize info and is reading from that screen buffer. You can see why current behaviour just discards the entire buffer on resize. Anything else opens up ambiguity and ambiguity breaks compatibility.</p>
<p>We&#39;ve kinda digressed a bit from the original topic, but I find those articles which digress a bit are the most interesting :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888603">
				<div id="div-comment-888603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Prest</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888603">
			January 17, 2011 at 8:35 am</a>		</div>

		<p>@Dan, @Keldan, @Andreas: &nbsp;There&#39;s no registry hack, unfortunately, but you can do it in code in a BHO. &nbsp;The trick is to call SetCurrentFolderFlags(FWF_NOHEADERINALLVIEWS, 0) on the folder interface. &nbsp;</p>
<p>Oddly enough, there *is* a FolderFlags registry key, but I&#39;ve found Explorer actively sets the FWF_NOHEADERINALLVIEWS flag if you turn it off in the registry; I suspect some overeager junior developer was told to turn this feature off, and went and added code to set the flag when the folder is displayed (instead of just doing it in the default FolderFlags registry key).</p>
<p>Anyway, I&#39;ve made a simple BHO available here: <a rel="nofollow" target="_new" href="http://github.com/ijprest/Explorer7Fixes" rel="nofollow">github.com/&#8230;/Explorer7Fixes</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888883">
				<div id="div-comment-888883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888883">
			January 17, 2011 at 4:46 pm</a>		</div>

		<p>@Malcolm: The buffer gets a bottom-right select first so if the application failed to handle it would be OK if it were line oriented. It&#39;s still gonna be fried if it uses cursor movement and nothing I know can change that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888893">
				<div id="div-comment-888893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888893">
			January 17, 2011 at 5:23 pm</a>		</div>

		<p>I really missed the console streamed selection feature.</p>
<p>Now I almost always have to ssh back to Cygwin at localhost when I think I&#39;ll need to copy the output back. I&#39;d be much more convienent if I can just get that function in console window.</p>
<p>Have someone created feature request on Connect? If so please post here as I&#39;m going to vote it. (Afterall, the code all we need is written, just commented out. And with Core edition of Windows server shipping, there&#39;s good chance administrator will appreciate it, why not?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888903">
				<div id="div-comment-888903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888903">
			January 17, 2011 at 5:41 pm</a>		</div>

		<p>Ok, I figured out how to create the suggestion. (Somehow the &quot;create feedback&quot; button on the entry page just take me to a blank page that when viewed the source, only contain the viewstate control&#8230;)</p>
<p><a rel="nofollow" target="_new" href="https://connect.microsoft.com/WindowsServerFeedback/feedback/details/636545/console-selection-mode" rel="nofollow">connect.microsoft.com/&#8230;/console-selection-mode</a></p>
<p>Please vote.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888913">
				<div id="div-comment-888913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Justin G.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888913">
			January 17, 2011 at 6:22 pm</a>		</div>

		<p>The Console selection modal sounds like a good coding challenge. Not too easy, but by no means impossible with the console API(at least where WIN32_WINNT &gt;= 0x0500). Although it would just be an executable that isn&#39;t hooked into the menus&#8230;.</p>
<p>I&#39;m going to have a stab at it later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888713">
				<div id="div-comment-888713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888713">
			January 17, 2011 at 10:30 am</a>		</div>

		<p>@Evan: &#39;(#1 is probably &quot;why can I resize it just by dragging the border&quot;)&#39;</p>
<p>Correction: &quot;why *can&#39;t* I resize it&#8230;&quot;</p>
<div class="post">[<i>Works for me. Try increasing your screen buffer size first. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-888923">
				<div id="div-comment-888923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888923">
			January 17, 2011 at 6:51 pm</a>		</div>

		<p>I wonder how the &quot;rogue features&quot; compare to the features worked on during Google&#39;s 20% time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888723">
				<div id="div-comment-888723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888723">
			January 17, 2011 at 11:39 am</a>		</div>

		<p>@Raymond: &quot;Works for me. Try increasing your screen buffer size first. -Raymond&quot;</p>
<p>That&#39;s not the point&#8230; I want resizing the window to resize the buffer. When do I want to resize the window? It&#39;s when I run a command whose lines wrap that would be easier to read without the wrapping. So now to fix *that* problem, why do I have to go into the properties screen for this fairly common case? In most other programs, I&#39;d just make the window bigger. Take this very website: I can resize this to as wide as my screens (2710 pixels) or as narrow as about 970 pixels and it will just reflow the text to the normal 75% of the width or so and not display a scroll bar.</p>
<p>And that&#39;s the way *every other* terminal emulator I&#39;ve used works: Xterm on *nix (or the more modern ones like Gnome Console, Konsole, Urxvt), the terminal program on OS X, the Cygwin-provided X-based terminal emulators on Windows, the SSH client from the actual SSH company (now Tectia) on Windows, or the Console2 program on Windows. The Windows terminal emulator is, as far as I know, unique among its peers in this respect, and at least *I* find it *incredibly* annoying.</p>
<p>(The main exceptions to the &quot;reflow the text&quot; thing are programs like Word, where the display is constrained because of the relation what you&#39;d get in the real world if you printed it. And in Wordpad (in Win7) you can even tell it to &quot;wrap to window&quot;. (I don&#39;t see a corresponding option in Word: closest I see is one that will zoom the page in and out to keep the width of the page exactly visible as you resize the window. Also, some websites don&#39;t allow the browser as much freedom to change the layout.)</p>
<div class="post">[<i>Windows uses the screen buffer model where the console window is a viewport into the screen buffer. Unix seems to have two screen buffer models, one for streamlike apps and one for fullscreen apps (like emacs). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-888933">
				<div id="div-comment-888933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888933">
			January 17, 2011 at 9:50 pm</a>		</div>

		<p>@Evan is right: you can already resize the console buffer (just go into Properties, on the Layout tab and change the &quot;Screen Buffer Size&quot;) so there&#39;s no technical reason why conhost.exe couldn&#39;t resize the &quot;screen buffer size&quot; when you resize the window itself.</p>
<p>Probably the reason it hasn&#39;t been implemented is because currently, resizing the console buffer is a rare event: you usually only do it once and then not change it (because it&#39;s so hard to do). If it was linked to resizing the window, then suddenly it would happen much more often and you&#39;d notice all the programs which break a lot more&#8230;</p>
<div class="post">[<i>If resizing the window larger automatically increased the screen buffer size, does that mean that resizing the window smaller automatically decreases the screen buffer size? &quot;Yes&quot; sucks. So does &quot;no&quot;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888793">
				<div id="div-comment-888793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolmm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888793">
			January 17, 2011 at 2:25 pm</a>		</div>

		<p>[Not sure why you&#39;re asking CMD to do anything here. CMD has nothing to do with selection. It&#39;s just a console app, like /bin/sh. -Raymond]</p>
<p>But the reason people want it is because /bin/sh inside an xterm (or its modern equivalent, anyway) can do it. As can any Windows app. So people naturally wonder why a console window in Windows can&#39;t have this, even as an option selected by holding a hotkey while dragging.</p>
<p>I know someone at work who, because of the pain of line joining, sets his Command Prompt to be 255 characters wide &#8230; which is not an ideal workaround :(</p>
<p>Just to be clear, so you don&#39;t take this the wrong way, this isn&#39;t making a Unix vs. Windows dig &#8230; just pointing out that /bin/sh in a modern windowed Unix environment doesn&#39;t behave like CMD.EXE.</p>
<p>Yes, I appreciate that Windows console I/O is a different kettle of fish to the Unix device driver model where the app just spews out text to a pseudoterminal device &#8211; but that doesn&#39;t stop people making the usability comparison and asking &#39;Why can&#39;t Windows let me do that?&#39;. Of course naturally this feature starts off at -100 (or is it -1000 points?) but the fact it can&#39;t even be optionally consistent with the rest of the Windows UI should be a driver to change it for the next version.</p>
<p>At least it as not as daft as VMS, where you could only edit *the current line*. If you&#39;d gone over a line boundary, you had to delete the text until you got back to the line you wanted to edit. That really sucked :)</p>
<div class="post">[<i>Neither /bin/sh nor CMD.EXE know anything about the host UI. If you want to complain about the host UI, then saying &quot;/bin/sh can do it, why not CMD?&quot; is meaningless because /bin/sh isn&#39;t doing it either! You want to ask xterm/conhost for the feature, not /bin/sh and CMD.EXE. (And there&#39;s more to xterm than spewing characters to a pty. If that&#39;s all there was, then xterm wouldn&#39;t be able to resize the screen buffer either.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888803">
				<div id="div-comment-888803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolmm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888803">
			January 17, 2011 at 2:57 pm</a>		</div>

		<p>Sorry Raymond, yes you&#39;re correct in that CMD.EXE isn&#39;t implementing the UI. So that moves the place where the change is necessary to conhost as you point out. I am also aware that xterm implements the line joining and not /bin/sh. </p>
<p>Notwithstanding those points, it would be a useful feature to add. Even being able to right-click on the window and pick &#39;Select (join lines)&#39; from the popup window would be a useful feature.</p>
<p>As far as I know, though, conhost would either have to do a bit of guesswork as to where a line end was (since it can&#39;t read the buffered text from the pty like xterm would) or it would have to internally keep track of CRLFs so that it had that state information.</p>
<p>So yes, I appreciate it&#39;s not an easy feature to add and hey, no one wants to break existing stuff [which was always the official reason for why multi-line editing couldn&#39;t be added to VMS &#8211; no one wanted to touch the ancient TTDRIVER code]. It&#39;s the -1000 points again.</p>
<p>xterm iirc implements window resize by sending an IOCTL (or was it even escape codes?) back to the pty driver to indicate its size had changed. This isn&#39;t something easily done on Windows and not something that could ever be easily implemented. Preserving the buffer on resize is also hard because it&#39;s a fixed-line length buffer.</p>
<p>And if it was implemented so that it kept the buffer length but cleared the buffer &#8230; cue a horde of complaints by people who accidentally resize the window and lose the history. Even if it only did this when you shrunk it, people would howl :)</p>
<p>So &#8230; no &#8230; I don&#39;t think dynamic resize is a great idea, just to make that clear!</p>
<div class="post">[<i>Another difficulty is that Win32 lets applications *read* from the screen buffer. As I understand it, xterm doesn&#39;t let apps read from the buffer, only write to it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888843">
				<div id="div-comment-888843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolmm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888843">
			January 17, 2011 at 3:49 pm</a>		</div>

		<p>@Evan: Unix and xterm is a different model. </p>
<p>The terminal driver gets the SIGWINCH and then it&#39;s up to the *application* to resize itself according to what a terminal inquire tells it is now the terminal size. The application thinks it&#39;s talking to a physical terminal that magically grew or shrunk its CRT.</p>
<p>Windows applications don&#39;t know that&#39;s possible and you&#39;d break a long chain of backwards compatibility. </p>
<p>Even the idea of a new hypothetical &#39;conhostEX&#39; that could allow this breaks when you decide to run an old app in it. In Unix the termminal/curses model is all there&#39;s ever been (well OK before that there were teletypes&#8230;). To do something similar in Windows throws out assumptions that date back to 16-bit apps (if you&#39;re on XP 32 bit &#8230; fire up DEBUG and watch what happens to your scroll bar and history &#8230; or even COMMAND.COM) and 32 bit console apps (which assume the buffer size will never change). What happens as soon as you run a non-CONHOSTEX app? Does it then disallow resizing, leaving you back at step 1?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888943">
				<div id="div-comment-888943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888943">
			January 18, 2011 at 12:18 am</a>		</div>

		<p>@Dean, @Evan: Sure, it could be done. &nbsp;The problem is that it shouldn&#39;t: resizing the buffer causes a rather large proportion of full-screen console apps to fail to redraw correctly, so it&#39;s not something that you should be able to do accidentally. &nbsp;I don&#39;t know about you guys, but I sometimes resize windows accidentally when I&#39;m trying to select text that&#39;s close to the edge of them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888953">
				<div id="div-comment-888953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fabian Schmied</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888953">
			January 18, 2011 at 12:22 am</a>		</div>

		<p>@Dean: Exactly. There&#39;s probably no technical reason to prevent convenient resizing of the buffer, but a usability problem: If you change the buffer size now, the buffer seems to be clipped to the new size. If you allowed people to do this with the usual &quot;drag the frame&quot; action, this would become a frequent operation, and people would lose data all the time.</p>
<p>I think this is the reason why the feature is so obscure (and many clicks away).</p>
<p>Also don&#39;t forget that resizing the console window <em>is possible right now</em> &#8211; it just doesn&#39;t change the screen buffer size, but the window size. Which is limited to the buffer size. This is very useful as is now, but mainly in the vertical dimension, because the buffer usually contains more lines than the window. It&#39;s also consistent with the way other windows work, where resizing causes you to only change the viewport rather than the existing information.</p>
<p>So, the &quot;drag-and-resize&quot; operation is reserved for an existing feature that is consistent with other windows and causes no loss of information. So it should not be reused for changing the screen buffer size.</p>
<p>But despite this, I agree that the &quot;change screen buffer size&quot; operation could and should be made more convenient to use for power users. You could implement it as a drag-and-resize-and-hold-the-Ctrl-key action or something similar, but this has the problem that a) it&#39;s obscure and hard to discover, b) it reserves a gesture to an operation specific to console windows which might be useful for another operation (on general windows) in the future.</p>
<p>Here&#39;s a different idea: Change the constraint that the console window width must not exceed that of the screen buffer width. Ie., allow people to drag the window as wide as they want, but don&#39;t adjust the screen buffer with that dragging. (For a visual cue, maybe paint the delta in a different background color.) Then, add a context (and system) menu entry: &quot;Extend/clip buffer to match window width&quot; or something similar. (For better usability, the words &quot;Extend&quot; or &quot;Clip&quot; should probably be chosen dynamically depending on the relationship between window and buffer width.)</p>
<p>Since this (drag + menu entry) is a two-step action, it&#39;s probably safe enough to avoid unexpected data loss. At the same time, it&#39;s fast enough to be more useful than the current path through the options dialog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888963">
				<div id="div-comment-888963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fowl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888963">
			January 18, 2011 at 1:20 am</a>		</div>

		<p>Yes well the Windows console sucks, I too was hoping they were going to at least start fresh with PowerShell, but alas, no</p>
<p>I&#39;d like some more details on the omni-presence (except for bugs) headers. I really miss those. And for my grandma still on Vista, it&#39;ll be great to figure out how to fix it when they disappear without wiping huge swaths of registry entries out.</p>
<p>Also, since it was so badly hidden (it was hidden?), how did it make it into the product?</p>
<p>ps. Ian, Thank you so much!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-888973">
				<div id="div-comment-888973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fred</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888973">
			January 18, 2011 at 1:24 am</a>		</div>

		<p>I am so glad that explorer is much better (but not perfect, but apparently Finder has trouble too, so it must somehow be a hard problem) at staying in details view like I told it, so it&#39;s not such a big deal that the headers are gone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-888983">
				<div id="div-comment-888983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdbsd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-888983">
			January 18, 2011 at 1:49 am</a>		</div>

		<p>@Cheong: I would have voted if it said &quot;please incorporate said mode&quot;, not &quot;please make it default&quot;. Different people have different ideas about what should be default. That&#39;s not the point here, the point is to have the selection mode at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-889073">
				<div id="div-comment-889073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas Rejbrand</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889073">
			January 18, 2011 at 8:24 am</a>		</div>

		<p>@Fred: I have a lot of folders with many (hundreds or even thousands) of photos and video clips. To browse these folders, I do need large icons (so that the content of the file is displayed in place of an ordinary icon), and, also, I do wish to perform sorting/filtering/grouping etc. So I am very glad that I am finally able to make the header omnipresent again (thanks to Ian Prest above).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-889093">
				<div id="div-comment-889093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889093">
			January 18, 2011 at 8:33 am</a>		</div>

		<p>Raymond is giving &quot;implementation details&quot; as a justification why you can&#39;t resize the command window. &nbsp;</p>
<p>In my former life, when I was developing code for outside customers, a customer asked for some feature. &nbsp;We started to explain why implementing the feature would be hard (it was a technical reason related to some internal data structures). &nbsp;After giving it some thought, we realized that the feature would be great, and we admitted to ourselves that our reluctance was merely due to an implementation detail. &nbsp;</p>
<p>It turned out not to be as hard to implement the feature as we thought it would be, and the customer was very pleased.</p>
<p>From then on, we vowed not to invoke &quot;implementation details&quot; as an excuse not to implement something that was a good idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-889103">
				<div id="div-comment-889103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889103">
			January 18, 2011 at 8:43 am</a>		</div>

		<p>asdbsd, you can vote for it and still comment that you think it should be optional. &nbsp;Several people have already done this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-889153">
				<div id="div-comment-889153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Bray</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889153">
			January 18, 2011 at 12:48 pm</a>		</div>

		<p>Try a console replacement, such as:</p>
<p><a rel="nofollow" target="_new" href="http://sourceforge.net/projects/console/" rel="nofollow">sourceforge.net/&#8230;/console</a></p>
<p>Havn&#39;t given it a big test yet but its free/opensource &amp; provides tabs in addition to &quot;proper&quot; selection (hold the CTRL key to activate).</p>
<p>James</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-889203">
				<div id="div-comment-889203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889203">
			January 18, 2011 at 5:25 pm</a>		</div>

		<p>@asdbsd: Agreed could make it an option&#8230; perheps could treat it like input method (i.e.: make the option available to let people select the default but offer shortcut to change.), but that could increase the development cost (rather than just remove the #ifdef and test the code, you now need change to UI&#8230; possibly even a new UI is needed.)</p>
<p>Also make it default can make the behaviour align to other editors(like what Alex said, Alt+select in Visual Studio and MS Word), and make it easier for new admins to get it intuitively. That said, I think I&#39;ll content even if they just offer an option to change the selection mode in menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-889233">
				<div id="div-comment-889233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889233">
			January 18, 2011 at 7:51 pm</a>		</div>

		<p>If only Windows 7 provided a way to replace conhost.exe&#8230;</p>
<p>Then again, I&#39;m just glad that console windows aren&#39;t owned by CSRSS anymore in Windows 7 &#8211; no more security constraints blocking you from drag and dropping files to a command prompt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-889243">
				<div id="div-comment-889243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Troll</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889243">
			January 18, 2011 at 11:28 pm</a>		</div>

		<p>I won&#39;t but I feel whoever removed the column headers from all views in Windows 7 should be boiled in hot oil and tortured to death. It&#39;s one of the reasons I won&#39;t upgrade to this crappy product which removes features. Microsoft should be sued their asses off for removing features in Windows and advertising it as an &quot;upgrade&quot;. I just wish I could give a really really hard slap to the person who decided to remove it.</p>
<div class="post">[<i>I know you&#39;re unhappy, but could you lay off the death threats? I don&#39;t like notifying Microsoft security when somebody posts a death threat. We have your IP address, you know. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-889493">
				<div id="div-comment-889493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889493">
			January 19, 2011 at 11:27 am</a>		</div>

		<p>Raymond: The Troll was merely suggesting that &quot;Somebody should boil that person in hot oil and torture them to death&quot;, which is to imply that they&#39;re safe as long as nobody implores the Troll to actually be &quot;that someone&quot;. In other words, as long as the Troll doesn&#39;t read your post from the 18th, you&#39;ll all be fine!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-889553">
				<div id="div-comment-889553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolmm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-889553">
			January 19, 2011 at 3:02 pm</a>		</div>

		<p>Today, I actually used the box select for my benefit (selecting a list of items from fixed-format output from a command on a Netapp filer). So it does have its uses :)</p>
<p>So I&#39;d be happy with &#39;flowing select&#39; (to coin a phrase) as an option. You change defaults, you confuse people and they say &#39;What a heap of crap Windows 8 was&#39;.</p>
<p>Although I must say I was happy when Allow Fast Paste as default disappeared. That used to cause us so many problems with people clicking on console windows and making them hang &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890033">
				<div id="div-comment-890033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-890033">
			January 21, 2011 at 2:49 am</a>		</div>

		<p>Adding useless cruft to GUI: Good</p>
<p>Removing useful feaures: Even better!</p>
<p>Continuing to Windows 8, you can clearly see where this is going.</p>
<p>&#8212;</p>
<p>[If resizing the window larger automatically increased the screen buffer size, does that mean that resizing the window smaller automatically decreases the screen buffer size? &quot;Yes&quot; sucks. So does &quot;no&quot;. -Raymond]</p>
<p>On console resizing, these NO reason why a window resizing couldn&#39;t do a buffer resize in the same way the properties dialog already does. If properties dialog resizing would be bad, then why does it exist? You just make up excuses as usual. One solution would be to resize the buffer on WM_EXITSIZEMOVE instead of WM_SIZE. You could have thought of that but act if as there&#39;s no way to solve this usability PROBLEM.</p>
<div class="post">[<i>Okay, so you say that it should shrink the buffer. Result: The content on the right hand edge gets chopped off. What if I wanted to just shrink the window and keep a large buffer? Are you saying that console windows shouldn&#39;t have scroll bars? (Because that&#39;s what shrinking the buffer on resize means.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-890003">
				<div id="div-comment-890003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Troll</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-890003">
			January 21, 2011 at 1:06 am</a>		</div>

		<p>I am not giving death threats. I stated what I *felt like doing* to these idiots who mess up Windows.</p>
<div class="post">[<i>Good luck explaining that to the judge. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890303">
				<div id="div-comment-890303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yes and No</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-890303">
			January 21, 2011 at 1:51 pm</a>		</div>

		<p>Raymond: Are you saying that console windows shouldn&#39;t have scroll bars? (Because that&#39;s what shrinking the buffer on resize means.</p>
<p>We only speak about the horizontal scrollbar here. Yes, when the window could be resized instantly with the mouse, this scrollbar can be eliminated, because it wlll not be visible 99.9999% of all cases.</p>
<p>But resizing by mouse and resizing with the current property dialog can work side by side, the same way as today, as 640k says. I have never used the console this way, but if someone wants to make the buffer 5000 characters wide, by using the dialog, the horizontal scrollbar would still be useful.</p>
<div class="post">[<i>I happen to have a console with a horizontal scrollbar right now. I would be upset if resizing the width also resized my console buffer so that it removed the scrollbar. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-890333">
				<div id="div-comment-890333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-890333">
			January 21, 2011 at 5:04 pm</a>		</div>

		<p>You know, Notepad has a mode with a horizontal scrollbar and a mode without. It&#39;s not inconceivable that the console window could have a similar option.</p>
<div class="post">[<i>The difference is that when you change the setting in Notepad, you don&#39;t lose data. (And good luck trying to come up with the text for the checkbox&#8230;) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890413">
				<div id="div-comment-890413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kelden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110117-00/?p=11743#comment-890413">
			January 23, 2011 at 3:29 pm</a>		</div>

		<p>If you already have a scrollbar, resizing shouldn&#39;t remove the scrollbar (buffer).</p>
<p>If you don&#39;t have one, resize without having one.</p>
<div class="post">[<i>That might work for you, but sometimes I temporarily resize a window smaller (e.g., so the &quot;% complete&quot; is the only thing showing) and I don&#39;t want to lose the rest of the buffer. Maybe I&#39;m just weird and nobody else resizes windows like I do. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

