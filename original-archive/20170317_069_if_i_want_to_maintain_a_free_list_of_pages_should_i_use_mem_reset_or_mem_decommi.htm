<html>
<head>
<title>If I want to maintain a free list of pages, should I use MEM_RESET or MEM_DECOMMIT?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If I want to maintain a free list of pages, should I use MEM_RESET or MEM_DECOMMIT?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 17, 2017 / year-entry #70</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170317-00/?p=95755</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It depends.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had a memory-intensive application,
and one of the things they do to avoid address space fragmentation
is to maintain a list of recently-freed memory and satisfying
future allocations from that free list.
(The free list has a cap to avoid permanent memory growth,
because
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20060502-07/?p=31333">
a cache with a bad policy is another name for a memory leak</a>.)
</p>
<p>
The customer saw two possible ways of managing the memory on the free list:
</p>
<ol>
<li>Use <code>Virtual&shy;Alloc(<wbr>MEM_<wbr>RESET)</code>
    when the pages go on the free list.
    When a page is allocated from the free list, just hand it out.
    The old contents may be lost, but that's okay.
</li>
<li>Use <code>Virtual&shy;Alloc(<wbr>MEM_<wbr>DECOMMIT)</code>
    when the pages go on the free list.
    When a page is allocated from the free list,
    use
    Use <code>Virtual&shy;Alloc(<wbr>MEM_<wbr>COMMIT)</code>
    to put memory back in place.
</li>
</ol>
<p>
"We don't care about the contents of the free pages.
We just want to reuse the virtual address space.
We definitely don't want the pages swapped out to disk,
because the contents are by definition uninteresting."
The customer asked for advice on choosing between the two options.
</p>
<p>
One tweak you can make to the
<code>MEM_<wbr>RESET</code> algorithm is to couple it with
<code>Virtual&shy;Unlock</code> to remove the page from the
working set.
This reduces physical memory usage while maintaining the commit
charge for the page.
The downside is that if you remove pages from the working set,
then you will incur CPU cycles when the pages are soft-faulted
in,
and you may create contention on the working set lock.
</p>
<p>
As for <code>MEM_<wbr>DECOMMIT</code> algorithm,
one of the things you have to watch out for is that the
<code>MEM_<wbr>COMMIT</code> may fail,
and you now have an error case to deal with,
Mind you,
this is probably an error case you already have to deal with,
because if the free list is empty, you need to go allocate
memory the old-fashioned way,
and that allocation may fail.
</p>
<p>
On the other hand, repeatedly committing, accessing,
and decommitting memory can be expensive.
Decommitted pages go onto the system free list,
and they need to be zeroed out by the operating system
before they are given back.
This is probably going to be significantly slower than
<code>MEM_<wbr>RESET</code>.
</p>
<p>
Those are some of the pros and cons.
The customer is advised to run their own performance tests
to see which way works best for them.
Fortunately, this appears to be a relatively simple thing
to test both ways because the behavior is isolated in the
application's internal page manager.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1289276">
				<div id="div-comment-1289276" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://skuldwyrm.no/' rel='external nofollow' class='url'>Roger Hågensen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170317-00/?p=95755#comment-1289276">
			March 17, 2017 at 2:30 pm</a>		</div>

		<p>Extraneous &#8220;use&#8221; in &#8220;use Use Virtual­Alloc(MEM_COMMIT)&#8221;.</p>
<p>Also I&#8217;m curious. Regarding Windows 10, what is the most efficient way to release memory when no longer needed (when I quit a program I just don&#8217;t free it, letting the OS do that), but during runtime what would be best? (I&#8217;ve got this spider-sense telling me you&#8217;ve answered this before in a post though).</p>
<p>Let me re-iterate the question: On Windows 10 what is the most OS friendly way to release memory? (and what state to leave that memory in)</p>
<p>.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-2" id="comment-1289575">
				<div id="div-comment-1289575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170317-00/?p=95755#comment-1289575">
			March 21, 2017 at 8:53 am</a>		</div>

		<p>Use the same way you allocated it. If it was VirtualAlloc, use VirtualFree. In other cases you don&#8217;t have a choice, anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-odd thread-alt depth-1 parent" id="comment-1289565">
				<div id="div-comment-1289565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170317-00/?p=95755#comment-1289565">
			March 21, 2017 at 8:52 am</a>		</div>

		<p>&gt;because a cache with a bad policy is another name for a memory leak.</p>
<p>Exhibit A: Windows XP file cache. THough not sure if more recent versions are much better.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1289595">
				<div id="div-comment-1289595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170317-00/?p=95755#comment-1289595">
			March 21, 2017 at 10:17 am</a>		</div>

		<p>What do you mean? Don&#8217;t remember anything odd so can&#8217;t comment on any newer versions. (Noting odd observed either)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1290275">
				<div id="div-comment-1290275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170317-00/?p=95755#comment-1290275">
			March 27, 2017 at 3:05 pm</a>		</div>

		<p>It tended to keep files that had just been copied in RAM.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

