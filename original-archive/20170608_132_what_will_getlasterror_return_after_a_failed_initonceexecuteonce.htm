<html>
<head>
<title>What will GetLastError() return after a failed InitOnceExecuteOnce?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What will GetLastError() return after a failed InitOnceExecuteOnce?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 8, 2017 / year-entry #133</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170608-00/?p=96365</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Whatever you tell it to.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The documentation for
<code>Init&shy;Once&shy;Execute&shy;Once</code> says
</p>
<blockquote CLASS=q><p>
If the function fails, the return value is zero.
To get extended error information, call <b>Get&shy;Last&shy;Error</b>.
</p>
</blockquote>
<p>
On the other hand, the documentation for the
<code>Init&shy;Once&shy;Callback</code> says
</p>
<blockquote CLASS=q><p>
If the function returns <b>FALSE</b>,
the block is not marked as initialized
and the call to <b>Init&shy;Once&shy;Execute&shy;Once</b> fails.
To communicate additional error information,
call <b>Set&shy;Last&shy;Error</b>.
before returning <b>FALSE</b>.
</p>
</blockquote>
<p>
The second paragraph implies that
the
<code>Init&shy;Once&shy;Execute&shy;Once</code> function
does not itself call
<code>Get&shy;Last&shy;Error</code>,
because if it did,
then that would wipe out
the value set by the callback.
Is that really the case?
</p>
<p>
Yes, that's really the case.
The remark in the first paragraph about calling
<code>Get&shy;Last&shy;Error</code> presupposes
that your callback uses
<code>Get&shy;Last&shy;Error</code> to report
why it wasn't able to initialize.
</p>
<p>
I agree, however, that the documentation is misleading here.
</p>
<p>
But if your callback wants to return status information
more complex than a single "success/failed",
you are probably better served by the
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20161222-00/?p=94995">
synchronous two-phase initialization pattern</a>,
which makes it a lot easier to return more complex information.
You can even use it to
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20170406-00/?p=95915">
throw a C++ exception</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-maurits even thread-even depth-1 parent" id="comment-1299165">
				<div id="div-comment-1299165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170608-00/?p=96365#comment-1299165">
			June 8, 2017 at 11:48 am</a>		</div>

		<p>&gt; presupposes that your callback uses Get­Last­Error to report why it wasn&#8217;t able to initialize</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-maurits odd alt depth-2 parent" id="comment-1299166">
				<div id="div-comment-1299166" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170608-00/?p=96365#comment-1299166">
			June 8, 2017 at 11:48 am</a>		</div>

		<p>typo: should say SetLastError</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1299195">
				<div id="div-comment-1299195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170608-00/?p=96365#comment-1299195">
			June 8, 2017 at 6:59 pm</a>		</div>

		<p>And the same typo, I think, in &#8220;&#8230; does not itself call GetLastError&#8230; &#8220;.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1299255">
				<div id="div-comment-1299255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170608-00/?p=96365#comment-1299255">
			June 9, 2017 at 8:00 am</a>		</div>

		<p>&#8220;The second paragraph implies that the Init­Once­Execute­Once function does not itself call Get­Last­Error&#8221;</p>
<p>I disagree.  It can&#8217;t call SetLastError after calling the callback, but it can do so before or in lieu of calling the callback.</p>
<p>For example, if it determines that the callback pointer is invalid (NULL or misaligned) and does not call that callback, then there is no last-error information from the callback to avoid overwriting.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

