<html>
<head>
<title>What is the lpClass member of SHELLEXECUTEINFO used for?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What is the lpClass member of SHELLEXECUTEINFO used for?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 1, 2010 / year-entry #191</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer reported problems launching the default Web browser with the Shell­Execute­Ex function: int _tmain(int argc, _TCHAR* argv[]) { SHELLEXECUTEINFO sei = {0}; sei.cbSize = sizeof(sei); sei.nShow = SW_SHOWNORMAL; sei.lpFile = TEXT("www.microsoft.com"); sei.fMask = SEE_MASK_CLASSNAME; sei.lpVerb = TEXT("opennew"); sei.lpClass = TEXT("htmlfile"); ShellExecuteEx(&sei); return 0; } This fails with sei.hInstApp = SE_ERR_FNF. If you don't pass...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported problems launching
the default Web browser with the
<code>Shell&shy;Execute&shy;Ex</code> function:
</p>
<pre>
int _tmain(int argc, _TCHAR* argv[])
{
  SHELLEXECUTEINFO sei = {0};
  sei.cbSize = sizeof(sei);
  sei.nShow = SW_SHOWNORMAL;
  sei.lpFile = TEXT("www.microsoft.com");
  sei.fMask = SEE_MASK_CLASSNAME;
  sei.lpVerb = TEXT("opennew");
  sei.lpClass = TEXT("htmlfile");

  ShellExecuteEx(&sei);

  return 0;
}
</pre>
<p>
This fails with <code>sei.hInstApp = SE_ERR_FNF</code>.
</p>
<p>
If you don't pass the <code>SEE_<wbr>MASK_<wbr>CLASSNAME</wbr></wbr></code> flag and
leave <code>lpClass = NULL</code>,
then the <code>Shell&shy;Execute&shy;Ex</code> function will try to
figure out what your <code>lpFile</code> refers to,
looking at the file extension,
looking for the file on the <code>PATH</code>,
and if all else fails,
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2006/01/13/512503.aspx">
trying some autocorrection</a>.
In this case, the customer was relying on the autocorrection,
since they left the <code>http://</code> prefix off their URL.
One of the default autocorrection rules is that if the item that couldn't
be launched begins with <code>www</code>, then try again with
<code>http://</code> in front.
</p>
<p>
On the other hand,
if you pass an explicit <code>lpClass</code>,
then no name resolution is performed on the <code>lpFile</code>.
You're saying "Don't do any sniffing and poking and autocorrection.
I have already determined that this item should be executed according
to the rules specified for
<code>HKEY_<wbr>CLASSES_<wbr>ROOT\<wbr>htmlfile</wbr></wbr></wbr></code>,
so just follow the rules and don't question me."
</p>
<p>
No second-guessing means that the <code>Shell&shy;Execute&shy;Ex</code>
function shrugged its shoulders and said,
"Well, I don't see a file called <code>www.microsoft.com</code>
in the current directory, so I will fail with a file-not-found error."
</p>
<p>
If you pass an explicit class, then
<code>Shell&shy;Execute&shy;Ex</code> will
treat your <code>lpFile</code> as if it were a file of that type.
If you have something and you want all the standard detection logic
to kick in, then don't specify a class.
</p>
<p>
<b>Bonus reading</b>:
The above program is simplified to illustrate the topic.
A real-life version of this program
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/05/28/8555658.aspx">
needs some other scaffolding</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-843783">
				<div id="div-comment-843783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WndSks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843783">
			July 1, 2010 at 7:41 am</a>		</div>

		<p>And as a final issue, htmlfile might not be the class for .html files, you would have to check HKCR.html first</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-843793">
				<div id="div-comment-843793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RichB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843793">
			July 1, 2010 at 7:45 am</a>		</div>

		<p>You only ever talk about poorly designed Win32 APIs here. How about showing us a well designed API?</p>
<p>&#8230;or is that not possible ;-)&#8230;.</p>
<div class="post">[<i>What would be the point? &quot;Hey, here&#39;s help on using a function that nobody is having trouble with!&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-843813">
				<div id="div-comment-843813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843813">
			July 1, 2010 at 8:10 am</a>		</div>

		<p>I see the problem. &nbsp;They forgot to call SetCurrentDirectory(_T(&quot;<a href="http://&#038;quot" rel="nofollow">http://&#038;quot</a>;)) first.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-843823">
				<div id="div-comment-843823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843823">
			July 1, 2010 at 8:12 am</a>		</div>

		<p>Wouldn&#39;t the class type for http:// urls be &quot;http&quot; anyway? &nbsp;Granted I don&#39;t really understand how protocol classes work in this respect. &nbsp;Would the flawed example work with &quot;www.example.com&quot; and a &quot;http&quot; class, or would it still need http:// prefixing the url?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-843833">
				<div id="div-comment-843833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">santosh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843833">
			July 1, 2010 at 8:13 am</a>		</div>

		<p>I don&#39;t understand how customer can report problems but can&#39;t read full documentation of an API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-843843">
				<div id="div-comment-843843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843843">
			July 1, 2010 at 8:23 am</a>		</div>

		<blockquote><p>
  Would the flawed example work with &quot;www.example.com&quot; and a &quot;http&quot; class
</p></blockquote>
<p>IIRC, the shell would do whatever HKEY_CLASSES_ROOThttpshellopencommand says to do. &nbsp;On one of my machines this is:</p>
<p>&quot;C:Program Files (x86)Internet ExplorerIEXPLORE.exe&quot; -nohome</p>
<p>And on the other it is:</p>
<p>&quot;C:Program FilesMinefieldfirefox.exe&quot; -requestPending -osint -url &quot;%1&quot;</p>
<p>The launched process would then have to decide what to do with the <a href="http://-less" rel="nofollow">http://-less</a> URL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-843853">
				<div id="div-comment-843853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843853">
			July 1, 2010 at 8:29 am</a>		</div>

		<p>No, that can&#39;t be right, or the &quot;htmlfile&quot;/&quot;opennew&quot; would have worked too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-843873">
				<div id="div-comment-843873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843873">
			July 1, 2010 at 9:38 am</a>		</div>

		<p>@Kyle</p>
<p>&nbsp; In my mind, one of the characteristics of a well designed API (vs a poorly designed one) is that it can be used without documentation because the expected functions exist and work as expected. &nbsp;</p>
<p>&#8230;Relying, of course, on some sort of code auto-completion feature in your IDE</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-843883">
				<div id="div-comment-843883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843883">
			July 1, 2010 at 10:14 am</a>		</div>

		<p>@Paul</p>
<p>In only the most basic of circumstances will that ever hold true. &nbsp;When dealing with simple operations like mathematics (add, subtract, etc.), that can certainly hold true. &nbsp;Difficult procedures (like invoking new processes, etc.) require lots of options because of the general purpose nature of Windows. &nbsp;Perhaps ShellExecuteEx() could be improved, but could it really be improved to the point that documentation would be unnecessary? &nbsp;How so? &nbsp;And how do you improve functions while maintaining backward compatibility?</p>
<p>The issues seen with the Windows API are the result of years of organic growth. &nbsp;It&#39;s not to say that things should never be improved or superseded, but it&#39;s practically impossible to have a constantly developed API meet this mythical notion of being &quot;well-designed&quot; in all facets. &nbsp;It only happens in APIs that progress very, very slowly and APIs that provide very little flexibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-843953">
				<div id="div-comment-843953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843953">
			July 1, 2010 at 2:45 pm</a>		</div>

		<p>@Paul,</p>
<p>Is &quot;IsBadReadPtr&quot; well designed API? After all, its name practically tells what it&#39;s doing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-843803">
				<div id="div-comment-843803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843803">
			July 1, 2010 at 7:55 am</a>		</div>

		<p>Ummm&#8230;so what makes the ShellExecuteEx() a poorly designed API, RichB? &nbsp;Because a developer can&#39;t use it without reading documentation? &nbsp;Oh wait&#8230;that&#39;s the case with *all* APIs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-843973">
				<div id="div-comment-843973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843973">
			July 1, 2010 at 7:39 pm</a>		</div>

		<p>&quot;I don&#39;t understand how customer can report problems but can&#39;t read full documentation of an API.&quot;</p>
<p>Santosh, you obviously haven&#39;t seen these 2 Connect bug reports from the last 2 months: &quot;3 * 0.1 is not 0.3&quot; and &quot;I get an access violation when I pass RegQueryValue a 100 byte buffer but say that it&#39;s 500 bytes long&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-843993">
				<div id="div-comment-843993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-843993">
			July 1, 2010 at 10:59 pm</a>		</div>

		<p>Kyle: GregM has demonstrated that even simple mathematical functions (how come 3 * 0.1 != 0.3?) can&#39;t be used without documentation. I doubt Paul can create an API that can be used with no documentation, yet won&#39;t cause somebody to report a bug against it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-844143">
				<div id="div-comment-844143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100701-00/?p=13543#comment-844143">
			July 2, 2010 at 9:30 am</a>		</div>

		<p>@Gabe</p>
<p>It&#39;s amazing such people become developers. &nbsp;:)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

