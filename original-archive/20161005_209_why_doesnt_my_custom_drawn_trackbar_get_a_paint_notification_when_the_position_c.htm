<html>
<head>
<title>Why doesn't my custom-drawn trackbar get a paint notification when the position changes from 1 to 0?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why doesn&#8217;t my custom-drawn trackbar get a paint notification when the position changes from 1 to 0?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 5, 2016 / year-entry #210</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>21</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It had no visible effect.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that under certain conditions,
their custom-drawn trackbar does not generate a
<code>NM_<wbr>CUSTOM&shy;DRAW</code> message.
</p>
<blockquote CLASS=q><p>
We have found that the trackbar control in the shell common controls
library does not generate a
<code>NM_<wbr>CUSTOM&shy;DRAW</code> message
when the position changes from 1 to 0
and
the trackbar's range is sufficiently high.
</p>
<p>
We start with the trackbar position at 1.
</p>
<table BORDER=0 CELLPADDING=0 CELLSPACING=0
    STYLE="border: solid 1px black">
<tr>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>&minus;1000</td>
<td COLSPAN=2 STYLE="width: 10ex">&nbsp;</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>+1000</td>
</tr>
<tr>
<td STYLE="width: 5ex">&nbsp;</td>
<td COLSPAN=4 ALIGN=center STYLE="width: 20ex; border-bottom: solid black 1px">
            &#x26ca;
    </td>
<td STYLE="width: 5ex">&nbsp;</td>
</tr>
<tr>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
</tr>
<tr>
<td COLSPAN=6>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td COLSPAN=5>
    Current value: 1
    </td>
</tr>
</table>
<p>
And then we send the <code>TBM_<wbr>SET&shy;POS</code>
message to set the trackbar position to zero.
The result is this:
</p>
<table BORDER=0 CELLPADDING=0 CELLSPACING=0
    STYLE="border: solid 1px black; display: inline">
<tr>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>&minus;1000</td>
<td COLSPAN=2 STYLE="width: 10ex">&nbsp;</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>+1000</td>
</tr>
<tr>
<td STYLE="width: 5ex">&nbsp;</td>
<td COLSPAN=4 ALIGN=center STYLE="width: 20ex; border-bottom: solid black 1px">
            &#x26ca;
    </td>
<td STYLE="width: 5ex">&nbsp;</td>
</tr>
<tr>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
</tr>
<tr>
<td COLSPAN=6>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td COLSPAN=5>
    Current value: 1
    </td>
</tr>
</table>
<p>
Observe that the "Current value" is reported as 1,
even though we changed the value to 0.
On the other hand,
if we start with the position at &minus;1:
</p>
<table BORDER=0 CELLPADDING=0 CELLSPACING=0
    STYLE="border: solid 1px black; display: inline">
<tr>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>&minus;1000</td>
<td COLSPAN=2 STYLE="width: 10ex">&nbsp;</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>+1000</td>
</tr>
<tr>
<td STYLE="width: 5ex">&nbsp;</td>
<td COLSPAN=4 ALIGN=center STYLE="width: 20ex; border-bottom: solid black 1px; position: relative; left: -1px;">
            &#x26ca;
    </td>
<td STYLE="width: 5ex">&nbsp;</td>
</tr>
<tr>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
</tr>
<tr>
<td COLSPAN=6>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td COLSPAN=5>
    Current value: &minus;1
    </td>
</tr>
</table>
<p>
then when we send the
<code>TBM_<wbr>SET&shy;POS</code> message to change the
position to zero,
we do get a
<code>NM_<wbr>CUSTOM&shy;DRAW</code> message,
and the "Current value" updates.
</p>
<table BORDER=0 CELLPADDING=0 CELLSPACING=0
    STYLE="border: solid 1px black; display: inline">
<tr>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>&minus;1000</td>
<td COLSPAN=2 STYLE="width: 10ex">&nbsp;</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>+1000</td>
</tr>
<tr>
<td STYLE="width: 5ex">&nbsp;</td>
<td COLSPAN=4 ALIGN=center STYLE="width: 20ex; border-bottom: solid black 1px">
            &#x26ca;
    </td>
<td STYLE="width: 5ex">&nbsp;</td>
</tr>
<tr>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
<td COLSPAN=2 STYLE="width: 10ex" ALIGN=center>|</td>
</tr>
<tr>
<td COLSPAN=6>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td COLSPAN=5>
    Current value: 0
    </td>
</tr>
</table>
<p>
We have been able to reproduce this problem on every version
of the trackbar as far back as we tested.
</p>
</blockquote>
<p>
Everything is working as it should.
</p>
<p>
The
<code>NM_<wbr>CUSTOM&shy;DRAW</code>
notification lets you customize how the common
control draws itself.
If there is nothing that needs to be redrawn,
then there is no <code>WM_<wbr>PAINT</code>
message and consequently no
<code>NM_<wbr>CUSTOM&shy;DRAW</code>
notification.
</p>
<p>
When the trackbar range is large,
then multiple positions have the same visual
appearance.
This is a natural consequence of the pigeonhole
principle:
There are 500 (say) pixel positions that the thumb
could be drawn, but there are 2001 possible positions,
so around four thumb positions all correspond to the
same visual appearance.
</p>
<p>
What appears to be happening is that positions 0 and 1 share
the same visual appearance,
so when the thumb position changes between 0 and 1,
there is no visual change and therefore no
<code>NM_<wbr>CUSTOM&shy;DRAW</code> message.
</p>
<p>
On the other hand, it appears that positions &minus;1
and 0 have different visual apperances,
which is why you get a
<code>NM_<wbr>CUSTOM&shy;DRAW</code> message
when the position changes from &minus;1 to 0.
</p>
<p>
It sounds like the application is using the
<code>NM_&shy;CUSTOM&shy;DRAW</code> notification to detect
when the trackbar position has changed.
That's not what it's for.
The
<code>NM_&shy;CUSTOM&shy;DRAW</code> notification
is for letting you customize the way the trackbar is drawn.
</p>
<p>
If you want to know when the trackbar position changes,
listen for the
<code>WM_<wbr>HSCROLL</code> message.
Note, however, that
the <code>WM_<wbr>HSCROLL</code> message
is not generated if the program itself changes the
position via the
<code>TBM_<wbr>SET&shy;POS</code> message,
on the theory that since the program itself changed
the value,
it can update its own state right there.
No need to tell the program what it already knows.
</p>
<p>
<b>Bonus chatter</b>:
Not generating a notification for program-generated
position changes also
helps avoid infinite loops.
After the program changes the trackbar position,
it receives the change notification,
and in response to the notification,
the program tries to update some state.
But the state update fails, so the program tries to undo
the change and set the position back.
This reset generates its own change notification,
and the program responds to the notification by
trying to update that same state (to the old value),
which still fails,
so the program tries to undo the change and set the
position back,
which generates yet another change notification,
and so on.
</p>
<p>
The theory here is that the code that is listening for
the <code>WM_<wbr>HSCROLL</code> or
<code>WM_<wbr>HSCROLL</code> message is also the code
that is sending the
<code>TBM_<wbr>SET&shy;POS</code> message,
so there's no point in telling the program something
it already knows.
</p>
<p>
<b>Exercise</b>: Suppose you have a trackbar,
and you want to let anybody send it a
<code>TBM_<wbr>SET&shy;POS</code> message to change
the trackbar position,
but you also want to be notified when that happens.
How would you do that?</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1267335">
				<div id="div-comment-1267335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267335">
			October 5, 2016 at 7:11 am</a>		</div>

		<p>Exercise answer: I&#8217;ve only ever dabbled in straight Win32 programming, and that a long time ago, but I suspect that you could subclass the window to handle TBM_SETPOS yourself, do whatever internal bookkeeping you need to, and then forward it on to the actual control.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1267345">
				<div id="div-comment-1267345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">viila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267345">
			October 5, 2016 at 7:37 am</a>		</div>

		<p>What if you want to be fancy and do sub-pixel rendering or anti-aliasing so that the four positions aren&#8217;t actually identical? Granted AA would probably be a terrible idea since it would make the thumb look blurry, but subpixel positioning could be done with close to perfect fidelity and you could triple your horizontal resolution.</p>
<p>(I&#8217;ll leave exercise to the reader how to let the user position it that accurately with the mouse&#8230;)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mzzt even depth-2 parent" id="comment-1267385">
				<div id="div-comment-1267385" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267385">
			October 5, 2016 at 9:50 am</a>		</div>

		<p>Then you invalidate the appropriate draw region when the position changes, which will generate your paint message.</p>
<p>If you do this you probably want to disable the default behavior to avoid getting two messages. Or possibly build your own control from scratch if it&#8217;s practical.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman odd alt depth-3 parent" id="comment-1267395">
				<div id="div-comment-1267395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267395">
			October 5, 2016 at 10:47 am</a>		</div>

		<p>&gt;Or possibly build your own control from scratch if it’s practical.</p>
<p>That&#8217;s a good way to get featured on thedailywtf</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1267405">
				<div id="div-comment-1267405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267405">
			October 5, 2016 at 11:30 am</a>		</div>

		<p>Gripe time: The Daily WTF is &lt;= 80% made up (with the dubious excuse of &quot;anonymizing&quot;), which, just really? The Real WTF, to use their meme, is why people continue to read it and react as if it isn&#039;t mostly fake.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1267415">
				<div id="div-comment-1267415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267415">
			October 5, 2016 at 11:30 am</a>		</div>

		<p>And then I spoil my gripe by using =</p>
<p>Sheesh</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1267425">
				<div id="div-comment-1267425" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267425">
			October 5, 2016 at 12:26 pm</a>		</div>

		<p>We had a real investigation as to a source code leak when some code that looked like ours ended up there. Turned out it was from somebody else who hired the same consultant. So, not quite as made up as people believe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1267455">
				<div id="div-comment-1267455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267455">
			October 6, 2016 at 1:55 am</a>		</div>

		<p>You&#8217;ve got any source for your claim ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1267465">
				<div id="div-comment-1267465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267465">
			October 6, 2016 at 2:22 am</a>		</div>

		<p>The problem with the daily wtf is that they&#8217;ve done it to death, so it feels like it&#8217;s the same stories just going round and round. The only thing that changes is the stories they build around them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1267475">
				<div id="div-comment-1267475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267475">
			October 6, 2016 at 6:01 am</a>		</div>

		<p>I&#8217;ve seen a system that I had to interface with featured on tdwtf. I think that everyone involved acknowledged that they had made some horrible design decisions early on. (At least one of the project managers did to me.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even depth-5" id="comment-1267485">
				<div id="div-comment-1267485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267485">
			October 6, 2016 at 6:23 am</a>		</div>

		<p>&gt;And then I spoil my gripe by using =</p>
<p>Not to mention that you also used the less-than sign when I presume you were trying to say greater than 80%. Kind of ruins your argument.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1267515">
				<div id="div-comment-1267515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267515">
			October 6, 2016 at 10:52 am</a>		</div>

		<p>It sure does :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1267525">
				<div id="div-comment-1267525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267525">
			October 6, 2016 at 11:04 am</a>		</div>

		<p>Joshua: Wel let me clarify that I am sure that the technical details are generally in at least the same ballpark as the submissions, but the stories about people involved they wrap around them I don&#8217;t believe, they smell like someone&#8217;s creative writing assignments. When I hit one such story that was an elaborate description of a meeting about the problem and omg what do we do where the submitter turned up and said &#8220;yeah none of that ever happened I just thought it was wacky!&#8221; that was enough for me.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chd1 odd alt thread-even depth-1 parent" id="comment-1267365">
				<div id="div-comment-1267365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ChDF+T' rel='external nofollow' class='url'>ChDF T</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267365">
			October 5, 2016 at 8:09 am</a>		</div>

		<p>It seems like the customer was trying to paint the numerical value as part of the trackbar, which results in a different look for every value, because there is a different number written below the actual control.<br />
Of course the customer could just add some kind of label below the trackbar and remove the number rendering code from the custom draw method. However this would break (potentially a lot of) code that updates the trackbar and now would have to update the trackbar and the label. Since the exercise is solving this problem, I guess this is what the customer went with and Raymond chose a very elegant way to implicitly include this in his post.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1267426">
				<div id="div-comment-1267426" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267426">
			October 5, 2016 at 12:27 pm</a>		</div>

		<p>I was about to post something like this. However on reasoning it out I discovered that creating a slider with precision of greater than 1 pixel (that is, more stops than pixels) is silly.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-chd1 odd alt depth-3" id="comment-1267435">
				<div id="div-comment-1267435" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ChDF+T' rel='external nofollow' class='url'>ChDF T</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267435">
			October 5, 2016 at 12:54 pm</a>		</div>

		<p>It kind of is, but sometimes you can&#8217;t avoid it: Imagine a Surface Pro 4 (high pixel density) connected to an external screen (standard pixel density). The window may be opened on the internal screen with a 1-on-1 correspondence of *your unit here* to pixels. Then the window is later moved to the external screen, the same trackbar becomes much smaller pixel wise (though the apparent size stays the same) &#8211; now you have a trackbar where 1 pixel maps to 2 (or more) of *your unit here*.<br />
To make it even more complicated, the new 1 unit distance still requires the same amount of mouse movement.<br />
So you can&#8217;t really ensure that a trackbar is non-silly in a per-screen-dpi-aware world. Coincidentally this is also an example for why it is bad to rely on a trackbar for precise input.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even depth-3" id="comment-1267545">
				<div id="div-comment-1267545" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267545">
			October 6, 2016 at 12:26 pm</a>		</div>

		<p>Sometimes number of pixels increase (after resize), and you don&#8217;t want two pixels have the same position number after that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1267785">
				<div id="div-comment-1267785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Cohn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267785">
			October 7, 2016 at 10:41 pm</a>		</div>

		<p>The best approach is to have exactly one stop per pixel (adjusted to DPI). E.g. a slider that represents video progress in integer seconds is OK for typical video files of 10 minutes or more, but looks ugly for instant clips of les than 5 sec, which are so popular nowadays.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1267436">
				<div id="div-comment-1267436" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Koopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267436">
			October 5, 2016 at 11:31 pm</a>		</div>

		<p>I think you meant &#8220;&#8230;the code that is listening for the WM_HSCROLL or WM_VSCROLL message&#8230;&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1267546">
				<div id="div-comment-1267546" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267546">
			October 6, 2016 at 3:33 pm</a>		</div>

		<p>&#8220;multiple positions have the same visual appearance&#8221; should be &#8220;multiple positions have the same visual appearance under the default drawing logic&#8221;.  When custom draw is added, that rule ceases to be correct.  But the new common controls don&#8217;t have explicit owner-draw window styles the way that listbox and combobox did, so the control doesn&#8217;t have any good way to know whether or not the rule applies.</p>
<p>Which may be why the terminology is different between &#8220;owner-drawn&#8221; and &#8220;custom draw&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-odd thread-alt depth-1" id="comment-1267595">
				<div id="div-comment-1267595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161005-00/?p=94455#comment-1267595">
			October 6, 2016 at 7:07 pm</a>		</div>

		<p>The same reason why changing value of html controls with javascript won&#8217;t generate onchange event.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

