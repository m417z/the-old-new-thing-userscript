<html>
<head>
<title>How can I get information about the items in the Recycle Bin from script?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I get information about the items in the Recycle Bin from script?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 21, 2014 / year-entry #102</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140421-00/?p=1183</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>7</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today we'll do a scripting version of an old C++ program: Printing information about the items in the Recycle Bin. (How you wish to act on the information is up to you.) This is a pattern we've seen a lot. Bind to a folder, enumerate its contents, extract properties. var shell = new ActiveXObject("Shell.Application"); var...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today we'll do a scripting version of
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/30/10202076.aspx">
an old C++ program</a>:
Printing information about the items in the Recycle Bin.
(How you wish to act on the information is up to you.)
</p>
<p>
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/01/14/10384593.aspx">
This is a pattern we've seen a lot</a>.
Bind to a folder, enumerate its contents,
extract properties.
</p>
<pre>
var shell = new ActiveXObject("<a HREF="http://msdn.microsoft.com/library/bb776890.aspx">Shell.Application</a>");
var recycleBin = shell.NameSpace(10); // CSIDL_BITBUCKET
var items = recycleBin.Items();
for (var i = 0; i &lt; items.Count; i++) {
  var item = items.Item(i);
  WScript.StdOut.WriteLine(item.Name);
  WScript.StdOut.WriteLine(item.ExtendedProperty(
                                "System.Recycle.DeletedFrom"));
  WScript.StdOut.WriteLine(item.ExtendedProperty(
                                "System.Recycle.DateDeleted"));
  WScript.StdOut.WriteLine(item.Size);
}
</pre>
<p>
Wow, that was way easier than doing it in C++!
</p>
<p>
Just for fun, I'll do it in C#, first as a straight port:
</p>
<pre>
// add a reference to shell32.dll
class Program {
  public static void Main()
  {
    var shell = new Shell32.Shell();
    var recycleBin = shell.NameSpace(10); // CSIDL_BITBUCKET
    var items = recycleBin.Items();
    for (var i = 0; i &lt; items.Count; i++) {
      var item = (Shell32.FolderItem2)items.Item(i);
      System.Console.WriteLine(item.Name);
      System.Console.WriteLine(item.ExtendedProperty(
                                    "System.Recycle.DeletedFrom"));
      System.Console.WriteLine(item.ExtendedProperty(
                                    "System.Recycle.DateDeleted"));
      System.Console.WriteLine(item.Size);
    }
  }
}
</pre>
<p>
We have to cast to
<code>Shell32.<wbr>Folder&shy;Item2</code> because the default interface
for the <code>Item()</code> method is
<code>Shell32.<wbr>Folder&shy;Item</code>,
but
<code>Extended&shy;Property</code> is a method on
<code>Shell32.<wbr>Folder&shy;Item2</code>.
We didn't have to do this explicit cast in JavaScript
because JavaScript is a dynamically-typed language.
</p>
<p>
So let's use the <code>dynamic</code> keyword to mimic that
in C#.
Note, however, that if you use <code>dynamic</code>, then you
miss out on a lot of IntelliSense features.
</p>
<pre>
class Program {
  public static void Main()
  {
    var shell = new Shell32.Shell();
    var recycleBin = shell.NameSpace(10); // CSIDL_BITBUCKET
    var items = recycleBin.Items();
    foreach (dynamic item in items) {
      System.Console.WriteLine(item.Name);
      System.Console.WriteLine(item.ExtendedProperty(
                                    "System.Recycle.DeletedFrom"));
      System.Console.WriteLine(item.ExtendedProperty(
                                    "System.Recycle.DateDeleted"));
      System.Console.WriteLine(item.Size);
    }
  }
}
</pre>
<p>
Now you can do things like list all the files deleted today
</p>
<pre>
class Program {
  public static void Main()
  {
    var today = DateTime.Today;
    var shell = new Shell32.Shell();
    var recycleBin = shell.NameSpace(10); // CSIDL_BITBUCKET
    var items = recycleBin.Items();
    foreach (dynamic item in items) {
      if (item.ExtendedProperty("System.Recycle.DateDeleted").Date
                                                       == today) {
        System.Console.WriteLine(item.name);
      }
    }
  }
}
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1121163">
				<div id="div-comment-1121163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Logan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140421-00/?p=1183#comment-1121163">
			April 21, 2014 at 8:15 am</a>		</div>

		<p>Note that you can actually say `foreach(Shell32.FolderItem2 item in items) { &#8230; }` without a separate cast. This is a hold over from pre-generic C# where it would have been inconvenient to be constantly doing this when iterating over System.Collection.ArrayList or similar.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121183">
				<div id="div-comment-1121183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nico</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140421-00/?p=1183#comment-1121183">
			April 21, 2014 at 12:19 pm</a>		</div>

		<p>That&#39;s a nice example use of /dynamic/. &nbsp;I found myself doing a similar thing when working with the myriad of MSHTML interfaces (IHTMLDocument and friends).</p>
<p>And now this post has got me looking forward to CLR week :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1121203">
				<div id="div-comment-1121203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140421-00/?p=1183#comment-1121203">
			April 21, 2014 at 6:07 pm</a>		</div>

		<p> &nbsp; &nbsp; &nbsp;var item = (Shell32.FolderItem2)items.Item(i);</p>
<p>Should be</p>
<p> &nbsp; &nbsp; &nbsp;var item = ((Shell32.FolderItem2)items).Item(i);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121213">
				<div id="div-comment-1121213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140421-00/?p=1183#comment-1121213">
			April 21, 2014 at 6:24 pm</a>		</div>

		<p>BTW Raymond, I don&#39;t know if this is the right place to post this (this entry reminded me of the problem) but I don&#39;t really know who else to go to on this one. Perhaps it could be food for blog entry? I&#39;m having three issues with Shell PIDLs (only happening with select Control Panel items, one example is &quot;Notification Area Icons&quot;). </p>
<p>First, take the PIDL of &quot;Notification Area Icons&quot; and call SHGetNameFromIDList with that PIDL and SIGDN_NORMALDISPLAY. Instead of getting &quot;Notification Area Icons&quot; back (like I do for others), I get the stringified version of the PIDL (e.g. ::{control_panel_clsid} {notif_area_clsid}). </p>
<p>Second, take that same PIDL and call ShellexecuteEx with the SHELLEXECUTEINFO.lpIDList set to that PIDL and SHELLEXECUTEINFO.fMask set to SEE_MASK_IDLIST. It doesn&#39;t launch! Windows chucks up an error &quot;there is no program associated&quot; or something similar.</p>
<p>Third, take that same PIDL and call SHGetFileInfo with that PIDL and with uFlags containing SHGFI_PIDL. The result is the Windows generic blank paper icon.</p>
<p>I&#39;m confused. I have no clue what is going on here. Is this a possible bug with some of the Control Panel virtual folders? </p>
<p>I mean, the exact same code works for every other Shell item (libraries, folders, even OneDrive), but *some* (not all!) Control Panel virtual folders all exhibit the *exact same* as above. I could get a list of the ones that have this odd behavior if needed, but &quot;Notification Area Icons&quot; is the one I remember off the top of my head.</p>
<p>It is very possible I&#39;m doing something wrong but then why would it work for most other things? And for the record, the PIDL comes from IPersistFolder2::GetCurFolder.</p>
<p>Thanks! </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-1121243">
				<div id="div-comment-1121243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140421-00/?p=1183#comment-1121243">
			April 22, 2014 at 6:55 am</a>		</div>

		<p>@Nick: &quot;I don&#39;t really know who else to go to on this one&quot;. &nbsp;Open a support ticket. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1121323">
				<div id="div-comment-1121323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam V</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140421-00/?p=1183#comment-1121323">
			April 22, 2014 at 10:41 am</a>		</div>

		<p>@Nick &#8211; your change would cast the *list* of items to a FolderItem2. If necessary, you could do:</p>
<p> &nbsp; &nbsp;var item = (Shell32.FolderItem2)(items.Item(i));</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1121603">
				<div id="div-comment-1121603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140421-00/?p=1183#comment-1121603">
			April 23, 2014 at 9:04 am</a>		</div>

		<p>So a RecycleBin class is still at -100 BCL points?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

