<html>
<head>
<title>Windows is not a Microsoft Visual C/C++ Run-Time delivery channel</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Windows is not a Microsoft Visual C/C++ Run-Time delivery channel</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 11, 2014 / year-entry #93</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>113</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There's a DLL in the system directory called MSVCRT.DLL, and from its name, you might think that it is the Microsoft Visual C/C++ Run-Time library. That is a perfectly reasonable guess. But it would also be wrong. The Microsoft Visual C/C++ Run-Time libraries go by names like MSVCR71.DLL or MSVCR80.DLL or MSVCR90.DLL or MSVCR100.DLL, and...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
There's a DLL in the system directory called
<code>MSVCRT.DLL</code>,
and from its name, you might think that it is the
Microsoft Visual C/C++ Run-Time library.
That is a perfectly reasonable guess.
</p>
<p>
But it would also be wrong.
</p>
<p>
The Microsoft Visual C/C++ Run-Time libraries go by names
like
<code>MSVCR71.DLL</code> or
<code>MSVCR80.DLL</code> or
<code>MSVCR90.DLL</code> or
<code>MSVCR100.DLL</code>,
and the debugging versions have a <code>D</code> in there, too.
And
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/01/11/7065021.aspx">
like MFC</a>,
these binaries might be on your machine as a side effect
of the implementation of a particular Windows component,
but they are not contractual.
If your program requires the
Visual C/C++ Run-Time library,
then your program needs to install the appropriate version.
(There are redistributable packages you can
include with your application.)
</p>
<p>
Okay, so what's with the DLL with the misleading name
<code>MSVCRT.DLL</code>?
The unfortunate name is a consequence of history.
</p>
<p>
Back in Windows&nbsp;95,
<code>MSVCRT.DLL</code> <i>was</i> the
Microsoft Visual C/C++ Run-Time library,
or at least it was the runtime library for Visual C/C++ 4.2.
As each new version of Visual C/C++ came out, the Windows team
had to go update their copy of <code>MSVCRT.DLL</code>
to match.
And if the Windows team wanted to fix a bug in
<code>MSVCRT.DLL</code>,
they had to make sure that the Visual C/C++ team made the corresponding
change in their version.
</p>
<p>
This high degree of co&ouml;rdination became untenable,
especially since it required the Windows team to do things like
push a new version of <code>MSVCRT.DLL</code> to all downlevel
platforms whenever a new version of Visual C/C++ came out.
(Good luck doing this in the days before Windows Update!)
</p>
<p>
And sometimes these fixes caused compatibility problems.
For example, I remember there was a fix for a Y2K problem
which
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/10/06/10220920.aspx#10222088">
caused one application to crash</a>
because the fix
altered the stack usage in such a way that exposed an
uninitialized variable bug.
</p>
<p>
One serious problem with the <code>MVSCRT.DLL</code>
"one runtime to rule them all" model is that
multiple versions of Visual C++ would all use the same library,
and keeping one DLL compatible with all versions of Visual C++
was a maintenance nightmare.
For example, if a new C++ language feature required a change
to the <code>ostream</code> class,
you had to be careful to design your change so that the
class was still binary-compatible with the older version
of the class.
This meant not changing the size of the class (because somebody
may have derived from it)
and not changing the offsets of any members,
and being careful which virtual methods you call.
This was in practice not done, and the result was that (for example)
Windows&nbsp;95 and Windows&nbsp;98 both had DLLs called
<code>MSVCRT.DLL</code> that were not compatible with each other.
</p>
<p>
And of course there was the problem of some application installer
unwittingly overwriting the existing copy of
<code>MSVCRT.DLL</code> with an older one,
causing <i>the entire operating system</i> to stop working.
</p>
<p>
At some point, the decision was made to just give up
and declare it an operating system DLL,
to be used only by operating system components.
All newer versions of Visual C/C++ used specifically-numbered
DLLs for their runtime libraries.
(Giving different names to each version of the run-time library
solves the problem of trying to make one DLL service multiple
versions of clients,
as well as addressing the <i>accidental downgrade</i> problem.)
</p>
<p>
Although <code>MSVCRT.DLL</code> has been an operating system DLL
for a long time,
<a HREF="http://msdn.microsoft.com/en-us/library/abx4dbyh%28VS.80%29.aspx#sectiontoggle2">
and has been documented as off-limits to applications</a>,
there are still
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/03/10192225.aspx#10192991">
a lot of people</a>
who
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/06/07/10020654.aspx#10020962">
treat it as a C runtime delivery channel</a>,
and those programs create a lot of grief for the product team.
</p>
<p>
I remember one change that the runtime library folks made to
<code>MSVCRT.DLL</code> that had to be backed out and revisited
because they found an application that not only linked to
<code>MSVCRT.DLL</code> instead of the runtime library the
compiler intended,
but also groveled into an internal array and manipulated
private members.
(I was one of the people who investigated this compatibility
issue, but I was not the one who solved it.)
</p>
<pre>
// Note: The issue has been simplified for expository purposes
struct SomethingInternal
{
    int widget;
    short widgetFlags;
    char widgetLevel;
    int needs_more_time;
};

SomethingInternal InternalArray[80];
</pre>
<p>
The runtime library folks added a new member to the structure:
</p>
<pre>
struct SomethingInternal
{
    int widget;
    short widgetFlags;
    char widgetLevel;
    int needs_more_time;
    <font COLOR=blue>int needs_<a STYLE="color: blue" HREF="http://www.nbc.com/saturday-night-live/video/more-cowbell-with-will-ferrell-on-snl--video--saturday-night-live--nbc/n41046">more_cowbell</a>;</font>
};
</pre>
<p>
This change increased the size of the
<code>Something&shy;Internal</code> structure,
which in turn meant that when the application did
</p>
<pre>
// Redeclare this internal structure in MSVCRT.DLL
// so we can poke the needs_more_time member to get more time.

struct SomethingInternal
{
    int widget;
    short widgetFlags;
    char widgetLevel;
    int needs_more_time;
};

extern SomethingInternal InternalArray[80];

...
    InternalArray[i].needs_more_time = 1;
...
</pre>
<p>
it ended up poking the wrong byte because the structure
size didn't match.
</p>
<p>
The runtime library folks had to go back and squeeze the cowbell
flag into the structure in a way that didn't alter the size
of the <code>Something&shy;Internal</code> structure.
I don't remember exactly what the fix was,
but one way they could've done it was by squeezing the flag
into the one byte of padding between
<code>widgetLevel</code> and
<code>needs_<wbr>more_<wbr>time</code>.
</p>
<pre>
struct SomethingInternal
{
    int widget;
    short widgetFlags;
    char widgetLevel;
    <font COLOR=blue>char needs_more_cowbell;</font>
    int needs_more_time;
};
</pre>
<p>
<b>Bonus chatter</b>:
The application had an easy time messing with the internal array
because the source code to the C runtime library
is included with the compiler,
So much for "All these compatibility problems would go away
if you published the source code."
Publishing the source code makes it <i>easier</i> to introduce
compatibility problems,
because it lays bare all the internal undocumented behaviors.
Instead of trying to reverse-engineer the runtime library,
you can just sit down and read it,
and if you want to do something sneaky,
you can just
copy the
declaration of the internal array
and
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/02/11/10498299.aspx">
party on</a>
the
<code>needs_<wbr>more_<wbr>time</code> member.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (113)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-hikari even thread-even depth-1" id="comment-1118413">
				<div id="div-comment-1118413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118413">
			April 11, 2014 at 7:11 am</a>		</div>

		<p>I continue to be amazed at the level of effort Microsoft go to in order to accommodate other people&#39;s stupid design and implementation choices.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118423">
				<div id="div-comment-1118423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118423">
			April 11, 2014 at 7:20 am</a>		</div>

		<p>I wish Microsoft would just start publishing compatibility issues and tell the developers to go do anatomically impossible things to themselves.</p>
<p>Compatibility should be reserved for programs written properly, not poorly-written trash. It is this sort of thing which makes fruit-based operating systems seem more stable and better written, even when they aren&#39;t.</p>
<div class="post">[<em>This program happens to be extremely popular among a certain category of users. There&#39;s a good chance you use it to keep your day running smoothly. Remember, the victim is not the developer of the bad program. It&#39;s the users of that program. &quot;Microsoft makes an unnecessary change in order to break program X on purpose. That&#39;s because they hate people who use program X and want them to switch to Microsoft products.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1118453">
				<div id="div-comment-1118453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118453">
			April 11, 2014 at 7:58 am</a>		</div>

		<p>The horror of MinGW piggybacking on MSVCRT instead of implementing its own Windows-compatible CRT is the reason one can&#39;t printf a long double in MinGW: MinGW uses 80-bit long doubles, while the CRT considers a long double the same as a double&#8230;</p>
<p>@Anon: Even with a manifest explicitly specifying the execution level as asInvoker?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118463">
				<div id="div-comment-1118463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Interested</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118463">
			April 11, 2014 at 8:00 am</a>		</div>

		<p>Could you tell us what kind of application it was that it warranted this amount of effort from you side? External or internal? Maybe some nuclear plant controlling SW (well, on second thought, hopefully not ;)</p>
<div class="post">[<em>It&#39;s a language runtime. So this broke all programs written in that language. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118473">
				<div id="div-comment-1118473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118473">
			April 11, 2014 at 8:01 am</a>		</div>

		<p>Just to confuse things further.</p>
<p>Starting with Windows Server 2003, there are some supported side-by-side assemblies (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/aa376609.aspx">msdn.microsoft.com/&#8230;/aa376609.aspx</a>):</p>
<p>&#8211; WinHTTP 5.1</p>
<p>&#8211; Microsoft Isolation Automation assemblies that enable the use of side-by-side assemblies with scripting.</p>
<p>&#8211; Shell Common Controls version 6.0 (Comctl32.dll)</p>
<p>&#8211; GDI Plus version 1.0 (GDIplus.dll)</p>
<p>&#8211; Visual C++ Run-time Libraries version 6.0</p>
<p>They don&#39;t document the names of the assemblies, but they are around on MSDN:</p>
<p>&#8211; Microsoft.Windows.WinHTTP (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa384082.aspx">msdn.microsoft.com/&#8230;/aa384082.aspx</a>)</p>
<p>&#8211; Microsoft.Windows.Common-Controls (nobody knows where it came from; lost to the sands of time)</p>
<p>&#8211; Microsoft.Windows.GdiPlus (no idea where i found that)</p>
<p>&#8211; vcrt 6? Who knows</p>
<p>If you do need to ship another version of the Visual C++ libraries, their side-by-side assembly identifiers are also documented (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms235624.aspx">msdn.microsoft.com/&#8230;/ms235624.aspx</a>):</p>
<p>&#8211; Microsoft.VC90.ATL (Active Template Library)</p>
<p>&#8211; Microsoft.VC90.CRT (C Runtime Library)</p>
<p>&#8211; Microsoft.VC90.OpenMP (OpenMP Library)</p>
<p>(i omitted the names of four other assemblies; so that people are not tempted to use them)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118483">
				<div id="div-comment-1118483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118483">
			April 11, 2014 at 8:17 am</a>		</div>

		<p>@Anon &#8212; even today you will find questions on the official Visual C++ forums with programmers asking how they can link to MSVCRT.dll instead of the proper runtime for the current version of Visual C++. &nbsp;Some get fairly irate when told they shouldn&#39;t do it. &nbsp;It does seem like an obvious path if you don&#39;t want to use an installer to distribute your software.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118493">
				<div id="div-comment-1118493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118493">
			April 11, 2014 at 8:20 am</a>		</div>

		<p>As I recall, DEC (Digital Equipment Corporation) chose the opposite route: &nbsp;VAX/VMS was the distribution channel for all of the language runtimes. &nbsp;This simplified life for the applications developers (presumably at the cost of dealing with DLL Hell).</p>
<p>A friend who worked there told me that the OS engineers, in particular, thought this was a good idea, but they were afraid the product folks would try to undo the decision. &nbsp;To make it harder to undo, they wrote bits of the OS in each of the languages that DEC had compilers for: &nbsp;BLISS, C, FORTRAN, Pascal, etc. &nbsp;With the OS dependent on the runtimes for all of the languages, it became much harder for others to argue that the OS shouldn&#39;t include the runtimes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118513">
				<div id="div-comment-1118513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118513">
			April 11, 2014 at 9:04 am</a>		</div>

		<p>&quot;There&#39;s the mistake. It is perfectly reasonable for the C library to be a platform standard library. The same is not true of C++.&quot;</p>
<p>Why is C so special? Why can&#39;t I have the Pascal, or the Haskell runtime library to be a platform standard library?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118523">
				<div id="div-comment-1118523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118523">
			April 11, 2014 at 9:12 am</a>		</div>

		<p>IIRC MinGW doesn&#39;t use MSVCRT.DLL because they don&#39;t know any better, but because linking with MSVCR71.DLL or MSVCR80.DLL or &#8230; and then publishing binary versions of MinGW (or GPL software compiled with MinGW) with the required &quot;redistributable&quot; DLLs would be a GPL violation.</p>
<div class="post">[<em>Ah, the &quot;There is no acceptable way for me to do what I want, so I&#39;m FORCED to do it in an unacceptable manner&quot; argument. This is like &quot;I was forced to park in a fire lane because there were no parking spaces left&quot;. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1118543">
				<div id="div-comment-1118543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118543">
			April 11, 2014 at 9:19 am</a>		</div>

		<p>&gt; fruit</p>
<p>It&#39;s OK to say &quot;Apple&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118553">
				<div id="div-comment-1118553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Kohne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118553">
			April 11, 2014 at 9:31 am</a>		</div>

		<p>@Joker_vD: C++ requires too much knowledge of class layout at compile time, meaning you can&#39;t muck around behind the scenes in the library without breaking some apps. This goes even for private members of the class &#8211; the compiler accounts for those during class compilation, so if the actual binary doesn&#39;t match the header precisely, &lt;kaboom&gt;.</p>
<p>To anyone high enough up at MS to make the call: We all understand you can&#39;t just not put the compatibility stuff in place (people then claim you broke things on purpose). But please start naming and shaming the companies that do absurd things like the example given above. It&#39;s not an optimal solution, but perhaps a bit of &#39;hey, look how much they suck&#39; pressure would get at least some companies to clean up their acts.</p>
<p>As to source code: Releasing the source works if everyone is working hard toward making a stable working environment for the user. If some people are instead trying to do whatever they have to in order to get the code out the door tomorrow, it doesn&#39;t help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118563">
				<div id="div-comment-1118563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Kohne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118563">
			April 11, 2014 at 9:34 am</a>		</div>

		<p>@John &#8211; on MinGW &#8211; is there any reason they can&#39;t write their own CRT? I imagine most of the libc should be useable (libc is LGPL), is there anything in MSVCRT that can&#39;t be replicated in a reasonable timeframe? Or is it just that no one&#39;s bothered to try?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118573">
				<div id="div-comment-1118573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118573">
			April 11, 2014 at 9:35 am</a>		</div>

		<p>Off-topic question: why the umlaut on coördination?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118583">
				<div id="div-comment-1118583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118583">
			April 11, 2014 at 9:36 am</a>		</div>

		<p>@Medinoc</p>
<p>Indeed, that will cause it to fail silently when AppCompat tries to force elevation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118593">
				<div id="div-comment-1118593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hagenp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118593">
			April 11, 2014 at 9:39 am</a>		</div>

		<p>&quot;keeping one DLL compatible with all versions of Visual C++ was a maintenance nightmare&quot;</p>
<p>That&#39;s what came to mind when I learned about the WDF team&#39;s approach to UMDF / KDMF distribution. &quot;Wel will make sure newer versions are compatible with all existing drivers.&quot; Good Luck! :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118603">
				<div id="div-comment-1118603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118603">
			April 11, 2014 at 9:42 am</a>		</div>

		<p>[Ah, the &quot;There is no acceptable way for me to do what I want, so I&#39;m FORCED to do it in an unacceptable manner&quot; argument. This is like &quot;I was forced to park in a fire lane because there were no parking spaces left&quot;. -Raymond]</p>
<p>The tools that you disparage for doing unacceptable things have greater reputation than all of MS. We on this blog laugh with you at the results of people doing unacceptable things and wondering why disaster strikes, but this time the answer must be make an acceptable way or deal with the consequences of not doing so.</p>
<p>GCC was ported to target Windows because a cross-compiler must exist, and at the time of the port MS compilers sucked badly. Cygwin exists because the POSIX subsystem failed of its promise.</p>
<div class="post">[<em>As noted elsewhere, the correct solution is &quot;Write and ship your own runtime library.&quot; Otherwise you may break at any future version of MSVCRT.DLL, since MSVCRT.DLL is not part of the API surface. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1118623">
				<div id="div-comment-1118623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118623">
			April 11, 2014 at 9:46 am</a>		</div>

		<p>&gt; why the umlaut on coördination?</p>
<p>So the two &quot;o&quot;s are pronounced individually rather than as a diphthong (like &quot;cool&quot;). Compare reënter.</p>
<p>It is more usual to use a hyphen (re-enter) or just bleed the two words together and trust on the user being able to infer pronunciation from context (coordination) but that&#39;s not how Raymond rolls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118633">
				<div id="div-comment-1118633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hagenp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118633">
			April 11, 2014 at 9:48 am</a>		</div>

		<p>Jeff: &quot;ö&quot; can be &quot;o-umlaut&quot; but also &quot;o with a trema&quot;, indicating the vowel is pronounced unaltered and separate from the first one. So it is &quot;co-ordination&quot;, and not &quot;[cuurdinaishon]&quot; or &quot;[cohrdinaishon]&quot; (sorry for not using IPA).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118643">
				<div id="div-comment-1118643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118643">
			April 11, 2014 at 9:50 am</a>		</div>

		<p>@Jeff: &nbsp;From <a href="http://en.wikipedia.org/wiki/Diacritic:" rel="nofollow" target="_new">en.wikipedia.org/&#8230;/Diacritic:</a> &nbsp;The main use of diacritical marks in the Latin script is to change the sound-value of the letter to which they are added. Examples from English are the diaereses in na&iuml;ve and No&euml;l, which show that the vowel with the diaeresis mark is pronounced separately from the preceding vowel;</p>
<p>Raymond often uses the diacritic marks on English words like that, even though they are archaic in modern English and almost never used anymore. &nbsp;I think he explained why once, but I forget the exact reason.</p>
<div class="post">[<em>Because that&#39;s how I learned the word. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118653">
				<div id="div-comment-1118653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118653">
			April 11, 2014 at 9:51 am</a>		</div>

		<p>Well, looks like I was a couple of minutes too slow on my answer :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118673">
				<div id="div-comment-1118673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118673">
			April 11, 2014 at 10:16 am</a>		</div>

		<p>[As noted elsewhere, the correct solution is &quot;Write and ship your own runtime library.&quot; Otherwise you may break at any future version of MSVCRT.DLL, since MSVCRT.DLL is not part of the API surface. -Raymond]</p>
<p>GCC targets MSVCRT.DLL as it was in NT4 when it was part of the API surface. Unless this is to be revoked ex post facto then nothing breaks.</p>
<div class="post">[<em>It was not part of the API surface in NT4 either. It just happened to be there, just like today. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-1118683">
				<div id="div-comment-1118683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118683">
			April 11, 2014 at 10:22 am</a>		</div>

		<p>@Mityador: &quot;The 3rd party apps already depend (indirectly) on MSVCRT.DLL via other system DLLs (e.g. USER32.DLL, GDI32.DLL, COMCTL32.DLL etc.).&quot;</p>
<p>None of the DLLs you name import msvcrt.dll.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118703">
				<div id="div-comment-1118703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118703">
			April 11, 2014 at 10:35 am</a>		</div>

		<p>Ugh! &nbsp;All of this angst and hand-wringing to justify or disparage the use of a system DLL!</p>
<p>Do NOT use DLLs unless you MUST. &nbsp;Link your freakin&#39; application against all libraries it uses so that none of this is relevant.</p>
<p>Obligatory preemptive anti-snark: buh, buh, in Windows 95 days it was too memory intensive!</p>
<p>Are we seriously still in a memory crunch? &nbsp;And seriously, with function-level linking, you pay only for what you use.</p>
<p>Please! &nbsp;Stop the insanity. &nbsp;Link your freakin&#39; apps fully.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118713">
				<div id="div-comment-1118713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Snark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118713">
			April 11, 2014 at 10:51 am</a>		</div>

		<p>[Please! &nbsp;Stop the insanity. &nbsp;Link your freakin&#39; apps fully. -Steve Wolf]</p>
<p>Yes, so heartbleed-like vulnerabilities can stay in forever!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118723">
				<div id="div-comment-1118723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Y</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118723">
			April 11, 2014 at 10:54 am</a>		</div>

		<p>You usually are pretty thorough about linking to previous relevant blog posts. &nbsp;But this time you forgot &quot;party on&quot;.</p>
<div class="post">[<em>Temporal anomaly. I wrote this article first. Fixed, thanks. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118733">
				<div id="div-comment-1118733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118733">
			April 11, 2014 at 11:04 am</a>		</div>

		<p>@Snark &#8211; Vendors had to issue patches for heart-bleed. &nbsp;No magical fix in some DLL works across the board.</p>
<p>Having DLLs means every customer potentially has a different version of your software. &nbsp;Good luck testing all of those&#8230;. and it&#39;s an infinitely expanding issue &#8211; since new DLLs means a growing test-issue &#8211; and you have to test combinations &#8211; making your problem an exponential growth one. :(</p>
<p>DLLs only make sense where you want to supply hooks for dynamic behavior, you define it rigorously, and you work hard to ensure the interfaces are secure and cannot bust your runtime. &nbsp;Every other places, use a freakin&#39; static link so that your app as-test is the one your customers actually run.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118743">
				<div id="div-comment-1118743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The Other John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118743">
			April 11, 2014 at 11:08 am</a>		</div>

		<p>I second this &quot;Why is C so special? Why can&#39;t I have the Pascal, or the Haskell runtime library to be a platform standard library?&quot;</p>
<p>Everyone likes to play high and mighty until it comes to their language of choice or their own mistakes. Typical. Play by the same rules or be a hypocrite, your choice. Windows is Not *nix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118753">
				<div id="div-comment-1118753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118753">
			April 11, 2014 at 11:15 am</a>		</div>

		<p>[It was not part of the API surface in NT4 either. It just happened to be there, just like today. -Raymond]</p>
<p>Fair enough. In that case, dropping the copy of MSVCRT.DLL from MSVC 4.2 in System32 if it&#39;s not there should be safe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1118763">
				<div id="div-comment-1118763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118763">
			April 11, 2014 at 11:25 am</a>		</div>

		<p>Nitpick: MSVCRT.DLL did not exist when Win95 was released, as VC 4.2 did not exist.</p>
<p>And even the current MSVCRT.DLL still have to support old apps that linked to it for backward compatiblity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1118773">
				<div id="div-comment-1118773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118773">
			April 11, 2014 at 11:35 am</a>		</div>

		<p>&quot;especially since it required the Windows team to do things like push a new version of MSVCRT.DLL to all downlevel platforms whenever a new version of Visual C/C++ came out. &quot;</p>
<p>I think that was a myth, unless there was some important bug in a new version of MSVCRT that needed fixing (eg the Microsoft Libraries Update)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-koldude even thread-even depth-1" id="comment-1118783">
				<div id="div-comment-1118783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118783">
			April 11, 2014 at 11:39 am</a>		</div>

		<p>Of a cursory search of the main system DLLs (user32, advapi32, comctl32, kernel32, ntdll, gdi32) &nbsp;it seems only advapi32 links directly to MSVCRT the rest seem to distill down to ntdll which last I checked was the interface to the kernel.</p>
<p>Thus&#8230; if Advapi internalizes its version of the CRT (NTDLL has a LOT of exported CRT functions&#8230; so it might be able to use those instead) MS could just get rid of MSVCRT&#8230; and IMHO: SHOULD to prevent just this sort of craziness. The fact that this is even a debate is fairly stupid&#8230; it&#39;s MS&#39; operating system, if they say not to link against it&#8230; DON&#39;T.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118793">
				<div id="div-comment-1118793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118793">
			April 11, 2014 at 11:55 am</a>		</div>

		<p>@kantos: If MS had not once said to link against it the debate would not exist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118803">
				<div id="div-comment-1118803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118803">
			April 11, 2014 at 12:16 pm</a>		</div>

		<p>@alegr1: Your premise on this is slightly incorrect: InstallShield elevates because it&#39;s manifested to be so in new versions and some features wouldn&#39;t work without elevation anyway in old versions.</p>
<p>UAC-Aware applications are not subject to elevation based on name. E.g. you can manifest an installer named Setup.exe and it will install per-user no elevation if you do it right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-1118823">
				<div id="div-comment-1118823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118823">
			April 11, 2014 at 1:05 pm</a>		</div>

		<p>&quot;Having DLLs means every customer potentially has a different version of your software. &nbsp;Good luck testing all of those&#8230;. and it&#39;s an infinitely expanding issue &#8211; since new DLLs means a growing test-issue &#8211; and you have to test combinations &#8211; making your problem an exponential growth one. :(&quot;</p>
<p>Building your application as a single monstrous EXE that statically links in the C and C++ Runtimes does not mean that you can avoid that. &nbsp;There are video drivers, mouse drivers, network drivers, printer drivers, audio drivers, etc., that your application uses, and those involve DLLs too. &nbsp;These aren&#39;t provided as part of the OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118833">
				<div id="div-comment-1118833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118833">
			April 11, 2014 at 1:14 pm</a>		</div>

		<p>@Bryan W</p>
<p>Try it. Add an as-invoker manifest to an application renamed &quot;setup.exe&quot; and see what happens. I have &#8211; it fails!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118843">
				<div id="div-comment-1118843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ANon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118843">
			April 11, 2014 at 1:31 pm</a>		</div>

		<p>@Yuhong Bao</p>
<p>&quot;And even the current MSVCRT.DLL still have to support old apps that linked to it for backward compatiblity.&quot;</p>
<p>Yes, that&#39;s the point of the article.</p>
<p>NO apps should be linking to it, so it SHOULDN&#39;T have to support anything for backwards-compatibility that isn&#39;t an OS component, and OS components would be updated alongside it!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118853">
				<div id="div-comment-1118853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118853">
			April 11, 2014 at 1:32 pm</a>		</div>

		<p>@panzi: <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Libiberty">en.wikipedia.org/&#8230;/Libiberty</a></p>
<p>@Anon, @Brian W: An MSDN blog that I can no longer find via Google said to fix the problem by shimming the application specific non installer before shipping it. The situation apparently is the auto-detect is so stupid that if it doesn&#39;t carry the manifest for the latest windows version it will auto-elevate regardless of manifest. This creates a nasty problem for Cygwin&#39;s &quot;patch.exe&quot; which cannot be renamed. It&#39;s really too bad the auto-elevate is too stupid to figure out a console program named patch.exe should be ignored as that name is ancient now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118863">
				<div id="div-comment-1118863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118863">
			April 11, 2014 at 1:45 pm</a>		</div>

		<p>&quot;on MinGW &#8211; is there any reason they can&#39;t write their own CRT?&quot;</p>
<p>Because it&#39;d defeat the purpose of the &quot;Min&quot; in their name. No idea why someone can&#39;t make a &quot;MediumGW&quot; that ships something like a copy of the reactos msvcrt though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118873">
				<div id="div-comment-1118873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118873">
			April 11, 2014 at 1:55 pm</a>		</div>

		<p>MinGW is working to deal with the issues that might arise from using msvcrt.dll. &nbsp;For example, newer versions of MinGW include their own `printf()` family of functions to deal with such things as the incompatible `long double` types and to support C99 format specs that aren&#39;t supported by MSVCRT.DLL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118883">
				<div id="div-comment-1118883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [Visual C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118883">
			April 11, 2014 at 2:16 pm</a>		</div>

		<p>TL;DR version: %WINDIR%System32MSVCRT.DLL is the &quot;Microsoft Windows OS C Language Standard Library&quot;.</p>
<p>That the Windows OS C/C++ compiler shares a lot with the Microsoft C/C++ Optimizing Compiler shipped in Visual C++ (which in turn is shipped in Visual Studio) should not be confused with using the same runtime library.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jan-ringos even thread-even depth-1" id="comment-1118893">
				<div id="div-comment-1118893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Jan+Ringo%C5%A1' rel='external nofollow' class='url'>Jan Ringoš</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118893">
			April 11, 2014 at 2:34 pm</a>		</div>

		<p>@Anon: You must be doing it wrong. I can successfully add manifest to file named setup.exe for which then no UAC pops up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118433">
				<div id="div-comment-1118433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio &#039;Grijan&#039;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118433">
			April 11, 2014 at 7:40 am</a>		</div>

		<p>&gt; Compatibility should be reserved for programs written properly, not poorly-written trash.</p>
<p>Yes, that&#39;s how it *should* be in a perfect world. End users should not be punished for the mistakes of bad developers.</p>
<p>But, unfortunately, we do not live in a perfect world, and, as Raymond has explained time after time, that would break many old line-of-business applications, many of which are more than two decades old and have lost the source code (or the tools needed to re-build it).</p>
<p>As for the fruit-named approach, as a computer collector, I find infuriating not being able to run some programs from, for example, 1987 in a computer made in 1994&#8230; because of not keeping backwards compatibility (and yes, I own several computers from that company in my collection, spanning two decades). On the other hand, in Windows, you are almost warrantied being able to run a 1985 executable in Windows 8.1 (at least, in the 32-bit version).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118903">
				<div id="div-comment-1118903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118903">
			April 11, 2014 at 2:53 pm</a>		</div>

		<p>@Jan Ringoš</p>
<p>And as soon as a new Windows version (service pack, major release) is used, it will break.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118443">
				<div id="div-comment-1118443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118443">
			April 11, 2014 at 7:53 am</a>		</div>

		<p>@Antonio &#39;Grijan&#39;</p>
<p>I agree, the Microsoft approach is generally better, but not in the specific case of when Stability, Security, and/or Sanity are sacrificed at the altar of Compatibility.</p>
<p>My chief example of this: You can&#39;t write a Setup application named *setup*.exe that doesn&#39;t require Admin access to a machine &#8212; Windows will elevate it and, if you force Windows to *not* elevate your Setup application, it will fail silently.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118503">
				<div id="div-comment-1118503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118503">
			April 11, 2014 at 8:20 am</a>		</div>

		<p>[ For example, if a new C++ language feature required a change to the ostream class, you had to be careful to design your change so that the class was still binary-compatible with the older version of the class. ]</p>
<p>There&#39;s the mistake. It is perfectly reasonable for the C library to be a platform standard library. The same is not true of C++.</p>
<p>@Medinoc: Last I checked you get your choice but the default is MSVCRT. The driving force is &quot;Why the *** should I ship a C standard library. This should be a platform library like all other platforms.&quot; Especially given MS&#39;s colossal screw-ups in the packing methods of MSVC*.DLL in the past.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118533">
				<div id="div-comment-1118533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118533">
			April 11, 2014 at 9:13 am</a>		</div>

		<p>@Joker_vD: Because the OS is written in C and because the C library provides binary compatibility (almost*) for free and because the contents of the standard library change so slowly.</p>
<p>* The only exceptions are the getc and putc macros which means the format of FILE * can&#39;t change; but then again why would it ever change?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1118913">
				<div id="div-comment-1118913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118913">
			April 11, 2014 at 4:27 pm</a>		</div>

		<p>@BrianW:</p>
<p>[InstallShield elevates because it&#39;s manifested to be so in new versions and some features wouldn&#39;t work without elevation anyway in old versions.]</p>
<p>Seriously? A glorified XML/table editor needs to run with administrator privileges?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118613">
				<div id="div-comment-1118613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mityador</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118613">
			April 11, 2014 at 9:42 am</a>		</div>

		<p>I second Joshua.</p>
<p>Consider a non-Microsoft DLL as part of a non-Microsoft SDK for 3rd party application developers. For me, as an author of such SDK, it is a natural that you do not want your DLL to bloat apps of your customers. This implies:</p>
<p>* You do not want to impose a dependency on MSVCRXXX.DLL (for whatever number XXX), because various customers use various MSVC versions.</p>
<p>* You do not want to link C runtime statically. (consider the SDK may have many DLLs, you do not want plethora of C runtime instances in a process memory if it uses multiple of them).</p>
<p>Furthermore consider you need to be compatible with all your customers, despite MSVC version they are using for building their apps. Hence you (as the SDK developer) have to be careful to not expose anything from C runtime on the SDK interface anyway. This involves things like:</p>
<p>* C runtime resources allocated in the DLL (e.g. malloc()) must be released in the same DLL (free()). I.e. you cannot return malloc&#39;ed memory and let the caller free it: you must free it in a function exported from your DLL.</p>
<p>* Not using C/C++ runtime types (e.g. FILE*, std::string) in the public interface. I.e. no exported function takes that as a parameter and no function returns it.</p>
<p>IMHO, sticking with MSVCRT.DLL (from the oldest Windows version supported by the SDK) is the most Right Thing (TM) for such use case. The 3rd party apps already depend (indirectly) on MSVCRT.DLL via other system DLLs (e.g. USER32.DLL, GDI32.DLL, COMCTL32.DLL etc.). So this way you do not bloat the app&#39;s memory space. You have just be compatible with the MSVCRT.DLL from the oldest Windows version supported by the SDK and not using the C++ stuff to avoid symbol mangling issues. (And of course: test, test and test once more, but that&#39;s a must-to-do for any SW development anyway, isn&#39;t it?)</p>
<div class="post">[<em>How do you test on versions of Windows that don&#39;t exist yet? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-1118663">
				<div id="div-comment-1118663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118663">
			April 11, 2014 at 10:04 am</a>		</div>

		<p>Nitpicking: MSVCRT.DLL doesn&#39;t actually contain ostream, or any C++ classes apart from the most basic runtime support. The legacy, non-templated (pre-STL) stream classes are in msvcirt.dll. Specific instantiations of std::basic_ostream (for char and unsigned short &#8211; VC6 has a typedef for wchar_t, not a real type) are in msvcp60.dll.</p>
<p>These are all Windows components on Windows 7 &#8211; I think because Microsoft Management Console (for one) was originally written against MFC 6 for Windows 2000. Since anything actually written in VC6, using the Multithreaded DLL switch, will still be linking to these DLLs, they still have to be compatible with real VC6 code.</p>
<p>@Joshua: Windows is not a *nix. The C runtime is not its lowest-level API. The Microsoft C runtime contains no calls to kernel mode. The lowest level it links to &#8211; in the VS6SP5 version I checked &#8211; is kernel32.dll, and that&#39;s true for all versions I have (everything from 6.0 to 12.0, barring 7.0) except for the latest version of 8.0 which for some reason is importing _getdrives from msvcrt.dll. If using the static multithreaded version of the runtime, you have to use _beginthread or _beginthreadex rather than Win32&#39;s CreateThread, so that the runtime is properly initialized for the new thread. Strictly speaking you should do it for the DLL version too, but the DLL version uses the callback to DllMain to initialize as a backstop.</p>
<p>The current msvcrt.dll on Windows 7 SP1 has had its imports refactored so it now does take direct dependencies on kernelbase.dll, ntdll.dll and the API-MS-Win-XXX-L1-1-0 DLLs from the MinWin project.</p>
<p>Windows CE (now called Windows Embedded Compact) does use a C runtime as its lowest-level API: coredll.dll has a mixture of C runtime APIs and Win32 APIs, with duplicated functions being removed. There seems no rhyme or reason to why a C API or a Win32 API was chosen in each case. This does lead to odd situations like the time() function not being available: you call GetSystemTime() and convert it yourself (that&#39;s a particularly horrible example as time.h *is* present, and it *does* declare time(), but the function is not present in any standard DLL). In the threading example, CreateThread is available but neither _beginthread or _beginthreadex is present. Each platform&#39;s coredll.dll is different, different static libraries and sometimes source code being linked into it at OS build time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1118693">
				<div id="div-comment-1118693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118693">
			April 11, 2014 at 10:23 am</a>		</div>

		<p>&gt;You can&#39;t write a Setup application named *setup*.exe that doesn&#39;t require Admin access to a machine</p>
<p>InstallShield IDE always causes an elevation prompt, because of the magic word in its name.</p>
<p>@Ray:</p>
<p>[Because that&#39;s how I learned the word. -Raymond]</p>
<p>Are you pronouncing &quot;what&quot; and &quot;why&quot; as &quot;hwat&quot; and &quot;hwy&quot;?</p>
<div class="post">[<em>I also pronounce &quot;the&quot; with long-E before a vowel, short-E before a consonant. Now get off my lawn! -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118933">
				<div id="div-comment-1118933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118933">
			April 11, 2014 at 6:08 pm</a>		</div>

		<p>@Joshua:</p>
<p>&quot;If MS had not once said to link against it the debate would not exist.&quot;</p>
<p>The problem with that is that the only time Microsoft had said to link against it for end user programs was before they started with the individual naming of the CRT libraries. After that they told end users to link against the appropriately named libraries, or if you don&#39;t want to ship around a CRT library, link against the static version of the CRT. After actually using VS from .NET onwards, Microsoft has always had their developer tools link against the numbered version of the CRT. XP was also about the time that MSVCRT became a system component.</p>
<p>The only more recent cases where developers could link against the system CRT was for driver development iirc, but you had to get the DDK/WDK to link against it, it was only ever intended for driver related utilities to an extent, and they revoked that starting with Windows 8. What&#39;s more, before Windows 8, the driver environment was completely separate. There was no integration into VS like there is these days. So you had to deliberately get the DDK/WDK, ignore Microsoft in regards to what to link against the system CRT, start of a separate driver build environment command prompt or set up VS to use these paths and then build. There was no way to accidentally link against it. For Windows 8, they have started to ship a static library for the MSVCRT dependent driver utilities and I have a feeling that this was due to the misuse of the system CRT import library.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1118943">
				<div id="div-comment-1118943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118943">
			April 11, 2014 at 6:18 pm</a>		</div>

		<p>&quot;XP was also about the time that MSVCRT became a system component.&quot;</p>
<p>With Win2000 actually.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118953">
				<div id="div-comment-1118953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118953">
			April 11, 2014 at 6:28 pm</a>		</div>

		<p>Right, was one out. Was a bit unsure which was why I used about.:3</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118963">
				<div id="div-comment-1118963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118963">
			April 11, 2014 at 7:00 pm</a>		</div>

		<p>I just wish that Visual Studio provided better support for writing code that doesn&#39;t use the C runtime library at all. &nbsp;You can do it, but it isn&#39;t as straightforward as it could be &#8211; there are unexpected dependencies on it which require you to turn off some of the compiler&#39;s security features. &nbsp;(I suppose it would be possible to pull out those particular parts of the C runtime and compile them directly into your program, but you&#39;d lose compatibility with future versions of Visual Studio and there might be legal issues.)</p>
<p>@mikeb: no matter what they do, there&#39;s no way to tell what new issues might be introduced by a future version of msvcrt.dll. &nbsp;So if you want your application to be compatible with future versions of Windows, MinGW (in the default configuration) is not a good choice.</p>
<p>@Joshua: note that the argument about backwards compatibility only applies to the 32-bit version. &nbsp;The 64-bit version has never been advertised as being suitable for third-party developers to use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118813">
				<div id="div-comment-1118813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">panzi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118813">
			April 11, 2014 at 12:31 pm</a>		</div>

		<p>@Medinoc I only once cross compiled a tiny shell program with MinGW so I&#39;m not an expert on this, but I did use the option -liberty, which gave me the GNU (or C99?) printf. I think. I can&#39;t find *any* documentation on this, only Makefiles that use it. I don&#39;t even know how I know about this. Maybe some compiler error message told me about it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1118973">
				<div id="div-comment-1118973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118973">
			April 11, 2014 at 7:38 pm</a>		</div>

		<p>@Harry Johnston: Except that I think the original Platform SDK 64-bit compilers used it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tspeot-is even thread-even depth-1" id="comment-1118983">
				<div id="div-comment-1118983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ta.speot.is' rel='external nofollow' class='url'>ta.speot.is</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118983">
			April 11, 2014 at 8:14 pm</a>		</div>

		<p>&quot;If your program requires the Visual C/C++ Run-Time library, then your program needs to install the appropriate version. (There are redistributable packages you can include with your application.)&quot;</p>
<p>Too bad if you have Visual Studio 2010 SP1 because the bootstrap package for the Visual C++ runtime has the wrong ProductId (it&#39;s a GUID) and download URL. The README contains instructions only to fix the download URL, and they&#39;re half wrong anyway.</p>
<p>If you don&#39;t update the ProductId at the same time the installer just assumes the runtime isn&#39;t installed and tries to install it again. And again. And again.</p>
<p><a rel="nofollow" target="_new" href="https://connect.microsoft.com/VisualStudio/feedback/details/726264/msdn-forum-vcredist-x86-bootstrapper-package-xml-content-wrong">connect.microsoft.com/&#8230;/msdn-forum-vcredist-x86-bootstrapper-package-xml-content-wrong</a></p>
<p>I&#39;m sure Microsoft handles thousands of GUIDs correctly every product release, but the above issue and the time someone changed the interface IDs for some ADO components really screwed me over.</p>
<p><a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/2517589">support.microsoft.com/&#8230;/2517589</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118993">
				<div id="div-comment-1118993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Minicrt 4 L-iz-ife</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118993">
			April 11, 2014 at 8:15 pm</a>		</div>

		<p>When a fire lane is full of parked cars, is it still a fire lane? (Is Heartbleed the one where web servers divulge 64k in response to existential queries?)</p>
<p>Windows: Not a Microsoft Visual C/C++ Run-Time delivery channel&#8230; OR THE GREATEST MICROSOFT VISUAL C/C++ RUN-TIME DELIVERY CHANNEL EVER?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119003">
				<div id="div-comment-1119003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119003">
			April 11, 2014 at 8:47 pm</a>		</div>

		<p>I believe mingw used msvcrt.dll because it was the Microsoft C compiler&#39;s C runtime, and they wanted to use the same runtime. Microsoft&#39;s decision to change the C runtime DLL filename with every new compiler release came later, and mingw just kept using the C runtime from the older compiler.</p>
<p>It might seem strange today, but think about it: the mingw people came from Unix-style operating systems, where all compilers share a common C library. It was natural for them to do the same on Windows, even more when Microsoft itself was seen doing the same thing (including system components using that common C library); they would see no reason to gratuitously implement a separate, potentially incompatible (think about passing FILE pointers between modules) C runtime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119013">
				<div id="div-comment-1119013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119013">
			April 11, 2014 at 8:59 pm</a>		</div>

		<p>And as to why doesn&#39;t mingw create its own C runtime now&#8230; I believe it&#39;s because of backwards compatibility. Programs compiled with mingw expect that the C runtime is the C runtime from that old Microsoft C compiler, or new versions of it. If that is changed now, a program compiled with the old mingw loading a plugin compiled with the new mingw (or vice versa) could break, since there would be two incompatible runtimes loaded (and the program could expect to be able to for instance allocate memory in the plugin and free it in the main program).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119033">
				<div id="div-comment-1119033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119033">
			April 12, 2014 at 12:09 am</a>		</div>

		<p>@anon: yep it works fine. Don&#39;t be surprised that using older versions and such doesn&#39;t work though. But yeah I&#39;ve tested and seen it working fine. </p>
<p>@alegr1: it&#39;s more complex than that. Some of the more esoteric likely less used features fail anymore. Can&#39;t really say if it&#39;s the way it is anymore but as long as com extraction exists you&#39;re probably looking at either some form of elevation or a portion of customers for whom it doesn&#39;t work. </p>
<p>@joshua: on this blog of all things I would expect you to guess why there&#39;s more than one manifest version :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118923">
				<div id="div-comment-1118923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">immibis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1118923">
			April 11, 2014 at 5:38 pm</a>		</div>

		<p>&quot;Why is C so special? Why can&#39;t I have the Pascal, or the Haskell runtime library to be a platform standard library?&quot;</p>
<p>I third this. Unlike say Haskell, you can actually write fully functional C programs on Win32 without using the C standard library, because:</p>
<p>* The standard library is written in C, which means it&#39;s possible to rewrite the parts you need.</p>
<p>* The Win32 API is a C API, which means you don&#39;t need a standard library written in another language to call it.</p>
<p>I&#39;ve done this as an experiment (not in production code).</p>
<p>The Haskell standard libraries could also be written in Haskell, using compiler extensions (because you need to define things like integers). I don&#39;t know anything about Pascal. For Python or Lua or JavaScript it might be difficult, but you could statically link with the interpreter and a module like ctypes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119043">
				<div id="div-comment-1119043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Z</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119043">
			April 12, 2014 at 1:43 am</a>		</div>

		<p>Windows team could choose to rename its version to WINCRT.DLL and change Windows build system to use it (at least all low level components). Let Visual Studio own the MSVCRT.DLL. Very few people would link against an unknown new DLL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119053">
				<div id="div-comment-1119053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119053">
			April 12, 2014 at 2:00 am</a>		</div>

		<p>I wonder, when you find such a bug (an application poking around in internal structures causing it to crash when the structures are changed), and it is apparently in a product that is so popular that you consider adding a workaround to your code, do you try to contact the vendor and ask them to fix it first? I mean it would be silly to do it for every single little program, but if it is a product of a huge company like Oracle, Adobe, SAP etc., it might be easier to just give them a heads up &quot;you seem to depend on undocumented internals, we&#39;ll break your code in 6 months&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119063">
				<div id="div-comment-1119063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119063">
			April 12, 2014 at 2:30 am</a>		</div>

		<p>@Jason The problem is that there are still millions of users out there running non-updated versions of the code. And most vendors wouldn&#39;t update their old products to fix such an issue but only the current one (hey great way to get people to upgrade, when windows n+1 breaks the application!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119073">
				<div id="div-comment-1119073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119073">
			April 12, 2014 at 3:07 am</a>		</div>

		<p>So why not let people specify dependencies on MS-distributed components in a manifest embedded in the .exe so when the user double-clicks on it in Explorer, Explorer would parse that, check the needed components with the required versions are installed and if not, install them from Windows Update? Then that can be automatically filled in by Visual Studio when assembling the .exe. Or maybe Visual Studio could have an option to &quot;export as installer for other people&quot; that includes at least an installer for the runtime for people who don&#39;t have internet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119083">
				<div id="div-comment-1119083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119083">
			April 12, 2014 at 3:10 am</a>		</div>

		<p>@immibis: Free Pascal, for example, is entirely written in Pascal, so it is self-hosting. There&#39;s no msvcrt.dll in sight. Of course, it won&#39;t stop you from doing evil things like linking your program against msvcrt.dll and calling its functions, if that&#39;s your wish.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119093">
				<div id="div-comment-1119093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119093">
			April 12, 2014 at 3:21 am</a>		</div>

		<p>msvcrt.dll was linked from Visual C 6 programs. Why should Microsoft want that programs compiled with Visual C become non-functional? What&#39;s so special in maintaining one compatible DLL? There are uncounted other DLL&#39;s that have to be maintained anyway.</p>
<p>I really like msvcrt.dll existing in the system and I will keep producing the programs that depend on it as long as I can.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119023">
				<div id="div-comment-1119023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119023">
			April 11, 2014 at 9:55 pm</a>		</div>

		<p>@Cesar:</p>
<p>The problem is that ever since the release of Visual Studio.NET in 2002, it has been made loud and clear that programmers mustn&#39;t use MSVCRT in applications. For the whole not seeing a reason to implement a separate CRT, well MSVCRT was only ever there originally as a way to make applications behave when it came to using MSVCRT. This was in response to the stability on Windows 95/98 where programs would overwrite MSVCRT that was in System/System32 and cause drivers to die or act weird because the version of MSVCRT was incompatible. After February 2002 when Visual Studio.NET was released, Microsoft has been quite clear that post VC98 compilers must not use MSVCRT for Windows software development*.</p>
<p>After that point it was also obvious that they saw it mainly as a compatibility thing when they never updated the main entry points in the library to be more standards conformant and it also allowed them to cut down on things inside the library itself. Two things that I can refer to that help support this was that for the mingw usage of wcs* functions, there was a report on how they didn&#39;t work on Windows XP due to MSVCRT not containing those functions. Secondly, inside the CRT sources there are lots of cases where you see</p>
<p>#ifndef _SYSCRT</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;/*</p>
<p> &nbsp; &nbsp; * Register __clean_type_info_names so that we clean up all the</p>
<p> &nbsp; &nbsp; * type_info.names that are allocated</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; */</p>
<p> &nbsp; &nbsp;atexit(__clean_type_info_names);</p>
<p>#endif &nbsp;/* _SYSCRT */</p>
<p>So not only is MSVCRT not guaranteed to contain everything, but it is also not guaranteed to work correctly in all cases. So while this could have been a point of contention back in time, now days it is silly to discuss it. Microsoft has been clear on what MSVCRT is there for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse odd alt thread-odd thread-alt depth-1" id="comment-1119103">
				<div id="div-comment-1119103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119103">
			April 12, 2014 at 5:12 am</a>		</div>

		<p>@acq: I will assume that you meant your comment to be humourous and just remind you that reasoning like that is why Windows has its 64-bit components in SYSTEM32 and its 32-bit ones in SYSWOW64.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119113">
				<div id="div-comment-1119113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MSVCRT.DLL Enthusiast</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119113">
			April 12, 2014 at 6:43 am</a>		</div>

		<p>Are we allowed to use CRTDLL.DLL as an alternative to MSVCRT.DLL?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1119123">
				<div id="div-comment-1119123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119123">
			April 12, 2014 at 6:46 am</a>		</div>

		<p>@Bryan W, Alegr1, Anon: I just tested asInvoker by building a simple program called TestSetup.exe (it just displayed a message box) with Visual Studio 2010 SP1 on Windows 7 from my UAC-enabled admin account. I got a weird hybrid result: asInvoker worked (I tested with CheckTokenMembership() with and without &quot;run as administrator&quot;). However, after my simple program exited (returning zero) when running non-elevated, I got a dialog box saying that maybe the install failed, and asked whether I wanted to run it again with some compatibility options enabled (and the option to run it again requires elevation).</p>
<p>So Windows 7 still detected it as a setup program, but didn&#39;t prevent me from running it un-elevated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1119143">
				<div id="div-comment-1119143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119143">
			April 12, 2014 at 7:38 am</a>		</div>

		<p>discontinued in VS2010?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119163">
				<div id="div-comment-1119163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119163">
			April 12, 2014 at 8:41 am</a>		</div>

		<p>[It may be best for you, because you externalized part of the cost of supporting future versions of Windows. Now it&#39;s Windows&#39;s job to support your app, rather than vice versa. -Raymond]</p>
<p>MS&#39;s own pickle. VC6 links against it by default. <a href="http://support.microsoft.com/kb/259403" rel="nofollow" target="_new">support.microsoft.com/&#8230;/259403</a></p>
<p>What&#39;s worse: not shipping MSVCRT.DLL or shipping the last redistributable version of what is now a &quot;you shall not upgrade&quot; system component?</p>
<div class="post">[<em>The set of applications compiled with VC6 is relatively constant, not growing. Also, can you go talk to the people who say &quot;Microsoft should tell these apps to screw off and not be held back with all this backward compatibility nonsense&quot;? I can&#39;t really tell whose side everybody is on any more. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119183">
				<div id="div-comment-1119183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119183">
			April 12, 2014 at 9:36 am</a>		</div>

		<p>&quot;The set of applications compiled with VC6 is relatively constant, not growing. Also, can you go talk to the people who say &quot;Microsoft should tell these apps to screw off and not be held back with all this backward compatibility nonsense&quot;? I can&#39;t really tell whose side everybody is on any more. -Raymond&quot;</p>
<p>Easy. If it doesn&#39;t affect me or programs I use then screw it, if it does affect, then you MUST support it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119193">
				<div id="div-comment-1119193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119193">
			April 12, 2014 at 9:45 am</a>		</div>

		<p>@medinoc: you have to include an extra manifest section for compatibility to eliminate that prompt. So you have the vista key but are missing the 7+ key :-) I can&#39;t recall exactly what you have to set up, but it&#39;s weird. </p>
<p>@Raymond: the answer is everyone is on the side of what&#39;s most convenient for them at the moment. Obviously Microsoft should ship windows 9 no back compat edition and windows 9 full compat edition since that worked so well for ie7! /s</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119203">
				<div id="div-comment-1119203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119203">
			April 12, 2014 at 10:33 am</a>		</div>

		<p>&gt; So much for &quot;All these compatibility problems would go away if you published the source code.&quot; Publishing the source code makes it easier to introduce compatibility problems, because it lays bare all the internal undocumented behaviors. Instead of trying to reverse-engineer the runtime library, you can just sit down and read it, and if you want to do something sneaky, you can just copy the declaration of the internal array and party on the needs_more_time member. </p>
<p>I guess that&#39;s a lesson the .NET team is about to learn. &nbsp;Thanks to reflection you don&#39;t even need to copy the declaration of the array!</p>
<p><a rel="nofollow" target="_new" href="https://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/4083118-allow-developers-to-step-through-net-framework-so">visualstudio.uservoice.com/&#8230;/4083118-allow-developers-to-step-through-net-framework-so</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119133">
				<div id="div-comment-1119133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nobugz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119133">
			April 12, 2014 at 7:22 am</a>		</div>

		<p>This is just a consequence of a broken expectation. &nbsp;Because Windows actually *is* a delivery device for executable code. &nbsp;It has been quite a while since I plugged in a USB device or hooked up a new printer, etcetera, and Windows did not automatically install the device driver for the device.</p>
<p>Pretty strange that it is capable of delivering non-Microsoft files but can&#39;t do the same for its own. &nbsp;The application manifest in VS2005+8 was a great opportunity to implement this. &nbsp;That it didn&#39;t happen is surely a core reason it was discontinued in VS2010. &nbsp;Great loss.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119213">
				<div id="div-comment-1119213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119213">
			April 12, 2014 at 3:03 pm</a>		</div>

		<p>[Also, can you go talk to the people who say &quot;Microsoft should tell these apps to screw off and not be held back with all this backward compatibility nonsense&quot;? I can&#39;t really tell whose side everybody is on any more. -Raymond]</p>
<p>My position seems to be unique: A published API is forever. A published ABI is for as long as the platform lasts. He who depends on a bug deserves to be broken. He who depends on undocumented functions is asking for trouble.</p>
<p>But even I cannot always escape doing something nasty because the work must get done and there&#39;s no good way to do it. I have to live with the fact I have to then fix it up with every version of Windows that comes out. Business cost of poor technology choices. &quot;Supported&quot; doesn&#39;t mean much when we can&#39;t even buy bugfixes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119153">
				<div id="div-comment-1119153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mityador</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119153">
			April 12, 2014 at 8:04 am</a>		</div>

		<p>@Mike Dimmick: &quot;None of the DLLs you name import msvcrt.dll.&quot;</p>
<p>True. Mea culpa. But there are others, which do import it (for example UXTHEME.DLL &#8212; btw, imported by COMCTL32.DLL version 6).</p>
<p>@Raymond: &quot;How do you test on versions of Windows that don&#39;t exist yet? -Raymond&quot;</p>
<p>We don&#39;t as well as we would not if we link with other C runtime. Furthermore the SDK has its own docs, where we document supported system versions. So supporting future Windows versions is not contractual, and it also wouldn&#39;t even if we use other C runtime. Still, of course, we do our best to not have problems in the future. Furthermore I do believe Microsoft is sane company too: Although MSVCRT.DLL interface is not contractual, can you really imagine MS will remove it, rename it, or stop providing standard C functions in it? Arguably, if it really happens, Microsoft shall no more be Microsoft as this company is actually defined by the focus on the compatibility, as your own posts in this blog document so well. (Feel free to call me *** for relying on your work ;-)</p>
<p>SW design is about trade-offs and in the use case discussed we evaluated this approach as best one, taking the risks into account. Believe me I would prefer if Microsoft provides better way for SDKs which do not want to exhibit the problems described in my previous comment.</p>
<div class="post">[<em>It may be best for you, because you externalized part of the cost of supporting future versions of Windows. Now it&#39;s Windows&#39;s job to support your app, rather than vice versa. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119173">
				<div id="div-comment-1119173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dasuxullebt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119173">
			April 12, 2014 at 8:51 am</a>		</div>

		<p>&gt; So much for &quot;All these compatibility problems would go away if you published the source code.&quot; Publishing the source code makes it easier to introduce compatibility problems, because it lays bare all the internal undocumented behaviors.</p>
<p>A well-known example is the Linux-Version of Skype, which used undocumented Features of ALSA, and required X11-extensions without fallbacks.</p>
<p>The problem could go away if *everyone* published their source code, as you could quickly produce a patch. Anyway, as it is part of Microsoft&#39;s business model to fix the bugs of other people, maybe that could even be an advantage :3</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1119493">
				<div id="div-comment-1119493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119493">
			April 12, 2014 at 5:09 pm</a>		</div>

		<p>@MSVCRT.DLL Enthusiast: CRTDLL.DLL is even older (dates to NT 3.1 era I think).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119503">
				<div id="div-comment-1119503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119503">
			April 13, 2014 at 4:10 am</a>		</div>

		<p>@Harry Johnston I used to do this with toy Win16 apps, where it was easier because the Win16 API included more CRT-like functions than the Win32 API does. (By &quot;toy&quot; I mean that the icon was normally the largest part.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119523">
				<div id="div-comment-1119523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119523">
			April 13, 2014 at 7:23 am</a>		</div>

		<p>If it&#39;s a compiler specific dll, the 64-bit version of msvcrt32.dll is obscene.</p>
<p>@immibis:</p>
<p>Windows is using the PASCAL calling convention for almost all APIs. Not the C calling convention.</p>
<p>Thus Windows API surface is more tainted by PASCAL than by C.</p>
<p>@Snark:</p>
<p>&quot;[Please! &nbsp;Stop the insanity. &nbsp;Link your freakin&#39; apps fully. -Steve Wolf]</p>
<p>Yes, so heartbleed-like vulnerabilities can stay in forever!&quot;</p>
<p>The first thing I do every time I create a new C/C++ project is to select static linking for Debug and Release.</p>
<p>Not because I&#39;m a unix zealot, but because distributing the runtime is a PITA, but more importantly, its</p>
<p>installer extracts and leaves its &quot;temporary&quot; binary files in the root of the drive. This is such an ugly</p>
<p>bug it makes me wanna cry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119533">
				<div id="div-comment-1119533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119533">
			April 13, 2014 at 10:18 pm</a>		</div>

		<p>Naturally, I understand if you learned to spell with a diaeresis (just as I learned to spell in the American way), but it&#39;s not like the Ö is just as easy to type. Presumably you&#39;re pressing the Windows logo key + Spacebar every time you need to type it, in order to switch to something like the German keyboard, and then the same in order to switch back. Since the right thing in this case, as defined by descriptive lexicography, is easier to do than the wrong thing, aren&#39;t you trying to climb out of the &quot;Pit of Success&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119543">
				<div id="div-comment-1119543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119543">
			April 14, 2014 at 1:38 am</a>		</div>

		<p>The more important question is, why do we need a needs_more_cowbell flag in the first place? Is it not always set to true?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119553">
				<div id="div-comment-1119553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119553">
			April 14, 2014 at 4:30 am</a>		</div>

		<p>To solve this you need to add structure offset randomisation. Sure it will need compiler, linker, debugger and os changes. But lets see them figure out how to poke stuff then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle odd alt thread-odd thread-alt depth-1" id="comment-1119563">
				<div id="div-comment-1119563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119563">
			April 14, 2014 at 6:20 am</a>		</div>

		<p>@Boris: The US International keyboard is a lot easier. &nbsp;It turns &quot; into a dead key such that &quot; + o = ö. &nbsp;The only downside is writing actual quotation marks or apostrophes, since to do that you have to type &quot; + [space].</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119573">
				<div id="div-comment-1119573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@MNGoldenEagle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119573">
			April 14, 2014 at 6:39 am</a>		</div>

		<p>For exactly this reason I dislike the US International layout, because the dead keys interfere with programming a lot. The X11 world has a much nicer variant called altgr-intl, which has no dead keys (ö is Right Alt + p, for example). I don&#39;t know if there&#39;s a way to use it in Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119583">
				<div id="div-comment-1119583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119583">
			April 14, 2014 at 6:43 am</a>		</div>

		<p>MNGoldenEagle: I don&#39;t mind learning a Serbocroatian keyboard layout in order to ensure that my Č, Ć, Đ, Š and Ž retain their diacritics, but that&#39;s because it isn&#39;t acceptable to leave them out in any but the most casual of contexts (such as instant messaging or informal emails). In this case, though, I don&#39;t quite see how Raymond&#39;s managed to retain the habit over the years, unless the resulting text looks subjectively incorrect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119593">
				<div id="div-comment-1119593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119593">
			April 14, 2014 at 6:59 am</a>		</div>

		<p>@MNGoldenEagle: It&#39;s easier to remember that &ouml; is Alt+Num0246, and &Ouml; is Alt+Num0214. I mean, everybody already has to memorize that the em-dash is Alt+Num0151, and the en-dash is Alt+Num0150, so two more combinations is no big deal&#8230; right?</p>
<div class="post">[<em>Even easier to remember is &amp;ouml; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119603">
				<div id="div-comment-1119603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119603">
			April 14, 2014 at 7:26 am</a>		</div>

		<p>[It may be best for you, because you externalized part of the cost of supporting future versions of Windows. Now it&#39;s Windows&#39;s job to support your app, rather than vice versa. -Raymond]</p>
<p>Actually, Microsoft chose to support these, and allow scope to creep, so Microsoft internalized the cost of supporting the external app.</p>
<p>What&#39;s the business case for going to your boss and asking them to pay to maintain applications which Microsoft is currently maintaining for them at no cost?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1119643">
				<div id="div-comment-1119643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119643">
			April 14, 2014 at 9:26 am</a>		</div>

		<p>&gt; &ouml;</p>
<p>Except commenters don&#39;t have the luxury of using HTML escape sequence in the comment box. (Though I suppose we could open a scratch HTML file.)</p>
<div class="post">[<em>The original question was how I typed them. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1119673">
				<div id="div-comment-1119673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119673">
			April 14, 2014 at 9:50 am</a>		</div>

		<p>How amusing. I quoted &quot;&gt; &ouml;&quot; (which I expected to include a semicolon) and now my (Raymond-edited) text shows &quot;&gt; ö&quot; (which includes an umlaut.) Looks like there&#39;s a bug in Telligent HTML encoding; either my original plaintext wasn&#39;t HTML-encoded correctly originally, or Raymond&#39;s editing tool didn&#39;t HTML-encode it correctly when he added his own HTML.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1119683">
				<div id="div-comment-1119683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119683">
			April 14, 2014 at 9:51 am</a>		</div>

		<p>Looks like it&#39;s the former.</p>
<p>Let&#39;s try this again:</p>
<p>&gt; &amp;ouml;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119723">
				<div id="div-comment-1119723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119723">
			April 14, 2014 at 11:06 am</a>		</div>

		<p>@Boris, depending on the application, you can type Ctrl-: then O to get the O-with-diaresis. &nbsp;This generalizes to most (Western-language) common accented letters: &nbsp;Ctrl-~+n gives you n-with-a-tilde. &nbsp;(I happen to not be on a Windows machine right now so I can&#39;t demonstrate because I don&#39;t feel like looking up the HTML entities.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119733">
				<div id="div-comment-1119733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119733">
			April 14, 2014 at 11:08 am</a>		</div>

		<p>@Maurits: &nbsp;well, now you broke it. &nbsp;Are you happy?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119753">
				<div id="div-comment-1119753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119753">
			April 14, 2014 at 11:47 am</a>		</div>

		<p>@Jason:</p>
<p>&quot;I wonder, when you find such a bug (an application poking around in internal structures causing it to crash when the structures are changed), and it is apparently in a product that is so popular that you consider adding a workaround to your code, do you try to contact the vendor and ask them to fix it first?&quot;</p>
<p>If it&#39;s what I think Raymond seems to be hinting it is, then it&#39;s not just one product; this has actually shipped in many many applications, some of which are smaller applications from vendors which may no longer exist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1119773">
				<div id="div-comment-1119773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119773">
			April 14, 2014 at 2:15 pm</a>		</div>

		<p>@Rick C: to get &amp;ouml; to show up I had to type &amp;amp;ouml;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119783">
				<div id="div-comment-1119783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119783">
			April 14, 2014 at 2:47 pm</a>		</div>

		<p>@Maurits: But what did you type to get &amp;amp;ouml; ? Man, I hate quotations/escaping and especially, how many different schemes of those there are.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119793">
				<div id="div-comment-1119793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 29387</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119793">
			April 14, 2014 at 5:09 pm</a>		</div>

		<p>Minicrt 4 L-iz-ife: &quot;When a fire lane is full of parked cars, is it still a fire lane?&quot;</p>
<p>As one gentleman&#39;s (jerk&#39;s) Corvette can attest, yes! The fire engine will unhesitatingly ram the cars out of the way and the city will bill the owners for the damage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1119813">
				<div id="div-comment-1119813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119813">
			April 14, 2014 at 11:59 pm</a>		</div>

		<p>Ahem&#8230;</p>
<p>&quot;Games give you hand-eye coordination and spatial intelligence together with map-reading skills&quot;</p>
<p>&quot;This gets even more complicated when the parent/child or owner/owned relationship crosses processes, because cross-process coordination is even harder than cross-thread coordination.&quot;</p>
<p>&quot;Since there is no coordination among the various applications, you&#39;re basically stuck playing a game of walls and ladders, hoping that your ladder is taller than everybody else&#39;s wall.&quot;</p>
<p>&quot;Like the adoption of a child, it&#39;s the sort of thing you should only be doing with the coordination of all three parties (the old parent, the new parent, and the child).&quot;</p>
<p>&quot;Whenever there is a coordination problem, somebody says, &#39;Hey, let&#39;s create a process!&#39;&quot;</p>
<p>&quot;The effort required to fix the spelling was a bit more than usual, since the function was used by multiple teams, so there would have to be some coordination among the teams so everybody fixed their spelling at the same time.&quot;</p>
<div class="post">[<em>Sometimes I&#39;m lazy. You must be a lot of fun at parties. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119903">
				<div id="div-comment-1119903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1119903">
			April 15, 2014 at 8:44 am</a>		</div>

		<p>@Random User 29387</p>
<p>There is little more satisfying than knowing that firefighters and police will intentionally do as much damage as possible to a vehicle parked in a fire lane, except perhaps the knowledge that insurance won&#39;t pay for it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1120153">
				<div id="div-comment-1120153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120153">
			April 16, 2014 at 12:01 am</a>		</div>

		<p>then you have strange firefighters &#8211; we learned that we *had* to do as least damage as possible given the constraints that the fire had to be put out (so if there&#39;s a way around the vehicle that isn&#39;t too much longer and doesn&#39;t damage it you have to take it). Of course you take the registration number and they then get a fine of 65€ and 1 point in their registration. Plus they have to pay for any damage that occured because they were in the fire lane, costs for towing them away, etc. But you as firefighter have the obligation to cause as less damage as possible, including to vehicles of idiots.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1120313">
				<div id="div-comment-1120313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gregory</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120313">
			April 16, 2014 at 8:14 am</a>		</div>

		<p>out of curiosity, why aren&#39;t the various C runtime versions delivered through Windows update instead of requiring each application to embed the redist installer?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1120383">
				<div id="div-comment-1120383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120383">
			April 16, 2014 at 9:38 am</a>		</div>

		<p>Gregory: Are you asking why Windows Update isn&#39;t a Microsoft Visual C/C++ Run-Time delivery channel?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1120393">
				<div id="div-comment-1120393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gregory</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120393">
			April 16, 2014 at 9:42 am</a>		</div>

		<p>Gabe: in other words, yes. It&#39;s so central in the Windows ecosystem I&#39;m surprised developers&#39; life isn&#39;t made easier (for those who link dynamically against the runtime). Same question could apply to DirectX RunTime. But maybe one would argue the list of runtimes would become so long it&#39;s not a sustainable position?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1120463">
				<div id="div-comment-1120463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 29387</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120463">
			April 16, 2014 at 11:51 am</a>		</div>

		<p>Engywuck: I&#39;m not 100% certain but I think the guy was not only in the lane, but also obstructing meaningful access to the fire plug. Either way, I&#39;m satisfied with the explanation that different localities have different laws RE: liability of the fire dept, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1120583">
				<div id="div-comment-1120583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120583">
			April 16, 2014 at 10:23 pm</a>		</div>

		<p>we were especially told &quot;don&#39;t do like in the movie when a car parks afront of a hydrant. If you have time to smash the windows you have time to put the firehous over or under the car&quot;</p>
<p>but ontopic: wsus delivers already .NET in the &quot;features&quot; section, other libraries could easily go there, too. Sure, .NET is needed for quite a few internal windows things instead of &quot;only&quot; third-party programs, but I wouldn&#39;t object of them going there :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1120593">
				<div id="div-comment-1120593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120593">
			April 16, 2014 at 10:48 pm</a>		</div>

		<p>Engywuck: If a hose has too much of a bend or kink, it can decrease the flow too much. I think that typically they put the hose through the windows because that allows it to be straighter than going over, under, or around. I did recently see a photo where they had broken the windows to pass the hose through, only to find that there was still too much of a bend, and they had to pick up the car and move it a few inches over to get full pressure.</p>
<p>But on topic: Gregory, I&#39;m pretty sure that most would argue that Windows Update shouldn&#39;t be a delivery channel for anything besides updates. If you have some VC runtime that&#39;s been installed by a 3rd-party app, then WU should probably update it. I don&#39;t see why WU should be installing arbitrary software, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1120683">
				<div id="div-comment-1120683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120683">
			April 17, 2014 at 7:44 am</a>		</div>

		<p>@Gabe</p>
<p>Microsoft Visual C++ Redistributables are, typically, &quot;updates.&quot; They&#39;d just fall under &quot;other software&quot; in Microsoft Update.</p>
<p>A better question is &quot;Why doesn&#39;t the redistributable installer simply come with all available versions of the redist, and why doesn&#39;t the new redist release with stripped-down versions of the old redist, to save space?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1120743">
				<div id="div-comment-1120743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120743">
			April 17, 2014 at 9:06 am</a>		</div>

		<p>Did they fix the C stdlib to always work when the DLLs are copied beside the EXE yet?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm even thread-even depth-1" id="comment-1120883">
				<div id="div-comment-1120883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140411-00/?p=1273#comment-1120883">
			April 17, 2014 at 7:56 pm</a>		</div>

		<p>&quot;I did recently see a photo where they had broken the windows to pass the hose through, only to find that there was still too much of a bend, and they had to pick up the car and move it a few inches over to get full pressure.&quot;</p>
<p>Yes, that exact thing happened in Boston last week. &nbsp;I heard third-hand that the car was only 3 days old.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

