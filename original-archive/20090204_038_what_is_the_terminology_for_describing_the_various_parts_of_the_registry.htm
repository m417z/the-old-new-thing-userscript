<html>
<head>
<title>What is the terminology for describing the various parts of the registry?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What is the terminology for describing the various parts of the registry?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 4, 2009 / year-entry #39</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Hives, keys, values, types, and data. As I noted some years ago, the file that holds the registry data is called a hive. A hive contains a tree of keys. Keys contain a list of values. Associated with each value is a type and data. The terminology is weird and counter-intuitive thanks to the history...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Hives, keys, values, types, and data.</p>
<p> As I noted some years ago, <a href="http://blogs.msdn.com/oldnewthing/archive/2003/08/08/54618.aspx"> the file that holds the registry data is called a <i>hive</i></a>. </p>
<p> A hive contains a tree of <i>keys</i>. </p>
<p> Keys contain a list of <i>values</i>. </p>
<p> Associated with each value is a <i>type</i> and <a href="http://blogs.msdn.com/oldnewthing/archive/2008/01/18/7145021.aspx#7150918"> <i>data</i></a>. </p>
<p> The terminology is weird and counter-intuitive thanks to the history of the registry. Back in the days before named values, you queried the data associated with (the default value of) a key by calling <code>RegQueryValue</code>, which was a rather natural name since it matches the key/value pattern. But the introduction of named <i>values</i> threw this pattern into disarray. Perhaps a better name could have been chosen for what today are known as values and data, but what's done is done and that's the name we're stuck with. </p>
<p> I'm sorry. </p>
<p> <b>"Raymond, you idiot" section</b>: </p>
<p> "Sure, Raymond, that's the historical reason why the terminology is messed up, but <a href="http://blogs.msdn.com/oldnewthing/archive/2009/01/28/9379262.aspx#9385549"> why hasn't anybody fixed it in the meantime</a>?" </p>
<p> Well, changing terminology at this point would probably create even more confusion. For example, suppose you decide that the terminology should be changed as follows: </p>
<table border="1" bordercolor="black" rules="all" style="border-collapse: collapse">
<col style="padding-left: 1em; padding-right: 1em">
<col style="padding-left: 1em; padding-right: 1em">
<tr>
<th>Old</th>
<th>New</th>
</tr>
<tr>
<td>key</td>
<td>node</td>
</tr>
<tr>
<td>subkey</td>
<td>subnode</td>
</tr>
<tr>
<td>value</td>
<td>key</td>
</tr>
<tr>
<td>type</td>
<td>type</td>
</tr>
<tr>
<td>data</td>
<td>value</td>
</tr>
</table>
<p> I agree with you that this terminology would probably be much less confusing, but how do you get there from here? When you update all the documentation to change the terminology, how do you know that you covered everything? Do you grep for the word <i>key</i> everywhere and then decide on a case-by-case whether it should be changed to <i>node</i>? That's probably some hundreds of thousands of hits just inside the MSDN Library. (Even worse with <i>value</i>, <i>type</i>, and <i>data</i>.) And then there are all the comments in source code that are now wrong. And all the magazine articles written prior to the change are now wrong; who's going to go update them? And the existing source code needs to change <code>HKEY</code> to <code>HNODE</code> and <code>RegOpenKey</code> to <code>RegOpenNode</code>. Okay, so maybe you leave the old names around for compatibility, but now you have the problem that <code>RegOpenKey</code> returns a node, not a key, and that you pass a key name to <code>RegQueryValueEx</code>, and what the heck does <code>RegDeleteKey</code> do? Does it delete an old-key or a new-key? </p>
<p> <b>Bonus chatter</b>: There's also this thing called a <i>class</i>. I have no idea what it's for, so don't ask. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-706033">
				<div id="div-comment-706033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706033">
			February 4, 2009 at 10:20 am</a>		</div>

		<p>As far as I can tell, the &quot;class&quot; is not used at all. &nbsp;I suspect it is just a piece of data that is tagged onto the key and Windows does nothing with it. &nbsp;I&#8217;ve never used it or seen anyone else use it. &nbsp;It must have been used at some point; anyone have documentation from the 16-bit days?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706043">
				<div id="div-comment-706043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stewart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706043">
			February 4, 2009 at 11:05 am</a>		</div>

		<p>John,</p>
<p>From the current docs for RegCreateKey the 16 bit registry didn&#8217;t have &quot;class&quot;, so it must have been added in Win32 for some reason. The mystery deepens.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706053">
				<div id="div-comment-706053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706053">
			February 4, 2009 at 11:16 am</a>		</div>

		<p>Wow, that&#8217;s interesting; didn&#8217;t expect that at all. &nbsp;Perhaps it was in the Win95 beta along with the Shell Folders key (<a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2003/11/03/55532.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2003/11/03/55532.aspx</a>), destined to be trapped in the API forever due to backward compatibility concerns.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706073">
				<div id="div-comment-706073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stewart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706073">
			February 4, 2009 at 11:34 am</a>		</div>

		<p>I always thought it was older than that &#8211; maybe something from the early days of NT that never got used in public. The kernel mode NT registry API (ZwCreateKey) is more or less the same as the user mode API and also has the class parameter, which suggests (to me at least) the 32bit registry API started life in NT.</p>
<p>MSDN says that the class parameter &quot;is used by the configuration manager&quot; whatever that is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706083">
				<div id="div-comment-706083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706083">
			February 4, 2009 at 11:37 am</a>		</div>

		<p>What are HKLM/HKCU/etc. called? The registry doesn&#8217;t directly reflect the hive &gt; keys &gt; subkeys &gt; values structure, so these &quot;keys&quot; are not actually contained in the hives.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706093">
				<div id="div-comment-706093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706093">
			February 4, 2009 at 12:19 pm</a>		</div>

		<p>Well, you have to start from somewhere; I guess you could call them root keys or something (&quot;C:&quot; is referred to as a root directory). &nbsp;A root key would point to the top of the key hierarchy in a given hive, although there is not strictly a 1-to-1 mapping of root keys to hives; but I guess that&#8217;s an implementation detail. &nbsp;Then you have dynamic things like HKEY_PERFORMANCE_DATA which aren&#8217;t backed by a hive at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706103">
				<div id="div-comment-706103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706103">
			February 4, 2009 at 12:22 pm</a>		</div>

		<p>Anonymous: they&#8217;re predefined keys (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms724836%28VS.85%29.aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/ms724836%28VS.85%29.aspx</a>). &nbsp;Hives are really &quot;mountable&quot; trees.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706113">
				<div id="div-comment-706113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706113">
			February 4, 2009 at 12:31 pm</a>		</div>

		<p>To clarify: the registry you see as a program only exists in memory. &nbsp;The HKEY_LOCAL_MACHINE key is not represented on disk, but allows subtrees to be added that are effectively reparse points. &nbsp;Similarly, HKEY_CLASSES_ROOT is a combination of HKEY_CURRENT_USERSoftwareClasses and HKEY_LOCAL_MACHINESoftwareClasses.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706123">
				<div id="div-comment-706123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706123">
			February 4, 2009 at 12:34 pm</a>		</div>

		<p>Obviously, the solution is to have disjoint sets of terms for the &quot;new&quot; and the &quot;old&quot; terms. Having the same term in both just invites confusion, but with a disjoint set you only need a glossary (&quot;node&quot; = &quot;key&quot;, &quot;value&quot; = &quot;thingy&quot;&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706133">
				<div id="div-comment-706133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706133">
			February 4, 2009 at 1:09 pm</a>		</div>

		<p>One last note: my guess is someone thought developers would want a special key type (like lpType for values), perhaps for storing simple objects. &nbsp;It looks like it was introduced with CreateKeyEx in NT 3.1.</p>
<p>It works &#8211; you can store and retrieve it, and it will export happily into a hive. &nbsp;It&#8217;s just not visible in any UI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706153">
				<div id="div-comment-706153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706153">
			February 4, 2009 at 2:36 pm</a>		</div>

		<p>It&#8217;s a &#8216;hive&#8217; because the content is organized as a bee-tree, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706173">
				<div id="div-comment-706173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MadQ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706173">
			February 4, 2009 at 3:05 pm</a>		</div>

		<p>Just because I had nothing better to do I decided to write a little app that finds all the registry keys having that have a class length greater that zero.</p>
<p>Several thousand keys have a class of &quot;REG_SZ&quot; or &quot;class&quot;. I&#8217;m guessing that these are just cases of &quot;I&#8217;ll just pass something that seems valid, just in case.&quot;</p>
<p>It looks to me like subkeys of HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlLsa use the class to store various calculated values.</p>
<p>And then there&#8217;s online gaming and copy protection Application X that seems to use the class to hide things it doesn&#8217;t want the user to see.</p>
<p>Okay, that was mildly amusing. Now what should I do? [queue Jungle Book vultures scene: <a rel="nofollow" target="_new" href="http://www.youtube.com/watch?v=MGTWmrnPdgk" rel="nofollow">http://www.youtube.com/watch?v=MGTWmrnPdgk</a> ]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706203">
				<div id="div-comment-706203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706203">
			February 4, 2009 at 4:29 pm</a>		</div>

		<p>Cool. &nbsp;I did the same and found a few others.</p>
<p>&quot;cygnus&quot; for keys relating to Cygwin.</p>
<p>&quot;WinZip Application Data&quot; for keys relating to WinZip.</p>
<p>&quot;VS7&quot; for some keys relating to Visual Studio.</p>
<p>&quot;Shell&quot; for keys under CurrentVersionExplorerFileExts.</p>
<p>&quot;DefaultClass&quot; for various keys.</p>
<p>A lot of odds and ends for other keys.</p>
<p>I don&#8217;t know what the point of it is, though. &nbsp;Perhaps some internal bookkeeping for the various applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706233">
				<div id="div-comment-706233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706233">
			February 4, 2009 at 5:02 pm</a>		</div>

		<blockquote><p>
  Associated with each value is a type and data.
</p></blockquote>
<p>And a name, no?</p>
<p>I used to think that a registry value had &quot;value name&quot; and &quot;value value&quot;. Kind of like the story about the dogs family: Father dog, mother dog, son dog, daughter dog and dog dog.</p>
<p>And I definitely agree about the terminology change. Terms are immutable &#8211; once you&#8217;ve coined a term, you can never ever change it. You can only make up new ones.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706243">
				<div id="div-comment-706243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706243">
			February 4, 2009 at 5:21 pm</a>		</div>

		<p>So&#8230; if you were wanted to store something in the registry that&#8217;s hard to find then class data is just about perfect. &lt;laugh type=&quot;nefarious&quot; /&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dcmonkey odd alt thread-odd thread-alt depth-1" id="comment-706263">
				<div id="div-comment-706263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DCMonkey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706263">
			February 4, 2009 at 5:30 pm</a>		</div>

		<p>From a 1996 usenet post:</p>
<p>This question came up on Compuserve, and the Microsoft answer was, &quot;Er, we thought we had a use for it, but we didn&#8217;t, so leave it blank.&quot;</p>
<p>&#8212; <a rel="nofollow" target="_new" href="http://groups.google.com/group/comp.os.ms-windows.programmer.win32/browse_thread/thread/db38c969d9c4aa20?hl=en&amp;ie=UTF-8&amp;oe=UTF-8&amp;q=RegCreateKeyEx+class" rel="nofollow">http://groups.google.com/group/comp.os.ms-windows.programmer.win32/browse_thread/thread/db38c969d9c4aa20?hl=en&#038;ie=UTF-8&#038;oe=UTF-8&#038;q=RegCreateKeyEx+class</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706283">
				<div id="div-comment-706283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M. Barrett</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706283">
			February 4, 2009 at 7:07 pm</a>		</div>

		<p>The clinker in the system is &quot;value,&quot; which in the registry plays the role of an additional level of key, when we expect it to be a datum.</p>
<p>Replace &quot;value&quot; by &quot;field&quot; and leave the other terms alone. This would remove the confusion, and the changes to documentation and software required should be minimal compared to what you discuss.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706313">
				<div id="div-comment-706313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706313">
			February 4, 2009 at 8:47 pm</a>		</div>

		<p>Dave,</p>
<p>No, it&#8217;s because it gives you hives.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-706333">
				<div id="div-comment-706333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706333">
			February 5, 2009 at 2:09 am</a>		</div>

		<p>Windows CE .net (4.0 Talisker) introduced hive-based registry for the first time &#8211; before that it was RAM-based, and persisting it was a fun exercise to do in the kernel (you get a binary blob you dump into nonvolatile storage&#8230;).</p>
<p>At least with hives, we put the main one on flash disk, and the kernel has a tiny boot hive. Hilarity ensues if vital keys are missing from the boot hive&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706803">
				<div id="div-comment-706803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danl65</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-706803">
			February 6, 2009 at 12:37 pm</a>		</div>

		<p>To add to the confusion I could swear I read in one book where individual keys were referred to as a &#8216;leaf&#8217;, although the name of the book escapes me at this time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-707163">
				<div id="div-comment-707163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-707163">
			February 9, 2009 at 1:02 pm</a>		</div>

		<p>Didn&#8217;t Windows 95 officially change directories to folders? Is that an example of a name change that was followed through?</p>
<p>Any idea why that was made?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-707083">
				<div id="div-comment-707083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-707083">
			February 9, 2009 at 9:33 am</a>		</div>

		<p>Danl65: standard terminology for trees. &nbsp;You have root, inner, and leaf nodes. &nbsp;You can alternatively get trunks and branches if the tree isn&#8217;t node-based (as in CVS).</p>
<p>Of course there&#8217;s always someone who takes metaphors to the extreme, like <a rel="nofollow" target="_new" href="http://computerperformance.co.uk/vista/vista_registry_vbscript.htm" rel="nofollow">http://computerperformance.co.uk/vista/vista_registry_vbscript.htm</a></p>
<p>*Twigs*?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-707303">
				<div id="div-comment-707303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gregory Kong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090204-00/?p=19263#comment-707303">
			February 9, 2009 at 7:50 pm</a>		</div>

		<p>Indeed, although I believe that the term &#8216;folder&#8217; in Windows is more all-encompassing than the concept of the filesystem &#8216;directory&#8217;. For instance, Control Panel (and sub-items within), as well as others, are &#8216;system folders&#8217; that do not necessarily reside anywhere within the filesystem.</p>
<p>In any event, I still call them directories, when they reside on disks.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

