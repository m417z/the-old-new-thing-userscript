<html>
<head>
<title>What does it mean when a display change is temporary?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What does it mean when a display change is temporary?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 4, 2008 / year-entry #5</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>24</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When you call the ChangeDisplaySettings function, you can pass the CDS_FULLSCREEN flag to indicate that the change is temporary. But if you don't also save the changes in the registry, how can they be permanent? What does temporary mean? A temporary display change is one that your program has entered because it has gone into...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>When you call the <code>ChangeDisplaySettings</code> function, you can pass the <code>CDS_FULLSCREEN</code> flag to indicate that the change is temporary. But if you don't also save the changes in the registry, how can they be permanent? What does temporary mean?</p>
<p> A temporary display change is one that your program has entered because it has gone into a fullscreen mode, a change which it will undo when it releases control of the screen to another program. For example, a fullscreen video may use a temporary display change to display a 320 &times; 200 video. The change isn't permanent, since the video player will certainly return the video resolution to its previous setting when the video ends or when the user switches to another program. </p>
<p> The window manager and Explorer behave differently in response to temporary as opposed to permanent display changes. If a display change is permanent, the window manager will reposition windows and Explorer will reposition desktop icons so that they all fit on the (new) screen. If they didn't do this, then windows and icons near the right edge or bottom edge would become inaccessible. Conversely, if you say that the change is temporary, then the window manager and Explorer won't reposition anything because you said that you'll set things back when you're done. </p>
<p> If you set the <code>CDS_FULLSCREEN</code> flag incorrectly, you typically see one of two results. </p>
<p> If you set the temporary flag when you shouldn't, then you'll find that icons have disappeared off-screen and have become inaccessible. That's because you said, "Oh, don't worry about this screen resolution change. I'll set it back before you even realize it." </p>
<p> If you fail to set the temporary flag when you should have, then you'll find that all your open windows and your desktop icons have been squished into the corner of the screen. And that's because you said, "The user is going to be working in screen resolution to 320 &times; 200, so you'd better make sure everything is ready for it!" </p>
<p> Moral of the story: If you're going to change the display settings, make sure you correctly indicate whether you're doing this temporarily or permanently. The name for the flag <code>CDS_FULLSCREEN</code> acts as a strong hint for telling you when you need to pass it. </p>
<p> <b>Pre-emptive snarky comment</b>: "This blog entry is proof that Microsoft documentation sucks. If the documentation were any good, this article would not have been necessary." Well, I'm sorry for trying to help. If you prefer, I'll only write about things that are already well-documented. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-585833">
				<div id="div-comment-585833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585833">
			January 4, 2008 at 10:22 am</a>		</div>

		<p>It&#8217;s easy enough to find the flag in the documentation for ChangeDisplaySettings and, though it&#8217;s lacking in details, I think it wouldn&#8217;t take much testing to figure out what it meant. &nbsp;</p>
<p>I am curious how this flag got its name though. &nbsp;I get the impression that it started out for something else and that something was pared down until all that remained was this behavior &#8211; else a wise developer would have named it CDS_TEMPORARY_CHANGE (or some such).</p>
<div class="post">[<i>As I suggested in the article itself, I suspect it was somebody&#8217;s attempt at making a self-documenting flag, giving the flag a name that describes <u>how it should be used</u> instead of describing what it does. The sort of thing some people claim they want more of. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585863">
				<div id="div-comment-585863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585863">
			January 4, 2008 at 11:04 am</a>		</div>

		<p>Being in the game industry, I knew exactly what the flag did just from the name. &nbsp;&quot;Hey, I need to go into full screen mode so don&#8217;t goof up the user&#8217;s desktop layout when the desktop gets resized.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585883">
				<div id="div-comment-585883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Niels</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585883">
			January 4, 2008 at 11:27 am</a>		</div>

		<p>And I have seen way too many games failing at this, meaning I get a broken desktop and window layout after running them&#8230; :(</p>
<p>At least now I know what they&#8217;re doing wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585893">
				<div id="div-comment-585893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew Cook</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585893">
			January 4, 2008 at 11:45 am</a>		</div>

		<p>The Application Compatibility Toolkit shim for this is ForceTemporaryModeChange, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585903">
				<div id="div-comment-585903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.vacant-nebula.com/' rel='external nofollow' class='url'>Kip</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585903">
			January 4, 2008 at 12:00 pm</a>		</div>

		<p>I remember in Windows 95 days this would happen with nearly every game I played. &nbsp;Nowadays game developers seem to have figured this out though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585913">
				<div id="div-comment-585913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ookii.org' rel='external nofollow' class='url'>Sven Groot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585913">
			January 4, 2008 at 12:18 pm</a>		</div>

		<p>Kip, more likely game developers nowadays don&#8217;t use this API to go fullscreen anymore. The more common way for games to do this is to use Direct3D (or previously, DirectDraw) exclusive mode, which will switch modes for you, and it will always behave correctly as it has no &quot;permament&quot; mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585923">
				<div id="div-comment-585923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585923">
			January 4, 2008 at 1:30 pm</a>		</div>

		<p>Yes, but DirectX exclusive mode only works in the single-monitor case. If you actually need to reset two or more video modes simultaneously, like our applications do, CDS_FULLSCREEN is the only reliable way to go.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585933">
				<div id="div-comment-585933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ookii.org' rel='external nofollow' class='url'>Sven Groot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585933">
			January 4, 2008 at 2:14 pm</a>		</div>

		<p>Chris, I wasn&#8217;t suggesting that CDS_FULLSCREEN is obsolete, I was simply replying to Kip&#8217;s observation that most games get it right today; I believe most of them get it right because they use DirectX not because they correctly use CDS_FULLSCREEN. That&#8217;s not to say there aren&#8217;t any applications that correctly use CDS_FULLSCREEN.</p>
<p>Sorry for the confusion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585993">
				<div id="div-comment-585993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-585993">
			January 4, 2008 at 3:45 pm</a>		</div>

		<p>CDS_FULLSCREEN was really only intended for full-screen apps. &nbsp;I&#8217;ve seen on older versions of Windows where the task bar is not repositioned when CDS_FULLSCREEN is used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-586003">
				<div id="div-comment-586003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586003">
			January 4, 2008 at 3:52 pm</a>		</div>

		<p>Is the &#8220;hint&#8221; that indicates the display change is only temporary available to other programs?</p>
<p>AFAIK, the main notice of a display change is WM_DISPLAYCHANGE and that message doesn&#8217;t contain any information about the permanence of the change.</p>
<div class=post>[<i>I went back and did the research and I was wrong. Explorer doesn&#8217;t use this flag to decide whether to reposition icons &#8211; for the reason you give. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-586023">
				<div id="div-comment-586023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hugo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586023">
			January 4, 2008 at 4:44 pm</a>		</div>

		<p>&quot;Yes, but DirectX exclusive mode only works in the single-monitor case. If you actually need to reset two or more video modes simultaneously, like our applications do, CDS_FULLSCREEN is the only reliable way to go.&quot;</p>
<p>Ever since I startet using a second monitor I had problems with windows rearanging themselves, switching screens, or going &nbsp;entirely offscreen after using fullscreen apps. Is that the reason?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-586053">
				<div id="div-comment-586053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586053">
			January 4, 2008 at 6:46 pm</a>		</div>

		<p>Nah, it&#8217;s probably because Windows doesn&#8217;t really handle a sparse virtual desktop. If your second monitor is to the &quot;right&quot; of the primary, then it suddenly starts displaying windows starting at (800,0) rather than (1280,0) rather than have a no-man&#8217;s land. Screen coordinates subject to change, obviously.</p>
<p>The only practical remedy at the moment is to put your secondary (non-gaming) monitor into &quot;negative space&quot; (e.g., (-1280,0) origin). That hides most of the problems, but some apps don&#8217;t handle negative coordinates well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-586083">
				<div id="div-comment-586083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586083">
			January 4, 2008 at 7:45 pm</a>		</div>

		<p>I&#8217;m surprised nobody complained about icons rearranging themselves yet. The problem being that when the desktop shrinks the icons are relocated, but when the desktop goes back to its original size the icons don&#8217;t move back to their original positions.</p>
<p>I think this is particularly common now that people use remote desktop, connect to projectors, and such.</p>
<p>Does anybody know why Explorer doesn&#8217;t remember the last position the user set the icon to, and then just always try that position first when drawing an icon? It seems like remembering the last size and position a user set a window to even if it was last maximized.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-586093">
				<div id="div-comment-586093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586093">
			January 4, 2008 at 10:29 pm</a>		</div>

		<p>Presumably CDS_FULLSCREEN is more about undoing the change when the program exits (or loses focus or, most importantly, crashes) rather than making the change have no effect on other apps while the program has focus.</p>
<p>What Hugo and Chris mention, with full-screen games (not running at the desktop resolution) causing windows on secondary monitors with positive coordinates to shift around is annoying. Very few games use more than one monitor so it&#8217;s nice to be able to keep an eye on IRC and other things (including CPU/memory monitors) while playing games, but having everything move around and sometimes go offscreen completely isn&#8217;t ideal.</p>
<p>Rather than a sparse virtual desktop, I wonder if the problem could be solved by pretending that the usual desktop resolution was still in use, but giving the full-screen app (the game) a &quot;virtual screen&quot;, which is effectively just its window sent to the primary monitor. The app just has to render to its window as if it were running in a windowed mode, no program has to know anything strange is going on and it&#8217;s just a trick of the video hardware/drivers that you see that one window as if it was full-screen. Perhaps there are performance issues with that, like the framebuffer may have to have lots of dead space between each scan line or something.</p>
<p>Amiga OS didn&#8217;t have multi-monitor support (at least back when I used it) but it always had the ability to have different &quot;screens&quot; with independent resolutions and bit-depths which you could flick between (and even display at once stacked down the screen, due to the way the Amiga&#8217;s hardware worked). It&#8217;s a shame Windows has never had anything similar, but perhaps adding it now would be too difficult.</p>
<p>On the plus side, graphics cards are so powerful these days that only the very cutting edge games require you to switch to a lower resolution than your desktop (at least on my 1920&#215;1200 monitor; perhaps people with higher res 30&quot; monitors feel differently).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-586113">
				<div id="div-comment-586113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586113">
			January 5, 2008 at 2:10 am</a>		</div>

		<p>Ah&#8230; now it makes sense.</p>
<p>I am always annoyed at programs that do fullscreen because there was a random chance that they would screw up the window size and positioning, as well as reposition all the icons on the screen. I did notice that if an app did it, it did so consistently, but determining if an app would do it wasn&#8217;t possible (other than trying).</p>
<p>Especially if the default for said app was &quot;full screen low res&quot;. Ugh, what a nice first impression to make &#8211; having all your windows suddenly resized and all the icon positioning lost.</p>
<p>Too bad there isn&#8217;t a way to force this flag on anything other than the Display Control Panel and certain user-selectable apps. Not a security issue, but more of an annoyance to keep having to redo the icon positions and resize the numerous windows one has open.</p>
<p>Of course, QA never notices because a clean machine only has a few icons by default, and rarely are useful windows kept open (browser, help), or if they are, they&#8217;re nominally maximized.</p>
<p>*Sigh*. Raymond, it looks like you&#8217;ll probably end up coding around this by having to store and restore the window positions and icon positions should an app misbehave. Even worse when they crash and they leave your desktop at 640&#215;480, which one promptly resets back to the old settings. &nbsp;Probably end up with a nice dialog asking &quot;Why is my desktop strange&quot; (and the option &quot;restore desktop&quot; back the way it was), and get blamed for adding this feature in.</p>
<p>It&#8217;s usually games (that don&#8217;t use DirectX), media players, or other multimedia thing that does this&#8230;</p>
<p>Won&#8217;t blame Microsoft for this one &#8211; the API is necessary (Though, I suppose someone could put in the SDK CDS_TEMPORARY equal to CDS_FULLSCREEN), but the developers, since obviously many now get it right!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-586133">
				<div id="div-comment-586133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586133">
			January 5, 2008 at 12:27 pm</a>		</div>

		<p>Leo, are you describing a feature similar to the virtual desktop available with some video card Windows 95 drivers, whereby your workspace area can be larger than the monitor and the driver will automatically pan to follow the mouse?</p>
<p>(I tried the Windows 98 drivers in an attempt to resolve an unrelated problem and noticed that they no longer supported panning, possibly because of the multiple desktop architecture. I actually switched back but for other reasons.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-586163">
				<div id="div-comment-586163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stosb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586163">
			January 5, 2008 at 6:38 pm</a>		</div>

		<p>The squish effect is kinda funny if the taskbar is set to auto hide&#8230; You can see it move up and down thinking it&#8217;s hiding for you :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-586223">
				<div id="div-comment-586223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586223">
			January 6, 2008 at 3:56 pm</a>		</div>

		<p>It would be nice if change to VGA mode (ie the one when you uninstall the old drivers in preparation for installing the updated ones) was also &#8220;temporary&#8221; so that you don&#8217;t have to rearrange icons afterwards.</p>
<div class="post">{<i>Imagine what the world would be like if that were true. -Raymond</i>]</div>
<p>Speaking of this, I do not understand why users have to manually restore all display settings, why there is no export/import functionality for display drivers?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-586273">
				<div id="div-comment-586273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586273">
			January 7, 2008 at 3:39 am</a>		</div>

		<p>Well Igor, I guess that&#8217;s because the video driver programmers would have to make that, because Windows probably doesn&#8217;t have any idea what export/import.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-586913">
				<div id="div-comment-586913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-586913">
			January 8, 2008 at 1:31 pm</a>		</div>

		<blockquote><p>
  &gt;Well Igor, I guess that&#8217;s because the video driver programmers would have to make that, because Windows probably doesn&#8217;t have any idea what export/import.&lt;&lt;
</p></blockquote>
<p>Sooo&#8230; Windows doesn&#8217;t know about resolution, bit-depth and refresh rate? That&#8217;s a new one for me.</p>
<p>Actually Windows could offer the export/import functionality without even knowing what the drivers are exporting/importing.</p>
<p>Don&#8217;t tell me that the Microsoft couldn&#8217;t have made it mandatory for drivers to support save/restore settings IOCTL?</p>
<p>That goes for any device which needs reconfiguring from scratch (video card, sound card, printer) once you update the drivers for it.</p>
<p>It is as if they want users to suffer by having to perform boring repetitive tasks instead of letting computer handle them, which by the way was the sole reason computers were invented in the first place if I remember correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-587133">
				<div id="div-comment-587133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-587133">
			January 8, 2008 at 6:54 pm</a>		</div>

		<p>&quot;Windows doesn&#8217;t know about resolution, bit-depth and refresh rate?&quot;</p>
<p>Of course it does, but what about all the other settings that are driver-specific. Most newish drivers allow you to specify colour spaces and anti-aliasing levels and so on. So either Windows exports only a subset of the settings (which is pretty useless) or the driver has to support all (in which case, it&#8217;s pointless for Windows to do anything).</p>
<p>&quot;Don&#8217;t tell me that the Microsoft couldn&#8217;t have made it mandatory for drivers to support save/restore settings IOCTL?&quot;</p>
<p>How can they possibly making it mandatory in retrospect? Either it is mandatory, or it&#8217;s optional. If it&#8217;s going to be mandatory, then it has to be mandatory for all time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-587503">
				<div id="div-comment-587503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-587503">
			January 9, 2008 at 2:20 pm</a>		</div>

		<p>&quot;I&#8217;m surprised nobody complained about icons rearranging themselves yet.&quot;</p>
<p>I&#8217;ve been using a program called UIFriend that makes backups of the icon layout. &nbsp;It handles when programs change the display settings, but if it misses something, the worst case scenario is having to go into the menu to manually restore things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-587993">
				<div id="div-comment-587993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-587993">
			January 10, 2008 at 4:24 pm</a>		</div>

		<blockquote><p>
  &gt;Of course it does, but what about all the other settings that are driver-specific.&lt;&lt;
</p></blockquote>
<p>As I said that could have been handled in two ways.</p>
<ol>
<li>Let each driver implement their own save/restore settings &#8212; kX drivers for Creative sound cards offer that. In my opinion that is suboptimal as it still requires significant interaction from the user.</li>
<li>
<p>Let Windows issue Save/Restore settings IOCTL to the driver. On save driver would send data and Windows would dump it into a file associated with current date, device and vendor ID. On driver reinstall, Windows would ask the user if he wants to restore previous settings and if user says &quot;yes&quot; it would attempt to send the file contents to the driver. Driver could do version checking and accept all the settings it knows about. In case that driver writers have added new settings, driver could return special error code upon which Windows would suggest user to manually check settings because new settings are available.</p>
</li>
</ol>
<blockquote>
<p>&gt;How can they possibly making it mandatory in retrospect?&lt;&lt;
</p>
</blockquote>
<p>Who said in retrospect?!?</p>
<p>There have been two changes in driver model so far. First missed oportunity for what I am suggesting was change to WDM. Second was Vista driver model. How much more we will have to wait?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-588003">
				<div id="div-comment-588003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080104-00/?p=23923#comment-588003">
			January 10, 2008 at 4:28 pm</a>		</div>

		<p>Oh yes, and after having File Manager in Windows 3.x, Explorer in Windows 95, Windows 95 OSR2, Windows 98 Gold, Windows 98 SE, Windows ME, and Windows NT 3.x-6.0 one would think that so far shell team would implement such a simple option as &quot;Save Icon Positions&quot; and &quot;Restore Icon Positions&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

