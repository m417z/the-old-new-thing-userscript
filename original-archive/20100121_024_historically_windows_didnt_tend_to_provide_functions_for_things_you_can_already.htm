<html>
<head>
<title>Historically, Windows didn't tend to provide functions for things you can already do yourself</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Historically, Windows didn&#8217;t tend to provide functions for things you can already do yourself</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 21, 2010 / year-entry #25</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>62</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Back in the old days, programmers were assumed to be smart and hardworking. Windows didn't provide functions for things that programs could already do on their own. Windows worried about providing functionality for thing that programs couldn't do. That was the traditional separation of responsibilities in operating systems of that era. If you wanted somebody...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Back in the old days, programmers were <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/21/556505.aspx#556619"> assumed to be smart and hardworking</a>. Windows didn't provide functions for things that programs could already do on their own. Windows worried about providing functionality for thing that programs <i>couldn't</i> do. That was the traditional separation of responsibilities in operating systems of that era. If you wanted somebody to help you with stuff you could in principle do yourself, you could use a runtime library or a programming framework.</p>
<p> You know how to open files, read them, and write to them; therefore, you could write your own file copy function. You know how to walk a linked list; the operating system didn't provide a linked list management library. There are apparently some people who think that it's the job of an operating system to <a href="http://blogs.msdn.com/oldnewthing/archive/2008/09/25/8965129.aspx#8967132"> alleviate the need for implementing them yourself</a>; actually that's the job of a programming framework or tools library. Windows doesn't come with a finite element analysis library either. </p>
<p> You can muse all you want about how things would have been better if <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/21/556505.aspx#556699"> Windows had had an installer library built-in from the start</a> or even <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/21/556505.aspx#557618"> blame Windows for having been released without one</a>, but then again, the core unix operating system doesn't have an application installer library either. The unix kernel has functions for manipulating the file system and requesting memory from the operating system. Standards for installing applications didn't arrive until decades later. And even though such standards exist today (as they do in Windows), there's no law of physics preventing a vendor from writing their own installation program that doesn't adhere to those standards and which can do anything they want to the system during install. After all, at the end of the day, installing an application's files is just calling <code>creat</code> and <code>write</code> with the right arguments. </p>
<p> Commenter Archangel remarks, "<a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/21/556505.aspx#557618">At least if the ACL route had been taken, the installers would have had to be fixed - and fixed they would have been, when the vendors realised they didn't run on XP</a>." </p>
<p> These arguments remind me of the infamous "Step 3: Profit" business plan of the Underpants Gnomes. </p>
<ul>
<li>Step 1: Require every Windows application to adhere to new rules     or they won't run on the next version of Windows. </li>
<li>... </li>
<li>Step 3: Windows is a successful operating system without     applications which cause trouble when they break those rules. </li>
</ul>
<p> It's that step&nbsp;2 that's the killer. Because the unwritten step&nbsp;2 is "All applications stop working until the vendors fix them." </p>
<p> Who's going to fix the the bill-printing system that a twelve-year-old kid wrote over a decade ago, but which you still use to run your business. (I'm not making this up.) What about that shareware program you downloaded three years ago? And it's not just software where the authors are no longer available. The authors may simply not have the resources to go back and update every single program that they released over the past twenty years. There are organizations with <a href="http://blogs.msdn.com/oldnewthing/archive/2006/11/06/999999.aspx"> thousands of install scripts</a> which are used to deploy their line-of-business applications. Even if they could fix ten scripts a day, it'd take them three years before they could even start thinking about upgrading to the next version of Windows. (And what about those 16-bit applications? Will they have to be rewritten as 32-bit applications? How long will that take? Is there even anybody still around who understands 16-bit Windows enough to be able to undertake the port?) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (62)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-nathan_works even thread-even depth-1" id="comment-804383">
				<div id="div-comment-804383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/nathan_works' rel='external nofollow' class='url'>nathan_works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804383">
			January 21, 2010 at 7:41 am</a>		</div>

		<p>Well, wasn&#8217;t Henry Ford known to search scrap yards to see what parts of his cars were still in good working order, and then replace the supplies of said parts with cheaper suppliers.. By not making things to last, he increased his profits..</p>
<p>Not sure who&#8217;d profit here &#8211; MSFT or the ISV shops, but putting some kind of planned obsolescence is a strategy of so many industries already. (in addition to offering limited to no-warranty, making repairs as expensive as replacing via parts-pricing, etc)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804403">
				<div id="div-comment-804403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804403">
			January 21, 2010 at 7:58 am</a>		</div>

		<p>We&#8217;re currently having fun trying to get a 8-bit DOS program (.com file) that drives a optical mark reader via a serial port (mission critical application of course) working on a new PC which has Windows 7 and no serial ports. &nbsp; It&#8217;s currently live on a Windows 2000 PC which is getting a bit long in the tooth. &nbsp; The application was written by an external company that no longer exists and there&#8217;s no source code.</p>
<p>But we appreciate the fact that we were even able to get it working on W2000 8 years ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804413">
				<div id="div-comment-804413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804413">
			January 21, 2010 at 8:10 am</a>		</div>

		<p>Sorry that .COM file must be actually 16-bit as it runs on a 80&#215;86 processor. &nbsp; But it&#8217;s OLD anyway. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804423">
				<div id="div-comment-804423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804423">
			January 21, 2010 at 9:12 am</a>		</div>

		<p>Windows didn&#8217;t have to have something to match installation of any application.</p>
<p>However it was a serious design error allowing replacing DDLs belonging to the system &#8220;just so&#8221; and forcing every plain application programmer update the OS with plain file copies over the system files in order to make his application functional(!) The result is that today (but note I&#8217;m still on XP) there is some service which allows stupid applications to actually for a moment replace system dlls (or something like that) and then the service copies the original ones over that(!)</p>
<p>Windows really had a lot of good design decisions &#8212; hey it worked much better on the weaker PCs compared with anything else! In the time of computers with 2 or 4 MB nothing could beat it. And of course there&#8217;s no time machine, but it doesn&#8217;t mean that other programmers shouldn&#8217;t learn on examples of bad designs. again not having an API call for updating system DLLs was one bad decision.</p>
<div class=post>[<i>But if applications couldn&#8217;t replace system DLLs, how would an app redist a DLL upgrade that it requires? (Remember, this is pre-Internet.) Oh, and the recommended way to replace system DLLs was not to do a plain copy; it was to use VerInstallFile. But of course most people said &#8220;VerInstallFile is too hard; I&#8217;ll just do a plain copy.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804433">
				<div id="div-comment-804433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804433">
			January 21, 2010 at 10:10 am</a>		</div>

		<p>Aren&#8217;t we lucky that we have the Window domination for the PC. Imaging if we had a 10 or dozen of the operating system competing in the Market. That would be a chaotic world. So we can blame or praise or ask for help to a single source, and the single source will make a proper solution for majority of our problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804443">
				<div id="div-comment-804443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tobi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804443">
			January 21, 2010 at 10:36 am</a>		</div>

		<p>@raymond in Thursday, January 21, 2010 9:12 AM by acq:</p>
<p>You are right, they should have used verinstallfile IF they had had the same interests as microsoft. But they didn&#8217;t so they did what was best for <em>them</em>. And that is why microsoft has to force them to server microsofts needs by making it hard to copy the dll over.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804453">
				<div id="div-comment-804453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://barrkel.blogspot.com/' rel='external nofollow' class='url'>Barry Kelly</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804453">
			January 21, 2010 at 10:52 am</a>		</div>

		<p>Hey! I wrote a bill printing system for a company when I was 15&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804463">
				<div id="div-comment-804463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">a random passerby</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804463">
			January 21, 2010 at 11:00 am</a>		</div>

		<p>@Jim: I politely disagree. I think that if Windows hadn&#8217;t emerged as the clear leader in PC markets then MacOS would be the one and only choice&#8230; outside of Linux, which would still be mired in documentation and config-file hell and would still never come into significant use among casual users.</p>
<p>Without Windows or MacOS, I think Linux might have had a chance, and I don&#8217;t know what would have happened. That&#8217;d be a very different world. The potential for chaos is high, but the same can be said of letting any and all applications copy whatever DLLs they want into c:windowssystem32.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804473">
				<div id="div-comment-804473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804473">
			January 21, 2010 at 11:05 am</a>		</div>

		<p>Sure, windows didn&#8217;t ship with an updater. We saw how well that worked; meanwhile unix (the OS, not the kernel) generally does have a package management. The Linux variant generally uses rpms and those things seem to work a whole lot better than on windows. </p>
<p>That said, this seems a bit incoherent &#8211; why are you bolting a gripe about installers onto a reasonable complaint about people&#8217;s expectations of the OS? It isn&#8217;t reasonable to allow apps to randomly update pieces of windows, and that&#8217;s a large part of why the rule for a very long time was to reinstall windows every year to 18 months.</p>
<div class=post>[<i>Once again, people are focusing on the example instead of the principle. Pretend I never talked about installers, then. (Oh, unix didn&#8217;t have package management for the first few decades of its existence either.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804483">
				<div id="div-comment-804483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804483">
			January 21, 2010 at 11:17 am</a>		</div>

		<blockquote><p>
  You are right, they should have used</p>
<p>  verinstallfile IF they had had the same</p>
<p>  interests as microsoft. But they didn&#8217;t so they</p>
<p>  did what was best for <em>them</em>.
</p></blockquote>
<p>The problem with that is, what was best for <em>them</em> was generally the worst possible thing for the customer.</p>
<p>&quot;You&#8217;ve got foo.dll version 42? &nbsp;Too bad, <em>we</em> want foo.dll version 41, so we&#8217;re replacing it because <em>our app needs to work</em>&quot;.</p>
<p>Preventing idiot application programmers from screwing up my PC is not &quot;serving Microsoft&#8217;s needs&quot;, it&#8217;s serving my needs.</p>
<p>(Though I find the SFP mechanism to be, uh, strange at best. I&#8217;d much prefer an approach where Windows determined the home address of the guy who wrote the installer, and then sent a hit squad there).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804493">
				<div id="div-comment-804493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PhilW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804493">
			January 21, 2010 at 11:31 am</a>		</div>

		<p>The install problem is actually a bit harder than just converting scripts. If that install CD from 1997 doesn&#8217;t install on Windows 7, nobody is ever going to give you a replacement CD image that does install. So there are things like installer elevation and the program compatibility assistant to help get the actual bits onto the system. After that, there is at least a chance that the app will run, or if it doesn&#8217;t that the vendor might supply you a fix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804503">
				<div id="div-comment-804503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804503">
			January 21, 2010 at 11:41 am</a>		</div>

		<p>@random passerby</p>
<p>You&#8217;re saying that if it weren&#8217;t for Microsoft and Apple, Linux would have been the only choice? &nbsp;I don&#8217;t think so. &nbsp;It&#8217;s naive to think that if MS-DOS had never existed, some other player we don&#8217;t think of today or maybe haven&#8217;t heard of wouldn&#8217;t have come along and ended up playing the same role MSFT did. &nbsp;Linux&#8217;s introduction in the 90s is too late to have done this.</p>
<p>@Cooney</p>
<p>You are confusing the modern history of Linux (with its RPMs and DEBs and whatnot), or even 1990s Unix (with the various incompatible package managers that the vendors wrote), with the older history of Unix. &nbsp;Unix didn&#8217;t have a package manager for a long time. &nbsp;What Raymond writes is accurate. &nbsp;And if you don&#8217;t think Raymond has his Unix bona fides, grep the Linux kernel&#8217;s credits file for &quot;raymondc&quot;. &nbsp;:P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804513">
				<div id="div-comment-804513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804513">
			January 21, 2010 at 11:54 am</a>		</div>

		<p>@Mc,</p>
<p>Why don&#8217;t you run that legacy program under a VM (VirtualPC or other)? You can use USB-&gt;COM adapter then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804523">
				<div id="div-comment-804523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804523">
			January 21, 2010 at 12:01 pm</a>		</div>

		<p>One possible solution would be to provide virtualized environment compatible with older OSs for legacy software, and make it run completely isolated, except for some shared folders.</p>
<p>Overall, the tendency should be toward more process/app isolation: installed DLLs not shared, child window handles process-local (if not specifically asked for, inter-process SendMessage blocked except for well known and specifically permitted by the target, etc. And kill DDE broadcasts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804543">
				<div id="div-comment-804543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://uxul.wordpress.com/' rel='external nofollow' class='url'>dasuxullebt</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804543">
			January 21, 2010 at 12:27 pm</a>		</div>

		<p>Does Win64 support Win16-Applications still, anyway?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804553">
				<div id="div-comment-804553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Conor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804553">
			January 21, 2010 at 12:51 pm</a>		</div>

		<p>You cannot stop developers doing something other than &quot;Best Practice&quot; with their software. After all, that&#8217;s why MS is still in business (as opposed to Lotus/Broderbund/Visicorp/etc).</p>
<p>You can however say &quot;You cannot have the Designed for Windows XP/Vista/7 logo unless your application meets certain requirements&quot;.</p>
<p>Like running LUA. Like not adding Everyone:Full Control to the Program Files directory (yes, I&#8217;ve seen that done). Like not polling the registry, something that gets up Mark Russinovich&#8217;s nose apparantly.</p>
<p>MS has bent over backwards to meet demands that old software works (UAC?) and hasn&#8217;t got much praise for it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804563">
				<div id="div-comment-804563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804563">
			January 21, 2010 at 12:51 pm</a>		</div>

		<p>Nathan: you talk about Henry Ford&#8217;s visits to scrap yards as if they were a bad thing. As a car owner, there&#8217;s little value in, say, some axle outlasting the rest of my car. If Ford can make the axle using less steel, the car can not only be cheaper (saving me money) but also lighter (making the car accelerate faster, handle better, stop shorter, and use less fuel &#8212; saving me money for the lifetime of the car).</p>
<p>Since this scheme saves me money and enables Ford to sell more cars (because they&#8217;re cheaper), why would any of us not want it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804583">
				<div id="div-comment-804583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804583">
			January 21, 2010 at 12:56 pm</a>		</div>

		<p>Does Win64 support Win16-Applications still, anyway?</p>
<p>It does not, because the CPU cannot run them. Rewriting the NTVDM as an CPU emulator is not exactly a simple project, and I do not believe that it benefits enough people to be implemented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804593">
				<div id="div-comment-804593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804593">
			January 21, 2010 at 12:58 pm</a>		</div>

		<p>&quot;Imaging if we had a 10 or dozen of the operating system competing in the Market. That would be a chaotic world.&quot;</p>
<p>There are at least ten Linux distributions alone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804603">
				<div id="div-comment-804603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804603">
			January 21, 2010 at 1:01 pm</a>		</div>

		<p>Please read &quot;So your installation has to distinguish between 7..&quot; as &quot;So your imaginable self-made installation program has to distinguish&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804613">
				<div id="div-comment-804613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804613">
			January 21, 2010 at 1:04 pm</a>		</div>

		<blockquote><p>
  &gt; Does Win64 support Win16-Applications still, anyway? &lt;&lt;
</p></blockquote>
<p>No &#8211; Microsft was finally able to decide that Win64 was far enough removed from Win16 and the Win16 support was unimportant enough today to decide it wasn&#8217;t worth supporting.</p>
<p>There&#8217;s supposed to be some support to recognize certain installers (why do installers keep getting mentioned on this thread?) that use Win16 code as part of their platform detection, but thats a pretty particular edge case. As I understand it, this isn&#8217;t handled by actually running the Win16 code, but by giving the installer whatever result it might expect on a Win32 system. &nbsp;Or something like that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804623">
				<div id="div-comment-804623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804623">
			January 21, 2010 at 1:17 pm</a>		</div>

		<p>[Once again, people are focusing on the example instead of the principle. Pretend I never talked about installers, then. (Oh, unix didn&#8217;t have package management for the first few decades of its existence either.) -Raymond]</p>
<p>Installers are 2/3 of the post and a serious point of pain. Further up, you asked how an app could install shared components without permissions &#8211; the answer is that it probably shouldn&#8217;t be doing anything in a shared location, and this has nothing to do with the internet.</p>
<p>If you hadn&#8217;t brought up installers, I would have nothing to gripe about.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804633">
				<div id="div-comment-804633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duke of New York</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804633">
			January 21, 2010 at 1:23 pm</a>		</div>

		<p>grrr why doesn&#8217;t Windows provide an API to do X in ten lines or less</p>
<p>also why is it so friggin&#8217; BLOATED &gt;:-[</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804643">
				<div id="div-comment-804643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://windowssucks.wordpress.com/' rel='external nofollow' class='url'>WndSks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804643">
			January 21, 2010 at 1:24 pm</a>		</div>

		<p>The law of physics might not stop you, but the law of MS says, if you want the windows logo, your installer has to use MSI, no NSIS/Inno/etc for you!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804653">
				<div id="div-comment-804653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804653">
			January 21, 2010 at 2:01 pm</a>		</div>

		<p>@WndSks, that WAS true up to 7/2008 R2. Microsoft get their senses (Oh Gods, thank you, thank you), and the rules for certification now are much much simplified. And MSI is gone as a requirement :-D </p>
<p>Raymond, did you miss the fact that MS actually put us into your 3-step plan? Because of the infamous PCA job, my perfectly working program, which adheres the XP / Vista logo requirements BREAKS on 7 (step 1). Until I add the totally magic GUID in the manifest, the program is broken (step 2). So, what again is your point? That MS tries to keep working programs that adhere to the contracts from breaking? It is not. It used to do it, up to 2000 pre-SP1 era.</p>
<div class=post>[<i>Now I will have more ammunition when people advocate the three-step plan. &#8220;We tried it and Teo hates it.&#8221; More proof that <a href="http://blogs.msdn.com/oldnewthing/archive/2008/01/14/7103585.aspx" rel="nofollow">no matter what you do, somebody will call you an idiot</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804683">
				<div id="div-comment-804683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804683">
			January 21, 2010 at 2:33 pm</a>		</div>

		<p>Unix installs apps under /usr/local/appname, the apps themselves don&#8217;t install random system libs, multiple versions of a lib can exist at the same time, you as a user, can install an app under your home dir and not disturb the system.</p>
<p>Also, I can overwrite a file that&#8217;s open and restart the process for very fast turnaround. This is useful in a number of places, although not specifically relevant to installs.</p>
<div class=post>[<i>&#8220;Unix installs apps under /usr/local/appname&#8221;. &#8220;Unix&#8221; doesn&#8217;t install anything. Installers install stuff. It may be that <u>by convention</u> apps install under /usr/local/appname, but that&#8217;s just a convention. As with Windows, there&#8217;s no law of physics preventing an installer from violating the conventions. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804693">
				<div id="div-comment-804693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CN</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804693">
			January 21, 2010 at 3:18 pm</a>		</div>

		<p>Now I feel bad for writing that bill-printing system when I was 12 (I am not making this up). The worst part was that I had to do it in Win16, which was already, well, not state of the art. But it had to run on an already ancient 386.</p>
<p>It was pretty neat, though. I even got a 24x CD player and 16 MB worth of SIMMs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804703">
				<div id="div-comment-804703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://catphive.net/blog' rel='external nofollow' class='url'>Brendan Miller</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804703">
			January 21, 2010 at 3:34 pm</a>		</div>

		<p>@Cooney</p>
<p>There&#8217;s nothing preventing you from installing to /bin /usr/bin, etc. In fact, if you install a lot of stuff from source it will install there and bork your system by default&#8230;</p>
<p>The main different is that Linux ./configure scripts will typically will accept a prefix flag, but that&#8217;s not really enforced by the system. That&#8217;s just how autotools does things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-804723">
				<div id="div-comment-804723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804723">
			January 21, 2010 at 3:54 pm</a>		</div>

		<p>I think the main difference between Linux and Windows is that on Linux, installation is maintained by the distribution maintainers rather than the application developers.</p>
<p>If Microsoft had a department where I could send my program to them and they&#8217;d send me back a fully-functioning .MSI (or added it to the &quot;Windows package database&quot; automatically) that adhered to all of the standards and then promised to maintain that .MSI through subsequent releases of Windows then all of these problems would be solved!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804733">
				<div id="div-comment-804733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hexatron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804733">
			January 21, 2010 at 4:42 pm</a>		</div>

		<p>Well, last week I told my neighbor who popped for a nice new Win7 64bit PC that his wife&#8217;s favorite Scrabble game would not run on it. Ever. At least I found him a $10 replacement (32bit version), but it was still not what he wanted to hear. Note: this user is a NORMAL PERSON with no interest in or knowledge of computer guts.</p>
<p>There is probably significant demand for 16-on-64 emulation, and I expect it will come, though perhaps not terribly legally. After all we have had Z80 &amp; etc emulation for years, all wrapped neatly together in MAME.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804743">
				<div id="div-comment-804743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hexatron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804743">
			January 21, 2010 at 4:54 pm</a>		</div>

		<p>Responding to the point of this post&#8211;I think most programmers are still quite hard-working, but the sheer number of programmers employed today means many many of them will be less than smart.</p>
<p>A smart programmer can produce canned-type code, specialized for a particular application, pretty damn quick. Say, a tree optimized for quick insertion, or (as I actually did today) replace all substrings of the form ^n^ (n and ascii integer, with the UTF-8 superscript-n chars&#8211;took me about 15 minutes with 2 recompiles for errors).</p>
<p>But an average programmer could spend at least a day producing a version of a linked list that compiles and often works correctly. He might leave that steaming turd in working code, where the stench might not be detected for years. I believe this is the base motivation for all the libraries of frequently-performed operations.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804753">
				<div id="div-comment-804753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804753">
			January 21, 2010 at 4:59 pm</a>		</div>

		<p>&quot;Is there even anybody still around who understands 16-bit Windows enough to be able to undertake the port?&quot;</p>
<p>If only such a person had a blog&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804763">
				<div id="div-comment-804763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804763">
			January 21, 2010 at 5:05 pm</a>		</div>

		<p>‘Historically, Windows didn&#8217;t tend to provide functions for things you can already do yourself’</p>
<p>Well, X certainly took that to the extreme. Widgets? Draw them yourself. Nowadays on a modern GNU/Linux distribution you get KDE and most things look consistent, but every now and then you still bump into something that draws it&#8217;s own widgets and without exception does so badly.</p>
<p>As for the installer issue. When 95 came the developers could have decided without causing much more trouble to software developers (who were having to switch anyway) that, no, you cannot install things yourself, you must let the OS do it. By the time 98 came it was too late of course, I realize that.</p>
<p>But the fact remains that whether you let the application do it or the OS is a design decision that you cannot sweep under the carpet by saying ‘the OS doesn&#8217;t need to do it because you can do it yourself’ for you could have decided to not let the application do it or for example that almost every application needs to do it and there&#8217;s a benefit in a safe and consistent unified design.</p>
<div class=post>[<i>If Windows 95 did what you suggested, then any app purchased prior to 1995 couldn&#8217;t be installed on a Windows 95 machine. I suspect customers wouldn&#8217;t like that. And Teo wouldn&#8217;t like it either &#8211; <a href="http://blogs.msdn.com/oldnewthing/archive/2010/01/21/9951193.aspx#9951667" rel="nofollow">he hates MSI</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804773">
				<div id="div-comment-804773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804773">
			January 21, 2010 at 5:18 pm</a>		</div>

		<p>@Duke of New York,</p>
<p>Non-bloated Windows is 10 MB or so. The rest (&quot;BLOAT&quot;) is the part that allows you to do X in 10 lines of code or less.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804793">
				<div id="div-comment-804793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804793">
			January 21, 2010 at 6:11 pm</a>		</div>

		<p>&gt;Unix installs apps under /usr/local/appname, the apps themselves don&#8217;t install random system libs, multiple versions of a lib can exist at the same time, you as a user, can install an app under your home dir and not disturb the system.</p>
<p>I think it&#8217;ll be better if there&#8217;s not &#8220;strong name&#8221; requirement to install files as Side-by-Side assembly. Perheps Windows should automatically rename the DLLs copied to system32 with companyname and fileversion (although not as accurate as strong name, DLL from the same company with same version number is most likely to be the same, and it seems like over 75% of DLL exist in the wild contains versioninfo) appended to the file name, and the software companies will less likely to &#8220;install&#8221; them in the broken way. For files without version information, Windows could have the option for me to deny the copying process (which could have the checkbox to use the same decision forever).</p>
<p>&gt;Also, I can overwrite a file that&#8217;s open and restart the process for very fast turnaround. This is useful in a number of places, although not specifically relevant to installs.</p>
<p>I really like the idea of replacing the DLL files I need without restarts. It significantly reduce the downtime for the systems.</p>
<div class=post>[<i>It reduces the downtime but <a href="http://technet.microsoft.com/en-us/magazine/2008.11.windowsconfidential.aspx" rel="nofollow">makes writing the DLL much, much harder</a> since it now has to interoperate with earlier versions of itself. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804573">
				<div id="div-comment-804573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804573">
			January 21, 2010 at 12:53 pm</a>		</div>

		<p>1. Windows does something wrong (lacks an installation/update framework), but unix does the same wrong thing too, therefore it is not wrong? Either I am missing something (English is not my strongest language) or your logic is flawed.</p>
<p>2. &#8220;After all, at the end of the day, installing an application&#8217;s files is just calling creat and write with the right arguments.&#8221; You have installed manually an Win32 assembly in the assembly store, right? FYI, it is not even documented (&#8220;use Windows Installer&#8221; is what docs say). Or, perhaps, you have installed a driver recently? Hint: the syntax of the inf files is incompatible between 2000 and later OSes. Oh, wait. I am convinced that you had finished installing a WMI provider *just before* writing that sentence! Because, well, .mof files are incompatible between XP and later OSes. By the way, using the mof compiler at the end is just creat and write, but reaching that end might be a very long and perilous journey. And do not get me started with installing:</p>
<p>&nbsp;COM servers</p>
<p>&nbsp;NT4-style services</p>
<p>&nbsp;WDM drivers</p>
<p>&nbsp;non-WDM drivers</p>
<p>&nbsp;.Net assemblies participating in COM interop</p>
<p>&nbsp;SQL Server Express redist.</p>
<p>&nbsp;Wait wait, have you tried installing a Microsoft Cluster resource? Please explain to me, how can I do it with just creat and write? Let&#8217;s this be your next code-based article, it will be enlightening, how the real men do it!</p>
<p>After I sleep over, I probably will come with more examples. Morale: back in Windows 3.0 days installing could be as simple as copying some files and writing two ini files, but 20 years later things have changed. Windows has rich functionality but this costs in terms of complexity. Getting even a simple application installed correctly is increasingly difficult. Example? Imagine you have a game that consists of one exe and one .dat file with total size, 8 GB. Aside from the Game Explorer registration stuff (yeah, it is not exactly &#8220;just creat and write&#8221;), Windows 7 ARP has the bug that it accepts only sizes below 4 GB (or MS did a poor job of documenting it). So your installation has to distinguish between 7 and older versions of Windows. &nbsp;And so on and so on. Installing consists of more that copying files (at least if you want to be able to deinstall cleanly).</p>
<div class=post>[<i>By &#8220;installing an application&#8217;s files&#8221; I meant &#8220;placing an application&#8217;s files on the hard drive&#8221;. Sorry it wasn&#8217;t clear from context. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-804663">
				<div id="div-comment-804663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804663">
			January 21, 2010 at 2:22 pm</a>		</div>

		<p>@Teo: 99% of applications written for Windows 2000/NT (and earlier) will install and run unmodified on Windows 7. So yours is in that 1% bracket that don&#8217;t, you can&#8217;t extrapolate from one example and say that Microsoft has stopped caring about app compat.</p>
<p>Also, I think a lot of people have missed the point with the Unix thing. In Unix, there&#8217;s *also* nothing stopping an installer from overwriting stuff in /sbin or /lib or whatever. So if MSI is the Windows equivalent of RPM/DEB/etc and WindowsSystem32 is the equivalent of /sbin, then what, exactly, does Unix do differently/better?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804673">
				<div id="div-comment-804673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804673">
			January 21, 2010 at 2:31 pm</a>		</div>

		<p>@Dean Harding, thanks for the heartening words, unfortunately for me, I have to rewrite, retest, redeploy *my* application, not the 99% of the apps written for 2000/nt. My customers prefer me to bring them new features. I prefer fixing my bugs. Instead, I am forced to work around MS stuff. My program might be in the 1% but it invalidates the whole second part of Raymond&#8217;s post &#8211; if we were out of business, who was going to fix this problem? Further more, my customers, being pure innocent souls, blame ME for changes that MS introduced. Cool, ain&#8217;t it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804813">
				<div id="div-comment-804813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804813">
			January 21, 2010 at 10:33 pm</a>		</div>

		<p>@Mc: Either use a VM, Win7&#8217;s XP mode, or maybe even DOSbox will work&#8230; the latter for 64-bit OS.</p>
<p>@hexatron &#8211; the problem is, AMD (who created the x64 mode) decided that no one runs 16-bit mode anymore and dropped 16 bit support while in 64-bit mode. The CPU can only do 32-bit and 64-bit programs when running a 64-bit OS. They decided those who really need it can run a 32-bit OS just fine. (x64 adds a pile of new stuff and is quite a departure from x86). Intel got to the x64 game late.</p>
<p>Your solution then is to dual boot Win7-x64 and Win7-x86 &#8211; you probably can use the same key and everything. x86 for old stuff &#8211; works just fine, anf x64 for whatever needs 64-bit&#8230; and no, running a 32-bit VM probably won&#8217;t work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804823">
				<div id="div-comment-804823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">alex.r.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804823">
			January 21, 2010 at 10:58 pm</a>		</div>

		<p>While your post is insightful, and I clearly understand that decisions are not always purely technical and that they are rarely reversible.</p>
<p>But the person asking for high-level services in the OS aren&#8217;t completely misguided, even if you consider how things were many decades ago. I think the line between what an OS should do and what a program should isn&#8217;t as easy to draw as you make it to be. </p>
<p>It&#8217;s always possible to let developers do something on their own instead of providing functionality. </p>
<p>You want to write that &#8216;file&#8217; to that disk? I give you the disk manufacturer and its model and you can send the device some command by writing to this address. Now go, do it on your own.</p>
<p>Sure, some application could corrupt the whole disk, and that would be bad&#8230; bad enough not to let people do it on their own &#8212; hence the need for an API provided by the OS.</p>
<p>But the decision of what warrant this kind of separation is subjective and some OS do (did would be more accurate&#8230;) a lot more than others&#8230; even list management. &nbsp;</p>
<p>I&#8217;m a nitpicker I guess.</p>
<div class=post>[<i>Since the file system is a shared resource, it lies more on the side of something an OS would get involved in. But a linked list is a private application data structure; there is no reason for an OS to get involved. And sometimes the OS involvement is only in the form of guidance (as installation has historically been &#8211; you can ignore the guidance and write your own custom setup program instead of using MSI, just ask Teo above). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804833">
				<div id="div-comment-804833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804833">
			January 22, 2010 at 1:04 am</a>		</div>

		<p>It&#8217;s fascinating. I think that as long as this blog exists, Raymond repeatedly tried to explain the thoughts that go into decisions affected by backwards compatibility issues. It&#8217;s always the same:</p>
<ul>
<li>An old version of Windows did something that wasn&#8217;t good or didn&#8217;t use a concept that wasn&#8217;t even known back then.</li>
<li>
<p>Enforcing the &quot;correct&quot; way of doing things now would brake old applications, causing grief to a group of people.</p>
</li>
<li>
<p>Not enforcing the &quot;correct&quot; way of doing things now allows for annoyances in new applications, causing grief to another group of people (although someone could belong to both)</p>
</li>
</ul>
<p>Microsoft will more often than not decide to go the way that doesn&#8217;s break backwards compatibility. Sometimes it will not.</p>
<p>-&gt; the comment section is filled with people that don&#8217;t understand the logic behind it and/or think that Microsoft is wrong beyond any shred of a doubt, simply because they belong to the group that is affected negatively by the decision Microsoft made in that instance. Hint: you are not the center of the world!</p>
<p>I am.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804783">
				<div id="div-comment-804783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duke of New York</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804783">
			January 21, 2010 at 5:29 pm</a>		</div>

		<p>*whooosh*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804843">
				<div id="div-comment-804843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">scorpion007</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804843">
			January 22, 2010 at 2:44 am</a>		</div>

		<p>Commenter Pi captures my thoughts completely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804853">
				<div id="div-comment-804853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804853">
			January 22, 2010 at 2:46 am</a>		</div>

		<p>@Mc: often DOS apps only recognise COM ports that use the I/O ranges reserved for legacy COM1-4 i.e. 3F8, 2F8, 3E8 and 2E8, which unfortunately lie outside the range of ports allowed for PCI/USB virtual ports. (I can&#8217;t speak for VM serial port emulation.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804863">
				<div id="div-comment-804863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarkJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804863">
			January 22, 2010 at 4:42 am</a>		</div>

		<p>I really do think it&#8217;s great that Microsoft work so hard on backward compatibility for Windows programs.</p>
<p>Off Topic: Can we have backward compatibility for VB6 source code please? Why is it so hard to migrate it to VB.Net? How come the Visual Studio VB6-&gt;VB.Net upgrade wizard is so weak that third parties can make a good living selling replacements for it? How about buying those companies and make the products free?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804873">
				<div id="div-comment-804873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804873">
			January 22, 2010 at 5:19 am</a>		</div>

		<p>As hinted in other posts, it would help to let programs specify which OS version and thus set of rules they are programmed against. Then you&#8217;d never break existing binaries, but you&#8217;d force vendors who want to benefit from newer OS features to not only cherry-pick those features but fix up their programs so they are current with respect to other aspects of the new OS version (stricter enforcement of API rules, deprecated APIs, etc.). MS is partially going that route with app-specific compatibility code and DLL manifests, but it hasn&#8217;t been made a principle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804883">
				<div id="div-comment-804883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804883">
			January 22, 2010 at 6:53 am</a>		</div>

		<p>Not this crap again.</p>
<p>You can have managed installation system, it doesn&#8217;t imply breaking old apps. You just need to have strong motivators in place for the apps to use the new system (i.e.: no UAC prompt if all there&#8217;s to be done is copying a few files to a new folder under program files and creating a shortcut; then make UAC more annoying and eventually put a warning that says &#8220;unless this application was from 2010 or before you really shouldn&#8217;t allow&#8221;).</p>
<p>However the solution I prefer and the most pragmatic by far is decent &#8220;virtualization&#8221; (I mean filesystem/registry level like it&#8217;s already done to a certain extent). That way the only apps that can&#8217;t be isolated are the ones that break anyway (the ones that use drivers or worse).</p>
<p>My gut feeling tells me Windows will go with the second route, but not after it has lost more marketshare (strong competition is the only way Microsoft ever tries to improve anything). I hope web stuff puts more pressure on it.</p>
<div class=post>[<i>I guess I don&#8217;t understand what you mean by a &#8220;managed installation system&#8221;. To me, that means something like MSI or APT or RPM, where the app doesn&#8217;t actually install itself but rather describes how it wants to be installed and lets an installation engine do the work. How do you reconcile that with old apps who use a custom setup.exe program? If you just run the setup.exe program and let it do whatever it wants, then that&#8217;s not managed! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804953">
				<div id="div-comment-804953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PhilW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804953">
			January 22, 2010 at 10:50 am</a>		</div>

		<p>To Cooney:</p>
<p>&quot;Installers are 2/3 of the post and a serious point of pain.&quot;</p>
<p>And that&#8217;s because nobody (slight exaggeration) follows best practices for setups. It is in reality a specialisation, like writing drivers, designing databases, etc, not a twenty minute rush job to get the app out the door. It doesn&#8217;t help that many companies underpay setup developers and overestimate the ease of building a setup.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804963">
				<div id="div-comment-804963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">clodney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-804963">
			January 22, 2010 at 10:52 am</a>		</div>

		<p>MC: &nbsp;Out of curiosity, what is the old OMR device you have? &nbsp;OMR machines tend to change very slowly, and the manufacturers love to pick up each other&#8217;s customers, so it is quite possible that there is replacement software/hardware for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805073">
				<div id="div-comment-805073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805073">
			January 22, 2010 at 2:59 pm</a>		</div>

		<p>@Cheong</p>
<p>My two cents: I think the version in the name is nice, if it stops at level 2 or max 3, otherwise you end up with stuff like WinSxS, with tens of thousands of files, and the same file with tens of versions.</p>
<p>Real example from my machine: 6.0.6000.16681, 6.0.6000.16717, 6.0.6000.16757, 6.0.6000.16764, 6.0.6000.16809, 6.0.6000.16830, 6.0.6000.16851, 6.0.6000.16890, 6.0.6000.20823, 6.0.6000.20879, 6.0.6000.20927, 6.0.6000.20937, 6.0.6000.20996, 6.0.6000.21023, 6.0.6000.21046, 6.0.6000.21089, 6.0.6001.18000, 8.0.6001.18702</p>
<p>Ok, backward compatibility is hard, but allowing differentiation all the way to build number encourages really sloppy programming discipline.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805103">
				<div id="div-comment-805103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hexatron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805103">
			January 22, 2010 at 4:22 pm</a>		</div>

		<p>I popped back here just now, and will put in another 2&#215;2&#162; in:</p>
<p>Worf says &quot;Your solution then is to dual boot Win7-x64 and Win7-x86&quot; (to run 16-bit programs)</p>
<p>This was in reference to a neighbor, not me. He&#8217;s doing well to successfully use a single boot</p>
<p>I wouldn&#8217;t dream of suggesting to him dual-boot or virtual PC or any other normal-person-untenable solution. It&#8217;s like the joke about the two old-west miners. One of them is bit on the privates by a rattlesnake. The other guy has a first-aid book. He looks up what to do for a rattlesnake bite. He tells his pal, &quot;You&#8217;re gonna die.&quot;</p>
<p>As for burgeoning winsxs: I looked at my work PC and was mildly aghast to discover several gigs of repetitive glarg there. But when I looked at real user PCs, winsxs was less then 100MB. And it works, it really works, and is painless if you don&#8217;t look under the hood. This is not true of the linux/unix .so approach. So it think it is a big win for users and for Microsoft.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805013">
				<div id="div-comment-805013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805013">
			January 22, 2010 at 1:08 pm</a>		</div>

		<p>Sorry Raymond, I used to hate MSI. About half an year ago I realised that it is exactly as much unable to solve my problems, as any other installation program I&#8217;ve tried, so now I am indifferent to it. But, what common has MSI with Windows 7 breaking a working application which strictly adheres to the rules of the previous version of Windows?</p>
<p>I find even more problems with your post. If Windows is not supposed to come with programming frameworks, why does it comes with them?</p>
<p>* MFC</p>
<p>* .Net (Bonus point &#8211; it even includes COMPILERS to 3 languages &#8211; C#, VB.Net, JScript.Net)</p>
<p>* Jet Red</p>
<p>* Jet Blue</p>
<p>* XML pull parser &#8211; xmlite.dll</p>
<p>* XML DOM parser &#8211; msxml6.dll</p>
<p>* XML SAX parser &#8211; msxml6.dll</p>
<p>* Complete scripting environment with runtime and a VM &#8211; the activescript engine with jscript</p>
<p>* SQL databases &#8211; two of them &#8211; Access in the form of MDAC and Windows Internal database, which is a repackaged SQL Server 2005 express</p>
<p>* and so on and so forth.</p>
<p>Everything of these can be solved outside Windows, some of them are solved better. Yet Windows includes them.</p>
<p>If Windows isn&#8217;t supposed to implement linked lists, why did the NT team choose to implement them and export them for use of kernel-mode code? I believe (but not sure) that they did this back in the early 90&#8217;s for the first version of NT, so it&#8217;s hardly something new and flashy. Oh wait, while I was checking the MSDN for the single-list functions, I found this treasure: RtlLargeIntegerShiftLeft! Yes, Windows ships with a function that shifts left integers! Raymond, you really must accept your defeat :-D</p>
<div class=post>[<i>Windows comes with that stuff but that stuff is not part of Windows. They are frameworks that Windows itself uses. The kernel folks exported those functions out of the goodness of their heart, much like the shell team exported GetEffectiveClientRect. Just because you get a gift once in a while doesn&#8217;t mean gift-giving has become a policy that you can count on. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805133">
				<div id="div-comment-805133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805133">
			January 23, 2010 at 1:33 am</a>		</div>

		<p>@Arno:</p>
<p>&quot;it would help to let programs specify which OS version and thus set of rules they are programmed against&quot;</p>
<p>That exists now as part of application manifests. There&#8217;s a general OS version and you can also turn on/off certain features/compatibility options individually (e.g. &quot;high DPI&quot; support) for your exe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805143">
				<div id="div-comment-805143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805143">
			January 23, 2010 at 3:52 am</a>		</div>

		<p>[Now I will have more ammunition when people advocate the three-step plan. &quot;We tried it and Teo hates it.&quot; More proof that no matter what you do, somebody will call you an idiot. -Raymond]</p>
<p>You are not idiots, that&#8217;s for sure. But Microsoft very often mis-communicate important changes, the &quot;I am compatible with windows 7&quot; manifest just being a random manifestation of it. When it is almost impossible to find this information on MSDN and I know it just because I am following almost two dozens of MS blogs, there is a problem. That problem is for me as a Windows programmer, because it prevents me from creating well-behaved programs, for MS who must support them, and for users who are infuriated. It is created by Microsoft, so MS is best-suited to fix it. Another good example of the same problem was when almost 6 months after the release of the Vista WDK, Google knew about KeExpandKernelStackAndCallout but MSDN was adamant that such things did not exist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805153">
				<div id="div-comment-805153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miles Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805153">
			January 23, 2010 at 8:36 am</a>		</div>

		<p>&quot;no matter what you do, someone will call you an idiot&quot;</p>
<p>I think I&#8217;m going to call this Raymond&#8217;s Law from now on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805183">
				<div id="div-comment-805183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">violet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805183">
			January 23, 2010 at 10:27 am</a>		</div>

		<p>&#8220;Windows doesn&#8217;t come with a finite element analysis library either.&#8221;</p>
<p>No, but it does come with DirectCompute, which would have been an unthinkably specialized niche API ten years ago.</p>
<p>The broader point being that OS requirements, APIs, and integration points change. I mean, in principle, I can rewrite Explorer, right? And in the days of 3.1, that might even have been a reasonable idea (speaking of File Manager, of course)! But outside a very small niche, it&#8217;s a stupid idea now, because even though Explorer is Just Another Program &#8482;, it is for all intents and purposes very much part of Windows. As the OS changes, the line between what programmers can and can&#8217;t reasonably do shifts.</p>
<p>&#8220;Once again, people are focusing on the example instead of the principle. Pretend I never talked about installers, then. (Oh, unix didn&#8217;t have package management for the first few decades of its existence either.)&#8221;</p>
<p>It didn&#8217;t. And that presumably sucked. Which is why the majority of Unixes do now.</p>
<p>It&#8217;s not reasonable to ask why Windows didn&#8217;t *always* have a package manager. A better question might be: given the popularity of the iPhone&#8217;s App store, and it must be said, the various Linux packagers, why doesn&#8217;t it *now*? (There may well be a variety of good reasons. But it&#8217;s not a terrible question.)</p>
<div class=post>[<i>MSI has been around for a long time now, but everybody seems to hate it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805203">
				<div id="div-comment-805203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805203">
			January 24, 2010 at 6:20 am</a>		</div>

		<p>violet: DirectCompute is an OS-level API because it manages a shared resource (the GPU). It is needed to allow multiple applications to access the GPU for things other than graphics.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805223">
				<div id="div-comment-805223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The cat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805223">
			January 24, 2010 at 9:24 am</a>		</div>

		<p>Can I refuse the gift of 300 Mb (approx)(.NetFW) bundled with the OS?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805233">
				<div id="div-comment-805233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">violet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805233">
			January 24, 2010 at 10:32 am</a>		</div>

		<p>&quot;[MSI has been around for a long time now, but everybody seems to hate it. -Raymond]&quot;</p>
<p>Like I said, there might be good reasons. &quot;The Windows software ecosystem just isn&#8217;t geared towards that,&quot; would be one. That said, MSIs aren&#8217;t really the same thing. The value of apt isn&#8217;t that I can double-click on a .deb file and have it automagically install. Nor is it that apt guarantees that random .deb packages will cleanly install and uninstall&#8211;it doesn&#8217;t. The value of apt is that I can browse a functionally complete listing of all software I might want to install on my system.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805503">
				<div id="div-comment-805503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805503">
			January 25, 2010 at 2:48 pm</a>		</div>

		<p>If the first paragraph was correct, please explain the existence of DeleteFile, which is a one-line function or CopyFile/CopyFileEx, which you claim should not exist? After all, DeleteFile is CloseFile(CreateFile(&#8230; FILE_FLAG_DELETE_ON_CLOSE)).</p>
<p>While CopyFile is slightly longer, it&#8217;s still less than 5 pages of code, and that&#8217;s just because of the awful hellishly horrible Win32 API (compared to the undocumented Zw* one).</p>
<p>Bonus question. If &#8220;Windows worried about providing functionality for thing that programs couldn&#8217;t do&#8221; is right, please explain why does Windows NT [3.1 &#8211; 6.0) lack API to enumerate named file streams which is required to implement CopyFile? Yes, BackupRead can be coerced to get the info, but it&#8217;s a misusing of a side effect, not a proper API. Same applies to APIs for extended file attributes.</p>
<div class=post>[<i>I was personally surprised to find CopyFile in Win32. (And DeleteFile is probably there because it corresponded to the DOS &#8220;delete&#8221; function and people would be weirded out that there was no DeleteFile function.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805563">
				<div id="div-comment-805563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805563">
			January 26, 2010 at 12:08 am</a>		</div>

		<p>Ha ha, yeah nice one for DeleteFile. I believe I know the answer why CopyFile exists &#8211; it has to manage things like named streams, extended attributes, compressed and encrypted files. If it wants to be efficient, it has to account for the peculiarities of the source and target file systems, volume managers, the memory manager, the cache manager, and very often &#8211; the network redirector. And it had to work reliably and fast with unknown redirectors, like the ones coming with Hyper-V/VMWare/etc, the WebDAV one, and what not. Basically, what looks like a single while loop, suddenly explodes to unimaginable complexity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805843">
				<div id="div-comment-805843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dmoisan.spaces.live.com' rel='external nofollow' class='url'>David Moisan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100121-00/?p=15203#comment-805843">
			January 27, 2010 at 4:38 am</a>		</div>

		<p>DOSBOX works fine for games and is good enough that one company uses it to republish classic DOS games so they work on contemporary Windows, including my 64-bit system.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

