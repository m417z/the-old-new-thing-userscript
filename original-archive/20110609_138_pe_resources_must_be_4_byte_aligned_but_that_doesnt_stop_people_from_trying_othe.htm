<html>
<head>
<title>PE resources must be 4-byte aligned, but that doesn't stop people from trying other alignments</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>PE resources must be 4-byte aligned, but that doesn&#8217;t stop people from trying other alignments</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 9, 2011 / year-entry #139</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>38</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Resources in PE-format files must be stored at offsets which are a multiple of four. This requirement is necessary for platforms which are sensitive to data alignment. That doesn't stop people from breaking the rules anyway. After all, it sort of works anyway, as long as you're careful. I mean, sure maybe if somebody running...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Resources in PE-format files must be stored at offsets which are a multiple of four. This requirement is necessary for platforms which are sensitive to data alignment.</p>
<p> That doesn't stop people from breaking the rules anyway. After all, it sort of works anyway, as long as you're careful. I mean, sure maybe if somebody running a non-x86 version of Windows tries to read your resources, they will crash, but who uses non-x86 versions of Windows, right? </p>
<p> In Windows Vista&nbsp;SP1, additional hardening was added to the resource parsing code to address various security issues, but the one that's important today is that tests were made to verify that the data were properly aligned before accessing it. This prevents a file with a misaligned version resource from crashing any program that tried to read its resources. In particular, it is common for programs to read the version resources of arbitrary files&mdash;for example, Explorer does it when you view the file's properties or if you turn on the Description column in Details view&mdash;so enforcing alignment on resources closes that avenue of remote denial of service. </p>
<p> And then the bug reports came in. "Program XYZ fails to install" because the program tries to read its own version resources and cannot, because the tool they used to build the program cheated on the alignment requirement and stored the resources at offsets that aren't multiples of&nbsp;4. "I mean, come on, that wastes like three bytes per resource. Everything still worked when we removed the alignment padding, so we went ahead and shipped it that way." </p>
<p> Another example of a program that stopped working when the alignment rules were enforced was a computer game expansion pack which could not install because the code that tried to verify that you had the base game found itself unable to read its version resources. </p>
<p> Multiple programs refused to run, preferring to display the error message "AppName is not a valid Win32 application." Presumably, as part of initialization, they tried to read their own version resources, which failed with <code>ERROR_BAD_EXE_FORMAT</code>, which they then showed to the user. </p>
<p> The fix was to relax the enforcement of the rules back to the previous level, and impose the stricter requirements only on architectures which raise exceptions on misaligned data. It does mean that you can have a program whose resources can be read on one machine but not on the other, but that was deemed a lesser evil than breaking all the programs which relied on being able to misalign their data without consequence. </p>
<p> [Raymond is currently away; this message was pre-recorded.] </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (38)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-918083">
				<div id="div-comment-918083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918083">
			June 9, 2011 at 7:10 am</a>		</div>

		<p>After all that done, Windows 2008 R2 stopped supporting that alignment-enforcing architecture at all. Good riddance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918093">
				<div id="div-comment-918093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918093">
			June 9, 2011 at 7:37 am</a>		</div>

		<p>Such a pain trying to thread the needle of backwards-compatibility &amp; reasonable enforcement of the rules.</p>
<p>Too many developers still fail to grasp the importance of following the rules, even when you don&#39;t grok their meaning. &nbsp;Just because you&#39;re too dim, doesn&#39;t make it okay to break the system and impose your stupidity on the OS and everyone else down the road&#8230; which is exactly what happens (or MS has to break compatibility, and then they look like the bad guys).</p>
<p>Granted, the reasons behind the rules should be made as available as possible, so that folks can understand the reasons why (or why not).</p>
<p>But failing to generate consistent output means that integrity checks, security checks, and interoperability are all compromised going forward. &nbsp;It also means your own software is a fragile POS.</p>
<p>Lame.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918103">
				<div id="div-comment-918103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leo Davidson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918103">
			June 9, 2011 at 8:05 am</a>		</div>

		<p>I bet a lot of things like this are as much people not knowing/remembering the (exact) rules as much as it is people wilfully breaking them.</p>
<p>Alignment problems were a pain back in my 68000 assembler days. I assumed way back then, what with newer chips not having a problem with alignment (albeit at a performance cost) and with OS being able to trap the exception and emulate the operations in other cases (at a bigger performance cost) that the problem would be a thing of the past by now.</p>
<p>Maybe, with those hardware+OS combinations where it&#39;s still a problem, we need to fire those platforms into the sun? :)</p>
<p>Unless we&#39;re talking sensitivity to alignment w.r.t. atomic reads/writes, which is another story.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918113">
				<div id="div-comment-918113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918113">
			June 9, 2011 at 8:12 am</a>		</div>

		<p>With the introduction of SSE on x86, alignment issues grew to became a matter of practical, rather than just theoretical, concern on the platform.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918123">
				<div id="div-comment-918123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918123">
			June 9, 2011 at 8:12 am</a>		</div>

		<p>@Leo Davidson: in this case (indeed, in most cases) you don&#39;t have to remember these kind of low-level rules because the tools take care of them for you.</p>
<p>Which makes me wonder how this happens. &nbsp;Writing your own resource compiler must be very unusual. &nbsp;Is there some third-party compiler or post-build resource patcher that&#39;s getting this wrong?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-918143">
				<div id="div-comment-918143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918143">
			June 9, 2011 at 9:16 am</a>		</div>

		<p>@Alex Grigoriev: ARM also requires alignment, so it&#39;ll be back in Windows 8.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918163">
				<div id="div-comment-918163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918163">
			June 9, 2011 at 9:34 am</a>		</div>

		<p>@laonianren &#8211; I was wondering the same thing. If I use the resource compiler or the UpdateResource family of functions I expect the alignment to be taken care of for me. How did the resources got misaligned in the first place?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918173">
				<div id="div-comment-918173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918173">
			June 9, 2011 at 9:49 am</a>		</div>

		<p>Ivo: &nbsp;Raymond answers that in his post.</p>
<p>For whatever reason you don&#39;t use the resource compiler. &nbsp;One example he gives is a third party installer creator. &nbsp;A typical installer creator will take the original files, compress them and emit an executable that can be run on the target machine to install some software. &nbsp;</p>
<p>Such software would almost certainly store some resources in the exe that it creates (at a minimum an icon and UI resources for its install wizard. &nbsp;Likely the actual files themselves as well). &nbsp;</p>
<p>If I am an installer creator vendor, I can&#39;t exactly distribute Microsoft&#39;s resource compiler so I might choose to write my own. &nbsp;In that case it might be easy to overlook (or ignore) the alignment restrictions, when everything seems to work fine. &nbsp;In fact, I might be highly tempted to ignore them if I am trying to make the claim of &quot;Creates smaller install files than the leading competitor&quot; (Ok, nowadays that seems silly, but in 1993 it might not have &#8212; especially since I used a lot of software back then that had hundreds of tiny files &#8212; those gaps could have been a couple of percent of the total space)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918183">
				<div id="div-comment-918183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918183">
			June 9, 2011 at 10:22 am</a>		</div>

		<p>Yes, I was thinking about an installer as well. But an installer creator should probably use the resource API (like BeginUpdateResource), and not do PE surgery.</p>
<p>As for purposely misaligning data to save memory &#8211; you are saving 2 bytes per file on average. Hundreds of files translates into two hundreds of bytes. I don&#39;t think that&#39;s worth boasting about, even in the 93 era. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918193">
				<div id="div-comment-918193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918193">
			June 9, 2011 at 10:23 am</a>		</div>

		<p>@Mike D:</p>
<p>Fortunately, there are no legacy applications for ARM.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918203">
				<div id="div-comment-918203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918203">
			June 9, 2011 at 11:37 am</a>		</div>

		<p>The simple law is &quot;An unenforced rule is not a rule.&quot;</p>
<p>Works in software, works in real life, works when raising children.</p>
<p>Anecdote: the Amiga had such a problem: the memory allocation had a flag telling if the memory was shared or not with other processes. The original Amiga didn&#39;t have a CPU with memory protection, so nobody cared or got it right. So the Amiga was doomed to never have memory protection, at least not without ditching almost entirely its existing software base.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918213">
				<div id="div-comment-918213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918213">
			June 9, 2011 at 2:13 pm</a>		</div>

		<p>Pierre, that sounds like something that could be easily dealt with using a relatively simple shim.</p>
<p>Also, with regards to Windows enforcing alignment issues on x86, that&#39;s pointless. A PE tends to contain code for one platform only; nothing is gained by enforcing alignment for x86 PE files in the vast majority of cases.</p>
<p>Given this, and given that enforcing pointless rules is also a bad thing, I&#39;d just leave it.</p>
<p>And maybe hardware designers should take note of this story, and many similar ones. Information wants to be byte-addressable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918233">
				<div id="div-comment-918233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918233">
			June 9, 2011 at 4:12 pm</a>		</div>

		<p>@Anonymous Coward: &quot;Information wants to be byte-addressable.&quot;</p>
<p>Information is inherently analog. Discuss.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918153">
				<div id="div-comment-918153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918153">
			June 9, 2011 at 9:32 am</a>		</div>

		<p>I think this turns Postel&#39;s Law(*) on its head. &nbsp;I give you &quot;dave&#39;s dictate&quot;: &nbsp;be absolutely stingy on what you accept, because some fool will always do the wrong thing and you&#39;ll be stuck with supporting it forever after.</p>
<p>(*) <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Robustness_principle" rel="nofollow">en.wikipedia.org/&#8230;/Robustness_principle</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918243">
				<div id="div-comment-918243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Matthew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918243">
			June 9, 2011 at 7:47 pm</a>		</div>

		<p>&quot;Information dislikes being anthropomorphized.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918223">
				<div id="div-comment-918223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918223">
			June 9, 2011 at 2:26 pm</a>		</div>

		<p>@Anonymous Coward: &quot;Information wants to be byte-addressable.&quot;</p>
<p>Hmm, I&#39;m not sure I buy that. On platforms that allow byte-addressable memory, there can be issues because of it. Just a couple days I was forwarded an article about a company who had a race condition brought about because they used a field in a structure as a spinlock, packed the structure, and then had non-atomic accesses to that spinlock because it crossed a cache line. Less dramatic, of course, are the performance costs.</p>
<p>Though I haven&#39;t looked into it enough to have any remotely-strong opinion on the matter, I tend to think that the platforms that do require a &quot;reasonable&quot; alignment are closer to being right nowadays. (I consider 4 bytes to be &quot;reasonable&quot;, and *might* consider 8 bytes to be reasonable on a 64-bit platform.)</p>
<p>BTW, why stop at bytes? Why shouldn&#39;t information be bit-addressable?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918263">
				<div id="div-comment-918263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drizzt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918263">
			June 9, 2011 at 11:14 pm</a>		</div>

		<p>I&#39;m loosing something.</p>
<p>I never had to work with PE format, but should I have to do it, I&#39;d pick its specs and follow them. What&#39;s difficult about that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918273">
				<div id="div-comment-918273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918273">
			June 10, 2011 at 1:34 am</a>		</div>

		<p>How do you create resources that don&#39;t follow the rules?</p>
<p>I would assume all resource editors &#8211; Visual Studio and the like &#8211; follows the rules, so does this mainly concern resources created &quot;manually&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918283">
				<div id="div-comment-918283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Burak KALAYCI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918283">
			June 10, 2011 at 2:51 am</a>		</div>

		<blockquote><p>
  Resources in PE-format files must be stored at offsets which are a multiple of four.
</p></blockquote>
<p>I find this quite unacceptable in this day and century. Certainly a leaked abstraction, if there was an abstraction in the first place&#8230; What kind of a primitive format will have such requirements? What&#39;s next, compilers imposing code formatting rules? (Please don&#39;t make me remember).</p>
<p>Don&#39;t harden the rules, instead relax the specs. Vista did it wrong again and why I&#39;m not surprised at all that I&#39;m not surprised at all should be pretty obvious to anyone.</p>
<blockquote><p>
  Why shouldn&#39;t information be bit-addressable?
</p></blockquote>
<p>Exactly. It should be. Period.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918293">
				<div id="div-comment-918293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918293">
			June 10, 2011 at 3:07 am</a>		</div>

		<p>Isn&#39;t the multiple of four requirement included in order to support direct memory-mapping of the resource data?</p>
<p>Which would seem very desirable in many cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dancol even thread-even depth-1" id="comment-918253">
				<div id="div-comment-918253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Daniel++Colascione' rel='external nofollow' class='url'>Daniel Colascione</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918253">
			June 9, 2011 at 9:22 pm</a>		</div>

		<p>Speaking of enforcement: the x86 has an alignment check mode (turned on via the &quot;AC bit&quot;, oddly enough) that, when enabled, will cause the processor to treat misaligned accesses as errors. Unfortunately, it hasn&#39;t been very useful in practice because quite a bit of code actually uses unaligned accesses, causing *your* bugs to be lost in the noise &#8212; but I last tried a long time ago. I wonder whether alignment checking would be more useful today.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918313">
				<div id="div-comment-918313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918313">
			June 10, 2011 at 4:52 am</a>		</div>

		<p>@Anonymous Coward: &quot;A PE tends to contain code for one platform only; nothing is gained by enforcing alignment for x86 PE files [&#8230;]&quot;</p>
<p>&quot;On my new &#39;Windows 8&#39; running on ARM, Explorer crashes reproducibly when navigating to a folder containing backups of my old x86 installation. Oddly enough this only happens when I switch to details view with the Description column enabled.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918323">
				<div id="div-comment-918323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918323">
			June 10, 2011 at 5:10 am</a>		</div>

		<p>Steveg: This has never been proven, and our developing knowledge regarding quantum mechanics and QFT suggests otherwise.</p>
<p>Tim: You&#39;re assuming that the coders of the resource extractor functions are idiots. They&#39;ll put a try clause around the resource reader on 4 B aligned platforms, and the worst that&#39;ll happen is that you don&#39;t see versions for a small number of PE files that won&#39;t even work on your platform anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918333">
				<div id="div-comment-918333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918333">
			June 10, 2011 at 6:50 am</a>		</div>

		<p>Why not enforce alignment on binaries compiled after a set date? Like 20121221?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918343">
				<div id="div-comment-918343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918343">
			June 10, 2011 at 6:57 am</a>		</div>

		<p>@Anonymous Coward: I understand that there are ways to solve the problem that never existed. I am however having difficulty following your &quot;won&#39;t even work on your platform&quot; way of thinking. You&#39;re making it sound like a PE-image will only ever be accessed for the sole reason of executing its code. As was described in the article this is not the case. Care for another demonstration? &quot;Dear support team, ever since migrating our centralized update server to &#39;Windows 8&#39; on ARM it stops working unexpectedly. It appears to happen whenever an x86 client queries for updated executables. The event log has lots of ERROR_BAD_EXE_FORMAT entries. All executable files however have been verified to run on the target platform without any problems. Is this is a bug in &#39;Windows 8&#39;?&quot;</p>
<p>Burak KALAYCI: &quot;[the alignment rules are] certainly a leaked abstraction&quot;:</p>
<p>The rules are an implementation detail that never surfaced. Both the resource compiler as well as the resource access API do not expose this detail while still producing conforming results.</p>
<p>Burak KALAYCI: &quot;&gt; Why shouldn&#39;t information be bit-addressable?</p>
<p>Exactly. It should be. Period.&quot;</p>
<p>Wouldn&#39;t you complain if 32bit Windows&#39; address space was limited to 16MB per process?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918393">
				<div id="div-comment-918393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918393">
			June 10, 2011 at 8:19 am</a>		</div>

		<p>@640k: That won&#39;t prevent devs from gaming the system, as anyone can roll back the date prior to compilation. Also, what happens when a newer executable tries to load in resources from an older DLL? It&#39;s probably better to either enforce this stuff globally or not at all (where allowed.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918413">
				<div id="div-comment-918413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Burak KALAYCI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918413">
			June 10, 2011 at 8:46 am</a>		</div>

		<p>Tim: The rules are an implementation detail that never surfaced.</p>
<p>Hardware implementation details leaked to the specs, as rules that don&#39;t make sense on their own&#8230; How about this one: All resources must have byte size that has 3 as remainder when divided by 7?</p>
<p>Tim: Wouldn&#39;t you complain if 32bit Windows&#39; address space was limited to 16MB per process?</p>
<p>Probably yes. But what does it have to do with bit-addressability? What I state is an (ideal) idea, not related to any hardware or OS. A good OS need not magnify shortcomings of hardware, on the contrary, it must shield the users.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-918423">
				<div id="div-comment-918423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918423">
			June 10, 2011 at 8:50 am</a>		</div>

		<p>&quot;the release after Windows 2008 R2 will stop supporting that alignment-enforcing architecture at all.&quot;</p>
<p>FTFY.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-918443">
				<div id="div-comment-918443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918443">
			June 10, 2011 at 8:57 am</a>		</div>

		<p>Daniel Colascione: And unfortunately the Windows kernel itself don&#39;t turn the CR0.AM bit on that is required for EFLAGS.AC to work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918453">
				<div id="div-comment-918453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918453">
			June 10, 2011 at 9:13 am</a>		</div>

		<p>@Burak: 16mb is as useless as 4gb. 64-bit bit addressing is the way to go.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918533">
				<div id="div-comment-918533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918533">
			June 10, 2011 at 12:16 pm</a>		</div>

		<p>Clearly we need a new acronym for PE files, since &quot;portable, executable file&quot; just isn&#39;t accurate.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918483">
				<div id="div-comment-918483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918483">
			June 10, 2011 at 9:46 am</a>		</div>

		<p>@Burak: &quot;What&#39;s next, compilers imposing code formatting rules? (Please don&#39;t make me remember).&quot;</p>
<p>Ever used Python? Or to a lesser extent, Haskell?</p>
<p>Here&#39;s my take: from a hardware side, alignment restrictions make sense. Allowing misaligned accesses means you&#39;ve got more hardware to deal with it, and doing it *properly* (i.e. not a leaky abstraction, which it still is; see the performance degradation and atomicity issues with misaligned accesses) would take even more. Spend those transistors on something that actually matters and will help the end user, like a larger cache or something instead.</p>
<p>From the PE side, it probably makes less sense. It&#39;s not like PE files require a file-system block alignment so that the system can set up a mapping from a memory page to a block (or more; not sure how big blocks are) of the file. I&#39;m not sure what the 4-byte alignment restriction gains in that case; I don&#39;t know what&#39;s going on behind the scenes well enough to know for sure. I guess when copying the file contents from one location to another in memory, it allows the system to assume that the source address will be aligned. That doesn&#39;t sound quite convincing enough to me if that&#39;s it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918603">
				<div id="div-comment-918603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ficedula</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918603">
			June 10, 2011 at 2:40 pm</a>		</div>

		<p>@Evan: The topic is specifically talking about *resources* in PE files needing alignment. So generally, we&#39;re dealing with a section of a PE file that&#39;s been copied (or, more likely, mapped) into memory that contains a number of different resource items; e.g. bitmaps, icons, menus, &#8230;</p>
<p>If you can mandate that each resource is aligned on (say) 32-bit boundaries, you can access that resource data (which probably has its own internal structure; a bitmap header at the start of a bitmap resource&#8230;) through a simple pointer and assume that all the structures within the resource in question are correctly aligned (your 32-bit field in the bitmap header is aligned to a 32-bit boundary). So you can access the data through a pointer *without* copying it around: that&#39;s the point.</p>
<p>If the resource could be arbitrarily aligned, then to access the data, you either have to copy it to an aligned destination (inefficient), or access every single field in the resource one-byte-at-a-time (unaligned data, so pointers to anything bigger than a byte won&#39;t necessarily work). That&#39;s quite a pain.</p>
<p>On x86, of course, your pointers *will* still work on unaligned data &#8211; but they&#39;ll be slower, so there&#39;s a benefit to mandating alignment even there (although the consequence of failing to do so is a speed penalty rather than a crash). All things considered, the PE spec requiring alignment on resources makes a lot of sense: even on the CPUs of the time, it made things faster, and as an added benefit paved the way for running on architectures that weren&#39;t so friendly to unaligned pointers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918653">
				<div id="div-comment-918653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Burak KALAYCI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918653">
			June 11, 2011 at 2:32 am</a>		</div>

		<p>@ficedula: How can you assume a certain hardware architecture and then say PE spec makes sense because of that unmentioned assumption?</p>
<p>If there will be a performance hit, you make it a recommendation, not a rule. If you make it a rule, you enforce it. If you didn&#39;t need to enforce it, it means the rule was not necessary in the first place. If you program using a high level language like C, not to mention any toy scripting languages that use a GC, mentioning a performance hit does not make sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918663">
				<div id="div-comment-918663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918663">
			June 11, 2011 at 3:38 am</a>		</div>

		<p>@Ivo: Sure, everyone has access to BeginUpdateResource now, but older installer generators that needed to run on platforms that didn&#39;t provide it would have had to have a custom resource compiler, and therefore older installers could have had unaligned resources.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918683">
				<div id="div-comment-918683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ficedula</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918683">
			June 11, 2011 at 12:23 pm</a>		</div>

		<p>@Burak: It makes sense because virtually *all* architectures either insist on alignment or impose a speed penalty on unaligned access. So pretty much any &quot;data must be aligned to X byte boundary&quot; requirements in pretty much any structure or format has at the very least a *plausible* explanation.</p>
<p>Also, bearing in mind that some Windows formats date back to the 386 days or earlier, you have the problem that enforcing every single rule (including the ones that are there for performance reasons) under every situation takes memory and time which kind of defeats the point of having them. Sure, the alignment one would be pretty easy to check, but if Windows had verified that from the beginning, Raymond would be posting about how some common non-MS resource compiler instead failed to enforce the other future-proofing rules (some of which would be quite expensive to check at runtime, like anything that involves actually examining the resource data: paging in a bunch of resources that might never actually be required by the program can be horrifically slow).</p>
<p>Net result: Enforcing all the rules is often not possible, assuming sane objectives. The alignment one *could* have been enforced, but the general rule for early versions of Windows was &quot;assume the programmer knows what they&#39;re doing, we can&#39;t afford to waste time and memory checking/cleaning up after them&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918693">
				<div id="div-comment-918693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Reid</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918693">
			June 12, 2011 at 3:09 am</a>		</div>

		<p>@ficedula: You are right. But at the same time, what Pierre B. says, also applies:</p>
<blockquote><p>
  &gt;
</p></blockquote>
<p>The simple law is &quot;An unenforced rule is not a rule.&quot;</p>
<p>Works in software, works in real life, works when raising children.</p>
<p>&lt;&lt;</p>
<p>As long as we talk about humans who write software, this is almost generally true.</p>
<p>The final conclusion depends on the very details of the subject at hand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918773">
				<div id="div-comment-918773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110609-00/?p=10463#comment-918773">
			June 13, 2011 at 7:41 am</a>		</div>

		<p>There are an awful lot of comments that boil down to:</p>
<p>But I don&#39;t understand why hardware isn&#39;t an idealized perfection without any trade-off compromises between infinite ease of use and infinite speed?</p>
<p>And then they go on to whine that this is intolerable, and their ignorance proves that the hardware guys have it all wrong, and that they shouldn&#39;t have to learn anything or think more deeply than their idealized projection of what should be.</p>
<p>And I assume your code is this perfect, has never made trade-offs between any opposed and intrinsically exclusive possibilities in the real (as in reality) world? </p>
<p>Go get and education. &nbsp;Learn why alignment is an issue at the hardware level. &nbsp;Become a more worthy programmer who understands his tools more deeply, instead of whining that they&#39;re imperfect*.</p>
<p>*BTW, news flash: the world is imperfect.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

