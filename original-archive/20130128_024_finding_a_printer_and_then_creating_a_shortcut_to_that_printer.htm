<html>
<head>
<title>Finding a printer, and then creating a shortcut to that printer</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Finding a printer, and then creating a shortcut to that printer</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 28, 2013 / year-entry #25</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130128-00/?p=5433</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's "Little Program" does two things: It looks for a printer in the Printers folder, and then once it finds it, it creates a shortcut to that printer. As is common with "Little Programs", I don't bother with error checking. I'll leave you to do that. Second part first, since it is handy on its...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's "Little Program"
does two things:
It looks for a printer in the Printers folder,
and then once it finds it, it creates a shortcut to that printer.
</p>
<p>
As is common with "Little Programs",
I don't bother with error checking.
I'll leave you to do that.
</p>
<p>
Second part first, since it is handy on its own:
Creating a shortcut to an arbitrary item in the shell namespace,
provided either in the form of an ID list or a shell item.
(The ID list is the thing that identifies an item in the shell namespace.)
</p>
<pre>
void CreateShortcutToIDList(PCWSTR pszName, PCUIDLIST_ABSOLUTE pidl)
{
 CComPtr&lt;IShellLink&gt; spsl;
 spsl.CoCreateInstance(CLSID_ShellLink);
 spsl-&gt;SetIDList(pidl);
 CComQIPtr&lt;IPersistFile&gt;(spsl)-&gt;Save(pszName, TRUE);
}

void CreateShortcutToItem(PCWSTR pszName, IShellItem *pitem)
{
 CComHeapPtr&lt;ITEMIDLIST_ABSOLUTE&gt; spidl;
 CComQIPtr&lt;IPersistIDList&gt;(pitem)-&gt;GetIDList(&amp;spidl);
 CreateShortcutToIDList(pszName, spidl);
}
</pre>
<p>
Neither of these is particular complicated.
To create a shortcut given an ID list:
</p>
<ul>
<li>Create a brand new <code>Shell&shy;Link</code> object.
<li>Tell that shell link object to point to our desired ID list.
<li>Save the shell link.
</ul>
<p>
To create a shortcut given a shell item:
</p>
<ul>
<li>Ask the <code>IShell&shy;Item</code> for its ID list.
<li>Create a shortcut to that ID list.
</ul>
<p>
Okay, now the first half:
Finding the printer.
That is a matter of binding to the Printers folder
and enumerating its contents.
When we find the one whose name matches the target printer,
we declare victory.
</p>
<pre>
int __cdecl wmain(int argc, wchar_t **argv)
{
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/05/20/135841.aspx">CCoInitialize</a> init;
 CComPtr&lt;IShellItem&gt; spPrinters;
 SHGetKnownFolderItem(FOLDERID_PrintersFolder, KF_FLAG_DEFAULT,
                      nullptr, IID_PPV_ARGS(&amp;spPrinters));
 CComPtr&lt;IEnumShellItems&gt; spEnum;
 spPrinters-&gt;BindToHandler(nullptr, BHID_EnumItems,
                              IID_PPV_ARGS(&amp;spEnum));
 for (CComPtr&lt;IShellItem&gt; spPrinter;
      spEnum-&gt;Next(1, &amp;spPrinter, nullptr) == S_OK;
      spPrinter.Release()) {
  CComHeapPtr&lt;wchar_t&gt; spszName;
  spPrinter-&gt;GetDisplayName(SIGDN_NORMALDISPLAY, &amp;spszName);
  wprintf(L"Found printer \"%ls\"\n", spszName);
  if (lstrcmpiW(spszName, argv[1]) == 0) {
   wprintf(L"Creating shortcut as \"%ls\"\n", argv[2]);
   CreateShortcutToItem(argv[2], spPrinter);
  }
 }
 return 0;
}
</pre>
<p>
This is a little trickier, but not by much.
</p>
<ul>
<li>Initialize COM.
<li>Get the <code>IShell&shy;Item</code> for the Printers folder.
<li>Get the enumerator for the Printers folder.
<li>For each item in the Printers folder:
<ul>
<li>Get its name and print it just for diagnostic purposes.
<li>If the name matches the one we're looking for,
        then create the shortcut.
    </ul>
</ul>
<p>
Here are the header files I used:
</p>
<pre>
#define <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/01/24/10387757.aspx">STRICT_TYPED_ITEMIDS</a> // enable stricter type checking on ITEMIDs
#include &lt;windows.h&gt;
#include &lt;atlbase.h&gt;        // for CComPtr, CComQIPtr
#include &lt;atlalloc.h&gt;       // for CComHeapPtr
#include &lt;shlobj.h&gt;         // for shell interfaces
#include &lt;knownfolders.h&gt;   // for FOLDERID_PrintersFolder
#include &lt;stdio.h&gt;          // for wprintf
</pre>
<p>
For those of you who prefer to work with CSIDLs,
the change is relatively minor.
Replace the <code>SHGet&shy;Known&shy;Folder&shy;Item</code>
call with
</p>
<pre>
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/31/10203215.aspx">BindToCsidlItem</a>(CSIDL_PRINTERS, &amp;spPrinters);
</pre>
<p>
You may have noticed that I used
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/12/27/10251210.aspx">
the for-if anti-pattern</a>.
I could've gone for the item directly by using
<code>SHCreate&shy;Item&shy;From&shy;Relative&shy;Name</code>:
<!--
<code>IShell&shy;Folder::Parse&shy;Display&shy;Name</code>:
-->
</p>
<pre>
int __cdecl wmain(int argc, wchar_t **argv)
{
 CCoInitialize init;
 CComPtr&lt;IShellItem&gt; spPrinters;
 SHGetKnownFolderItem(FOLDERID_PrintersFolder, KF_FLAG_DEFAULT,
                      nullptr, IID_PPV_ARGS(&amp;spPrinters));
 CComPtr&lt;IShellItem&gt; spPrinter;
 SHCreateItemFromRelativeName(spPrinters, argv[1], nullptr,
                              IID_PPV_ARGS(&amp;spPrinter));
 CreateShortcutToItem(argv[2], spPrinter);
 return 0;
}
</pre>
<p>
As before,
if you're the sort of person who prefers to do things
old-school, you can parse the name yourself,
at which point you may as well give up on shell items,
hike up your pants,
and do it
<a HREF="http://www.simpsoncrazy.com/lists/grampa-stories">
with an onion on your belt</a>:
</p>
<pre>
HRESULT BindToIDList(PCUIDLIST_ABSOLUTE pidl,
                     REFIID riid, void **ppv)
{
 *ppv = nullptr;
 CComPtr&lt;IShellFolder&gt; spsfDesktop;
 HRESULT hr = SHGetDesktopFolder(&amp;spsfDesktop);
 if (SUCCEEDED(hr)) {
  if (pidl-&gt;mkid.cb) {
   hr = spsfDesktop-&gt;BindToObject(pidl, nullptr, riid, ppv);
  } else {
   hr = spsfDesktop-&gt;QueryInterface(riid, ppv);
  }
 }
 return hr;
}

int __cdecl wmain(int argc, wchar_t **argv)
{
 CCoInitialize init;
 CComHeapPtr&lt;ITEMIDLIST_ABSOLUTE&gt; spidlPrinters;
 SHGetSpecialFolderLocation(nullptr,
                  CSIDL_PRINTERS, &amp;spidlPrinters);
 CComPtr&lt;IShellFolder&gt; spsfPrinters;
 BindToIDList(spidlPrinters, IID_PPV_ARGS(&amp;spsfPrinters));

 ULONG cchEaten;
 DWORD dwAttributes = 0;
 CComHeapPtr&lt;ITEMIDLIST_RELATIVE&gt; spidl;
 spsfPrinters-&gt;ParseDisplayName(nullptr, nullptr, argv[1],
                        &amp;cchEaten, &amp;spidl, &amp;dwAttributes);

 CComHeapPtr&lt;ITEMIDLIST_ABSOLUTE&gt; spidlPrinter;
 spidlPrinter.Attach(ILCombine(spidlPrinters, spidl));
 CreateShortcutToIDList(argv[2], spidlPrinter);
 return 0;
}
</pre>
<p>
The
<code>Bind&shy;To&shy;ID&shy;List</code> function is nothing
special;
we already saw the guts of it when we wrote
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/31/10203215.aspx">
<code>Bind&shy;To&shy;Csidl&shy;Item</code></a>.
</p>
<p>
The main program proceeds in three steps:
</p>
<ul>
<li>Get the ID list for the Printers folder and bind to it.
<li>Parse the printer name, producing a printer ID list.
<li>Create a shortcut to the ID list for the printers folder
    combined with the printer ID list.
</ul>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-aadsso-1live-com00037ffe9a7325b6 even thread-even depth-1" id="comment-1035743">
				<div id="div-comment-1035743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/fourbadcats' rel='external nofollow' class='url'>fourbadcats</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130128-00/?p=5433#comment-1035743">
			January 28, 2013 at 7:45 am</a>		</div>

		<p>Love the little program series. Thank you. IShellItem</p>
<p>Well, what my wife requested: she&#39;d like a taskbar item pinned and used to go directly to the &quot;See What&#39;s Printing&quot; window for a particular printer. She frequently needs to manage (ie. pause/cancel) large print jobs and the move to Windows 8 has made finding the print queue harder for her and I get the blame for that move :(</p>
<p>I tried pinning the printer icon for her but that&#39;s not available for some reason. It&#39;s not clear why there can be a shortcut on the desktop but not pinned to the taskbar. For now, it&#39;s a few steps: go to Desktop, open shortcut and See what&#39;s printing</p>
<p>Perhaps I can use the essentials of binding to the handler in order to dig out the proper context menu item to invoke in a small helper program. &nbsp; I haven&#39;t investigated the possibility of managing the print queue from a Windows Store App &#8212; can that be done?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00037ffe9a7325b6 odd alt thread-odd thread-alt depth-1" id="comment-1035753">
				<div id="div-comment-1035753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/fourbadcats' rel='external nofollow' class='url'>fourbadcats</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130128-00/?p=5433#comment-1035753">
			January 28, 2013 at 7:49 am</a>		</div>

		<p>I found that I can create a shortcut to See What&#39;s Printing from the printer info panel. That cannot be pinned but is probably good enough for the wife&#39;s needs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1035823">
				<div id="div-comment-1035823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mb9_4000_rawlingscompany.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>mb9@rawlingscompany.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130128-00/?p=5433#comment-1035823">
			January 29, 2013 at 5:36 am</a>		</div>

		<p>This may be some sort of heresy, fourbadcats, but did you try to Pin that shortcut instead to the Start screen? (Should be in the right-click context menu on the shortcut?) The Start screen doesn&#39;t appear to have anywhere near the number of restrictions that the Taskbar does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-1035873">
				<div id="div-comment-1035873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130128-00/?p=5433#comment-1035873">
			January 29, 2013 at 7:41 am</a>		</div>

		<p>@fourbadcats. Pinning troubles? Use Taskbar Pinner from Winaero. No restrictions on pinning.</p>
<div class="post">[<em>I like how somebody wrote an entire app so you don&#39;t have to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/04/11/10151878.aspx" rel="nofollow">hold the shift key</a>. -Raymond</em><em>]</em></div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00037ffe9a7325b6 even thread-even depth-1" id="comment-1036003">
				<div id="div-comment-1036003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/fourbadcats' rel='external nofollow' class='url'>fourbadcats</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130128-00/?p=5433#comment-1036003">
			January 29, 2013 at 11:25 am</a>		</div>

		<p>Thanks for the suggestions everyone. The shortcuts to the printer itself and to &quot;See What&#39;s Printing&quot; are not pinnable even with the Shift+RMB menu. I suspect this is b/c they are really entry points into a control panel DLL.</p>
<p>She&#39;ll live with the desktop icon for now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-1036083">
				<div id="div-comment-1036083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130128-00/?p=5433#comment-1036083">
			January 29, 2013 at 10:32 pm</a>		</div>

		<p>&quot;[I like how somebody wrote an entire app so you don&#39;t have to hold the shift key. -Raymond]&quot;</p>
<p>You need to look more closely at what the Taskbar allows for pinning with Shift+right click vs what that app allows.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

