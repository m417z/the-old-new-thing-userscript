<html>
<head>
<title>Random musings on the introduction of long file names on FAT</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Random musings on the introduction of long file names on FAT</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 26, 2011 / year-entry #206</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>21</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Tom Keddie thinks that the format of long file names on FAT deserves an article. Fortunately, I don't have to write it; somebody else already did. So go read that article first. I'm just going to add some remarks and stories. Hi, welcome back. Coming up with the technique of setting Read-only, System, Hidden, and...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Tom Keddie thinks that <a href="http://blogs.msdn.com/oldnewthing/archive/2009/06/10/9718865.aspx#9725629"> the format of long file names on FAT deserves an article</a>. Fortunately, I don't have to write it; <a href="http://home.teleport.com/~brainy/lfn.htm"> somebody else already did</a>.</p>
<p> So go read that article first. I'm just going to add some remarks and stories. </p>
<p> Hi, welcome back. </p>
<p> Coming up with the technique of setting Read-only, System, Hidden, and Volume attributes to hide LFN entries took a bit of trial and error. The volume label was the most important part, since that was enough to get 90% of programs which did low-level disk access to lay off those directory entries. The other bits were added to push the success rate ever so close to 100%. </p>
<p> The linked article mentions rather briefly that the checksum is present to ensure that the LFN entries correspond to the SFN entry that immediately follows. This is necessary so that if the directory is modified by code that is not LFN-aware (for example, maybe you dual-booted into Windows&nbsp;3.1), and the file is deleted and the directory entry is reused for a different file, the LFN fragments won't be erroneously associated with the new file. Instead, the fragments are "orphans", directory entries for which the corresponding SFN entry no longer exists. Orphaned directory entries are treated as if they were free. </p>
<p> The cluster value in a LFN entry is always zero for compatibility with disk utilities who assume that a nonzero cluster means that the directory entry refers to a live file. </p>
<p> The linked article wonders what happens if the ordinals are out of order. Simple: If the ordinals are out of order, then they are invalid. The file system simply treats them as orphans. Here's an example of how out-of-order ordinals can be created. Start with the following directory entries: </p>
<table border="1" bordercolor="black" rules="all" style="border-collapse: collapse" cellpadding="3">
<tr>
<td>(2) "e.txt"</td>
</tr>
<tr>
<td>(1) "Long File Nam"</td>
</tr>
<tr>
<td>"LONGFI~1.TXT"</td>
</tr>
<tr>
<td>(2) "e2.txt"</td>
</tr>
<tr>
<td>(1) "Long File Nam"</td>
</tr>
<tr>
<td>"LONGFI~2.TXT"</td>
</tr>
</table>
<p> Suppose this volume is accessed by a file system that does not support long file names, and the user deletes <code>LONGFI~1.TXT</code>. The directory now looks like this: </p>
<table border="1" bordercolor="black" rules="all" style="border-collapse: collapse" cellpadding="3">
<tr>
<td>(2) "e.txt"</td>
</tr>
<tr>
<td>(1) "Long File Nam"</td>
</tr>
<tr>
<td>(free)</td>
</tr>
<tr>
<td>(2) "e2.txt"</td>
</tr>
<tr>
<td>(1) "Long File Nam"</td>
</tr>
<tr>
<td>"LONGFI~2.TXT"</td>
</tr>
</table>
<p> Now the volume is accessed by a file system that supports long file names, and the user renames <code>Long File Name2.txt</code> to <code>Wow that's a really long file name there.txt</code>. </p>
<table border="1" bordercolor="black" rules="all" style="border-collapse: collapse" cellpadding="3">
<tr>
<td>(2) "e.txt"</td>
</tr>
<tr>
<td>(4) "e.txt"</td>
</tr>
<tr>
<td>(3) "ile name ther"</td>
</tr>
<tr>
<td>(2) "really long f"</td>
</tr>
<tr>
<td>(1) "Wow that's a "</td>
</tr>
<tr>
<td>"WOWTHA~1.TXT"</td>
</tr>
</table>
<p> Since the new name is longer than the old name, more LFN fragments need to be used to store the entire name, and oh look isn't that nice, there are some free entries right above the ones we're already using, so let's just take those. Now if you read down the table, you see that the ordinal goes from 2 up to 4 (out of order) before continuing in the correct order. When the file system sees this, it knows that the entry with ordinal&nbsp;2 is an orphan. </p>
<p> One last historical note: The designers of this system didn't really expect Windows&nbsp;NT to adopt long file names on FAT, since Windows&nbsp;NT already had its own much-better file system, namely, NTFS. If you wanted long file names on Windows&nbsp;NT, you'd just use NTFS and call it done. Nevertheless, the decision was made to store the file names in Unicode on disk, breaking with the long-standing practice of storing FAT file names in the OEM character set. The decision meant that long file names would take up twice as much space (and this was back in the days when disk space was expensive), but the designers chose to do it anyway "because it's the right thing to do." </p>
<p> And then Windows&nbsp;NT added support for long file names on FAT and the decision taken years earlier to use Unicode on disk proved eerily clairvoyant. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-932353">
				<div id="div-comment-932353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932353">
			August 26, 2011 at 7:26 am</a>		</div>

		<p>Using UTF-8 would use half as much space most of the time and be as future-proof as using UTF16-LE was.</p>
<div class="post">[<i>&quot;Hey, let&#39;s design our storage format to use an encoding that hasn&#39;t been invented yet!&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932373">
				<div id="div-comment-932373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932373">
			August 26, 2011 at 7:37 am</a>		</div>

		<p>Wait, does this mean I can trigger some fun weirdness by picking two LFNs with the same checksum and deleting one of them using a non-LFN aware application?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-932383">
				<div id="div-comment-932383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matej Horvat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932383">
			August 26, 2011 at 7:51 am</a>		</div>

		<p>&quot;Using UTF-8 would use half as much space most of the time and be as future-proof as using UTF16-LE was.&quot;</p>
<p>Unicode codepoints were 16-bit until Unicode 2.0, so UTF-8 didn&#39;t exist yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932393">
				<div id="div-comment-932393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">grumpy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932393">
			August 26, 2011 at 7:54 am</a>		</div>

		<blockquote><p>
  the decision taken years earlier to use Unicode on disk proved eerily clairvoyant.
</p></blockquote>
<p>Heh. No, it proves that designers were very smart and had experienced problems with forward compatibility before. :-) The &quot;right thing&quot; may look expensive but in reality is often the cheapest way of doing things, even when discounting future expenses with a high interest rate&#8230;</p>
<p>@B: I&#39;m not quite sure that &quot;fun&quot; would cover it. But weirdness sounds about right. :-D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-932403">
				<div id="div-comment-932403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932403">
			August 26, 2011 at 8:01 am</a>		</div>

		<blockquote><p>
  Hey, let&#39;s design our storage format to use an encoding that hasn&#39;t been invented yet!
</p></blockquote>
<p>Rob Pike says UTF8 was invented in 1992, when was this FAT work done?</p>
<p>(But the RFC is dated 1996, so maybe it was not widely known until then)</p>
<blockquote><p>
  Using UTF-8 would use half as much space most of the time
</p></blockquote>
<p>This is, of course, an American perspective. The Japanese perspective might be &quot;Using UTF-8 would use one and a half times as much space most of the time&quot;. &nbsp;Western Europeans would just say &quot;meh&quot; (except that word had not been invented).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932423">
				<div id="div-comment-932423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932423">
			August 26, 2011 at 8:24 am</a>		</div>

		<p>Awww. Too much time spent double-checking before being the first with a witty &#39;time machine&#39; response to the UTF-8 thing. Oh well. Now I&#39;m wondering if there could be nearly space equivalent work-around if they hadn&#39;t done the Unicode thing years earlier.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-932433">
				<div id="div-comment-932433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henning Makholm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932433">
			August 26, 2011 at 8:25 am</a>		</div>

		<p>More relevant than the possible existence of UTF-8 when the system was designed is the fact the Unicode was at that time supposed to be a 16-bit character set, so UCS-2 would be a fixed-width encoding. The practical advantages of working with a fixed width per character would have been compelling enough to justify the increased space demand over UTF-8.</p>
<p>However, once the upper planes came along and UCS-2 became UTF-16, with surrogate pairs and variable characters, all of that was negated and one might as well have used UTF-8 (with the added benefit that many more developers would have natural occasion to test that their code was variable-width clean, instead of now where characters that require surrogates in UTF-16 are all somewhat obscure). Unfortunately, by then it was too late to go back on the fundamental decision.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932443">
				<div id="div-comment-932443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932443">
			August 26, 2011 at 8:28 am</a>		</div>

		<p>I used the equiv. to meh long before 1995, except it was pronounced more like ænh.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-932463">
				<div id="div-comment-932463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932463">
			August 26, 2011 at 8:29 am</a>		</div>

		<p>On that matter, I wonder why in Win9x the conversion from/to Unicode was done in IFSMGR with no interface exposed to user mode that I know of to directly access the Unicode filenames.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932473">
				<div id="div-comment-932473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henning Makholm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932473">
			August 26, 2011 at 8:33 am</a>		</div>

		<p>@dave, Greeks and Russians may well say &quot;meh&quot; to the difference between UTF-16 and UTF-8, space-wise. But a very large fraction of the characters in a typical &nbsp;text in a Western European language are ASCII, so the space savings in UTF-8 are quite relevant here. (The letters that aren&#39;t ASCII are 2 bytes wide in UTF-16 as well as UTF-8, but they are not the majority of characters in a typical text).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-932483">
				<div id="div-comment-932483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932483">
			August 26, 2011 at 8:55 am</a>		</div>

		<p>@dave: <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/UTF-8#cite_note-29" rel="nofollow">en.wikipedia.org/&#8230;/UTF-8</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932493">
				<div id="div-comment-932493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xpclient</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932493">
			August 26, 2011 at 9:08 am</a>		</div>

		<p>I used a column handler shell extension on Windows 2000/XP to see short file names in Details view (for some legacy apps and games that require specifying the path in 8.3 style). I can&#39;t on Vista/7 because column handlers are gone. So I have to use dir /x. Just another example where GUI is destroyed/broken and a step back to command line has to be taken. Point to be noted: bring back column handlers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-932513">
				<div id="div-comment-932513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932513">
			August 26, 2011 at 11:08 am</a>		</div>

		<p>What really surprises me is how they were able to kludge the long file names into the FAT. Most of the time situations like these require creating a hidden file that contains the new information.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932553">
				<div id="div-comment-932553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932553">
			August 26, 2011 at 12:10 pm</a>		</div>

		<p>LFN wasn&#39;t so fun before FAT32 came out because the root directory in FAT12/16 has a fixed number of file slots. Imagine the fun I had when I tried for the first time to copy a whole bunch of files to a 360K floppy and only 15 of them would go!</p>
<p>That said, I think that LFN is a wonderful hack; for the most part, it was completely backwards-compatible, didn&#39;t mess with the disk structure, and was space-efficient. I salute the team that developed it!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-932573">
				<div id="div-comment-932573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932573">
			August 26, 2011 at 2:09 pm</a>		</div>

		<p>See this Long Filename Specification 0.5 from December 1992 for some more history:</p>
<p><a rel="nofollow" target="_new" href="http://www.osdever.net/documents/LongFileName.pdf" rel="nofollow">http://www.osdever.net/&#8230;/LongFileName.pdf</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932603">
				<div id="div-comment-932603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932603">
			August 27, 2011 at 3:38 am</a>		</div>

		<p>@ErikF: Just reformat the disk with a larger root directory size in the disk&#39;s boot record first! (Don&#39;t forget to reduce the number of clusters appropriately.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-932623">
				<div id="div-comment-932623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932623">
			August 27, 2011 at 6:22 pm</a>		</div>

		<p>@Neil: I tried that and found out that MS-DOS 6.x will corrupt any disks formatted that way. Win 9x and NT seem to work just fine though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932643">
				<div id="div-comment-932643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IanET</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932643">
			August 28, 2011 at 12:25 am</a>		</div>

		<p>First BillG demo I ever did was of LFNs and showing how backwards compatible it was with 3.1. That was back when Bill would come to our building and go from office to office watching the demos and asking questions. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-932663">
				<div id="div-comment-932663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932663">
			August 28, 2011 at 1:52 pm</a>		</div>

		<p>@Joshua: MS-DOS is inclined to ignore bits of the boot sector, depending what&#39;s in the OEM ID. Unfortunately the Windows 95 volume tracker likes to scribble all over the OEM ID.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-932873">
				<div id="div-comment-932873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932873">
			August 30, 2011 at 3:37 am</a>		</div>

		<p>Thanks to Unicode support in LFNs, it was always fun when we had to deal with floppies from Russia (Windows would display just a bunch of underscored for filenames, and you couldn&#39;t access these files, though IIRC, either scandisk or chkdsk did &quot;fix&quot; this by renaming the files to garbage names that could then be open).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-932973">
				<div id="div-comment-932973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110826-00/?p=9793#comment-932973">
			August 30, 2011 at 10:56 am</a>		</div>

		<p>ender: I think this is a direct consequence of the codepage conversions being done in IFSMGR. I wonder why was it designed that way.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

