<html>
<head>
<title>Why are the alignment requirements for SLIST_ENTRY so different on 64-bit Windows?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why are the alignment requirements for SLIST_ENTRY so different on 64-bit Windows?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 19, 2011 / year-entry #200</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110819-00/?p=9853</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>3</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The Interlocked­Push­Entry­SList function stipulates that all list items must be aligned on a MEMORY_ALLOCATION_ALIGNMENT boundary. For 32-bit Windows, MEMORY_ALLOCATION_ALIGNMENT is 8, but the SLIST_ENTRY structure itself does not have a DECLSPEC_ALIGN(8) attribute. Even more confusingly, the documentation for SLIST_ENTRY says that the 64-bit structure needs to be 16-byte aligned but says nothing about the 32-bit structure....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The <code>Interlocked&shy;Push&shy;Entry&shy;SList</code> function stipulates that <a href="http://msdn.microsoft.com/ms684020.aspx"> all list items must be aligned on a <code>MEMORY_<wbr>ALLOCATION_<wbr>ALIGNMENT</wbr></wbr></code> boundary</a>. For 32-bit Windows, <code>MEMORY_<wbr>ALLOCATION_<wbr>ALIGNMENT</wbr></wbr></code> is&nbsp;8, but the <code>SLIST_<wbr>ENTRY</wbr></code> structure itself does not have a <code>DECLSPEC_<wbr>ALIGN(8)</wbr></code> attribute. Even more confusingly, <a href="http://msdn.microsoft.com/dd852148.aspx"> the documentation for <code>SLIST_<wbr>ENTRY</wbr></code></a> says that the 64-bit structure needs to be 16-byte aligned but says nothing about the 32-bit structure. So what are the memory alignment requirements for a 32-bit <code>SLIST_<wbr>ENTRY</wbr></code>, 8 or 4?</p>
<p> It's 8. No, 4. No wait, it's both. </p>
<p> Officially, the alignment requirement is&nbsp;8. Earlier versions of the header file did not stipulate 8-byte alignment, and changing the declaration would have resulted in existing structures which (inadvertently) misaligned the field changing size and layout when the new requirement was imposed. So the 32-bit structure was sort-of grandfathered in. You should still align it on 8-byte boundaries, but the header file doesn't enforce it to avoid breaking existing code. </p>
<p> Fortunately, when the 64-bit version was introduced, the proper alignment directive was introduced right off the bat. How about that: sometimes Microsoft learns from its mistakes after all. </p>
<p> Why are the alignment requirements greater than the natural word size? To avoid the <a href="http://en.wikipedia.org/wiki/ABA_problem"> ABA problem</a>. A standard workaround for the ABA problem is to append additional information (a "tag") to the pointer so that when the value changes from&nbsp;B back to&nbsp;A, the tag ensures that the second&nbsp;A still looks different from the first one. Many CPU architectures have a "double-pointer-sized atomic compare-and-swap" instruction, and some of them have the additional requirement that the double-pointer needs to be on a double-pointer boundary (8 bytes for 32-bit pointers and 16 bytes for 64-bit pointers). </p>
<p> "But wait, the double-pointer compare-and-swap is used on the <code>SLIST_<wbr>HEADER</wbr></code>, not on the <code>SLIST_<wbr>ENTRY</wbr></code>. Why does the <code>SLIST_<wbr>ENTRY</wbr></code> need to be double-pointer aligned, too?" </p>
<p> While it's true that many CPU architectures have a "double-pointer-sized atomic compare-and-swap" instruction, some support only a "pointer-sized atomic compare-and-swap". For example, <a href="http://en.wikipedia.org/wiki/X86-64#Older_implementations"> the original AMD64 architecture did not have a CMPXCHG16B instruction</a>; the largest data size for an atomic compare-and-swap was 8&nbsp;bytes. As a result, the Slist functions need to pack a 64-bit pointer, a list depth, <i>and</i> tag information into a single 64-bit value. One of the tricks they used was imposing a memory alignment of 16&nbsp;bytes. This freed up four bits in the pointer for use as a tag. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-931083">
				<div id="div-comment-931083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110819-00/?p=9853#comment-931083">
			August 19, 2011 at 10:27 am</a>		</div>

		<p>Not to mention that the CMPXCHG16B instruction itself requires 16 byte alignment too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-931103">
				<div id="div-comment-931103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110819-00/?p=9853#comment-931103">
			August 19, 2011 at 11:57 am</a>		</div>

		<p>@Yuhong Bao:</p>
<p>Quick! Tell your finding to the compiler team!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-931213">
				<div id="div-comment-931213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110819-00/?p=9853#comment-931213">
			August 20, 2011 at 12:25 pm</a>		</div>

		<p>I mean, the CMPXCHG16B instruction requires the pointer being used to be 16 byte aligned too.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

