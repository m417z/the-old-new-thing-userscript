<html>
<head>
<title>The format of bitmap resources</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The format of bitmap resources</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 11, 2009 / year-entry #396</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Another in a sporadic series on the format of Win32 resources. Here's a question from a customer: I'm noticing some strange behavior: When I call LoadResource then LockResource on an embedded bitmap, the data being returned by LockResource is not a properly formatted bitmap. The data is missing the BITMAPFILEHEADER, but the rest of the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Another in a sporadic series on the format of Win32 resources.</p>
<p> Here's a question from a customer: </p>
<blockquote class="q"><p> I'm noticing some strange behavior: When I call <code>LoadResource</code> then <code>LockResource</code> on an embedded bitmap, the data being returned by <code>LockResource</code> is not a properly formatted bitmap. The data is missing the <code>BITMAPFILEHEADER</code>, but the rest of the file is there. <code>SizeOfResource</code> also states that the bitmap resource is 14 bytes smaller than it actually is. 14 bytes happens to be equal to <code>sizeof(BITMAPFILEHEADER)</code>.   However, if I load the bitmap directly using <code>LoadBitmap</code>, everything works fine. If I look at the resource using Visual Studio, the Bitmap displays correctly and the binary data correctly includes the <code>BITMAPFILEHEADER</code>. </p>
<p> Anyone have any ideas as to why <code>LoadResource</code> is not correctly returning the <code>BITMAPFILEHEADER</code>? </p>
</blockquote>
<p> Amusingly, a change to the word order changes the question to its own answer: <code>LoadResource</code> is <i>correctly</i> <i>not</i> returning the <code>BITMAPFILEHEADER</code>. </p>
<p> In other words, <code>LoadResource</code> is not stripping off the <code>BITMAPFILEHEADER</code>: <code>rc.exe</code> is. </p>
<p> The format of bitmap resources are pretty simple. They are just a bitmap file with the <code>BITMAPFILEHEADER</code> stripped off. Because it's just the <i>file header</i>, the thing tacked onto the front when saved as a file. It's not part of the bitmap itself. For example, if you are using a <code>BITMAPINFOHEADER</code>-formatted bitmap, then the resource format is a <code>BITMAPINFOHEADER</code> followed by the pixels. </p>
<p> I can't explain why Visual Studio is showing you a <code>BITMAPFILEHEADER</code> that doesn't exist. They're probably trying to reduce confusion for people who don't know the format of bitmap resources and wonder why the binary data doesn't match their <code>.bmp</code> file. Of course, in so doing, they end up creating confusion for people who do know the format of bitmap resources, or&mdash;as happened here&mdash;people who don't know the format of bitmap resources and think that the <code>LoadResource</code> function is messing with their bitmaps. </p>
<p> (For the record, the <code>LoadResource</code> function doesn't mess with bitmaps, icons, menus, or whatever. It just returns the raw binary data of a Win32 resource. It doesn't know the internal format of those resources any more than the file system knows the internal format of a Quicken data file or a shortcut file.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-794553">
				<div id="div-comment-794553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794553">
			December 11, 2009 at 9:02 am</a>		</div>

		<p>I&#8217;ve never had to use LoadResource, so I could be completely off base.</p>
<p>But, don&#8217;t you need the BITMAPINFOHEADER? How are you going to determine the height and width of the bitmap, among properties, without it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-794573">
				<div id="div-comment-794573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794573">
			December 11, 2009 at 9:34 am</a>		</div>

		<p>Only the BITMAPFILEHEADER is absent, the BITMAPINFOHEADER is still stored as Raymond clearly states. &nbsp;&quot;the resource format is a BITMAPINFOHEADER followed by the pixels&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-794603">
				<div id="div-comment-794603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794603">
			December 11, 2009 at 11:49 am</a>		</div>

		<p>This may not actually be a blogging point where individuals can enrich their learns on facilitating and leveraging .NET-related activities most effectively, but I think it&#8217;s worth mentioning that the managed API for this is Bitmap.LockBits</p>
<p>Oh yeah, and since you can load PNGs and JPEGs etc with GDI+ (which is wrapped in .NET too), it makes sense that the internal memory format of the images doesn&#8217;t exactly match a BMP file format since you can load lots of other formats too&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-794613">
				<div id="div-comment-794613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794613">
			December 11, 2009 at 1:03 pm</a>		</div>

		<p>Visual Studio likely displays the bitmap in its orignal form, before rc.exe even got a chance to touch it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-794633">
				<div id="div-comment-794633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794633">
			December 11, 2009 at 5:10 pm</a>		</div>

		<p>The file header is useless anyway. The only things it contains:</p>
<p>The magic number &quot;BM&quot; which is a) redundant with the file extension and b) unreliable as a way of checking the file type. Since any normal text file could begin with this (like &quot;BM is the magic number used in &#8230;&quot;) everyone uses the extension anyway.</p>
<p>The file size. The file system already knows this. Having a field in the header only adds a chance to get it wrong.</p>
<p>The bitmap data offset. Unnecessary, since in principle you could simply fix this to be right after the headers. I&#8217;ve seen various programs fail to look for the bitmap bits in the right place because the data offset had a non-standard value. Again, this field just adds another chance to get it wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-794643">
				<div id="div-comment-794643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794643">
			December 11, 2009 at 5:16 pm</a>		</div>

		<p>@Anonymous Coward:</p>
<p>I think the entire BMP format was (or rather format*s* were) designed (or rather evolved) to provide the maximum number of opportunities for things to go wrong.</p>
<p>You&#8217;re assuming the purpose of the format is to contain image data rather than to be a puzzle for programmers. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-794673">
				<div id="div-comment-794673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.henke37.cjb.net/' rel='external nofollow' class='url'>Henke37</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794673">
			December 12, 2009 at 1:47 am</a>		</div>

		<p>You might have a small typo there. </p>
<p>s/and more/any more/</p>
<p>It&#8217;s still amusing to hear how there is a perfectly logical explanation to a question like this.</p>
<div class=post>[<i>Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-794683">
				<div id="div-comment-794683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random563</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794683">
			December 12, 2009 at 2:21 am</a>		</div>

		<p>@Leo</p>
<p>Reminds me of packed bitmaps. Obviously, Windows knows how to compute the pointer to the pixel data in a packed bitmap. But since they don&#8217;t expose it, you have to do the computation yourself in order to use any of the bitmap functions. I doubt there is a single implementation that does it correctly for all flavors of bitmaps, taking into account different types of headers, various ways to specify the length of the color table, optional bit masks, RGBQUADs vs. RGBTRIPLEs, and so on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-794823">
				<div id="div-comment-794823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-794823">
			December 13, 2009 at 6:22 pm</a>		</div>

		<p>@Ben Voigt: Thanks for clearing that up, I completely misunderstood that. My bad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-795693">
				<div id="div-comment-795693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Knoeller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091211-00/?p=15693#comment-795693">
			December 15, 2009 at 8:18 pm</a>		</div>

		<p>The RC compiler does even funkier things to Icons and Cursors, effectively turning a single file into multiple resources. &nbsp; It doesn&#8217;t just strip the file header from .cur and .ico files. &nbsp;It actually throws it away and makes a completely different one.</p>
<div class=post>[<i>Hi, John, good to see you again. You&#8217;re jumping the gun; I haven&#8217;t gotten to icons and cursors yet in my series on resource formats. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

