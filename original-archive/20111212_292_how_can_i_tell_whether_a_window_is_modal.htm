<html>
<head>
<title>How can I tell whether a window is modal?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I tell whether a window is modal?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 12, 2011 / year-entry #293</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted a way to determine whether a particular window is modal. They listed a few methods they had tried but found that it didn't work and asked for assistance. As Eric Lippert is fond of saying, "First, write your spec." Until you know what you want, you won't know how to get it....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted a way to determine whether a particular
window is modal. They listed a few methods they had tried
but found that it didn't work and asked for assistance.
</p>
<p>
As <a HREF="http://blogs.msdn.com/ericlippert/">Eric Lippert</a>
is fond of saying,
"<a HREF="http://stackoverflow.com/questions/921180/c-round-up/926806#926806"
>First, write your spec</a>."
Until you know what you want, you won't know how to get it.
</p>
<p>
First, you need to define what you mean by <i>a modal window</i>.
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/02/18/376080.aspx">
There are multiple competing definitions</a>.
</p>
<p>
The customer decided that the definition of <i>modal window</i>
they want is this one:
</p>
<blockquote CLASS=q><p>
A modal window is a child window that requires the user
to interact with it before they can return to operating
the parent application,
thus preventing any work on the application main window.
</p>
</blockquote>
<p>
One thing you notice in this definition is that it talks
both about <i>windows</i> and <i>applications</i>.
You have a child <i>window</i>, a parent <i>application</i>,
and even an <i>application main window</i>.
This implies that a modal window must be in a different application
from its parent.
(If it were in the same application, then it vacuously does not
prevent you from interacting with the parent application because
it <i>is</i> the parent application.)
But modality is a user interface concept, not a process management
concept, so it's unclear why process considerations appear in the definition.
End-users sitting in front of a user interface see windows,
not processes.
I'm going to assume that the use of the term <i>application</i> here
is a mistake, and that all we're talking about is <i>windows</i>.
</p>
<p>
The second thing you realize from this definition is that it
is describing something impossible.
In Windows, child windows cannot be interacted with when their
parent window is disabled.
This definition appears to be using a common abuse of terminology,
using the words <i>child</i> and <i>parent</i>
instead of the more accurate but clumsier
<i>owned</i> and <i>owner</i>.
This common abuse of terminology rarely causes trouble among
people with experience programming the Windows user interface,
but it is often a source of confusion for beginners,
which is why I try to use the precise terminology
rather than the casual terminology.
And this question was clearly asked by a beginner.
</p>
<p>
Another thing you notice about this definition is that it
involves not two but <i>three</i> windows:
The child window, the parent window, and the application main window.
Consider the situation where you have an application main window
(which is interactive), a secondary window (which is not interactive),
and a tertiary window which is a child of by the secondary window
with which the user must interact in order to return to operating
the secondary window.
</p>
<table BORDER=0 CELLSPACING=0 STYLE="border-collapse: collapse">
<tr>
<td ALIGN=center STYLE="border: solid .75pt black; padding: 1em">Application<br>main window</td>
<td STYLE="width: 1em"></td>
<td ALIGN=center STYLE="border: dotted .75pt black; padding: 1em">Secondary</td>
<td STYLE="width: 1em"></td>
<td ROWSPAN=3>Solid borders represent interactive windows;<br>
                  dotted borders represent non-interactive windows.<br>
                  Lines connect children (below) to parents (above).
    </td>
</tr>
<tr>
<td></td>
<td></td>
<td ALIGN=center>
    <span STYLE="border-right: solid .75pt black">&nbsp;</span></td>
</tr>
<tr>
<td></td>
<td></td>
<td ALIGN=center STYLE="border: solid .75pt black; padding: 1em">Tertiary</td>
</tr>
</table>
<p>
Is the tertiary window modal, according to this definition?
I'm not sure.
It is not clear to me whether the clause
"thus preventing any work on the application main window"
is an additional constraint or is merely elaborative.
If the clause is an additional contraint, then the situation
is not modal, because the application main window is still interactive.
On the other hand, if the clause is merely elaborative,
then the situation <i>is</i> modal, because the tertiary window
prevents the user from interacting with the secondary window.
</p>
<p>
The fourth thing you realize from this definition is that it
requires predicting the future.
How do you know that the owner window will be available for
use once you dismiss the owned window?
Mabe the application does "<code>if (time(NULL) % 2)
make_<wbr>parent_<wbr>available();</code>".
(Perhaps we can call upon the
<a HREF="http://www.cio.com/article/596981/Chicago_School_to_Offer_Degree_in_Predicting_the_Future">
graduates of the DePaul University with a degree in predicting the future</a>
to help us here.)</p>
<p>Even if the result doesn't depend on predicting the future,
determining whether the window will re-enable its parent
requires a level of code understanding beyond what can easily
be achieved programmatically.
(You would have to find the code in the other program
and study it to determine whether it re-enables the parent window
as part of its interaction. This can be hard to do by a human being
with source code,
much less by a computer program with only object code, especially
if the object code is in an interpreted language, since you now have
to reverse-engineer the interpreter too!)
</p>
<p>
No wonder the problem is so difficult:
The spec uses imprecise terminology, is unclear on its criteria,
and requires
metaphysical
certitude beyond the current level of scientific understanding.
</p>
<p>
Let's see what we can salvage from this definition.
First, let's make the terminology more precise:
</p>
<blockquote CLASS=q><p>
A modal window is an owned window that requires the user
to interact with it before they can return to operating
the owner window,
thus preventing any work on the application main window.
</p>
</blockquote>
<p>
Next, let's delete the clause whose meaning is unclear.
</p>
<blockquote CLASS=q><p>
A modal window is an owned window that requires the user
to interact with it before they can return to operating
the owner window.
</p>
</blockquote>
<p>
Finally, let's remove the part that requires predicting
the future.
Instead of describing future behavior (which is hard to predict),
we'll make our
requirements based on <i>present</i> behavior
(which can be observed without the aid of a time machine).
</p>
<blockquote CLASS=q><p>
A modal window is an owned window
whose owner window cannot be interacted with.
</p>
</blockquote>
<p>
The revised spec says that a modal window is an owned window
whose owner is disabled.
Bingo, there's your algorithm for detecting whether a window is modal.
Once you have a good spec, the code pretty much writes itself:
</p>
<pre>
BOOL IsModalWindowAccordingToThisParticularSpec(HWND hwnd)
{
 // child windows cannot have owners
 if (GetWindowStyle(hwnd) &amp; WS_CHILD) return FALSE;

 HWND hwndOwner = <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/12/07/10244820.aspx">GetWindow(hwnd, GW_OWNER)</a>;
 if (hwndOwner == NULL) return FALSE; // not an owned window

 if (IsWindowEnabled(hwndOwner)) return FALSE; // owner is enabled

 return TRUE; // an owned window whose owner is disabled
}
</pre>
<p>
Mind you, this spec may still not be what you actually want.
Consider the Notepad program.
Type Ctrl+F to call up the Find dialog.
This is a modeless dialog:
The main window is still interactive.
While the Find dialog is up,
call up the About dialog from the Help menu.
You now have the main Notepad window with two owned windows,
an About dialog that will re-enable the main Notepad window
when it is dismissed,
and a Find dialog that will not.
</p>
<table BORDER=0 CELLSPACING=0 STYLE="border-collapse: collapse">
<tr>
<td COLSPAN=3 ALIGN=center STYLE="border: dotted .75pt black; padding: 1em">Notepad main window</td>
<td STYLE="width: 1em"></td>
<td ROWSPAN=3>A connector is solid if the owned window re-enables
                  the owner, dotted if it does not.
                  (Remember, whether the line is dotted or not cannot
                  be determined algorithmically.)
                  </td>
</tr>
<tr>
<td ALIGN=center><span STYLE="border-right: solid .75pt black">&nbsp;</span></td>
<td STYLE="width: 1em"></td>
<td ALIGN=center><span STYLE="border-right: dotted .75pt black">&nbsp;</span></td>
</tr>
<tr>
<td ALIGN=center STYLE="border: solid .75pt black; padding: 1em">About</td>
<td STYLE="width: 1em"></td>
<td ALIGN=center STYLE="border: solid .75pt black; padding: 1em">Find</td>
</tr>
</table>
<p>
According to our spec, which of these windows is modal?
Does that match your intuitive sense?
</p>
<p>
Here's another case:
From Notepad's Open dialog, type the name of a file that does not
exist.
</p>
<table BORDER=0 CELLSPACING=0 STYLE="border-collapse: collapse">
<tr>
<td COLSPAN=3 ALIGN=center STYLE="border: dotted .75pt black; padding: 1em">Notepad main window</td>
</tr>
<tr>
<td ALIGN=center><span STYLE="border-right: solid .75pt black">&nbsp;</span></td>
</tr>
<tr>
<td ALIGN=center STYLE="border: dotted .75pt black; padding: 1em">Open</td>
</tr>
<tr>
<td ALIGN=center><span STYLE="border-right: solid .75pt black">&nbsp;</span></td>
</tr>
<tr>
<td ALIGN=center STYLE="border: solid .75pt black; padding: 1em">File not found</td>
</tr>
</table>
<p>
Which of these windows is a modal window?
</p>
<p>
Still unresolved is whether
this is the right definition for the customer's needs.
The customer never explained why they needed to identify
modal windows, and once we gave them the
<code>Is&shy;Modal&shy;Window&shy;According&shy;To&shy;This&shy;Particular&shy;Spec</code>
function, they never wrote back.
</p>
<p>
If they were trying to identify modal windows so they could try
to close them, then in the <i>File not found</i> case above,
they may try to close the <i>Open</i> window, when the correct
window to close first is the <i>File not found</i> window,
because you need to
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/02/28/381591.aspx">
respect a window's disabled state</a>.
</p>
<p>
Since the customer never wrote back, we will never know.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-952553">
				<div id="div-comment-952553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952553">
			December 12, 2011 at 7:33 am</a>		</div>

		<p>Isn&#39;t this the sort of question that is almost certainly tied to doing something very wrong?</p>
<p>Programs shouldn&#39;t need to determine things like modality&#8230; whether a given window is disabled or not, sure.</p>
<p>This is the sort of question that begs to know &quot;Why do you ask?!&quot; &nbsp;Surely the real solution is disabusing the customer of their basic misguided intentions&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-952563">
				<div id="div-comment-952563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frederik Slijkerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952563">
			December 12, 2011 at 7:39 am</a>		</div>

		<p>Interestingly, in your example, Windows itself also thinks that the Find window is modal in Notepad if it is active and the About dialog is also open. If you click on the main Notepad window, it flickers the Find window to indicate that this is the current modal window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-952573">
				<div id="div-comment-952573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Avi Shevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952573">
			December 12, 2011 at 7:54 am</a>		</div>

		<p>@Frederik</p>
<p>I tried this on Windows 7. &nbsp;Notepad flashes whichever of the windows has focus when you click on the main (editor) window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-952583">
				<div id="div-comment-952583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952583">
			December 12, 2011 at 8:19 am</a>		</div>

		<p>I&#39;m willing to guess they were writing some window manager code where they somehow had this stupid assumption that the relationships were fully traceable.</p>
<p>Or maybe all they needed was the easy case: Given this disabled window, find me an owned window that appears to be causing it to be disabled. This is what Windows does when you click on the disabled window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-952633">
				<div id="div-comment-952633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952633">
			December 12, 2011 at 9:33 am</a>		</div>

		<p>Raymond, I think you got the solid and dotted lines wrong in the Notepad-About-Find diagram.</p>
<p>Or was this a sneaky trick to see if we were paying attention? :-D</p>
<div class="post">[<i>Fixed, thanks. But yeah ummmmmmmmm it was a test! Yeah, that&#39;s the ticket! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-952673">
				<div id="div-comment-952673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bcs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952673">
			December 12, 2011 at 1:19 pm</a>		</div>

		<p>From that it sound&#39;s like the correct answer is that being modal is not property of a window but of the code that &quot;run&quot; it. At a guess, what the end user was looking for is: &quot;Will this window closing automatically re-enable it&#39;s owner?&quot; If I&#39;m reading correctly, the answer to that is &quot;no, never.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-952683">
				<div id="div-comment-952683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952683">
			December 12, 2011 at 2:42 pm</a>		</div>

		<p>[I bet it picks the last active popup. -Raymond]</p>
<p>Given the 15 year old outstanding bug about nested modal dialog boxes can be neatly explained by Windows using this API for the job, I&#39;ll bet it does too.</p>
<p>FYI because somebody&#39;s going to ask, the workaround is to keep track internally and call SetFocus yourself in the WM_SETFOCUS message.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-952693">
				<div id="div-comment-952693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bjm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952693">
			December 12, 2011 at 2:58 pm</a>		</div>

		<p>Seems to me the correct answer is to stop disabling windows that I might want to use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-952663">
				<div id="div-comment-952663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MikeCaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952663">
			December 12, 2011 at 12:13 pm</a>		</div>

		<p>@Joshua: How do you expect windows to be able to determine &quot;an owned window that appears to be causing it to be disabled&quot;? Disabling a window is a one-shot deal:</p>
<p>EnableWindow(hWnd, FALSE);</p>
<p>I strongly suspect that no one keeps track of this information, especially since that would require the win32 API to have psychic powers (&quot;let&#39;s see&#8230; this position on the stack means we&#39;re being called from code that is associated with this particular window!&quot;)</p>
<p>Rather, I bet it picks *some arbitrary* owned window and flashes that instead. See the Notepad example above.</p>
<div class="post">[<i>I bet it picks <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms633507(v=vs.85).aspx" rel="nofollow">the last active popup</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-952713">
				<div id="div-comment-952713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952713">
			December 12, 2011 at 10:48 pm</a>		</div>

		<p>@BCS: If you were to automatically close the About box by sending it the appropriate message, it will re-enable Notepad.</p>
<p>@BJM: This. Just take the absurd situation in the example of this article. When you actually open Notepad and open the About and Replace dialogues, you are in the bizarre situation where you cannot enter text in the main window, but you can still edit the contents of the main window by interacting with the Replace dialogue.</p>
<p>When you find yourself creating a modal dialogue, the first question you should ask yourself is: how can I do this without a modal dialogue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-952723">
				<div id="div-comment-952723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952723">
			December 12, 2011 at 10:58 pm</a>		</div>

		<p>Also, as an afterthought, it was perfectly clear what the customer meant. No sane person could have misinterpreted it and the two-page drivel on how a moron might have read it is a waste of pixels. Maybe Raymond should sit in his own nitpicker&#39;s corner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-952733">
				<div id="div-comment-952733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952733">
			December 13, 2011 at 3:46 am</a>		</div>

		<p>I believe &#8211; and I could well be wrong &#8211; that in the paragraph starting with &quot;Even if the result doesn&#39;t depend on predicting the future&#8230;&quot; all occurences of &quot;parent&quot; should read &quot;owner&quot; instead.</p>
<p>@Anonymous Coward: If it is perfectly clear to you what the customer meant I challenge you to provide code that implements the appropriate algorithm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-952813">
				<div id="div-comment-952813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952813">
			December 13, 2011 at 8:21 am</a>		</div>

		<p>@Tim: Go and take up Reading Comprehension 101. I said it&#39;s perfectly clear what the customer means, not that the customer can get what he wants.</p>
<p>The windowing system has no concept of modality. (And maybe for good reason because modal dialogues suck.) Every appearance of modality is hacked on and the application has to keep track of all the bookkeeping.</p>
<p>And when the application or libraries the application calls screw up, you get erratic behaviour like in the case of Notepad where the About box is modal with respect to the main window but not with respect to the Replace dialogue. And the Replace dialogue&#8230; well, we&#39;ve already talked about that. The reason that in this case it&#39;s hard to say if the windows are modal or not is because there is a bug in the software. It makes no sense to even ask if a dialogue is modal when the machinery behind modality breaks down.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com0003400182d76c6f odd alt thread-odd thread-alt depth-1" id="comment-952963">
				<div id="div-comment-952963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Richard+Russell' rel='external nofollow' class='url'>Richard Russell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-952963">
			December 13, 2011 at 2:26 pm</a>		</div>

		<p>@Anonymous Coward: I completely agree (with your comment regarding Raymond&#39;s pedantic rhetoric). &nbsp;If he replied to the customer in a similar vein I&#39;m not at all surprised that they &quot;never wrote back&quot;!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-953033">
				<div id="div-comment-953033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">OCD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-953033">
			December 13, 2011 at 7:00 pm</a>		</div>

		<p>@Anonymous Coward</p>
<p>The point of the &quot;two-page drivel&quot;, is to carefully de-construct what the seemingly obvious concept &quot;modal window&quot;, actually means. By carefully thinking through this concept, it becomes clear what &quot;modality&quot; really is, and the answer to the initial question is obvious. The point of this was to show how a little thought would have allowed the customer (and people like yourself) to answer that question themselves. That you are somehow offended by long detailed explanations suggests that you would likely go the ignorant route yourself, and ask the unnecessary question instead of thinking it through. Raymond seems to be on a quest to try and help people help themselves, but it will do nothing for the arrogant who are determined to remain ignorant.</p>
<p>@Richard</p>
<p>Anonymous is clearly a troll (who I have just given a nice large meal), but it is disappointing that you would side with such bile. Personally I would think twice before publicly criticising a highly respected blogger/developer when not hiding behind an anonymous persona.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-953083">
				<div id="div-comment-953083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Smitty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-953083">
			December 14, 2011 at 2:59 am</a>		</div>

		<p>&quot;This definition appears to be using a common abuse of terminology, using the words child and parent instead of the more accurate but clumsier owned and owner.&quot;</p>
<p>Perhaps this person has been using the Windows API for a long time, and is used to seeing API calls like:</p>
<p>HWND WINAPI GetParent(</p>
<p>&nbsp;__in &nbsp;HWND hWnd</p>
<p>);</p>
<p>with the (mostly confusing and almost completely useless) description &#8211; note the almost completely unhelpful use of OWNER and a PARENT in the same function description:</p>
<p>If the window is a child window, the return value is a handle to the parent window. If the window is a top-level window with the WS_POPUP style, the return value is a handle to the owner window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-953483">
				<div id="div-comment-953483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111212-00/?p=8923#comment-953483">
			December 15, 2011 at 9:55 am</a>		</div>

		<p>While the bile from Anonymous is certainly unwarranted, and I respect Mr. Chen&#39;s expertise (Wouldn&#39;t read this blog otherwise!) it really does come off as &quot;The customer asked us a simple question, and I wrote a 1000 word pedantic essay instead of answering it.&quot;</p>
<div class="post">[<i>Duh, the customer didn&#39;t get the 1000-word essay. The 1000-word essay was written for the blog to illustrate the point: &quot;First write your spec.&quot; And I walked through the process of writing the spec in painstaking detail to show how it&#39;s done. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

