<html>
<head>
<title>What is the deal with the ES_OEMCONVERT flag?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What is the deal with the ES_OEMCONVERT flag?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 19, 2005 / year-entry #194</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The ES_OEMCONVERT edit control style is a holdover from 16-bit Windows. This ancient MSDN article from the Windows 3.1 SDK describes the flag thus: ES_OEMCONVERT causes text entered into the edit control to be converted from ANSI to OEM and then back to ANSI. This ensures proper character conversion when the application calls the AnsiToOem...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The <a href="http://msdn.microsoft.com/library/en-us/shellcc/platform/commctls/editcontrols/editcontrolreference/editcontrolstyles.asp"> <code>ES_OEMCONVERT</code></a> edit control style is a holdover from 16-bit Windows. <a href="http://msdn.microsoft.com/library/en-us/dnwui/html/msdn_editctls.asp"> This ancient MSDN article from the Windows 3.1 SDK</a> describes the flag thus:</p>
<blockquote class="q"><p> ES_OEMCONVERT causes text entered into the edit control to be converted from ANSI to OEM and then back to ANSI. This ensures proper character conversion when the application calls the <b>AnsiToOem</b> function to convert a Windows string in the edit control to OEM characters. ES_OEMCONVERT is most useful for edit controls that contain filenames. </p>
</blockquote>
<p> Set the wayback machine to, well, January 31, 1992, the date of the article. </p>
<p> At this time, the predominant Windows platform was Windows&nbsp;3.0. Windows&nbsp;3.1 was still a few months away from release, and Windows&nbsp;NT&nbsp;3.1 was over a year away. The predominant file system was 16-bit FAT, and the relevant feature of FAT of this era for the purpose of this discussion is that file names were stored on disk in the OEM character set. (We discussed <a href="http://blogs.msdn.com/oldnewthing/archive/2005/03/08/389527.aspx"> the history behind the schism between the OEM and ANSI code pages</a> in an earlier article.) </p>
<p> Since GUI programs used the ANSI character set, but file names were stored in the OEM character set, the only characters that could be used in file names from GUI programs were those that exist in both character sets. If a character existed in the ANSI character set but not the OEM character set, then there would be no way of using it as a file name; and if a character existed in the OEM character set but not the ANSI character set, the GUI program couldn't manipulate it. </p>
<p> The <code>ES_OEMCONVERT</code> flag on a edit control ensures that only characters that exist in both the ANSI and OEM character sets are used, hence the remark "ES_OEMCONVERT is most useful for edit controls that contain filenames". </p>
<p> Fast-forward to today. </p>
<p> All the popular Windows file systems support Unicode file names and have for ten years. There is no longer a data loss converting from the ANSI character set to the character set used by the file system. Therefore, there is no need to filter out any characters to forestall the user typing a character that will be lost during the conversion to a file name. In other words, the <code>ES_OEMCONVERT</code> flag is pointless today. It's a leftover from the days before Unicode. </p>
<p> Indeed, if you use this flag, you make your program worse, not better, because it unnecessarily restricts the set of characters that the user will be allowed to use in file names. A user running the US-English version of Windows would not be allowed to enter Chinese characters as a file name, for example, even though the file system is perfectly capable of creating files whose names contain those characters. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-291383">
				<div id="div-comment-291383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">michkap</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291383">
			July 19, 2005 at 10:09 am</a>		</div>

		<p>Though there are people who speak fluent question mark, a dialect created by non-Unicode applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rosyna odd alt thread-odd thread-alt depth-1" id="comment-291393">
				<div id="div-comment-291393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rosyna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291393">
			July 19, 2005 at 10:21 am</a>		</div>

		<p>So I wonder, why isn&#8217;t this flag just ignored on Windows 5.x? If it can only do bad things and is pointless, I mean?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291403">
				<div id="div-comment-291403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Green</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291403">
			July 19, 2005 at 11:38 am</a>		</div>

		<p>There may be legacy applications that are expecting filenames in the OEM format, and simply disabling the flag could break them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291413">
				<div id="div-comment-291413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">binaryc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291413">
			July 19, 2005 at 11:47 am</a>		</div>

		<p>So I guess the next question is why doesn&#8217;t MSDN have &quot;Do not use this flag&quot; in bright red text?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-291423">
				<div id="div-comment-291423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291423">
			July 19, 2005 at 11:56 am</a>		</div>

		<p>There are still valid uses for the flag, as the current documentation points out: This style is most useful for edit controls that contain file names that will be used on file systems that do not support Unicode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291453">
				<div id="div-comment-291453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.fleeb.com' rel='external nofollow' class='url'>Trey Van Riper</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291453">
			July 19, 2005 at 1:15 pm</a>		</div>

		<p>I can easily imagine a situation in which this flag would still be useful.</p>
<p>If your application created a boot floppy, where the operating system and OS on the floppy used FAT16 (perhaps because it has no concerns about Y2K), and you wanted to make sure files added to the boot floppy did not have invalid file names, you might want to use such a flag.</p>
<p>Although, with the ubiquity of CD-ROM burners, one would hope floppies are on their way out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291483">
				<div id="div-comment-291483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miles Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291483">
			July 19, 2005 at 4:45 pm</a>		</div>

		<p>Ok. So will this flag be supported forever? Does that make sense to you? It doesn&#8217;t for me. There should be some way to drop a feature that has long since outlived it&#8217;s usefulness. </p>
<p>I understand and agree with the logic not to break legacy programs, but if there is no way to drop useless items, eventually there will be nothing left but useless items.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291493">
				<div id="div-comment-291493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mongo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291493">
			July 19, 2005 at 6:24 pm</a>		</div>

		<p>The only way to drop a feature that&#8217;s no longer useful is to, first of all, drop everything that still uses that feature even if it offends you.</p>
<p>There are still old applications that will break if that flag suddenly starts getting ignored.</p>
<p>On the other hand, a simple #ifdef IGNORE_DEPRECATED_FEATURES in the platform SDK header files around some of these things would be a good way to encourage new code to do things a better way.</p>
<p>(Probably not exactly a trivial change to make, but it seems like a good idea anyway.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291503">
				<div id="div-comment-291503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291503">
			July 19, 2005 at 9:51 pm</a>		</div>

		<p>One &quot;maybe&quot; related program.</p>
<p>It happens to me that we have a VB6 program that will &quot;shell execute&quot; WGET program to synchronize a remote directory via FTP.(With CHT charset on local WinXP and CHS on remote Win2003 SBS) And we found that the filenames download with -m option becomes garbage characters.</p>
<p>Perheps it&#8217;ll be better if we restrict the filenames in English charset. (I know that we can do it inside the program, anyway)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291513">
				<div id="div-comment-291513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291513">
			July 19, 2005 at 9:53 pm</a>		</div>

		<blockquote><p>
  All the popular Windows file systems support<br />
  <br />&gt; Unicode file names and have for ten years.</p>
<p>True.</p>
<p>&gt; There is no longer a data loss converting<br />
  <br />&gt; from the ANSI character set to the character<br />
  <br />&gt; set used by the file system.</p>
<p>False.  There are cases where IE, running under Windows 2000, viewed a page on Microsoft&#8217;s site (or others) and saved the page to a disk file (in VFAT16 or FAT32), after which applications in Windows 2000 (IE or others) could open the file but applications in Windows 98 couldn&#8217;t.  This is even when Windows 2000 and Windows 98 were the same language version.</p>
<p>It is also rather trivial to connect an external hard drive to a machine running Windows 98 or 2000 or ME or XP and create a file, then connect the drive to a machine running a different language version of Windows 98 or ME and be unable to access the file.  So we could almost say that Windows systems for the past 5 years instead of 10 avoid the problem.  Almost, except for ME.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291543">
				<div id="div-comment-291543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">binaryc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291543">
			July 20, 2005 at 10:33 am</a>		</div>

		<p>Does ME really count as an operating system?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291553">
				<div id="div-comment-291553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.zabkat.com' rel='external nofollow' class='url'>nikos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291553">
			July 20, 2005 at 10:55 am</a>		</div>

		<blockquote><p>
  There is no longer a data loss converting<br />
  <br />&gt; from the ANSI character set to the character<br />
  <br />&gt; set used by the file system</p>
<p>that&#8217;s only for unicode executables<br />
  <br />take any ansi file manager browsing folder with non-english filenames (e.g. greek) and they will appear filled with question marks. Something that easily escapes notice unless you are supplying code to non-english locales!
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-291573">
				<div id="div-comment-291573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291573">
			July 20, 2005 at 12:19 pm</a>		</div>

		<p>Nikos: A valid but irrelevant point. That data loss you&#8217;re seeing is not in the conversion from ANSI to Unicode the file system character. Rather it&#8217;s the conversion in the opposite direction that is lossy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291903">
				<div id="div-comment-291903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050719-12/?p=34893#comment-291903">
			July 21, 2005 at 1:25 pm</a>		</div>

		<p>Mongo:</p>
<p>&gt; On the other hand, a simple #ifdef<br />
<br />&gt; IGNORE_DEPRECATED_FEATURES in the platform SDK<br />
<br />&gt; header files around some of these things would<br />
<br />&gt; be a good way to encourage new code to do<br />
<br />&gt; things a better way.</p>
<p>FWIW, Gtk+ and some of its dependent libs (atk, gdk, perhaps a few of the others) have something exactly like this.  Some releases deprecate some widgets (for example, the GtkTreeView has obsoleted several old widgets, like the GtkCList/GtkCTree), and if you #define GTK_DISABLE_DEPRECATED before you #include the main Gtk+ header file (or you use -DGTK_DISABLE_DEPRECATED on the gcc command line), then you won&#8217;t get the definitions for those widgets&#8217; structs, or prototypes for the supporting functions.</p>
<p>The functions and widgets are still available in the library so it doesn&#8217;t break binary compatibility, but programs that define &lt;whatever&gt;_DISABLE_DEPRECATED won&#8217;t be able to use them.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

