<html>
<head>
<title>What are these strange =C: environment variables?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What are these strange =C: environment variables?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 6, 2010 / year-entry #132</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>30</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You won't see them when you execute a SET command, but if you write a program that manually enumerates all the environment variables and prints them out, and if you launch it from a command prompt, then you'll see weird variables with names like =C: and whose values correspond to directories on that drive. What...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
You won't see them when you execute a <code>SET</code> command,
but if you write a program that manually enumerates all the
environment variables and prints them out,
and if you launch it from a command prompt,
then you'll see weird
variables with names like =C: and whose values correspond to
directories on that drive.
What are these things?
</p>
<p>
These variables are part of the private bookkeeping of the command
processor cmd.exe.
That's why I added <i>if you launch it from a command prompt</i>
to the steps above, because if you run the program from Explorer's
<i>Run</i> dialog, you won't see them.
If a cmd.exe is not in the chain of custody of your environment block,
then you won't see the weird cmd.exe bookkeeping variables.
</p>
<p>
Okay, so the command processor sets these things, but what are they?
They are a leftover from the command processor's attempt to mimic
the old MS-DOS way that drives and directories were handled.
Whereas in Win32, there is only one current directory,
in MS-DOS, there was one current directory for each drive.
Consider the following sequence of commands:
</p>
<pre>
A&gt; CD \SUBDIR
// current directory for drive A is A:\SUBDIR
A&gt; B:
B&gt; CD \TWO
// current directory for drive B is B:\TWO
B&gt; A:
A&gt; DIR
// shows a directory listing for A:\SUBDIR
</pre>
<p>
During this sequence of commands, we start with A: as the
current drive and set its current directory to A:\SUBDIR.
Next, we set the current drive to B: and set
B:\TWO as its current directory.
Finally, we set the current drive back to A:,
and when we ask for a listing,
we get the contents of A:\SUBDIR because that is the
current directory on the current drive.
</p>
<p>
Win32 does not have the concept of a separate current directory
for each drive, but the command processor wanted to preserve
the old MS-DOS behavior because people were accustomed to it
(and batch files relied upon it).
The solution was to store this "per-drive current directory"
in the environment, using a weird-o environment variable name
so it wouldn't conflict with normal environment variables.
</p>
<p>
If you repeated the above commands in cmd.exe, the output
is the same, but it is accomplished in a very different way.
</p>
<pre>
A&gt; CD \SUBDIR
// Environment variable =A: set to A:\SUBDIR
// Current Win32 directory set to A:\SUBDIR
A&gt; B:
B&gt; CD \TWO
// Environment variable =B: set to B:\TWO
// current Win32 directory set to B:\TWO
B&gt; A:
// Current Win32 directory set to A:\SUBDIR
A&gt; DIR
// shows a directory listing for A:\SUBDIR
</pre>
<p>
When we switch back to drive A:,
the command processor says,
"Hey, what was the current directory on drive A: the last
time I was there?"
It looks into its environment and finds the =A: variable,
which tells it, "Oh, it was A:\SUBDIR".
And that's the Win32 directory that it sets as current.
</p>
<p>
But why put these internal variables in the environment?
Can't they just be regular variables inside the cmd.exe process?
</p>
<p>
The variables are exported into the environment because you
want these "fake per-drive current directories" to be inherited
by child processes.
For example, consider that you are sitting at your command prompt,
you run emacs, then from emacs, you shell out to another command prompt.
You would expect that the nested command prompt will have the same
"per-drive current directories" that you set back in the outer
command prompt.
</p>
<pre>
C:\SUBDIR&gt; D:
D:\&gt; emacs
M-x shell
D:\&gt; C:
C:\SUBDIR&gt;
// the "current directory on drive C" was inherited as expected
</pre>
<p>
What should you do about these variables, then?
</p>
<p>
Nothing. Just let them be and do their jobs.
I'm just mentioning them here so you won't freak out when you see them.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-830653">
				<div id="div-comment-830653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830653">
			May 6, 2010 at 7:08 am</a>		</div>

		<p>Awesome. &nbsp;I always wondered what these were used for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-830663">
				<div id="div-comment-830663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830663">
			May 6, 2010 at 7:16 am</a>		</div>

		<p>Per-drive-letter current directories are an awesome convenience when combined with SUBST (for local drives) or PUSHD (for network shares) to make it very easy to work with deeply nested directory trees.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830713">
				<div id="div-comment-830713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Jonson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830713">
			May 6, 2010 at 7:42 am</a>		</div>

		<p>Shouldn&#8217;t this be filed under History, as this is a behavior in order to preserve past MS-DOS behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-830753">
				<div id="div-comment-830753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830753">
			May 6, 2010 at 8:12 am</a>		</div>

		<p>Thanks, I ran into this about a month or so ago when I had to write a program that called another program with a subset of the current environment, and was a bit confused by them. &nbsp;I thought they were something specific to the other program, since I saw them for the first time after I installed that other program. &nbsp;I guess I had launched Visual Studio from a command prompt that time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830803">
				<div id="div-comment-830803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830803">
			May 6, 2010 at 9:20 am</a>		</div>

		<p>@Raymond &amp; Leo Davidson:</p>
<p>Win32 apparently uses them under the covers. How else would it convert d:file.txt to canonicalized name d:d_current_dirfile.txt</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-830813">
				<div id="div-comment-830813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830813">
			May 6, 2010 at 9:21 am</a>		</div>

		<ul>
<li>I mean, in CreateFile cal and other such.</li>
</ul>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830883">
				<div id="div-comment-830883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830883">
			May 6, 2010 at 11:32 am</a>		</div>

		<p>I&#8217;m pretty sure this stuff used to work in Save dialogs too (you could type in C: to jump to the current directory on C: from the current app). &nbsp;Has this capability been removed from Windows and is only present in cmd.exe now?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-830913">
				<div id="div-comment-830913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://windowssucks.wordpress.com/' rel='external nofollow' class='url'>WndSks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830913">
			May 6, 2010 at 11:59 am</a>		</div>

		<p>&quot;You won&#8217;t see them when you execute a SET command&quot; not 100% true, if you execute set &quot; (set space doublequote)it will display those hidden variables (Drive paths and =ExitCode)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830933">
				<div id="div-comment-830933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830933">
			May 6, 2010 at 12:24 pm</a>		</div>

		<p>&quot;Win32 does not have the concept of a separate current directory for each drive&quot; &#8211; is it a contract thing, or it is a implementation detail of the way NT creates the dos devices which in reality are links in the Object manager namespace?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-830963">
				<div id="div-comment-830963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Caron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830963">
			May 6, 2010 at 1:14 pm</a>		</div>

		<p>Teo, how would you ask Win32 about different drives? GetCurrentDirectory() doesn&#8217;t have an argument to specify the drive, and a process doesn&#8217;t have more than one active directory.</p>
<p>And, frankly, I don&#8217;t see why a process (that is: process, not human) would need more than one active directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830993">
				<div id="div-comment-830993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830993">
			May 6, 2010 at 1:40 pm</a>		</div>

		<p>Raymond,</p>
<p>I think that this is not cmd.exe but Win32 that creates and tracks these environment variables. &nbsp;I tried this in PowerShell and in Python and both seem to preserve the current directory per-drive if you chdir between &quot;c:&quot; and &quot;d:&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-831023">
				<div id="div-comment-831023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ishai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831023">
			May 6, 2010 at 2:11 pm</a>		</div>

		<p>Actually, Win32 DOES keep per volume current directory. &nbsp;And this is even documented.</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/aa363806" rel="nofollow">http://msdn.microsoft.com/en-us/library/aa363806</a>(VS.85).aspx</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-831033">
				<div id="div-comment-831033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831033">
			May 6, 2010 at 2:13 pm</a>		</div>

		<p>Win32 does track a per-drive current directory (this is documented at <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/aa363806.aspx" rel="nofollow">http://msdn.microsoft.com/en-us/library/aa363806.aspx</a>), but on a test program I wrote it doesn&#8217;t touch the environment variables, so it seems to be a different mechanism. Why the difference? Are the win32 ones not inherited by child processes?</p>
<p>(Also, what&#8217;s =ExitCode? I mean, it&#8217;s obvious what it <em>is</em>, but why not just make an actual environment variable of %ErrorLevel% &#8211; or, really what&#8217;s the benefit of making this information inherit to child processes?)</p>
<p>PS: Interestingly, these also don&#8217;t show up in the CRT&#8217;s environ/_wenviron &#8211; maybe something to do with the fact that _[w]putenv would interpret them as having an empty name?</p>
<p>&quot;Teo, how would you ask Win32 about different drives?&quot;</p>
<p>SetCurrentDirectory(&quot;A:&quot;); GetCurrentDirectory(&#8230;); SetCurrentDirectory(&quot;B:&quot;); GetCurrentDirectory(&#8230;);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-831043">
				<div id="div-comment-831043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.roseharp.com' rel='external nofollow' class='url'>Timothy Byrd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831043">
			May 6, 2010 at 3:46 pm</a>		</div>

		<p>Also works in Windows PowerShell, so not quite legacy, yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson even thread-even depth-1" id="comment-830793">
				<div id="div-comment-830793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-830793">
			May 6, 2010 at 9:05 am</a>		</div>

		<p>For what it&#8217;s worth, the CRT _chdir function still maintains these env-vars.</p>
<p>From reading the CRT source it appears that Win32 SetCurrentDirectory does not set the env-vars (not surprising) *but* Win32 functions like GetFullPathName apparently do use the env-vars if they exist and you pass them paths like &quot;C:&quot; (without a slash on the end).</p>
<p>(This came up on Usenet earlier this week, coincidentally: <a rel="nofollow" target="_new" href="http://groups.google.com.au/group/microsoft.public.win32.programmer.kernel/browse_thread/thread/df3c6d658f98e3d3#" rel="nofollow">http://groups.google.com.au/group/microsoft.public.win32.programmer.kernel/browse_thread/thread/df3c6d658f98e3d3#</a> )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-831083">
				<div id="div-comment-831083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Blake</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831083">
			May 6, 2010 at 5:35 pm</a>		</div>

		<p>I can&#8217;t speak for Python, but PowerShell maintains it&#8217;s own concept of a current location on each drive, even for &#8216;drives&#8217; that aren&#8217;t at all filesystem related, like the registry or certificate store. &nbsp; The way it does so does not interop with cmd.exe &#8211; if you start a cmd subshell it will inherit the correct Win32 current directory on the current drive, but none of the others. &nbsp; Sounds like I should go add a feature request on Connect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-831093">
				<div id="div-comment-831093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://scottandmichelle.net/scott' rel='external nofollow' class='url'>Scott</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831093">
			May 6, 2010 at 6:01 pm</a>		</div>

		<p>When I wrote my little CD replacement utility, it took me a long time to figure out these variables. &nbsp;I don&#8217;t remember how I stumbled on them, but I was a very happy camper when I finally did. &nbsp;If CMD&#8217;s working directory is changed without these variables being updated it&#8217;s not too happy in some situations. &nbsp;Of course, that&#8217;s probably what I get for mucking with another process&#8217; working directory to begin with :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-831103">
				<div id="div-comment-831103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lotsofmytalk@gmail.com' rel='external nofollow' class='url'>unekdoud</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831103">
			May 6, 2010 at 6:20 pm</a>		</div>

		<p>Placing either = or : in any short string makes me interpret it as an emoticon.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-831153">
				<div id="div-comment-831153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lahosken.san-francisco.ca.us/' rel='external nofollow' class='url'>Larry Hosken</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831153">
			May 6, 2010 at 8:20 pm</a>		</div>

		<p>&quot;I&#8217;m just mentioning them here so you won&#8217;t freak out when you see them.&quot;</p>
<p>I won&#8217;t have occasion to see them any time soon but I&#8217;M GOING TO FREAK OUT ANYWAY knowing that they&#8217;re in there, lurking out of sight.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-831203">
				<div id="div-comment-831203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrei Vajna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831203">
			May 7, 2010 at 1:46 am</a>		</div>

		<p>Ah, this explains the following behaviour.</p>
<p>I&#8217;m on drive C and execute the following command:</p>
<p>C&gt; CD D:SOMEDIR</p>
<p>The current dir wouldn&#8217;t change, I&#8217;d still be on drive C, but then if I do</p>
<p>C&gt; D:</p>
<p>that will get me to drive D in D:SOMEDIR.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-831213">
				<div id="div-comment-831213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ankhsvn.net' rel='external nofollow' class='url'>Bert Huijben</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831213">
			May 7, 2010 at 3:14 am</a>		</div>

		<p>The nicest issue I found, related to this examples is if you use</p>
<p>CD d:SomeDir (note the lower case D)</p>
<p>D:</p>
<p>Then your current working directory is &quot;d:SomeDir&quot; instead of &quot;D:SomeDir&quot; as virtually all software expects without knowing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-831183">
				<div id="div-comment-831183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Another John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831183">
			May 7, 2010 at 12:20 am</a>		</div>

		<p>Shouldn&#8217;t that be:</p>
<p>B&gt; CD TWO</p>
<p>// current directory for drive B is B:TWO</p>
<p>*B*&gt; A:</p>
<p>and</p>
<p>B&gt; CD TWO</p>
<p>// Environment variable =B: set to B:TWO</p>
<p>// current Win32 directory set to B:TWO</p>
<p>*B*&gt; A:</p>
<p>Apologies for &#8220;nitpicker&#8217;s corner&#8221; comment &#8211; just want to be sure I understand wat is going on</p>
<div class=post>[<i>Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-831293">
				<div id="div-comment-831293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M&#233;dinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831293">
			May 7, 2010 at 8:51 am</a>		</div>

		<p>The strangest thing about current directories is that they are apparently not thread-local.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-831563">
				<div id="div-comment-831563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.deadnode.org/' rel='external nofollow' class='url'>James Sutherland</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831563">
			May 7, 2010 at 11:09 am</a>		</div>

		<p>The way &quot;cd d:example&quot; doesn&#8217;t appear to change anything (unless you&#8217;re on D: already of course) seems confusing at first, but makes sense once you understand it&#8217;s changing &quot;the current directory on D:&quot; rather than &quot;the current directory&quot;. The /D switch is quite handy for giving the results you might be expecting otherwise &#8211; very handy in batch files for changing to a complete path.</p>
<p>Interesting the way the implementation seems split between cmd.exe&#8217;s use of environment variables and something else within Win32 &#8211; then down on the native level, no concept of &quot;current directory&quot; at all; if you want to open a relative pathname, you have to pass NtCreateFile an explicit &quot;root&quot; directory to resolve it against at the same time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-831833">
				<div id="div-comment-831833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831833">
			May 7, 2010 at 9:03 pm</a>		</div>

		<p>@M&#233;dinoc: You&#8217;re right, current directory is not thread local. In MS-DOS, it wasn&#8217;t even process local (which XTree abused quite effectively).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-831903">
				<div id="div-comment-831903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831903">
			May 8, 2010 at 3:09 pm</a>		</div>

		<p>The current directory on unix systems isn&#8217;t thread-local &#8211; you&#8217;re supposed to maintain an open handle to any directory you&#8217;re interested in on multithreaded apps.</p>
<p>On MS-DOS, was it per-drive or per-disk?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-831943">
				<div id="div-comment-831943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-831943">
			May 9, 2010 at 9:51 am</a>		</div>

		<p>To get the current directory on X drive, use GetFullPathName on the &quot;X:.&quot; string.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-832053">
				<div id="div-comment-832053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-832053">
			May 10, 2010 at 4:12 am</a>		</div>

		<p>Win32 on WinCE doesn&#8217;t have current dir at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-832503">
				<div id="div-comment-832503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pagetable.com/' rel='external nofollow' class='url'>Myria</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-832503">
			May 10, 2010 at 2:31 pm</a>		</div>

		<p>The NT kernel doesn&#8217;t even have current directories at all; they are entirely a user-mode concept. &nbsp;The current directory is implemented by kernel32.dll and ntdll.dll as an open handle to the directory that is referenced whenever a relative path is used. &nbsp;This directory is inherited by child processes through the process parameters block.</p>
<p>If you&#8217;ve ever programmed the NT kernel, you may have heard of the kernel call ZwCreateFile (or NtCreateFile):</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/bb432380" rel="nofollow">http://msdn.microsoft.com/en-us/library/bb432380</a>(VS.85).aspx</p>
<p>When opening a relative path, the stored current directory handle is passed by ntdll.dll in the RootDirectory field of the ObjectAttributes parameter when calling NtCreateFile to complete your request.</p>
<p>Other operating systems, in particular Linux, have a similar concept. &nbsp;Linux&#8217;s *at calls &#8211; openat, chmodat, unlinkat, &#8230; &#8211; allow you to specify a directory handle from which relative paths are interpreted. &nbsp;(Linux has a current directory for each process at the kernel level, however.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-833253">
				<div id="div-comment-833253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100506-00/?p=14133#comment-833253">
			May 13, 2010 at 6:10 am</a>		</div>

		<p>A later test seems to show that win32 doesn&#8217;t maintain per-drive current directories after all (so that documentation I linked earlier is wrong)</p>
<p>SetCurrentDirectory/GetFullPathName will pick them up from the environment variables (which are maintained by MSVCRT in addition to cmd) if they are set and you are specifying a relative path, but SetCurrentDirectory neither sets them nor does anything else to save the current directory per-drive.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

