<html>
<head>
<title>Why do registry keys have a default value?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why do registry keys have a default value?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 18, 2008 / year-entry #20</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>36</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In addition to all the named values you can create underneath a registry key with the RegSetValueEx function, there is also the so-called default value which you obtain by passing NULL or a pointer to a null string as the lpValue. This default value is also the value set and retrieved when you call RegSetValue...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>In addition to all the named values you can create underneath a registry key with the <code>RegSetValueEx</code> function, there is also the so-called <i>default value</i> which you obtain by passing <code>NULL</code> or a pointer to a null string as the <code>lpValue</code>. This default value is also the value set and retrieved when you call <code>RegSetValue</code> and <code>RegQueryValue</code>. What's the deal with this default value?</p>
<p> The original 16-bit registry didn't have named values. All it had were keys, and associated with each key was a single piece of data: a string. The functions that operated on this data were <code>RegSetValue</code> and <code>RegQueryValue</code>, which explains why those functions (1)&nbsp;don't have a <code>lpValue</code> parameter and (2)&nbsp;set and retrieve only string data. Because back in the 16-bit world, that's all you had. </p>
<p> In the conversion to Win32, the registry gained new capabilities, such as storing data in formats beyond simple strings, and storing multiple pieces of data under a single key, using a name to distinguish them. What used to be called simply "the value of a registry key" (for since there was only one, there was no need to give it a name) now goes by the special name <i>the default value</i>: It's the value whose name is null. </p>
<p> There's nothing particularly special about the default value aside from its unusual name. A named value need not exist, and if it exists, the data type could be anything. Similarly, the default value need not exist, and its type can be anything. At this point, it's just a value with a strange name. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (36)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-591383">
				<div id="div-comment-591383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob H</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591383">
			January 18, 2008 at 10:06 am</a>		</div>

		<p>Oh! I had always wondered why Registry keys aren&#8217;t called &quot;nodes&quot; or &quot;folders&quot;, values aren&#8217;t &quot;keys&quot;, and the associated data with one of those isn&#8217;t the &quot;value&quot;. Now it all makes sense!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-someone odd alt thread-odd thread-alt depth-1" id="comment-591413">
				<div id="div-comment-591413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/anony.muos' rel='external nofollow' class='url'>anony.muos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591413">
			January 18, 2008 at 10:46 am</a>		</div>

		<p>I&#8217;ve another question for you: Since the introduction of the registry, why doesn&#8217;t it still allow per-value (more fine-grained) permissions? It only allows per key permissions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591423">
				<div id="div-comment-591423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591423">
			January 18, 2008 at 10:57 am</a>		</div>

		<p>Someone: &nbsp;Why would this be necessary? &nbsp;If you need to split up permissions, put them in different keys.</p>
<p>Next, you&#8217;ll want to allow some users to change part of a value&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591443">
				<div id="div-comment-591443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591443">
			January 18, 2008 at 11:57 am</a>		</div>

		<p>I don&#8217;t know. &nbsp;Registry keys and values are analogous to file system folders and files. &nbsp;If the file system allows you to set permissions on specific files, why not be able to set permissions on specific registry values? &nbsp;I don&#8217;t really see the need for it, but it seems like it could have been done.</p>
<p>On the other hand, separation of global and user data into HKLM and HKCU probably provide enough functionality for 99.9% of developers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591453">
				<div id="div-comment-591453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Green</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591453">
			January 18, 2008 at 12:18 pm</a>		</div>

		<p>The whole registry nomenclature is a bit confusing, because a &#8220;key&#8221; has multiple &#8220;values&#8221;, and each &#8220;value&#8221; has an associated name and value. (Except for the default value, which is not named.) So to get a setting out of the registry you have to get the &#8220;value value.&#8221;</p>
<p>(Yes, I know, backwards compatibility forces your hand, like in everything.)</p>
<div class=post>[<i>The correct term for the contents of a value is <u>data</u>, so it&#8217;s not &#8220;value value&#8221; but rather &#8220;value data&#8221;. Not that it helps much. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591463">
				<div id="div-comment-591463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Weeble</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591463">
			January 18, 2008 at 1:16 pm</a>		</div>

		<p>Why were values introduced anyway? What advantage did they bring over simply nesting keys?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591473">
				<div id="div-comment-591473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591473">
			January 18, 2008 at 1:22 pm</a>		</div>

		<p>Presumably multiple values are far more efficient than multiple keys. You can read all values of a key in a single system call and store them with less metadata.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591483">
				<div id="div-comment-591483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591483">
			January 18, 2008 at 1:40 pm</a>		</div>

		<p>&lt;&lt; I don&#8217;t know. &nbsp;Registry keys and values are analogous to file system folders and files. &nbsp;If the file system allows you to set permissions on specific files, why not be able to set permissions on specific registry values? &nbsp;I don&#8217;t really see the need for it, but it seems like it could have been done. &gt;&gt;</p>
<p>In my experience, good engineers think &quot;why&quot; while others think &quot;why not?&quot; &nbsp;If you can&#8217;t think of a good need to do something, then don&#8217;t do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591503">
				<div id="div-comment-591503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591503">
			January 18, 2008 at 2:05 pm</a>		</div>

		<p>While on the subject, I&#8217;ve always wondered about REG_EXPAND_SZ. I know it&#8217;s supposed to store strings which have env variables, &nbsp;but was never clear about who should do the expanding &#8211; RegQueryValue[ex] doesn&#8217;t do it by itself. So, does it represent any contractual information, or just an additional metadata of &quot;you should expand me&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591523">
				<div id="div-comment-591523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591523">
			January 18, 2008 at 2:42 pm</a>		</div>

		<p>As I understand it, RegQueryValueEx is supposed to expand environment strings in REG_EXPAND_SZ data when it returns.</p>
<p>I assume the environment string names have to be surrounded by percents, as has been the case since DOS.</p>
<p>IE %WINDIR%, %SystemRoot%, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591533">
				<div id="div-comment-591533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">El Guapo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591533">
			January 18, 2008 at 3:59 pm</a>		</div>

		<p>Why was it called ReqQueryValue and not RegGetValue?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591393">
				<div id="div-comment-591393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591393">
			January 18, 2008 at 10:17 am</a>		</div>

		<p>Ahh yes, the default value. &nbsp;One of the quirks of regedit is that is places the string &quot;(Default)&quot; into the default value for the key when the default value is not set. &nbsp;This, unfortunately, leads some people to believe that the value actually *is* set, and that its contents are &quot;(Default)&quot;. &nbsp;</p>
<p>I remember working on one project where the we had used the default values for registry keys for one reason or another, and the software would operate in a specific way if the default value was set or not. &nbsp;One of the junior developers was working on a registry script and, noticing the large number of &quot;(Default)&quot; when using regedit, decided to put them into the registry script. &nbsp;Needless to say, it took us a while to figure out why our software wasn&#8217;t quite working right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591553">
				<div id="div-comment-591553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591553">
			January 18, 2008 at 6:58 pm</a>		</div>

		<p>Note that to actually set the default value you need to use regedt32.exe on Windows NT/2000 and reg.exe on Windows XP, as regedit.exe will only let you set string data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591563">
				<div id="div-comment-591563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591563">
			January 18, 2008 at 6:58 pm</a>		</div>

		<p>El Guapo, why do you query a database instead of &quot;get&quot; a database?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591573">
				<div id="div-comment-591573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Starfish</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591573">
			January 18, 2008 at 7:13 pm</a>		</div>

		<blockquote><p>
  El Guapo, why do you query a database instead of &quot;get&quot; a database?
</p></blockquote>
<p>You assume he &quot;gets&quot; databases ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591603">
				<div id="div-comment-591603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hexatron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591603">
			January 18, 2008 at 7:35 pm</a>		</div>

		<p>&lt;i&gt;Why was it called ReqQueryValue and not RegGetValue?&lt;/i&gt;</p>
<p>Don&#8217;t ask, don&#8217;t tell. (I am SO ashamed!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591633">
				<div id="div-comment-591633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591633">
			January 19, 2008 at 1:22 am</a>		</div>

		<p>Tom: it confuses people all the time.</p>
<p>Open regedit and do a search with &#8220;(Default)&#8221;.</p>
<p>You&#8217;ll find some amusing entries worthy of screenshots and puzzlement.</p>
<p>E.g., on my Vista machine, HKLMSYSTEMCurrentControlSetControlNlsLocale has two &#8220;(Default)&#8221; names. Easily confused since one is the default for the key, while the other is one that is literally named (Default).</p>
<p>XP has a few more I believe. The only problem is which one you get back isn&#8217;t easily distinguished since regedit lists them both as &#8220;(Default)&#8221;.</p>
<p>Source of great amusement and puzzlement. Use it to amaze your coworkers!</p>
<div class="post">[<i>So amusing <a href="http://blogs.msdn.com/oldnewthing/archive/2006/05/12/596113.aspx" rel="nofollow">I wrote about it in 2006</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591593">
				<div id="div-comment-591593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">scorpion007</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591593">
			January 18, 2008 at 7:25 pm</a>		</div>

		<p>Well, Get is opposite to Set, so if you can Set a value, you should be able to Get one, no? Query is perfectly fine though.</p>
<p>Also, there *is* a RegGetValue function, but it is very new, and only available in Win XP 64+, and Server 2003+.</p>
<p>It seems to be able to &#8216;do more&#8217;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591613">
				<div id="div-comment-591613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">El Guapo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591613">
			January 18, 2008 at 8:27 pm</a>		</div>

		<p>&gt; El Guapo, why do you query a database instead of &quot;get&quot; a database?</p>
<p>There is a difference between query and get, and I find your parallel between databases and the registry to be inappropriate. What this function is doing is a *get*, not a *query*. Hence the question.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591643">
				<div id="div-comment-591643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591643">
			January 19, 2008 at 5:37 am</a>		</div>

		<p>Slightly off-topic, but related to amusing/odd labels on empty items:</p>
<p>If you enumerate the groups of an NT account that isn&#8217;t in any groups, you don&#8217;t get a zero-length list as you&#8217;d expect; you get a list with one item: &quot;None&quot; (or something like that).</p>
<p>At least, that&#8217;s how it worked some years ago (must&#8217;ve been NT4 or Win2k and I think the API was NetUserGetGroups). It was confusing I tested my GUI with a groupless user. &quot;I don&#8217;t remember adding special code to do that&#8230; Oh, wait, it&#8217;s coming from the API.&quot; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591653">
				<div id="div-comment-591653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591653">
			January 19, 2008 at 9:29 am</a>		</div>

		<p>I believe (although I haven&#8217;t checked) that the real default value comes first in Regedit.</p>
<p>Another one, which also has a bad CLSID:</p>
<p>HKEY_LOCAL_MACHINESOFTWAREMicrosoftActive SetupInstalled Components{5A8D6EE0-3E18-11D0-821E-444553540000}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-someone odd alt thread-odd thread-alt depth-1" id="comment-591663">
				<div id="div-comment-591663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/anony.muos' rel='external nofollow' class='url'>anony.muos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591663">
			January 19, 2008 at 10:25 am</a>		</div>

		<p>@David Walker who said:&quot;Why would this be necessary? &nbsp;If you need to split up permissions, put them in different keys.&quot;</p>
<p>For the same reason that permissions basically exist. If you realize, the users/ones who set the permissions are not necessarily the ones who create the registry values/keys. Typically, registry values/keys are created by ones who DEVELOP/DISTRIBUTE software or by the OS, whereas a user can also have the need to set registry permissions. The registry isn&#8217;t like files and folders where permissions also serve the purpose of privacy from other users. Permissions exist in the registry to configure app behavior and if some app depends on several values in a key and if you deny it read/write/change permissions for all values rather than some optional value, that app will refuse to function entirely. Per-value permissions would not have been necessary if the registry was divided into keys which contained values which were optional separately from ones which were required for functioning.</p>
<p>That&#8217;s why I need more fine-grained control. Did you think I was merely ranting without a rational need?</p>
<p>@Jack Mathews: In my experience, good engineers think &quot;why&quot; while others think &quot;why not?&quot; &nbsp;If you can&#8217;t think of a good need to do something, then don&#8217;t do it.</p>
<p>And if it did not strike to that good engineer &quot;why&quot; rather than &quot;why not&quot;, though it may be a reason good enough, would he still be a good engineer?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591673">
				<div id="div-comment-591673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591673">
			January 19, 2008 at 12:49 pm</a>		</div>

		<p>someone:</p>
<p>Nothing you described shows an actual need. &nbsp;If you want different permissions for different values, then put them into different keys. &nbsp;You just described overengineering a system for no real gain at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591703">
				<div id="div-comment-591703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bcthanks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591703">
			January 19, 2008 at 9:47 pm</a>		</div>

		<p>So the original registry had keys, which can contain subkeys, any of which can have a value.</p>
<p>IMO, it would have made more sense to simply use subkeys to hold data instead of adding the concept of &quot;values&quot; with &quot;data.&quot; &nbsp;The only difference between a value and a key is that values are leaf nodes, unable to hold subkeys.</p>
<p>Was this done to make the registry resemble a filesystem? Keys == directories, values == files. Except registry keys can contain data (the &quot;default value&quot;) as if a directory can also have data attached.</p>
<p>As far as enumerating the registry, returning all of a key&#8217;s values would be the same as returning the key&#8217;s immediate subkeys and values.</p>
<p>Regedit would be less confusing: no &quot;(Default)&quot; values, each key has an optional value and zero or more subkeys.</p>
<p>As it stands today, it could use a different font/color for the &quot;default value&quot; to make it stand out. Changing the system language just for regedit is a hack.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591733">
				<div id="div-comment-591733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GrofLuigi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591733">
			January 20, 2008 at 12:20 am</a>		</div>

		<p>Is there a way to set (Default) to be expandable with regedit? I had quite hard time trying to do this until it dawned to me to export the key and edit it with text editor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-591683">
				<div id="div-comment-591683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591683">
			January 19, 2008 at 5:35 pm</a>		</div>

		<p>someone: &quot;The registry isn&#8217;t like files and folders where permissions also serve the purpose of privacy from other users.&quot;</p>
<p>Err, that&#8217;s *exactly* the purpose that permissions in the registry serve. How can you &quot;configure app behavour&quot; with registry keys, when all the programs are running under your own account?</p>
<p>You haven&#8217;t given any actual examples of WHY per-value ACLs would have been beneficial. You basically answered Jack Matthew&#8217;s &quot;why&quot; question with &quot;because I want it to.&quot; That&#8217;s the same as &quot;why not?&quot;</p>
<p>One thing you need to remember is that in order to have an ACL, the value would need to be a kernel object (because only the kernel is able to enforce permissions). At the moment, only the *key* is a kernel object &#8211; the values are just a set of name/value pairs hanging off that one kernel object.</p>
<p>If you wanted to put an ACL on the values as well, then you would be *significantly* increasing the number of objects the kernel would have to keep track of. So make sure your answer to the &quot;why&quot; question takes that into account, and show that the benefit outweights the cost.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591763">
				<div id="div-comment-591763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591763">
			January 20, 2008 at 2:22 pm</a>		</div>

		<p>Worf &#8211; This search behaviour is interesting in itslef. &nbsp;When you search for &#8216;(Default)&#8217;, regedit (sensibly in my view) does not find any of the real default values. &nbsp;Unless that is, a key contains a fake &quot;(Default)&quot; value in which case regedit confuses itself and finds <em>both</em> the real default value and the &quot;(Default)&quot; value. You can see this using find next (F3) to step between its search results. &nbsp;</p>
<p>Pressing F2 on the value name clearly shows which is the real (unrenameable) and which is the fake (renameable) default value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591803">
				<div id="div-comment-591803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">david</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591803">
			January 21, 2008 at 5:20 am</a>		</div>

		<p>So let&#8217;s get this straight: first you had keys, then someone decided keys should values, then someone decided values should have reg_multi_sz?</p>
<p>Any plans for reg_multi_sz.keys?</p>
<p>To get the whole tree you&#8217;d only have to return one multi_sz value.</p>
<p>If implemented properly, you could store the whole hive in one multi_sz value &#8211; which would also rationalise the permission thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-591813">
				<div id="div-comment-591813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591813">
			January 21, 2008 at 7:27 am</a>		</div>

		<p>@someone: that&#8217;s what HKEY_CURRENT_USER is for. Even better, data written to HKEY_CURRENT_USER roams with the user, if they have a roaming profile.</p>
<p>Use the registry properly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-591823">
				<div id="div-comment-591823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591823">
			January 21, 2008 at 7:29 am</a>		</div>

		<p>@david: Sounds like you want RegQueryMultipleValues.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591833">
				<div id="div-comment-591833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">data is everything</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591833">
			January 21, 2008 at 8:17 am</a>		</div>

		<p>Both values and names are data. Using synonym words to distinguish between two similar type of items are doomed to fail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-591873">
				<div id="div-comment-591873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-591873">
			January 21, 2008 at 11:12 am</a>		</div>

		<p>@bcthanks: Keys are a bit more heavyweight than values, since they are kernel objects with permissions assigned to them. The aim of values, I suspect, was to remove a little of that heavyweight approach where it wasn&#8217;t needed.</p>
<p>@someone: I can see where you&#8217;re coming from when poorly thought out application registry usage prevents you from securing a single setting, without forcing you to ACL them all at the key level. IMO, that&#8217;s better solved by good registry design than by promoting values to effectively act like keys.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-592003">
				<div id="div-comment-592003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-592003">
			January 21, 2008 at 4:01 pm</a>		</div>

		<p>Leo: it&#8217;s for POSIX compatibility. Tokens have a &quot;primary group&quot; field to express the &quot;effective group id&quot; POSIX concept, but it&#8217;s completely unused by the Windows security model. To preserve the meaning, there&#8217;s a special group in every domain (&quot;None&quot;) that gets assigned to all users as the primary group</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-593083">
				<div id="div-comment-593083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-593083">
			January 23, 2008 at 10:59 pm</a>		</div>

		<p>Okay, this is going offtopic and quite late but I want to give an example to explain. Registry keys are comparable to INI files and values are comparable to INI file values. Just like you can comment out INI values with a semicolon or whatever, I need the ability to disable only certain values in a key. Now if I delete that value, it is usually recreated by the app when it starts or the app gives an error and doesn&#8217;t run. Here is where permissions help. I can set read-only permissions. But settings the same ACLs on multiple values in a single key almost always prevents the app from running or acting strangely. As for the overengineering problem/more kernel work, I don&#8217;t think there are that many values or keys in the registry that set so many permissions that the kernel&#8217;s job would increase greatly, except maybe for Vista. And users can always set ACLs on keys whereever possible and on values only when its needed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-593473">
				<div id="div-comment-593473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-593473">
			January 24, 2008 at 9:07 pm</a>		</div>

		<p>&quot;users can always set ACLs on keys whereever possible and on values only when its needed&quot;</p>
<p>Doesn&#8217;t work like that. You&#8217;re either a kernel object and so can have an ACL, or you&#8217;re not a kernel object and so cannot have an ACL.</p>
<p>You can comment out a registry key. Just put a semi-colon in front of it&#8217;s name and the app will no longer find it, either. That the app might just re-add the key again is no different to if the app just re-added the value to an .ini file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-685633">
				<div id="div-comment-685633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.cnblogs.com/kennyzx/archive/2008/11/21/1338684.html' rel='external nofollow' class='url'>kennyzx</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080118-00/?p=23773#comment-685633">
			November 21, 2008 at 8:37 am</a>		</div>

		<p>reference:<a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2008/01/18/7145021.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2008/01/18/7145021.aspx</a> 这是因为在16位的操作系统中，每一个注册&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

