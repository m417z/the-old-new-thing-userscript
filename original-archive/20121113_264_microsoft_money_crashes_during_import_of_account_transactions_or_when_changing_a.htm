<html>
<head>
<title>Microsoft Money crashes during import of account transactions or when changing a payee of a downloaded transaction</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Microsoft Money crashes during import of account transactions or when changing a payee of a downloaded transaction</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 13, 2012 / year-entry #265</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>49</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Update: An official fix for this issue has been released to Windows Update, although I must say that I think my patch has more style than the official one. You do not need to patch your binary. Just keep your copy of Windows 8 up to date and you'll be fine. For the five remaining Microsoft...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<blockquote CLASS=q><p>
<b>Update</b>:
An official fix for this issue has been released to Windows Update,
although I must say that I think my patch has more style than the
official one.
You do not need to patch your binary.
Just keep your copy of Windows&nbsp;8 up to date and you'll be fine.
</p>
</blockquote>
<p>
For the five remaining Microsoft Money holdouts
(meekly raises hand),
here's a patch for a crashing bug during import of account transactions
or when changing a payee of a downloaded transaction
in
<a HREF="http://www.microsoft.com/en-us/download/details.aspx?id=20738">
Microsoft Money Sunset Deluxe</a>.
Patch the mnyob99.dll file as follows:
</p>
<ul>
<li>File offset 003FACE8: Change 85 to 8D
<li>File offset 003FACED: Change 50 to 51
<li>File offset 003FACF0: Change FF to 85
<li>File offset 003FACF6: Change E8 to B9
</ul>
<p>
Note that this patch is
<b>completely unsupported</b>.
If it makes your computer explode or transfers all your money
to an account in the Cayman Islands,
well, too bad for you.
</p>
<p>
If you are not one of the five remaining customers of Microsoft Money,
this is a little exercise in
application compatibility debugging.
Why application compatibility debugging?
Because the problem seems to be more prevalent
on Windows&nbsp;8 machines.
</p>
<p>
Note that I used no special knowledge about Microsoft Money.
All this debugging was performed with information you also have
access to.
It's not like I have access to the Microsoft Money source code.
And I did this debugging entirely on my own.
It was not part of any official customer support case or anything like that.
I was just debugging a crash that I kept hitting.
</p>
<p>
The crash occurs in the function <code>utlsrf08!DwStringLengthA</code>:
</p>
<pre>
utlsrf08!DwStringLengthA:
        push    ebp
        mov     ebp,esp
        mov     eax,dword ptr [ebp+8]
        lea     edx,[eax+1]
again:
        mov     cl,byte ptr [eax]
        inc     eax
        test    cl,cl
        jne     again
        sub     eax,edx
        pop     ebp
        ret     4
</pre>
<p>
The proximate cause is that the string pointer in <code>eax</code>
is garbage.
If you unwind the stack one step, you'll see that the
pointer came from here:
</p>
<pre>
        lea     eax,[ebp-20Ch]
        push    eax
        call    dword ptr [__imp__GetCurrentProcessId]
        push    eax
        push    offset "Global\TRIE@%d!%s"
        lea     eax,[ebp-108h]
        push    104h
        push    eax
        call    mnyob99!DwStringFormatA
        add     esp,14h
        lea     eax,[ebp-2E4h]
        push    eax
        push    5Ch
        <font COLOR=red>push    dword ptr [ebp-2E4h]</font> ; invalid pointer
        call    mnyob99!DwStringLengthA
        sub     eax,7
        push    eax
        lea     eax,[ebp-101h]
        push    eax
        jmp     l2
l1:
        mov     eax,dword ptr [ebp-2E4h]
        mov     byte ptr [eax],5Fh
        lea     eax,[ebp-2E4h]
        push    eax
        push    5Ch
        push    dword ptr [ebp-2E4h]
        call    mnyob99!DwStringLengthA
        push    eax
        push    dword ptr [ebp-2E4h]
l2:
        call    mnyob99!FStringFindCharacterA
        cmp     dword ptr [ebp-2E4h],edi
        jne     l1
</pre>
<p>
I was lucky in that all the function calls here were to imported
functions, so I could extract the names from the imported function table.
For example, the call to <code>DwStringFormatA</code> was originally
</p>
<pre>
        call    mnyob99!CBillContextMenu::SetHwndNotifyOnGoto+0x1e56a (243fc3cc)
</pre>
<p>
But the target address is an
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2006/07/26/679044.aspx">
import stub</a>:
</p>
<pre>
        jmp     dword ptr [mnyob99+0x1ec0 (24001ec0)]
</pre>
<p>
And then I can walk the import table to see that this was the import
table entry for <code>utlsrf08!DwStringFormatA</code>.
From the function name, it's evident that this is some sort of
<code>sprintf</code>-like function.
(If you disassemble it, you'll see that it's basically
a wrapper around
<code>vsnprintf</code>.)
</p>
<p>
Reverse-compiling this code, we get
</p>
<pre>
char name[...];
char buffer[MAX_PATH];
char *backslash;
...
DwStringFormatA(buffer, MAX_PATH, "Global\\TRIE@%d!%s",
                GetCurrentProcessId(), name);

// Change all backslashes (except for the first one) to underscores
if (FStringFindCharacterA(buffer + 7, DwStringLengthA(backslash) - 7,
                          '\\',&amp;backslash))
{
  do {
    *backslash = '_'; // Change backslash to underscore
  } while (FStringFindCharacterA(backslash, DwStringLengthA(backslash),
                                 '\\',&amp;backslash));
}
</pre>
<p>
(Remember, all variable names are made-up since I don't have source
code access. I'm just working from the disassembly.)
</p>
<p>
At this point, you can see the bug:
It's an uninitialized variable at the first call to
<code>String&shy;Find&shy;CharacterA</code>.
Whether we crash or survive is a matter of luck.
If the uninitialized variable happens to be a pointer
to readable data,
then the
<code>Dw&shy;String&shy;LengthA</code> will eventually
find the null terminator,
and since in practice the string does not contain
any extra backslashes,
the call to
<code>FString&shy;Find&shy;CharacterA</code> fails,
and nobody gets hurt.
</p>
<p>
But it looks like their luck ran out,
and now the uninitialized variable contains
something that is not a valid pointer.
</p>
<p>
The <code>if</code> test should have been
</p>
<pre>
if (FStringFindCharacterA(buffer + 7, DwStringLengthA(buffer) - 7,
                          '\\',&amp;backslash))
</pre>
<p>
This means changing the
</p>
<pre>
        push    dword ptr [ebp-2E4h]
</pre>
<p>
to
</p>
<pre>
        lea     eax,[ebp-101h]
        push    eax
</pre>
<p>
Unfortunately, the patch is one byte larger than the existing
code, so we will need to get a little clever in order to get it
to fit.
</p>
<p>
One trick is to rewrite the test as
</p>
<pre>
if (FStringFindCharacterA(buffer + 7, DwStringLengthA(buffer + 7),
                          '\\',&amp;backslash))
</pre>
<p>
That lets us rewrite the assembly code as
</p>
<pre>
        lea     eax,[ebp-2E4h]
        push    eax
        push    5Ch
        <font COLOR=blue>lea     eax,[ebp-101h]          ; \ was "push dword ptr [ebp-2E4h]"
        push    eax                     ; /
        call    mnyob99!DwStringLengthA ; unchanged but code moved down one byte
        nop                             ; \ was "sub eax,7" (3-byte instruction)
        nop                             ; /</font>
        push    eax
        lea     eax,[ebp-101h]
        push    eax
</pre>
<p>
The new instructions (<code>lea</code> and <code>push</code>)
are one byte larger than the original <code>push</code>,
but we got rid of the three-byte <code>sub eax, 7</code>,
so it's a net savings of two bytes, which therefore fits.
</p>
<p>
However, I'm going to crank the nerd level up another notch
and try to come up with a patch that involves modifying
as few bytes as possible.
In other words,
I'm going for <i>style points</i>.
</p>
<p>
To do this, I'm going to take advantage of the fact that
the string length is the return value of
<code>Dw&shy;String&shy;FormatA</code>,
so that lets me eliminate the call to
<code>Dw&shy;String&shy;LengthA</code> altogether.
However, this means that I have to be careful not to
damage the value in <code>eax</code>
before I get there.
</p>
<pre>
        <font COLOR=blue>lea     ecx,[ebp-2E4h] ; was "lea eax,[ebp-2E4h]"
        push    ecx            ; was "push eax"</font>
        push    5Ch
        <font COLOR=blue>nop                    ; \
        nop                    ; |
        nop                    ; |
        nop                    ; | was "push dword ptr [ebp-2E4h]"
        nop                    ; |
        nop                    ; /
        nop                    ; \
        nop                    ; |
        nop                    ; | was "call mnyob99!DwStringLengthA"
        nop                    ; |
        nop                    ; /</font>
        sub     eax,7
        push    eax
        lea     eax,[ebp-101h]
        push    eax
</pre>
<p>
Patching the <cODE>lea eax, ...</code> to be
<code>lea ecx, ...</code> can be done with a single byte,
and the <code>push eax</code> is a single-byte instruction
as well, so the first two patches can be done with one byte each.
That leaves me with 11 bytes that need to be nop'd out.
</p>
<p>
The na&iuml;ve way of nopping out eleven bytes is simply
to patch in 11 <code>nop</code> instructions,
but you can do better by taking advantage of the bytes
that are already there.
</p>
<pre>
<font COLOR=red>ff</font>b51cfdffff    push    dword ptr [ebp-2E4h]
<font COLOR=blue>85</font>b51cfdffff    test    dword ptr [ebp-2E4h],esi

<font COLOR=red>e8</font>770a0000      call    mnyob99!DwStringLengthA
<font COLOR=blue>b9</font>770a0000      mov     ecx,0A77h
</pre>
<p>
By patching a single byte in each of the two instructions,
I can turn them into effective nops by making them do nothing
interesting.
The first one tests the uninitialized variable against some garbage bits,
and the second one loads a unused register with a constant.
(Since the <code>ecx</code> register is going to be trashed by the call to
<code>FString&shy;Find&shy;CharacterA</code>,
we are free to modify it all we want prior to the call.
No code could have relied on it anyway.)
</p>
<p>
That second patch is a variation of one
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/11/11/255800.aspx">
I called out some time ago</a>,
except that instead of patching out the call with a
<code>mov eax, immed32</code>,
we're using a
<code>mov ecx, immed32</code>,
because the value in the <code>eax</code> register is still important.
</p>
<p>
Here's the final result:
</p>
<pre>
        <font COLOR=blue>lea     ecx,[ebp-2E4h]           ; was "lea eax,[ebp-2E4h]"
        push    ecx                      ; was "push eax"</font>
        push    5Ch
        <font COLOR=blue>test    dword ptr [ebp-2E4h],esi ; was "push dword ptr [ebp-2E4h]"
        mov     ecx,0a77h                ; was "call mnyob99!DwStringLengthA"</font>
        sub     eax,7
        push    eax
        lea     eax,[ebp-101h]
        push    eax
</pre>
<p>
<b>Bonus chatter</b>:
When I shared this patch with my friends,
I mentioned that this patch made me feel like
my retired colleague
<a HREF="http://hashable.org/">
Jeff</a>,
who had a reputation for accomplishing
astonishing programming tasks
in his spare time.
You would pop into his office asking for some help,
and he'd fire up some program you'd never seen before.
</p>
<p>
"What's that?" you'd ask.
</p>
<p>
"Oh, it's a debugger I wrote," he'd calmly reply.
</p>
<p>
Or you'd point him to a program and apologize,
"Sorry, I only compiled it for x86.
There isn't an Alpha version."
</p>
<p>
"That's okay, I'll run it in my emulator,"
he'd say, matter-of-factly.
</p>
<p>
(And retiring from Microsoft hasn't slowed him down.
Here's
<a HREF="http://jsmachines.net/">
an IBM PC Model 5150 emulator written in JavaScript</a>.)
</p>
<p>
Specifically, I said,
"I feel like Jeff, who does this sort of thing before
his morning coffee."
</p>
<p>
Jeff corrected me.
"If this was something I used to do before coffee,
that probably meant I was up all night.
Persistence &gt;= talent."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (49)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1020383">
				<div id="div-comment-1020383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020383">
			November 13, 2012 at 7:05 am</a>		</div>

		<p>It&#39;s almost like Microsoft&#39;s code is open source after all! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020393">
				<div id="div-comment-1020393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020393">
			November 13, 2012 at 7:08 am</a>		</div>

		<p>Wow, my nerd-o-meter just exploded.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020403">
				<div id="div-comment-1020403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020403">
			November 13, 2012 at 7:12 am</a>		</div>

		<p>I have an unopened copy of Microsoft Money that came with a new computer many years ago. &nbsp;Is it worth anything?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020413">
				<div id="div-comment-1020413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ellie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020413">
			November 13, 2012 at 7:34 am</a>		</div>

		<p>Now this is the type of stuff I really find interesting!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020423">
				<div id="div-comment-1020423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020423">
			November 13, 2012 at 7:38 am</a>		</div>

		<p>For abybody who tried to follow and got lost in presentation, here are the Raymond&#39;s four bytes changes in context:</p>
<p>push &nbsp; &nbsp;offset &quot;GlobalTRIE@%d!%s&quot;</p>
<p>lea &nbsp; &nbsp; eax,[ebp-108h]</p>
<p>push &nbsp; &nbsp;104h</p>
<p>push &nbsp; &nbsp;eax</p>
<p>call &nbsp; &nbsp;mnyob99!DwStringFormatA</p>
<p>add &nbsp; &nbsp; esp,14h</p>
<p>lea &nbsp; &nbsp; eax,[ebp-2E4h] ; &gt; lea &nbsp; &nbsp; ecx,[ebp-2E4h] (85 &gt; 8D)</p>
<p>push &nbsp; &nbsp;eax &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; &gt; push ecx &nbsp;(50 &gt; 51)</p>
<p>push &nbsp; &nbsp;5Ch</p>
<p>push &nbsp; &nbsp;dword ptr [ebp-2E4h] ; &gt; test [ebp-2E4h],esi (FF &gt; 85)</p>
<p>call &nbsp; &nbsp;mnyob99!DwStringLengthA ; &gt; mov &nbsp; &nbsp; ecx, whatever (E8 &gt; B9)</p>
<p>Raymond, is there any advantage in trying to reduce the number of changed bytes, once they are on the non-consecutive locations?</p>
<div class="post">[<em>Like I said, I was going for style points! (And thanks for the suggestion; I updated the article to show the old and new code side-by-side.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020433">
				<div id="div-comment-1020433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020433">
			November 13, 2012 at 7:50 am</a>		</div>

		<p>I tried to guess what the assembly changes were going to be based on the 4 changes listed at the top of the file by looking at an opcode map (<a rel="nofollow" target="_new" href="http://pdos.csail.mit.edu/6.828/2008/readings/i386/appa.htm" rel="nofollow">pdos.csail.mit.edu/&#8230;/appa.htm</a>).</p>
<p>&quot;push eax&quot; ==&gt; &quot;push ecx&quot; looked good. &nbsp;&quot;test&quot; ==&gt; &quot;lea&quot; and &quot;call&quot; ==&gt; &quot;mov ecx&quot; looked unlikely but possible. &nbsp;I had no idea what to make of &quot;Indirect Grp5&quot; ==&gt; &quot;test&quot; so I decided I must have been wrong and that it was more likely modifying non-initial bytes to change a register or immediate value. &nbsp;Turns out I was right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020443">
				<div id="div-comment-1020443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020443">
			November 13, 2012 at 7:56 am</a>		</div>

		<p>Why change whole bytes at the time? Please don&#39;t do unnecessary bit-inverting work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020483">
				<div id="div-comment-1020483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020483">
			November 13, 2012 at 8:20 am</a>		</div>

		<p>I would expect this fragment to apply:</p>
<p>Q: Why?</p>
<p>A: There is no why.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020493">
				<div id="div-comment-1020493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020493">
			November 13, 2012 at 8:27 am</a>		</div>

		<p>&quot;Microsoft Money crashes&quot;</p>
<p>/ Rushes to check MSFT</p>
<p>Indeed, crashes. Probably due to Sinofsky&#39;s departure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020503">
				<div id="div-comment-1020503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ooh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020503">
			November 13, 2012 at 8:56 am</a>		</div>

		<p>Incredibly cool, Raymond! Good work, and a very good blog post which details the steps and the required knowledge. Totally awesome.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020513">
				<div id="div-comment-1020513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chriso</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020513">
			November 13, 2012 at 9:01 am</a>		</div>

		<p>Nice and really cool, thank you for sharing!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020523">
				<div id="div-comment-1020523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jake</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020523">
			November 13, 2012 at 9:13 am</a>		</div>

		<blockquote><p>
  transfers all your money to an account in the Cayman Islands
</p></blockquote>
<p>We&#39;re on to your retirement plan, Raymond!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1020533">
				<div id="div-comment-1020533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020533">
			November 13, 2012 at 9:37 am</a>		</div>

		<p>What would the patch look like to initialize the variable; that is, inject a &quot;backslash = &amp;buffer[0]&quot; line before the first FStringFindCharacterA call?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020543">
				<div id="div-comment-1020543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020543">
			November 13, 2012 at 9:46 am</a>		</div>

		<p>Maurits, to add nitialization and keep the rest of the code unchanged you&#39;d have to find some unsused bytes which aren&#39;t there &#8212; you&#39;d hate your compiler if it would insert unnecessary spaces all around the code. To make a simple patch Raymond had to find the way to modify the existing bytes and preserve semantics, and he was able to do this because he fully understood what was going on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020553">
				<div id="div-comment-1020553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Akk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020553">
			November 13, 2012 at 10:01 am</a>		</div>

		<p>Reverse-engineering is a violation of the Microsoft Money EULA. Most likely, Microsoft is unwilling to retain employees who commit crimes against the company. I&#39;m waiting for Raymond to be fired in 5&#8230;4&#8230;3&#8230;2&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020563">
				<div id="div-comment-1020563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EduardoS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020563">
			November 13, 2012 at 10:39 am</a>		</div>

		<p>Wouldn&#39;t be simpler to replace the 11 nops by an also two byte short jmp?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020573">
				<div id="div-comment-1020573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020573">
			November 13, 2012 at 10:42 am</a>		</div>

		<p>@EduardoS: &quot;Simpler&quot; does not fall into the criteria.</p>
<p>@Akk: There are certain court rulings about warranty of merchantability that override the EULA in situations like this one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020593">
				<div id="div-comment-1020593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Will</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020593">
			November 13, 2012 at 11:14 am</a>		</div>

		<p>Raymond, thanks for sharing this. I&#39;ve done things like this in the past, and always felt like I was the only nerdy person who&#39;d take the time to do it. I&#39;m glad I&#39;m not alone. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1020603">
				<div id="div-comment-1020603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020603">
			November 13, 2012 at 11:18 am</a>		</div>

		<p>Who uses the last Money? Money 2004 Small Business Edition was the last good version before MS randomly started deleting useful features (and evil Vista era began). (<a rel="nofollow" target="_new" href="http://money.mvps.org/articles/removed_items.aspx" rel="nofollow">money.mvps.org/&#8230;/removed_items.aspx</a>)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-paulcoddingtonhotmail-com odd alt thread-odd thread-alt depth-1" id="comment-1020613">
				<div id="div-comment-1020613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Paul+Coddington' rel='external nofollow' class='url'>Paul Coddington</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020613">
			November 13, 2012 at 11:20 am</a>		</div>

		<p>I know some people who will wish they had heard of the Sunset edition before today. &nbsp;Excellent that this was provided &#8211; I have an irreplaceable application from elsewhere, that is the only one of its kind, where the company went belly-up and left it in &quot;online activation hell&quot;. &nbsp;Not so with Microsoft.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020623">
				<div id="div-comment-1020623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020623">
			November 13, 2012 at 11:38 am</a>		</div>

		<p>EduardoS: &nbsp;you could do that, but that&#39;s more work than just NOPing the instructions out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020643">
				<div id="div-comment-1020643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020643">
			November 13, 2012 at 11:43 am</a>		</div>

		<p>Guess I&#39;m glad I never upgraded &#8212; I&#39;m still running MS-Money 2000 on a XP VM. &nbsp; &nbsp;IMHO, the last usable version of money, even with all of it warts. &nbsp;:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1020653">
				<div id="div-comment-1020653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020653">
			November 13, 2012 at 12:52 pm</a>		</div>

		<p>&quot;I was lucky in that all the function calls here were to imported functions, so I could extract the names from the imported function table.&quot;</p>
<p>So you didn&#39;t even have symbols?</p>
<div class="post">[<em>I thought I said that in the article. Three times. &quot;I used no special knowledge about Microsoft Money.&quot; And then I repeated it. &quot;All this debugging was performed with information you also have access to.&quot; And then again in the sentence you quoted. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020663">
				<div id="div-comment-1020663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chentiangemalc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020663">
			November 13, 2012 at 1:09 pm</a>		</div>

		<p>great article Raymond. I&#39;ve had to patch binaries via hex editor a few times with legacy enterprise apps that had long forgotten source code &amp; developers. for a geek it&#39;s an ultra satisfying accomplishment :) Chris Jackson from MS app compat previously told me youre freakingly amazing with a debugger&#8230;would love to see you in action, maybe a YouTube debugging session :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020683">
				<div id="div-comment-1020683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020683">
			November 13, 2012 at 3:00 pm</a>		</div>

		<p>@Yuhong Bao: Raymond probably has access, but as he said, he didn&#39;t use it.</p>
<p>@Malcolm McCaffery: Excellent suggestion, but I don&#39;t expect we&#39;d ever see it.</p>
<div class="post">[<em>I <span style="text-decoration:underline;">wish</span> I had access! (My debugging presentations usually <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/30/10044061.aspx" rel="nofollow">turn into blog entries</a>, so you get them eventually.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020713">
				<div id="div-comment-1020713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020713">
			November 13, 2012 at 3:15 pm</a>		</div>

		<p>Note that Money Plus Sunset can be freely downloaded, doesn&#39;t need to be installed as an upgrade, and doesn&#39;t need to be activated. &nbsp;:-) &nbsp;</p>
<p>And, yes, those are very cool patching steps!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020723">
				<div id="div-comment-1020723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Benjamin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020723">
			November 13, 2012 at 7:24 pm</a>		</div>

		<p>Maybe I missed it somehow, but were there any clues for why the fault happened more on Win8 systems (like a change to ASLR or something)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020733">
				<div id="div-comment-1020733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eduardo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020733">
			November 13, 2012 at 7:34 pm</a>		</div>

		<p>@Rick C, NOPing requires patching more bytes!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020743">
				<div id="div-comment-1020743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Perlow</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020743">
			November 13, 2012 at 8:06 pm</a>		</div>

		<p>I am one of the Microsoft Money Five.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020753">
				<div id="div-comment-1020753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020753">
			November 13, 2012 at 8:50 pm</a>		</div>

		<p>I think you could save a byte by patching the &#39;call mnyob99!DwStringLengthA&#39; to point at the &#39;ret 4&#39; instead, but it doesn&#39;t matter. Those crazy random opcodes get infinite style points.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020763">
				<div id="div-comment-1020763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bcabral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020763">
			November 13, 2012 at 10:45 pm</a>		</div>

		<p>Hi Raymond,</p>
<p>I just want you to know that 4 years ago , you motivated me to drop medicine and do Computer science.</p>
<p>I&#39;m really happy now, I&#39;m Brazilian and got a scholarship to study here(Seattle) for a year, and it is almost ending my time here.</p>
<p>A chance to take a photo with you would represent a lot to me !</p>
<p>(my name at uw.edu )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020773">
				<div id="div-comment-1020773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jeff_4000_spiralboundsoftware.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jeff@spiralboundsoftware.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020773">
			November 13, 2012 at 10:47 pm</a>		</div>

		<p>Raymond,</p>
<p>Please reconsider publishing a video capturing one of your debugging sessions. &nbsp;Even if you just mumble a bit to yourself to give some vague insight and context, I&#39;m sure there are any number of us who would watch an eight hour video. &nbsp;We could always jump around in the video timeline, after all. &nbsp;:-)</p>
<p>I&#39;ve really enjoyed watching things like Notch&#39;s Java coding sessions, and I&#39;m not even a Java programmer. &nbsp;It still provided tremendous insight into his approach to coding and how he uses the tools available to him.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020703">
				<div id="div-comment-1020703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020703">
			November 13, 2012 at 3:09 pm</a>		</div>

		<p>I use Money 2003. &nbsp;The later versions were changed so they would operate for only 18 months or so (maybe 2 years) before they shut down and HAD to be replaced. &nbsp;(Actually, some of Money 2003&#39;s features may have stopped operating after 1 or 2 years, like importing stock quotes, but I don&#39;t use those features.)</p>
<p>Money 2003 runs fine on 64-bit Windows 7. &nbsp;I considered going to the &quot;sunset&quot; version, and I would have, if I had been on a *later* version than 2003 that would have expired!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1020783">
				<div id="div-comment-1020783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020783">
			November 13, 2012 at 11:24 pm</a>		</div>

		<p>I just want to comment that for anyone what to try doing something like this, check inside the debugger for previous ecx value before using it and beware of loops.</p>
<p>(Okay&#8230; for anyone who&#39;re able to do this, they must already know they have to check that)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020793">
				<div id="div-comment-1020793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChristW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020793">
			November 14, 2012 at 12:56 am</a>		</div>

		<p>Nerdiest byte sequence that I ever thought up was: EB 03 C3 yy xx</p>
<p>If you create a .COM file with those 5 bytes as the first ones, and look at the disassembly (I&#39;m assuming an x86 disassembler here..), you&#39;ll see &#39;JMP SHORT 3&#39;, followed by 3 garbage bytes. Nothing ususual here&#8230;</p>
<p>If you look at a Z80 disassembly of those same bytes, that translates to &#39;EX DE,HL; INC BC;&#39;. Exchange the content of 2 registers, increment another one, nothing special. The 3rd byte is &#39;JUMP&#39; followed by the 16-bit address specified as yy xx.</p>
<p>So, if you create a .COM file with the 5 bytes as above, followed by 8088 code, followed by Z80 code (at offset xxyy + 0x100 in the source), you&#39;ll have a .COM file that runs on MS-DOS and (i.e.) CP/M&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020813">
				<div id="div-comment-1020813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020813">
			November 14, 2012 at 3:22 am</a>		</div>

		<p>Best would be a compatibility setting that required no modification to the source. But that happens all the time for supported products, I suppose.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020823">
				<div id="div-comment-1020823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020823">
			November 14, 2012 at 6:10 am</a>		</div>

		<p>I&#39;m still using Money 99. It&#39;s the last version sold in Germany and it works pretty well on Windows 7. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020913">
				<div id="div-comment-1020913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020913">
			November 14, 2012 at 8:51 am</a>		</div>

		<p>There&#39;s now a discussion on this over at Hacker News: <a rel="nofollow" target="_new" href="http://news.ycombinator.com/item?id=4781372" rel="nofollow">news.ycombinator.com/item</a></p>
<p>Notable is the personal thanks to Raymond Chen at <a rel="nofollow" target="_new" href="http://news.ycombinator.com/item?id=4782531" rel="nofollow">news.ycombinator.com/item</a> .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020923">
				<div id="div-comment-1020923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">deskinm [MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020923">
			November 14, 2012 at 10:07 am</a>		</div>

		<p>@thespiral if Raymond Chen were to post a video of him debugging, it wouldn&#39;t be eight hours long; it would be thirty seconds, and everyone would just spend eight hours re-watching it to try to understand what he did (and how he did it so fast).</p>
<p>I say this because I&#39;ve watched him debug an internal issue in a minute, and spent half my day looking back through the debugger console to learn how he figured out the issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1020973">
				<div id="div-comment-1020973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jolyon.smith_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jolyon.smith@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020973">
			November 14, 2012 at 4:08 pm</a>		</div>

		<p>My brain just melted and is now in a puddle on the desk in front of me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1020953">
				<div id="div-comment-1020953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020953">
			November 14, 2012 at 12:19 pm</a>		</div>

		<p>Nice, Raymond =) &nbsp;I&#39;ve actually done assembly language patches like this to our code in an emergency to fix a critical bug. &nbsp;It&#39;s advisable to *not* fix things this way from a maintainability standpoint, of course, but sometimes things happen and you need it fixed in a hurry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joe_woodbury odd alt thread-odd thread-alt depth-1" id="comment-1020993">
				<div id="div-comment-1020993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JoeWoodbury' rel='external nofollow' class='url'>JoeWoodbury</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1020993">
			November 15, 2012 at 7:23 am</a>		</div>

		<p>Count me as another Money Sunset user and kudos to Microsoft for providing this. I did run into a bizarre bug with a charting feature the other day, but there was a work-around, so all is good.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021183">
				<div id="div-comment-1021183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1021183">
			November 15, 2012 at 1:08 pm</a>		</div>

		<p>As a hardcore debugging n00b, just wondering.</p>
<p>How do you determine what hex bytes changes to make based on the assembler changes? I&#39;ve used WinDbg, but can you actually type replacement assembler code in WinDbg and see what resultant memory bytes changes are made? Or do you need to actually know how each assembler statement maps to opcodes?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1021193">
				<div id="div-comment-1021193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1021193">
			November 15, 2012 at 1:57 pm</a>		</div>

		<p>Jeff, WinDbg comes with a (simple) built-in assembler.</p>
<p>You can type &quot;a &lt;address&quot; and start entering assembler commands. Type an empty line when you&#39;re done. Then you can use &#39;db&#39; to view the assembled opcodes. Another trick people use is &quot;.dvalloc &lt;size&gt;&quot;, which allocates memory in the current process. You can use this memory buffer to insert some code using &#39;a&#39;, instead of trashing real code in a process. (I usually use notepad as my target for this sort of thing, but any app will do.) Notepad has a nice function, notepad!InsertDateTime, that is called whenever you hit F5 (to insert a timestamp into a file), which you can use to test code you hack up in this way&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021203">
				<div id="div-comment-1021203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">As an aside</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1021203">
			November 15, 2012 at 2:06 pm</a>		</div>

		<p>Writing a tool to take a set of binary patches like this, and a target binary file, and generate an Application Compatibility Database (.sdb) file to apply the patches would be fun. I don&#39;t think there are any public tools to do this, but internal tools exist at Microsoft. (Some of the security FixIt&#39;s use this approach&#8230;)</p>
<p>The APIs and data types are described here: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/bb432182(v=vs.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/bb432182(v=vs.85).aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1021213">
				<div id="div-comment-1021213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1021213">
			November 15, 2012 at 2:11 pm</a>		</div>

		<p>@Jeff: &nbsp;You can also go straight to the source. &nbsp;Similar manuals exist for other architectures.</p>
<p>IntelÂ® 64 and IA-32 Architectures Software Developerâs Manual, Instruction Set Reference:</p>
<p><a rel="nofollow" target="_new" href="http://download.intel.com/products/processor/manual/325383.pdf" rel="nofollow">download.intel.com/&#8230;/325383.pdf</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021243">
				<div id="div-comment-1021243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/decka.dee_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>decka.dee@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1021243">
			November 15, 2012 at 7:41 pm</a>		</div>

		<p>Before the call to FStringFindCharacterA() there are 5 pushes, but the pseudo C code for FStringFindCharacterA() only takes 4 arguments:</p>
<p>lea &nbsp; &nbsp; eax,[ebp-2E4h]</p>
<p>push &nbsp; &nbsp;eax &nbsp; &nbsp;&lt;&lt;&lt;&lt;</p>
<p>push &nbsp; &nbsp;5Ch &nbsp; &nbsp;&lt;&lt;&lt;&lt;</p>
<p>push &nbsp; &nbsp;dword ptr [ebp-2E4h] &lt;&lt;&lt;&lt;</p>
<p>call &nbsp; &nbsp;mnyob99!DwStringLengthA</p>
<p>sub &nbsp; &nbsp; eax,7</p>
<p>push &nbsp; &nbsp;eax &nbsp; &lt;&lt;&lt;&lt;</p>
<p>lea &nbsp; &nbsp; eax,[ebp-101h]</p>
<p>push &nbsp; &nbsp;eax &nbsp;&lt;&lt;&lt;&lt;</p>
<p>What happens to the push of &quot;dword ptr [ebp-2E4h]&quot;, as DwStringLengthA() doesn&#39;t appear to pop it off? (Sorry, but my assembly skills are very basic!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1021313">
				<div id="div-comment-1021313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1021313">
			November 16, 2012 at 7:49 am</a>		</div>

		<p>@decka: That push is the one argument to DwStringLengthA. &nbsp;The compiler here has interleaved the 4 pushes of the arguments to FStringFindCharacterA and the 1 push of the argument to DwStringLengthA.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021493">
				<div id="div-comment-1021493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xavi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121113-00/?p=6103#comment-1021493">
			November 19, 2012 at 5:36 am</a>		</div>

		<p>It is not working, I need support:</p>
<p>It made my computer explode and transferred all my money to an account in the Cayman Islands!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

