<html>
<head>
<title>Stop cherry-picking, start merging, Part 3: Avoiding problems by creating a new merge base</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Stop cherry-picking, start merging, Part 3: Avoiding problems by creating a new merge base</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 14, 2018 / year-entry #60</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Move the cherry-pick into the merge base so that git knows it exists in both sides.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The first two
parts of the series discussed the bad things that can happen
if you cherry-pick a change that is subsequently modified.
If you're lucky,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20180312-00/?p=98215">
you get a merge conflict</a>.
If you're not lucky,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20180313-00/?p=98225">
your modification is simply ignored</a>.
If only there were a way to do a partial merge instead of a cherry-pick,
the problems could have been avoided.
</p>
<p>
It turns out that git does support partial merges.
It's just that nobody talks about it that way.
You create a partial merge by doing full merge with a custom
merge base.
</p>
<p>
At the start of our saga,
we have a commit tree like this:
</p>
<svg width="0" height="0">
 <defs>
  <marker id="arrowhead" markerWidth="5" markerHeight="5" refX="-2" refY="0"
    viewBox="-6 -6 12 12" orient="auto">
    <polygon points="-2,0 -5,5 5,0 -5,-5" fill="black" stroke="black"
      stroke-dasharray="1 0" />
  </marker>
  <path id="larr" d="M20,10 L3,10" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="larr3" d="M98,10 L3,10" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="nwarr" d="M20,20 L3,3" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="swarr" d="M20,2 L3,17" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="swarr3" d="M98,2 L6,57" stroke="black"
   marker-end="url(#arrowhead)" />
 </defs>
</svg>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td>apple</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
<tr>
    <!-- note that the foreignObject doesn't display because it has no
         height or width. It exists so that RSS readers which strip out SVG
         will still leave something behind. We would normally just have
         raw text in SVG (because SVG ignores raw text), but the blog system's
         auto-emojifier will convert it to an <img>, which does show up -->
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">A</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M1</td>
<td>&nbsp;</td>
<td>master</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F1</td>
<td>&nbsp;</td>
<td>feature</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
</table>
<p>
From a common ancestor A,
commit F1 happens on the feature branch,
and commit M1 happens on the master branch.
Now you realize that you need to apply a fix to both branches.
You don't want to merge the entire feature branch into the master branch,
because that would also pick up commit F1.
</p>
<p>
Here's the trick:
Create a third branch and merge it into both the master and feature
branches.
</p>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M2</td>
<td>&nbsp;</td>
<td>master</td>
</tr>
<tr>
<td>apple</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
</tr>
<tr>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">A</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">P</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>patch</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F2</td>
<td>&nbsp;</td>
<td>feature</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
</tr>
</table>
<p>
We created a new branch called patch based on the common ancestor
commit A, and committed our fix to the patch branch as commit P.
We then merged commit P into the master branch, and also into the
feature branch,
producing commits M2 and F2, respectively.
</p>
<p>
As before, work continues on both the master and feature branches,
and eventually the root cause of the problem is determined,
and the patch is reverted in the feature branch and a proper fix applied.
</p>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>&nbsp;</td>
<td>berry</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M2</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M3</td>
<td>&nbsp;</td>
<td>master</td>
</tr>
<tr>
<td>apple</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
</tr>
<tr>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">A</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">P</td>
<td>&nbsp;</td>
<td>patch</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F2</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F3</td>
<td>&nbsp;</td>
<td>feature</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
</table>
<p>
On the master branch, commit M3 does additional work
unrelated to our patch.
Meanwhile, in our feature branch, we figure out the proper fix
and commit it as F3.
Commit F3 changes the line back to <code>apple</code> (undoing our patch)
as well as containing the proper fix.
</p>
<p>
Eventually,
it comes time to merge the feature branch to the master branch.
The merge chooses commit P as the merge base,
since it is the most recent common ancestor.
The commits involved in the three-way merge are
P (the base), M3 (the head of the master branch)
and F3 (the head of the feature branch).
Let's erase all the other commits, since they don't
participate in the merge.
</p>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M3</td>
<td>&nbsp;</td>
<td>master</td>
</tr>
<tr>
<td>berry</td>
<td>
<svg width="98" height="20" style="overflow: visible"><foreignObject>&#x2199;&#xfe0e;</foreignObject>
     <path d="M98,-15 L50,-15 C30,-15 20,0 3,17" fill="transparent" stroke="black" marker-end="url(#arrowhead)" />
    </svg>
</td>
</tr>
<tr>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">P</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="98" height="20" style="overflow: visible"><foreignObject>&#x2196;&#xfe0e;</foreignObject>
     <path d="M98,35 L50,35 C30,35 20,20 3,3" fill="transparent" stroke="black" marker-end="url(#arrowhead)" />
    </svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F3</td>
<td>&nbsp;</td>
<td>feature</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
</table>
<p>
There is no change to the line in question in the master branch
relative to the merge base,
but in the feature branch,
<code>berry</code> changed to <code>apple</code>.
Therefore, the merge result will have <code>apple</code>.
</p>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>&nbsp;</td>
<td>berry</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M2</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M3</td>
<td>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M4</td>
<td>&nbsp;</td>
<td>master</td>
</tr>
<tr>
<td>apple</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td ROWSPAN=3>
<svg width="98" height="60"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr3"/></svg>
</td>
<td COLSPAN=3 ROWSPAN=3>&nbsp;</td>
</tr>
<tr>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">A</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">P</td>
<td>&nbsp;</td>
<td>patch</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F2</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F3</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>feature</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
</table>
<p>
But wait, what about the changes in commits M1 and F1?
They were bypassed by commit P, weren't they?
Are those changes going to be lost?
</p>
<p>
Nope, those changes will be merged in just fine
because they are also present in M3 and F3.
This is the same situation you run into in normal
day-to-day operation
when you merge from the master to the feature branch periodically
while you work on your feature:
</p>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">X</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">X1</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">X2</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">X3</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">X4</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">X5</td>
<td>&nbsp;</td>
<td>master</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">T1</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">T2</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">T3</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">T4</td>
<td>
<svg width="20" height="20"><foreignObject>&larr;</foreignObject><use href="#larr"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">T5</td>
<td>&nbsp;</td>
<td>feature</td>
</tr>
</table>
<p>
In the above diagram
(a brand new diagram unrelated to the previous diagrams),
you created a feature branch from the master branch at some commit X.
Work continues in the master branch as commits X1, X2, and so on.
Simultaneously, work continues in the feature branch as commits
T1, T2, and so on.
But every so often, the feature branch takes a merge from the master
branch,
so that the two don't drift too far out of sync.
</p>
<p>
Suppose you are now ready to merge the feature branch back to the master
branch.
The last time the feature branch merged from the master branch
was when it merged commit X4, resulting in commit T5 on the feature
branch.
This makes commit X4 the merge base.
Are you worried that this upcoming merge will
throw away the changes in commits
T1 through T4, since the merge base commit X4 post-dates them?
No, you aren't,
because you know that the changes in T1 through T4 are also present in T5,
and they will go into the master branch as part of the merge.
</p>
<p>
Okay, back to our original story.
Creating the patch branch and merging it into both the master
and feature branches preserves the connection between the two
commits in the respective branches,
and in particular identifies them as being two manifestations
of the
same underlying change (namely, commit P).
The resulting merge of the two branches recognizes this
relationship and doesn't double-apply the change.
</p>
<p>
Basically, the patch branch converts what was originally a cherry-pick
into a merge.
It was the cherry-pick that was the source of all the problems,
and the fix is to
get rid of the cherry-pick and use
merges instead.
The temporary patch branch gives us our partial merge.
</p>
<p>
That's the basic idea.
There are still a lot of questions to answer,
such as "How do I find the correct merge base?",
"What if I pick the wrong merge base?",
"What if I need to perform two cherry-picks?",
or "What if I already did the cherry-pick; can I somehow
repair the damage and prevent the future merge conflict or ABA problem?"
We'll start delving into them next time.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20180314-00/?p=98235#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://blogs.msdn.microsoft.com/oldnewthing/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="4" aria-required="true"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required='true' required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required='true' required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" /></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit btn btn-default" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='98235' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="72edf55235" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="127"/></p>			</form>
			</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1329585">
				<div id="div-comment-1329585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">atn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329585">
			March 14, 2018 at 8:02 am</a>		</div>

		<p>The question I would add that might be included in &#8220;What if I already did the cherry-pick ?&#8221; and  &#8220;What if I need to perform two cherry-picks?&#8221; is &#8220;What if I already commited F2 ?&#8221;. I suppose I can cherry-pick on top of A into P, then revert F2 and  merge again, but that seems convoluted. Am I missing something?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329585#respond' onclick='return addComment.moveForm( "div-comment-1329585", "1329585", "respond", "98235" )' aria-label='Reply to atn'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1329595">
				<div id="div-comment-1329595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329595">
			March 14, 2018 at 10:27 am</a>		</div>

		<p>Not sure what you mean. You&#8217;re supposed to commit F2.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329595#respond' onclick='return addComment.moveForm( "div-comment-1329595", "1329595", "respond", "98235" )' aria-label='Reply to Raymond Chen - MSFT'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1329665">
				<div id="div-comment-1329665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">atn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329665">
			March 15, 2018 at 1:45 am</a>		</div>

		<p>Your corrected workflow is to make the fix in a new patch branch, which seems to require that you know in advance which commits you will want to cherry-pick. I would typically have a bunch of commits in the feature branch, and realize later that there is one (or two) random commit I need to cherry-pick. (In which case, I guess I should cherry-pick them into a new patch branch and merge it in the master and feature branches).<br />
Thanks for the series anyways, it has been very informative.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329665#respond' onclick='return addComment.moveForm( "div-comment-1329665", "1329665", "respond", "98235" )' aria-label='Reply to atn'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4" id="comment-1329695">
				<div id="div-comment-1329695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329695">
			March 15, 2018 at 7:09 am</a>		</div>

		<p>Stay tuned!</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329695#respond' onclick='return addComment.moveForm( "div-comment-1329695", "1329695", "respond", "98235" )' aria-label='Reply to Raymond Chen - MSFT'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1329675">
				<div id="div-comment-1329675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329675">
			March 15, 2018 at 3:50 am</a>		</div>

		<p>I was going to ask a similar question, whereby you had already committed F1, F2 and F3 on the feature branch and were intending to cherry-pick F2 to master. I think you can still cherry-pick it to the patch branch and then merge it to both branches as before, although I haven&#8217;t tried it myself to check.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329675#respond' onclick='return addComment.moveForm( "div-comment-1329675", "1329675", "respond", "98235" )' aria-label='Reply to Neil'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1329615">
				<div id="div-comment-1329615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329615">
			March 14, 2018 at 1:51 pm</a>		</div>

		<p>If you already cherry-picked, go back to the branch source, make another branch, cherry pick onto the branch, and then merge the branch back to both cherry-pick source and cherry-pick target.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329615#respond' onclick='return addComment.moveForm( "div-comment-1329615", "1329615", "respond", "98235" )' aria-label='Reply to Joshua'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1329605">
				<div id="div-comment-1329605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Clarkstone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329605">
			March 14, 2018 at 11:03 am</a>		</div>

		<p>This is seeming a bit Darcs-y again. <i>As best I can recall</i>, in Darcs, a source tree is considered to be an empty tree with a set of patches applied to it and patches are not particularly ordered except for where they actually touch the same lines of source code.</p>
<p>This is a bit like a git repository where every commit has been moved up to the earliest parent possible (like P in the diagrams above), and IIRC the state of any HEAD is considered to be gigantic octopus merge of all the relevant branches.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329605#respond' onclick='return addComment.moveForm( "div-comment-1329605", "1329605", "respond", "98235" )' aria-label='Reply to Simon Clarkstone'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-zyf_edward odd alt thread-even depth-1 parent" id="comment-1329655">
				<div id="div-comment-1329655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Xevoli' rel='external nofollow' class='url'>Xevoli</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329655">
			March 14, 2018 at 9:13 pm</a>		</div>

		<p>I have another question that, do I need to keep the patch branch until a full merge?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329655#respond' onclick='return addComment.moveForm( "div-comment-1329655", "1329655", "respond", "98235" )' aria-label='Reply to Xevoli'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alexcohn even depth-2" id="comment-1329735">
				<div id="div-comment-1329735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235#comment-1329735">
			March 15, 2018 at 1:47 pm</a>		</div>

		<p>No you don&#8217;t. But if for whatever reason you later, after having deleted the patch branch, decide that you want a branch that looks at P, you can create it at no cost.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235&#038;replytocom=1329735#respond' onclick='return addComment.moveForm( "div-comment-1329735", "1329735", "respond", "98235" )' aria-label='Reply to Alex Cohn'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

