<html>
<head>
<title>Thread affinity of user interface objects, part 2: Device contexts</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Thread affinity of user interface objects, part 2: Device contexts</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 11, 2005 / year-entry #300</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Last time, we discussed briefly the thread affinity rules that govern window handles. Device contexts (DCs) also have a certain degree of thread affinity. The thread that calls functions such as GetDC must also be the one that calls ReleaseDC, but as with window handles, during the lifetime of the DC, any thread can use...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Last time, we discussed briefly the thread affinity rules that govern window handles.</p>
<p> Device contexts (DCs) also have a certain degree of thread affinity. The thread that calls functions such as <a href="http://msdn.microsoft.com/library/en-us/gdi/devcons_4esj.asp"> <code>GetDC</code></a> must also be the one that calls <a href="http://msdn.microsoft.com/library/en-us/gdi/devcons_66hv.asp"> <code>ReleaseDC</code></a>, but as with window handles, during the lifetime of the DC, any thread can use it. If you choose to use a DC in a multi-threaded manner, it's your responsibility to coordinate the consumers of that device context so that only one thread uses it at a time. For example, to host windowless controls across multiple threads, the host obtains a DC on the host thread, then asks each control in sequence to draw itself into that DC. Only one control draws into the DC at a time, even if the control happens to be on a different thread. </p>
<p> The thread affinity of DCs is much more subtle than that of window handles, because if you mess up and release a DC from the wrong thread, things will still seem to be running okay, but the window manager's internal bookkeeping will be messed up and you may get a bad DC from GetDC a little later down the line. </p>
<p> Next time, the remaining user interface elements. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-312003">
				<div id="div-comment-312003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312003">
			October 11, 2005 at 1:10 pm</a>		</div>

		<p>&quot;the consumers of that device context&quot;</p>
<p>I have done many things with a DC, some even stupid, but I don&#8217;t think I&#8217;ve ever consumed one. Is there some undocumented GdiEntry4711BonApetit(HDC) added now to do this? :-)</p>
<p>Perhaps&#8230; &quot;use&quot; is more descriptive?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-312143">
				<div id="div-comment-312143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312143">
			October 12, 2005 at 2:00 am</a>		</div>

		<p>&quot;Consumes&quot; implies to me that you have just depleted the supply of something. So I guess you could say that creating a DC &quot;consumes&quot; a device handle. But I can&#8217;t see how /using/ that handle would deplete anything, except opaque resources &quot;behind the scenes&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-312153">
				<div id="div-comment-312153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312153">
			October 12, 2005 at 4:13 am</a>		</div>

		<p>&gt; The thread that calls functions such as<br />
<br />&gt; GetDC must also be the one that calls<br />
<br />&gt; ReleaseDC,</p>
<p>Sorry to multicontext this thread, but I tried to figure out how to figure out whether it&#8217;s necessary to call ReleaseDC in the first place, and I couldn&#8217;t figure it out.</p>
<p>MSDN page<br />
<br /><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_mfc_CWnd.3a3a.GetDC.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_mfc_CWnd.3a3a.GetDC.asp</a><br />
<br />says:<br />
<br />&gt; Unless the device context belongs to a<br />
<br />&gt; window class, the ReleaseDC member function<br />
<br />&gt; must be called to release the context after<br />
<br />&gt; painting.</p>
<p>So some CWnd objects have device contexts that belong to window classes and some CWnd objects have device contexts that don&#8217;t belong to window classes?  How can I figure out which CWnd objects[*] are really CWnd and which are really CNonWnd?</p>
<p>The same MSDN page answers Mike and TC:<br />
<br />&gt; Since only five common device contexts are<br />
<br />&gt; available at any given time, failure to<br />
<br />&gt; release a device context can prevent other<br />
<br />&gt; applications from accessing a device context.</p>
<p>It makes me wonder though.  If I&#8217;m using a terminal server and suddenly can&#8217;t see my screen, should I whack some of my neighbours until at most four of them remain?</p>
<p>[* Of course this usually involves subclasses of CWnd, i.e. derived and more specialized types.]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-312273">
				<div id="div-comment-312273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312273">
			October 12, 2005 at 11:18 am</a>		</div>

		<blockquote><p>
  So some CWnd objects have device contexts that belong to window classes and<br />
  <br />&gt;some CWnd objects have device contexts that don&#8217;t belong to window classes?<br />
  <br />&gt;How can I figure out which CWnd objects[*] are really CWnd and which are really CNonWnd? </p>
<p>There&#8217;s a window class style called CS_OWNDC which if set means the window has a permanent DC.  So what the docs mean is that when working with windows created of a class with CS_OWNDC you don&#8217;t need to call ReleaseDC().</p>
<p>I think it&#8217;s harmless to call ReleaseDC() even on the DC from windows of a CS_OWNDC class, so best to always call it (correct me if I&#8217;m wrong someone).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-312533">
				<div id="div-comment-312533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wind.codepixel.com' rel='external nofollow' class='url'>Antonio</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312533">
			October 12, 2005 at 4:32 pm</a>		</div>

		<p>So&#8230; you have to free the DC from the same thread that allocated it, and also the system sort-of-crashes when you free the DC from the wrong thread.</p>
<p>Now I know this is over-simplistic but is it too much fuzz to add a &quot;creator thread&quot; to the DC and then just plainly refuse to free if it doesn&#8217;t match? Or else, at least tell us all the gory details about why it isn&#8217;t done ;)</p>
<p>ps. Your earlier article about double ctrl-alt-del already saved a friend of mine who just added a new user to his XP system and lost the admin option, so&#8230; thanks!!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-312553">
				<div id="div-comment-312553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312553">
			October 12, 2005 at 5:34 pm</a>		</div>

		<p>Answering &quot;why it isn&#8217;t done&quot; is a topic too large for a comment. It goes to philosophical issues that controlled API design in the 1980&#8217;s. More coming later this month.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-312563">
				<div id="div-comment-312563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312563">
			October 12, 2005 at 11:39 pm</a>		</div>

		<p>Wednesday, October 12, 2005 11:18 AM by SJ<br />
<br />&gt; when working with windows created of a class<br />
<br />&gt; with CS_OWNDC you don&#8217;t need to call<br />
<br />&gt; ReleaseDC().</p>
<p>OK, and I can tell an object of an MFC class derived from CWnd to tell me what its Windows style is.  Thank you.</p>
<p>&gt; I think it&#8217;s harmless to call ReleaseDC()<br />
<br />&gt; even on the DC from windows of a CS_OWNDC<br />
<br />&gt; class, so best to always call it (correct me<br />
<br />&gt; if I&#8217;m wrong someone).</p>
<p>Even better news.  Although it looks like you were guessing, Mr. Chen posted later and he didn&#8217;t correct you, so it looks like you&#8217;re right.  Thank you.</p>
<p>Now if that MSDN page would be revised to say that it&#8217;s always safe to call ReleaseDC() even in cases where the MSDN reader doesn&#8217;t know how to figure out whether it&#8217;s necessary&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-312593">
				<div id="div-comment-312593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312593">
			October 13, 2005 at 1:56 am</a>		</div>

		<p>&quot;he didn&#8217;t correct you, so it looks like you&#8217;re right&quot;</p>
<p>Do not assume my silence implies consent. Do you expect me to fact-check every single statement made in a comment? If you do, then I&#8217;ll just disable comments.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-312623">
				<div id="div-comment-312623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051011-10/?p=33823#comment-312623">
			October 13, 2005 at 4:04 am</a>		</div>

		<p>Thursday, October 13, 2005 1:56 AM by oldnewthing</p>
<p>&gt; Do not assume my silence implies consent.</p>
<p>OK, I understand not to assume.</p>
<p>&gt; Do you expect me to fact-check every single<br />
<br />&gt; statement made in a comment?</p>
<p>&quot;Expect&quot; as in &quot;I think you&#8217;re supposed to do it&quot;?  No.  &quot;Expect&quot; as in &quot;I see you do it frequently&quot;?  Well yes&#8230;</p>
<p>&gt; If you do, then I&#8217;ll just disable comments.</p>
<p>You know how much MSDN benefits from that policy.  (Yes I know MSDN is older and no one had the idea of blog-style or wiki-style posting of corrections, and that isn&#8217;t MSDN&#8217;s fault.  Nonetheless you know MSDN&#8217;s quality problems and you know how much better it is to allow corrections and discussions.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

