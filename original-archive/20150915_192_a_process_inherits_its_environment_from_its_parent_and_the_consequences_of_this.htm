<html>
<head>
<title>A process inherits its environment from its parent, and the consequences of this simple statement</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>A process inherits its environment from its parent, and the consequences of this simple statement</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 15, 2015 / year-entry #193</td></tr>
<tr><td><b>Tags:</b></td><td>code;tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>30</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer reported that they changed some system-level enviornment variables (include PATH). They also have a batch file that, among other things, runs a program that requires that the PATH be set a certain way. The batch file is set to run automatically every five minutes, and the customer observed that the batch file is...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that they changed some system-level
enviornment variables (include <code>PATH</code>).
They also have a batch file that, among other things,
runs a program that requires that the <code>PATH</code> be
set a certain way.
The batch file is set to run automatically every five minutes,
and the customer observed that the batch file is not picking
up the changes to the system-wide environment variables.</p>
<p>
The customer developed two theories as to why this was happening.
</p>
<p>
Theory number one was that batch files inherit the environment
from its parent process (unless the parent process passes an
explicit environment to <code>Create&shy;Process</code>).
"Since we changed a global environment variable and the parent
process is continually running, it does not pick up the
new environment variables.
Then it passes this outdated set of environment variables
to the batch file."
</p>
<p>
Theory number two is that changes to global environment variables
will eventually become applied to running processes,
but the effect is not immediate;
you have to wait a while for the change to propagate.
"We started a new command prompt, and the new command prompt did
not have the new environment variables,
even though the new values did appear in the System control panel.
After setting the environment variable a few more times,
eventually the new values started showing up in the command prompt."
</p>
<p>
The first theory is correct.
Processes inherit their initial environment from their parents.
Of course, once the process is running, it is free to change its
environment variables by calling
<code>Set&shy;Environment&shy;Variable</code>,
and those modified environment variables are passed to any
child processes launched after the new variable is set.
(A parent process can also pass a custom environment to the
child process.)
</p>
<p>
Now,
a child process inherits its initial environment from its parent,
but it only gets a snapshot of that environment.
If the parent subsequently modifies its environment,
the child environment is not updated.
</p>
<p>
When the customer said that they "changed some global environment
variables",
that was a rather vague statement,
because as we saw above,
there is technically no such thing as a "global environment variable".
Every environment variable is local to a process.
What the customer actually did was make a chance to the template
environment that is used to get the ball rolling.
</p>
<p>
When you log on, the system constructs an initial environment
from the template specified in the Environment Variables control panel.
That initial environment is then given to Explorer,
where it becomes Explorer's initial environment,
and from there, it becomes inherited by anything that gets launched
by Explorer,
and then anything that gets launched by anything that gets launched
by Explorer, and so on.
If you can trace your lineage back to Explorer,
then your initial environment was based on the copy in Explorer.
</p>
<p>
Now, each process along the way may have edited its environment
before spawning a child process,
in which case those edited values are inherited by the children.
</p>
<p>
In order for the changes to the environment template to take effect
in a process,
that process needs to support the
"Throw away all your environment variables and create a new
set of environment variables based on the current template" message.
That message is
the <code>WM_<wbr>SETTING&shy;CHANGED</wbr></code> message,
<a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms725497%28v=vs.85%29.aspx">
where the <code>lParam</code> points to the string
"Environment"</a>.
</p>
<p>
The only program in common use that actually responds to that
message is Explorer.
</p>
<p>
This means that when you change the template for the initial environment
from the Environment Variables control panel,
the only program that reacts immediately to those changes is Explorer.
Any other programs that are already running will continue to operate
with whatever environment variables they had when they started
(or subsequently edited).
</p>
<p>
If you run a program from Explorer, it will get the updated
environment
because Explorer updated its environment in response to the message.
</p>
<p>
If you run a program from Task Manager or a command prompt
or anything else,
then it will not get the updated environment
because Task Manager,
the command prompt,
and pretty much anything else does not update
its environment in response to the message.
</p>
<p>
If you want to regenerate your environment in response to the
<code>WM_<wbr>SETTING&shy;CHANGED</wbr></code> message with
an <code>lParam</code> of
<i>Environment</i>,
you can use
<a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb762270%28v=vs.85%29.aspx">
the <code>Create&shy;Environment&shy;Block</code> function</a>.
You can enumerate the contents of this environment block and
copy it to your current environment.
</p>
<p>
But personally, I wouldn't bother,
because pretty much nobody else bothers either.
</p></p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1204221">
				<div id="div-comment-1204221" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204221">
			September 15, 2015 at 7:06 am</a>		</div>

		<p>Ah, the classic case of &quot;If you build it, everyone will ignore it&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1204211">
				<div id="div-comment-1204211" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204211">
			September 15, 2015 at 7:13 am</a>		</div>

		<p>I agree. The only time I&#39;d consider implementing it is writing a shell replacement.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1204201">
				<div id="div-comment-1204201" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204201">
			September 15, 2015 at 7:40 am</a>		</div>

		<p>It is interesting in that the environment regeneration feature is pretty much designed for Explorer only (virtually speaking). &nbsp;It would suck if Explorer had to be power cycled (logout/login, reboot, ?, etc.) so that it can obtain the updated environment. &nbsp;In this case this feature makes sense.</p>
<p>On the other hand, I would not want such sophistication in my programs. &nbsp;My programs get the environment they first get and that&#39;s it. &nbsp;I think only confusion and bugs can be introduced by having such programs utilize that feature. &nbsp;Imagine a compiler writing object files to C:Foo and then changes mid compilation to writing object files to C:Bar. &nbsp;I would not want to be the guy that has to investigate that problem.</p>
<p>If it was really necessary then I would have a watchdog process that utilizes that feature. &nbsp;When the environment changes the watchdog can launch a new instance of the process. &nbsp;Depending on the nature of the program, the watchdog may first gracefully close the current instance before launching a new instance (using the example above, so as to let our compiler finish writing files to C:Foo).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1204171">
				<div id="div-comment-1204171" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kelden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204171">
			September 15, 2015 at 8:18 am</a>		</div>

		<p>I have reported this &quot;bug&quot; to Mr. Ghisler who writes a great file manager and he fixed it a long time ago.</p>
<p>Now when you open a new command prompt in his file manager, you get the new environment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1204151">
				<div id="div-comment-1204151" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204151">
			September 15, 2015 at 8:47 am</a>		</div>

		<p>As Nicholas points out, changing environment mid-task is usually not a good idea. &nbsp;And because environment is process-wide state, there&#39;s just no good way to update it in a multi-threaded program. &nbsp;On the other hand, many launchers don&#39;t have any customized environment to pass. &nbsp;Ideally, there would be a variation on CreateProcess and the spawn* family of functions that implements &quot;initialize environment for child process from the current environment template&quot; instead of &quot;initialize from parent&#39;s environment&quot;. &nbsp;That option would probably cover 98% of all use cases.</p>
<p>For the other 2%, some way of merging the change to the template with the current environment would be needed. &nbsp;Some IDE might like to be able to pick up environment changes and pass those to build steps or when launching the debug target&#8230; but not at the expense of environment settings made by a batch file used to launch the IDE. &nbsp;Unfortunately, WM_SETTINGSCHANGE doesn&#39;t lead to an easy way to discover which particular variables were changed.</p>
<div class="post">[<em>I already provided the information to do that yourself; Call <code>Create&shy;Environment&shy;Block</code> and pass it as the environment parameter to <code>Create&shy;Process</code>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1204141">
				<div id="div-comment-1204141" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204141">
			September 15, 2015 at 8:53 am</a>		</div>

		<p>@Joshua: &quot;I agree. The only time I&#39;d consider implementing it is writing a shell replacement.&quot;</p>
<p>Well ideally I&#39;d try supporting it on a program that&#39;s supposed to launch other programs (task scheduler, possibly also an Integrated Development Environment)&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1204131">
				<div id="div-comment-1204131" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204131">
			September 15, 2015 at 9:10 am</a>		</div>

		<p>@Kelden It is indeed a great file manager. First thing I install on any new Windows box.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1204121">
				<div id="div-comment-1204121" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EclecticMonk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204121">
			September 15, 2015 at 9:20 am</a>		</div>

		<p>I&#39;m intrigued by this statement from the customer:</p>
<p>&quot;We started a new command prompt, and the new command prompt did not have the new environment variables, even though the new values did appear in the System control panel. After setting the environment variable a few more times, eventually the new values started showing up in the command prompt.&quot;</p>
<p>The second sentence seems impossible, unless they quit and restarted the command prompt (from Explorer) at some point and forgot to mention it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1204111">
				<div id="div-comment-1204111" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204111">
			September 15, 2015 at 9:37 am</a>		</div>

		<p>I am under impression that services behave the same, also when restarted. This is quite inconvenient, because an environment change requires a system not service, restart.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-martin-baschnegger odd alt thread-odd thread-alt depth-1" id="comment-1204101">
				<div id="div-comment-1204101" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Martin+Ba.+_' rel='external nofollow' class='url'>Martin Ba. _</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204101">
			September 15, 2015 at 10:15 am</a>		</div>

		<p>@Goran &#8211; only services running as SYSTEM (for whatever reason) will not pick up environment changes on svc restart &#8211; need a system restart.</p>
<p>Services running under a normal user account will pick up &quot;global&quot; environment changes if you restart the service only.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1204091">
				<div id="div-comment-1204091" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204091">
			September 15, 2015 at 10:18 am</a>		</div>

		<p>@Medinoc: IDEs need to load or inherit the environment declaration for their compilers so they end up depending on differing environments. Even with platform libraries and compilers you can&#39;t get away from this (cross compiling).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1204081">
				<div id="div-comment-1204081" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204081">
			September 15, 2015 at 10:46 am</a>		</div>

		<p>EclecticMonk: Remember that you are responding to an anecdote, so you have to assume that some important parts are left out or inaccurate (misremembered). If you don&#39;t already understand how the system works, you might not realize there would be a material difference between running &quot;start cmd&quot; from an existing command prompt, and pressing the Start button and entering &quot;cmd&quot;.</p>
<p>Odds are the user was changing the environment variables and then launching a new command prompt from a process that doesn&#39;t automatically update them, then later launched a new command prompt from Explorer and noticed that the new values were picked up. Rather than recognizing that it was the manner of launch, they assumed it was the time difference that mattered.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1204071">
				<div id="div-comment-1204071" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204071">
			September 15, 2015 at 10:54 am</a>		</div>

		<p>@Goran, Martin Ba.: I suspect it&#39;s because the services are being run as part of svchost.exe, which can run multiple services under the same process. &nbsp;As long as that svchost.exe process doesn&#39;t exit, you won&#39;t pick up the environment changes.</p>
<p>That being said, one way of being able to support running child processes with the latest environment variables while avoiding having them change from under you is to create your own snapshot of the variables after startup. &nbsp;The only downside to this is that any other Win32 API methods that use the environment block would use the potentially modified variables instead of your snapshot, so you&#39;d have to make sure to write your own.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1204051">
				<div id="div-comment-1204051" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204051">
			September 15, 2015 at 12:03 pm</a>		</div>

		<p>Where does the environment come from if the process doing the CreateProcessW call isn&#39;t the parent process? &nbsp;I.e., if PROC_THREAD_ATTRIBUTE_PARENT_PROCESS is applied.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1204031">
				<div id="div-comment-1204031" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204031">
			September 15, 2015 at 12:59 pm</a>		</div>

		<p>Came here to say the same thing, this is probably running in a Service which won&#39;t pick up the environment variable changes until a restart. Knew it after reading the first few sentences. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1204021">
				<div id="div-comment-1204021" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204021">
			September 15, 2015 at 1:42 pm</a>		</div>

		<p>&quot;Theory number two is that changes to global environment variables will eventually become applied to running processes, but the effect is not immediate; you have to wait a while for the change to propagate.&quot;</p>
<p>That is a weird theory. &nbsp;I wouldn&#39;t even EXPECT that to happen. &nbsp;</p>
<p>Also, &quot;After setting the environment variable a few more times, &#8230;&quot; &nbsp;The customer thought that SETTING the variable a few times would have some effect different from setting it once? &nbsp;Is this the same theory that makes people push the &quot;elevator close&quot; button six times after they get into an elevator? &nbsp;I wonder what the customer thinks is the threshold number of repeated changes, before Explorer decides that you really, really want the updated values to be propagated everywhere?</p>
<p>Also, did they think about the effect of forcibly changing some values that are BEING USED BY currently running processes? &nbsp;Such as Homedrive, Homepath, ProgramData, etc? &nbsp;</p>
<p>Yes, they thought there was a global environment that could be changed. &nbsp;I suppose they are just learning, and I was there once too&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chuckop even thread-even depth-1" id="comment-1204011">
				<div id="div-comment-1204011" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ChuckOp' rel='external nofollow' class='url'>ChuckOp</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204011">
			September 15, 2015 at 2:08 pm</a>		</div>

		<p>I think it&#39;s arguable that Task Manager should respond to WM_SETTINGSCHANGE, since launching new tasks is one piece of it&#39;s functionality. &nbsp;I don&#39;t think cmd.exe and/or conhost.exe should, because I want the ability to modify the environment before launching a new process through functionality provided.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle odd alt thread-odd thread-alt depth-1" id="comment-1204001">
				<div id="div-comment-1204001" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1204001">
			September 15, 2015 at 2:22 pm</a>		</div>

		<p>@ChuckOp: Sure, if none of its functionality is dependent on the values in the environment variables aside from launching processes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein even thread-even depth-1" id="comment-1203991">
				<div id="div-comment-1203991" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203991">
			September 15, 2015 at 3:25 pm</a>		</div>

		<p>@DWalker: Don&#39;t knock it! Banging the &quot;close door&quot; button repeatedly absolutely works. &nbsp;Maybe only in the sense of perceived time, but when I&#39;m standing there and nothing is happening, that is really the measure that matters.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203981">
				<div id="div-comment-1203981" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203981">
			September 15, 2015 at 4:26 pm</a>		</div>

		<p>Raymond, I&#39;m not sure if you&#39;re suggesting that as a reply to part #1 (the &quot;98%&quot;) or part #2. &nbsp;For part #1, it&#39;s a matter of convenience and discoverability. &nbsp;If there were a flag to CreateProcess, people would know about and think about which environment to propagate. &nbsp;As a separate function, no one thinks about it. &nbsp;Instead, you have to get a token for the current user, pass that to Create­Environment­Block, later call DestroyEnvironmentBlock, release the user token, and why do the docs say you can only use it with CreateProcessAsUser?</p>
<p>For part #2 (merging), it looks like CreateEnvironmentBlock&#39;s third parameter kinda maybe causes some merging. &nbsp;But the documentation on that parameter is seriously unclear.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kwadwomi even thread-even depth-1" id="comment-1203971">
				<div id="div-comment-1203971" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Master+Programmer' rel='external nofollow' class='url'>Master Programmer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203971">
			September 15, 2015 at 6:07 pm</a>		</div>

		<p>How do you respond to WM_SETTING­CHANGED if you have a console application? I guess you could always create a hidden background window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203961">
				<div id="div-comment-1203961" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203961">
			September 15, 2015 at 7:05 pm</a>		</div>

		<p>@DWalker: &nbsp;&quot;That is a weird theory. &nbsp;I wouldn&#39;t even EXPECT that to happen.&quot;</p>
<p>Most Windows (Active Directory) administrators would probably assume this behavior. &nbsp;For example, Group Policy mostly works this way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1203951">
				<div id="div-comment-1203951" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203951">
			September 15, 2015 at 9:27 pm</a>		</div>

		<p>@Richard: No. Any Active Directory Administrators who worths their salt shouldn&#39;t assume the environment variables would change on the already running process.</p>
<p>Active Directory Administrators should be familiar with &quot;setx&quot; command and know how it works. And the remarks explicitly says:</p>
<p>&quot;Setx writes variables to the master environment in the registry. Variables set with setx variables are available in future command windows only, not in the current command window.&quot;</p>
<p>So this command do not even affects current common prompt instance, let alone other command prompt instances.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203851">
				<div id="div-comment-1203851" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203851">
			September 16, 2015 at 11:22 am</a>		</div>

		<p>If only there was special CreateProcess argument that when used &#8211; caused process environment to be re-initialized from template, but not inherited from parent.. That could be another bit in the dwCreationFlags or lpEnvironment special pointer value or pointer to special string. Or, if I&#39;d be a designer of CreateProcess &#8211; I&#39;d either made bInheritHandles as another bit-flags arg, that deals with inheritance (handles, environment, some staff that currently controlled by dwCreationFlags) and called it dwInheritanceFlags either put that all into dwCreationFlags.</p>
<p>And yes, I understand that Create&shy;Environment&shy;Block does this, but with flag such question would never have been asked.</p>
<div class="post">[<em>But such a flag would introduce a layering violation. A low-level component (kernel) now has a dependency on a higher-level component (profile management). -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203831">
				<div id="div-comment-1203831" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203831">
			September 16, 2015 at 12:41 pm</a>		</div>

		<p>Its already depends on (IMHO) higher level user32 (desktop), and current user&#39;s template environment block not such big profile thing.. Anyway I agree with such point. Also may be ShellExecute(Ex) would be more correct place for that but.. somewhy it doesn&#39;t have environment-specific options at all. Probably it considered too low-level for it :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1203771">
				<div id="div-comment-1203771" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203771">
			September 16, 2015 at 6:42 pm</a>		</div>

		<p>I wonder if the launching (parent) process exited, will the current process get the Environment update or not.</p>
<div class="post">[<em>I think you kind of missed the main point of the article. Once the environment is passed to the child, what happens to the parent in the future is irrelevant. &quot;a child process inherits its initial environment from its parent, but it only gets a snapshot of that environment.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203761">
				<div id="div-comment-1203761" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203761">
			September 16, 2015 at 9:42 pm</a>		</div>

		<p>In my experience, one of the most common causes of &quot;we started a new command window and it didn&#39;t have the new environment variables&quot; is the &quot;Command Prompt Here&quot; right-click menu in Explorer. &nbsp;I&#39;m not sure where that menu comes from (it doesn&#39;t exist on my machine) or exactly why it doesn&#39;t work, but I&#39;ve seen plenty of people complaining about this particular behaviour.</p>
<p>Of course, environment variables should be considered legacy technology anyway, and avoided whenever possible. &nbsp;(This is only one of the reasons.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203741">
				<div id="div-comment-1203741" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203741">
			September 16, 2015 at 10:54 pm</a>		</div>

		<p>Harry Johnston: The &quot;Open command window here&quot; item that pops up in menus with a Shift+Right-click should give you a command prompt with the new environment variables when it comes from a window belonging to Explorer.</p>
<p>However, any other program that shows a file explorer (say, via a common Open or Save dialog) would inherit the environment of the process whose window you clicked in. And as we all know that process won&#39;t have updated its environment the way Explorer would.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-even depth-1" id="comment-1203571">
				<div id="div-comment-1203571" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203571">
			September 17, 2015 at 9:31 am</a>		</div>

		<p>@cheong00: So what happens when I use `start cmd` on a command line prompt? The environment will not be updated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203441">
				<div id="div-comment-1203441" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150915-00/?p=91591#comment-1203441">
			September 17, 2015 at 4:37 pm</a>		</div>

		<p>@Harry Johnston. Re: &quot;Command Prompt Here&quot;. Maybe it ran a separate helper process that launched the command prompt, and that separate helper process didn&#39;t pick up the environment change. MS had the Command Prompt Here power toy for Windows XP that came with its own installer program. Not sure if it just added keys to the registry or actually contained a helper exe. Other sites have similar toys which do appear to have helper exe&#39;s (<a rel="nofollow" target="_new" href="http://code.kliu.org/cmdopen">http://code.kliu.org/cmdopen</a>). Never looked at their code, but maybe they start up on login and don&#39;t pickup environment variable changes.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

