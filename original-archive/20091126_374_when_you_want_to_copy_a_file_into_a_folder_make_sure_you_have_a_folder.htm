<html>
<head>
<title>When you want to copy a file into a folder, make sure you have a folder</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>When you want to copy a file into a folder, make sure you have a folder</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 26, 2009 / year-entry #375</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>19</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">This story is inspired by an actual customer problem. The program LitWare.exe is used for TPS management, and when you want to create a new TPS report, you have to pick a cover sheet. The program shows you the cover sheets that have been defined, which it loads from the C:\TPS Cover Sheets directory. The...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
This story is inspired by an actual customer problem.
</p>
<p>
The program <code>LitWare.exe</code> is used for TPS management,
and when you want to create a new TPS report,
you have to pick a
<a HREF="http://www.chrisglass.com/journal/downloads/TPSreport.pdf">
cover sheet</a>.
The program shows you the cover sheets that have been defined,
which it loads from the <code>C:\TPS Cover Sheets</code> directory.
</p>
<p>
The customer found that on one of the machines,
the cover sheets weren't showing up,
even though the standard system setup copies a sample
cover sheet into the <code>C:\TPS Cover Sheets</code> directory.
The error message they got was
<i>Cannot load cover sheets. The directory name is invalid</i>.
</p>
<p>
The customer did some troubleshooting and determined that
"The cover sheet directory is missing,
and we have a file instead."
</p>
<pre>
C:\&gt;dir
 Volume in drive C is INITECH
 Volume Serial Number is BAAD-F00D

 Directory of C:\

09/18/2006  02:43 PM                24 autoexec.bat
09/18/2006  02:43 PM                10 config.sys
03/18/2009  10:30 AM    &lt;DIR&gt;          Program Files
11/21/2008  01:04 PM             1,677 TPS Cover Sheets
02/20/2008  10:39 AM    &lt;DIR&gt;          Users
05/29/2009  02:23 PM    &lt;DIR&gt;          Windows
               2 File(s)          1,711 bytes
               3 Dir(s)  229,031,751,680 bytes free
</pre>
<p>
One of my colleagues employed psychic powers to determine that
at the time the customer tried to install the sample cover sheet
on the machine,
the <code>C:\TPS Cover Sheets</code> directory <i>did not yet exist</i>,
and that the batch file they used to set up a new computer
just does a
<code>copy \\server\<wbr>TPSConfig\<wbr>Sample.tps "C:\TPS Cover Sheets"</code>,
which results in a file being created with the name
<code>C:\TPS Cover Sheets</code>.
</p>
<p>
The customer was surprised by this conclusion.
"I would think that copy will fail if the
<code>C:\TPS Cover Sheets</code> directory doesn't exist,
but this might be our problem.
We'll look into it."
(I guess this customer never used the copy command to copy a file
to a new name.)
</p>
<p>
If the destination of a <code>copy</code> command exists and is a
directory, then the source files are copied into that directory.
If the destination of a <code>copy</code> command does not exists
or if it exists and is a file,
then the destination is treated as a file name for the destination.
(If there is more than one source file, then they are concatenated
as if they were text files.)
</p>
<p>
The customer went back and checked the scripts,
and the line they used was almost exactly what my colleague
predicted:
</p>
<pre>
copy "\\INITECH\Defaults\Sample cover sheet.tps" "C:\TPS Cover Sheets" /Y
</pre>
<p>
If the <code>C:\TPS Cover Sheets</code> directory hasn't been created
yet, then that would explain the behavior they're seeing:
The <code>copy</code> command sees that the destination doesn't exist
and assumes you are doing a file-to-file copy
(as opposed to a file-to-directory copy).
In this case, the problem was that copying a sample cover sheet was
a step they added to their setup scripts, but they added it before
the step that creates the cover sheet directory.
Reordering the two steps fixed the problem.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-790333">
				<div id="div-comment-790333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gaspar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-790333">
			November 26, 2009 at 7:00 am</a>		</div>

		<p>&#8220;The customer found that on one of the machines, no of the cover sheets were showing up, even though the standard system setup copies a sample cover sheet into the C:TPS Cover Sheets directory. &#8220;</p>
<p>I assume that it should read &#8220;&#8230;on one of the machines, &lt;i&gt;none&lt;/i&gt; of the cover sheets&#8230;?&#8221;</p>
<div class=post>[<i>Or something equally grammatical, yeah. Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-789293">
				<div id="div-comment-789293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">strik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789293">
			November 26, 2009 at 7:44 am</a>		</div>

		<p>That&#8217;s why I would use xcopy instead:</p>
<p>xcopy &quot;\INITECHDefaultsSample cover sheet.tps&quot; &quot;C:TPS Cover Sheets&quot; /Y</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-789303">
				<div id="div-comment-789303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789303">
			November 26, 2009 at 8:16 am</a>		</div>

		<p>PC LOAD LETTER? &nbsp;WTF does that mean?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-789313">
				<div id="div-comment-789313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">oliver</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789313">
			November 26, 2009 at 8:25 am</a>		</div>

		<p>Wouldn&#8217;t this error have been detected if they had appended a backslash to the target name? Like this:</p>
<p>copy &quot;\INITECHDefaultsSample cover sheet.tps&quot; &quot;C:TPS Cover Sheets&quot; /Y</p>
<p>I suppose the copy command would then fail with a &quot;directory does not exist&quot; error or similar?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-789333">
				<div id="div-comment-789333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789333">
			November 26, 2009 at 9:54 am</a>		</div>

		<p>Ha, TPS Reports :)</p>
<p>&quot;Office space&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-789383">
				<div id="div-comment-789383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789383">
			November 26, 2009 at 11:27 am</a>		</div>

		<p>Or:</p>
<p>if not exist &quot;C:TPS Cover Sheets&quot; mkdir &quot;C:TPS Cover Sheets&quot;</p>
<p>copy &quot;\INITECHDefaultsSample cover sheet.tps&quot; &quot;C:TPS Cover Sheets&quot; /Y</p>
<p>IIRC if not exist works all the way back to MS-DOS 6 (except of course it can&#8217;t handle long file names).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-789393">
				<div id="div-comment-789393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789393">
			November 26, 2009 at 11:28 am</a>		</div>

		<p>Oh and I would use the backslash at the end too to imply the same destination file name, but assuming strik is right about the backslash thing I think my version would still be acceptable. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-789413">
				<div id="div-comment-789413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dalek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789413">
			November 26, 2009 at 11:42 am</a>		</div>

		<p>I frequently use a line like</p>
<p>if not exist &quot;C:TPS Cover Sheets&quot; md &quot;C:TPS Cover Sheets&quot;</p>
<p>in batch files to &lt;i&gt;try&lt;/i&gt; to make sure a directory exists. However if they don&#8217;t know how the copy command works, they probably don&#8217;t know about if (not) exist either :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-789483">
				<div id="div-comment-789483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789483">
			November 26, 2009 at 3:28 pm</a>		</div>

		<p>I used to use &quot;if not exist C:somedirnul md C:somedir&quot;, since I remember there being a problem with using the bare directory name in DOS (5/6, I think, maybe even Win95) &#8212; they reported that it didn&#8217;t exist because they were checking for file existence and it was a directory rather than a file. &nbsp;But &quot;nul&quot; was a magic file that always existed in every directory, so this got around the problem.</p>
<p>Sadly this doesn&#8217;t work in NT; &quot;nul&quot; is considered to never exist, so it will always try to create the directory even if it&#8217;s already there. &nbsp;(Basically the opposite problem.) &nbsp;But fortunately now the direct comparison works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-789493">
				<div id="div-comment-789493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789493">
			November 26, 2009 at 4:28 pm</a>		</div>

		<p>I&#8217;ve noticed that mkdir now acts like the POSIX &quot;mkdir -p dir&quot;, when did this change?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-789353">
				<div id="div-comment-789353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.trikaliotis.net/' rel='external nofollow' class='url'>strik</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789353">
			November 26, 2009 at 10:08 am</a>		</div>

		<p>@Oliver:</p>
<p>At least until XP, copy cannot handle it if there is a backslash at the end of the destination. That&#8217;s why I suggested xcopy (if you look at the command line: *with* the backslash at the end), which handles this case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-789513">
				<div id="div-comment-789513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789513">
			November 26, 2009 at 7:08 pm</a>		</div>

		<p>I would just always execute the mkdir command. If the directory doesn&#8217;t exist, it will create it, otherwise it will print an error which will be ignored because it&#8217;s running unattended in a batch file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-789543">
				<div id="div-comment-789543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Argent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789543">
			November 26, 2009 at 8:51 pm</a>		</div>

		<p>Wouldn&#8217;t copy &quot;\INITECHDefaultsSample cover sheet.tps&quot; &quot;C:TPS Cover Sheets.&quot; /Y have worked?</p>
<p>(N/M &#8211; that won&#8217;t create the non-existant directory, will it?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-789603">
				<div id="div-comment-789603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789603">
			November 27, 2009 at 2:20 am</a>		</div>

		<p>@porter</p>
<p>mkdir /?</p>
<p>That wasn&#8217;t so hard, was it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-789553">
				<div id="div-comment-789553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789553">
			November 26, 2009 at 10:37 pm</a>		</div>

		<p>Well, one can use JPSoft&#8217;s TCC cmd replacement. Its version of built-in &quot;copy&quot; has 28 switches, works with (S)ftp, has exclusion lists, and when combined with another built-in &quot;select&quot;, has interactive mode where you choose what file to copy. Not to mention the TAB completion which works with hidden files, ***named streams*** (eat THAT, PowerShell) and does not kills the rest of the command line after the token you try to auto-complete.</p>
<p>Btw, recently I tried to implement a recently fast copy algorithm, and boy, it is hard. I am on the verge of thinking it is *impossible*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-789653">
				<div id="div-comment-789653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789653">
			November 27, 2009 at 8:59 am</a>		</div>

		<blockquote><p>
  &gt; That wasn&#8217;t so hard, was it?
</p></blockquote>
<p>Except it didn&#8217;t answer the question.</p>
<p>NT4SP6,WIN2K,XP all do the complete path. DOS and OS2WARP don&#8217;t, so when did mkdir start making the complete path?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-789813">
				<div id="div-comment-789813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://coleman.jandasoft.biz' rel='external nofollow' class='url'>Coleman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-789813">
			November 27, 2009 at 3:41 pm</a>		</div>

		<p>@Teo,</p>
<blockquote><p>
  one can use JPSoft&#8217;s TCC cmd replacement
</p></blockquote>
<p>Except now they have to make sure this &quot;cmd replacement&quot; is installed on every PC where this script is run, so now they have 2 problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-790103">
				<div id="div-comment-790103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-790103">
			November 30, 2009 at 8:17 am</a>		</div>

		<p>You guys don&#8217;t have to keep offering solutions to the problem. Microsoft already solved it, that&#8217;s why it&#8217;s here on this blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-790463">
				<div id="div-comment-790463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091126-00/?p=15903#comment-790463">
			December 1, 2009 at 5:36 am</a>		</div>

		<p>Reminds me of an obscure similar problem I ran into back in the Win98 days. I was trying to install a program (cygwin, might have been), and I&#8217;d consistently get a failure when trying to create the file named &quot;cdrom&quot;. After days of trying to figure out why I couldn&#8217;t create a file named &quot;cdrom&quot; anywhere, I realized I had real mode cdrom drivers installed, and had called the device &quot;cdrom&quot;. Thus the setup program was tripping over the reserved device name. It&#8217;s always stuck in my mind as an example of what happens when users know a little too much for their own good ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

