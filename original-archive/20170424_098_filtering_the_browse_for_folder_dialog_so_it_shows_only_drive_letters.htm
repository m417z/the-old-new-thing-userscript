<html>
<head>
<title>Filtering the Browse for Folder dialog so it shows only drive letters</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Filtering the Browse for Folder dialog so it shows only drive letters</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 24, 2017 / year-entry #99</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>16</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">An exercise in filtering.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today, we're going to customize the
Browse for Folder dialog so it shows only drive letters.
</p>
<p>
Start with
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20131014-00/?p=2943">
our previous
Browse for Folder customization program</a>, and make these changes:
</p>
<pre>
<font COLOR="blue">// Lazy global variable
PIDLIST_ABSOLUTE g_pidlMyComputer;</font>

class CFunnyFilter :
    public RuntimeClass&lt;
    RuntimeClassFlags&lt;RuntimeClassType::ClassicCom&gt;,
    IFolderFilter&gt;
{
public:
  // *** IFolderFilter ***
  IFACEMETHODIMP ShouldShow(
        IShellFolder* psf,
        PCIDLIST_ABSOLUTE pidlFolder,
        PCUITEMID_CHILD pidlItem)
  {
    <font COLOR="blue">int compare = CompareDepth(pidlFolder);
    if (compare &lt; 0) return S_OK;
    if (compare &gt; 0) return S_FALSE;

    STRRET str;
    psf-&gt;GetDisplayNameOf(pidlItem, SHGDN_FORPARSING, &amp;str);
    wchar_t buf[4];
    if (SUCCEEDED(StrRetToBuf(&amp;str, pidlItem, buf, ARRAYSIZE(buf))) &amp;&amp;
        PathIsRoot(buf)) return S_OK;
    return S_FALSE;</font>
  }

  IFACEMETHODIMP GetEnumFlags(
      IShellFolder* psf,
      PCIDLIST_ABSOLUTE pidlFolder,
      HWND *phwnd,
      DWORD *pgrfFlags) {        
    <font COLOR="blue">if (CompareDepth(pidlFolder) &gt; 0) *pgrfFlags = 0;</font>
    return S_OK;
  }

private:
  <font COLOR="blue">static int CompareDepth(PCIDLIST_ABSOLUTE pidl)
  {
    if (pidl == nullptr) return -1;
    if (ILIsEqual(pidl, g_pidlMyComputer)) return 0;
    if (ILIsParent(pidl, g_pidlMyComputer, FALSE)) return -1;
    return 1;
  }</font>
};

int WINAPI WinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPSTR lpCmdLine, int nShowCmd)
{
  <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/05/20/135841.aspx">CCoInitialize</a> init;
  BROWSEINFO bi = { };
  TCHAR szDisplayName[MAX_PATH];
  <font COLOR="blue">SHGetSpecialFolderLocation(nullptr, CSIDL_DRIVES, &amp;g_pidlMyComputer);
  bi.pidlRoot = g_pidlMyComputer;</font>
  bi.pszDisplayName = szDisplayName;
  bi.lpfn = BrowseCallbackProc;
  bi.ulFlags = BIF_NEWDIALOGSTYLE <font COLOR="blue">| BIF_RETURNONLYFSDIRS</font>;
  PIDLIST_ABSOLUTE pidl = SHBrowseForFolder(&amp;bi);
  CoTaskMemFree(pidl);
  <font COLOR="blue">CoTaskMemFree(g_pidlMyComputer);</font>
  return 0;
}
</pre>
<p>
Okay, let's see what we've got.
</p>
<p>
First, we declare a global variable to remember
the location of what was once called <i>My Computer</i>
but nowadays goes by the name <i>This PC</i>.
Whatever it is, it's the thing that contains
your drive letters.
</p>
<p>
The real work happens in the filter.
Starting at the bottom, we have a method called
<code>Check&shy;Depth</code> which determines
whether the passed-in folder is an ancestor of,
equal to, or a descendant of <i>My Computer</i>.
Actually, we treat anything that isn't a parent
or equal to <i>My Computer</i> as if it were a descendant.
</p>
<p>
The
<code>Check&shy;Depth</code> method
is method is a bit tricky for a few reasons.
First, it treats the null pointer as equivalent to the
desktop, so that it is the ancestor of everything.
For whatever reason, that's what <code>IFolder&shy;Filter</code>
gives you, so we accommodate it.
</p>
<p>
Second, if you pass
<code>FALSE</code> to <code>ILIs&shy;Parent</code>,
it means
that the function will return a nonzero value
if the first ID list is an ancestor of
<i>or is equal to</i> the second ID list.
Therefore, we have to do the equality test first.
</p>
<p>
Okay, working upward, the next method is
<code>Get&shy;Enum&shy;Flags</code>.
This is called when the Browse for Folder dialog
wants to enumerate the children of a folder,
and it's our chance to influence what gets enumerated.
We don't want to expand the drives themselves,
so if we have something that is a child of
<i>My Computer</i>,
we set the enumeration flags to zero,
which means that nothing gets enumerated.
</p>
<p>
The first method is <code>Should&shy;Show</code>.
This is where most of the excitement is.
You are given a folder and an item in that folder,
and your job is to decide whether that item should be shown
in the Browse for Folder dialog.
</p>
<p>
First, we say that folders which are
ancestors of <i>My Computer</i>
can show all of their children.
This ensures that the Browse for Folder dialog
can reach
<i>My Computer</i> in the first place.
</p>
<p>
Second, we say that descendants of <i>My Computer</i>
do not show any children.
This is technically redundant because our
<code>Get&shy;Enum&shy;Flags</code> prevented
those children from being enumerated,
but we'll block them here just to be sure
they don't show up.
</p>
<p>
Finally, if we are showing children of
<i>My Computer</i> itself,
we ask for the parsing name of the item
and see if a drive root comes back.
If the parsing name is longer than four
characters, then the
<code>Str&shy;Ret&shy;To&shy;Buf</code>
function will fail with an insufficient-buffer
error, in which case we know that we don't
have a drive root.
</p>
<p>
The handy
<code>Str&shy;Ret&shy;To&shy;Buf</code>
function deals with
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073">
the kooky <code>STRRET</code> structure</a>
so we don't have to.
</p>
<p>
So that's the filtering.
The last changes are to
<code>Win&shy;Main</code>:
We obtain the item ID list for
<i>My Computer</i> and set it as the root for
the Browse for Folder dialog.
(Remember that Little Programs do little to no
error checking.)
We also tell the Browse for Folder dialog that
we require the user to select a file system object.
That ensures that the <i>OK</i> button is disabled
when the user is sitting at <i>My Computer</i>.
And after the excitement is done, we clean up.
</p>
<p>
There you have it.
A Browse for Folder dialog that shows only drive letters.
</p>
<p>
I'm not sure how useful this is, but I never claimed that
this was useful.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1293696">
				<div id="div-comment-1293696" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://programmerman.net' rel='external nofollow' class='url'>Nick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293696">
			April 24, 2017 at 7:18 am</a>		</div>

		<p>Combine this with April 12th&#8217;s article and you can build a program to get the current directory of a user-selected drive. Is this the best way to accomplish that? ðŸ¤· But at least you didn&#8217;t have to write your own drive picker dialog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1293705">
				<div id="div-comment-1293705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ted M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293705">
			April 24, 2017 at 8:45 am</a>		</div>

		<p>The arbitrary size filter in the previous linked article, combined with the drive filter would be useful for programs that dump large amounts of data to a folder just off of the root of a scratch drive (Video capture utilities, for example)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1293715">
				<div id="div-comment-1293715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293715">
			April 24, 2017 at 9:49 am</a>		</div>

		<p>Could a network location of &#8220;//a&#8221; somehow linked from My Computer (my brain&#8217;s a little rusty on how you make things show up in My Computer so I don&#8217;t know entirely if this is possible) show up as a false positive here? (Not that I suspect anyone would have such a computer name linked into My Computer like this&#8230;)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1293716">
				<div id="div-comment-1293716" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293716">
			April 24, 2017 at 9:50 am</a>		</div>

		<p><code>\\a</code> is not considered a root (it has to be <code>\\a\b</code>), but the underlying point is well-taken. I&#8217;ll add a PathGetDriveNumber.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1293726">
				<div id="div-comment-1293726" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293726">
			April 24, 2017 at 3:16 pm</a>		</div>

		<p>What happens if your end user has more than 26 drives and is using Volume Mount Points?  Are they just unable to specify all of their devices?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1293745">
				<div id="div-comment-1293745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293745">
			April 24, 2017 at 4:48 pm</a>		</div>

		<p>You&#8217;ll have to ask the people who want to do this. (And yes, people want to do this. That&#8217;s why I wrote this blog entry. So that when the next person wants to do this, I can just point them at the blog entry.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even depth-2 parent" id="comment-1293755">
				<div id="div-comment-1293755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293755">
			April 24, 2017 at 6:23 pm</a>		</div>

		<p>That&#8217;s valid question, but in reality if you need that much space, usually you&#8217;ll want to run them in RAID set (either RAID 0 or JBOD if you don&#8217;t need redundancy) or even a SAN array. So drive letters rarely runs out.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-3" id="comment-1293765">
				<div id="div-comment-1293765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293765">
			April 24, 2017 at 6:25 pm</a>		</div>

		<p>And for companies that has lots of file servers, they usually use DFS to manage the mount points.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1294105">
				<div id="div-comment-1294105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danish guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1294105">
			April 26, 2017 at 1:37 am</a>		</div>

		<p>Not necessary. I have 4 cardreaders in my machine, which eat 4 drive letters each. I guarantee you that it&#8217;s not a good idea to put them in a read array.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1293735">
				<div id="div-comment-1293735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">William</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293735">
			April 24, 2017 at 4:31 pm</a>		</div>

		<p>That&#8217;s pretty cool and believe it or not, I&#8217;ve seen a programme actually do this before. I don&#8217;t recall what it was, though I thought it was quite clever at the time. I believe it used a fixed path off the root of the drive so you only specified the root drive to create the hierarchy on. Yes, a dropdown list would&#8217;ve achieved the same result but it was a different take on that UI design.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1293775">
				<div id="div-comment-1293775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>GL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293775">
			April 25, 2017 at 1:25 am</a>		</div>

		<p>It is quite surprising that Raymond is continuing such an aged article&#8230; Is this usual for this blog?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1293785">
				<div id="div-comment-1293785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293785">
			April 25, 2017 at 3:17 am</a>		</div>

		<p>Very common. Raymond writes the posts in his queue months/years in advance, and quite often has a tendency to remember even older articles he&#8217;s written and refer to them in future ones. I&#8217;ve seen articles from a couple of years ago that follow up on articles from 2003&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1293825">
				<div id="div-comment-1293825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>GL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293825">
			April 25, 2017 at 6:08 am</a>		</div>

		<p>Could it be the case that Raymond wrote the entire series of &#8220;choose folder dialog&#8221; long time ago and put the entries on random days in the following years? Or on a random day, like <em>today</em>, Raymond randomly picks a &#8220;continuable&#8221; entry in the archive and extend it? Or is it such a coincidence that Raymond came up with the idea that happened to have had its place in the blog since years ago this morning?!</p>
<p>Series like &#8220;choose folder dialog&#8221; are quite different from, for example, &#8220;The wisdom of seventh graders&#8221;, because the content of the latter arises/is &#8220;born&#8221; from time to time. This blog is like shuffled reading notes of the complete book of history, which I certainly enjoy a lot. BTW I&#8217;ve planned to read the archive from the very beginning but haven&#8217;t got time to do that.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-4" id="comment-1294095">
				<div id="div-comment-1294095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1294095">
			April 25, 2017 at 6:59 pm</a>		</div>

		<p>Well&#8230; Use already posted code and modify it a little to suit a new purpose is both allow him use less effort to write, and easier for us to read (because presumably those who really read it have also read the old program and understand how it works already, they just need to focus on the modified parts which is highlighted.) So why not?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1293795">
				<div id="div-comment-1293795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1293795">
			April 25, 2017 at 5:03 am</a>		</div>

		<p>One can also occasionally get (lightly) chastised for asking a question which he answered in a blog post over a decade ago.</p>
<p>The only solution really is to read through the entire archives. Don&#8217;t worry, they&#8217;re worth it.</p>
<p>;)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1294135">
				<div id="div-comment-1294135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170424-00/?p=96025#comment-1294135">
			April 26, 2017 at 8:26 am</a>		</div>

		<p>&#8220;The CheckÂ­Depth method is method is a bit tricky for a few reasons. First, it treats the null pointer as equivalent to the desktop, so that it is the ancestor of everything. For whatever reason, that&#8217;s what IFolderÂ­Filter gives you, so we accommodate it. &#8221;</p>
<p>My tests under Windows 7 shows that pidlFolder == nullptr happens at the ShouldShow() call when and only for the item &#8220;Computer&#8221;. For whatever reason, even GetEnumFlags() is never called for the &#8220;Desktop&#8221; item (is this correct behavior?).</p>
<p>You can get around the special case (or bug) for the &#8220;Computer&#8221; item when you use ILCombine(pidlFolder, pidlItem) and then work with the result of this call.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

