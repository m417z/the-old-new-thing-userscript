<html>
<head>
<title>Signs that the symbols in your stack trace are wrong</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Signs that the symbols in your stack trace are wrong</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 6, 2009 / year-entry #353</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>19</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">One of the things programmers send to each other when they are trying to collaborate on a debugging problem is stack traces. Usually something along the lines of "My program does X, then Y, then Z, and then it crashes. Here is a stack trace. Can you tell me what's wrong?" It helps if you...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
One of the things programmers send to each other when they
are trying to collaborate on a debugging problem is stack traces.
Usually something along the lines of
"My program does X, then Y, then Z, and then it crashes.
Here is a stack trace.
Can you tell me what's wrong?"
</p>
<p>
It helps if you at least glance at the stack trace before
you send it, because there are often signs that the stack
trace you're about to send is completely useless because
the symbols are wrong.
Here's an example:
</p>
<blockquote CLASS=q>
<p>
We are testing our program and it gradually grinds to a halt.
When we connect a debugger, we find that all of our threads,
no matter what they are doing, eventually wind up
hung in <code>kernel32!EnumResourceLanguagesA</code>.
Can someone explain why that function is hanging,
and why it seems all roads lead to it?
</p>
<pre>
   0  Id: 12a4.1468 Suspend: 1 Teb: 000006fb`fffdc000 Unfrozen
kernel32!EnumResourceLanguagesA+0xbea00
kernel32!EnumResourceLanguagesA+0x2b480
bogosoft!CObjMarker::RequestBlockForFetch+0xf0
...

   1  Id: 12a4.1370 Suspend: 1 Teb: 000006fb`fffda000 Unfrozen
kernel32!EnumResourceLanguagesA+0xbea00
kernel32!EnumResourceLanguagesA+0x2b480
bsnetlib!CSubsystem::CancelMain+0x90

   2  Id: 12a4.1230 Suspend: 1 Teb: 000006fb`fffd8000 Unfrozen
NETAPI32!I_NetGetDCList+0x117e0
kernel32!EnumResourceLanguagesA+0x393a0
ntdll!LdrResFindResource+0x58b20
...

   3  Id: 12a4.cc0 Suspend: 1 Teb: 000006fb`fffd6000 Unfrozen
kernel32!EnumResourceLanguagesA+0xa80
bsnetlib!BSFAsyncWait+0x190
...

  4  Id: 12a4.1208 Suspend: 1 Teb: 000006fb`fffd4000 Unfrozen
kernel32!EnumResourceLanguagesA+0xbea00
kernel32!EnumResourceLanguagesA+0x2b480
bogosoft!TObjList&lt;DistObj&gt;::Get+0xb0

  5  Id: 12a4.1538 Suspend: 1 Teb: 000006fb`fffae000 Unfrozen
kernel32!EnumResourceLanguagesA+0xbf3d0
kernel32!EnumResourceLanguagesA+0x2c800
bsnetlib!Tcp::ReadSync+0x340
...

   6  Id: 12a4.16e0 Suspend: 1 Teb: 000006fb`fffac000 Unfrozen
ntdll!LdrResFindResource+0x61808
ntdll!LdrResFindResource+0x1822a0
kernel32!EnumResourceLanguagesA+0x393a0
ntdll!LdrResFindResource+0x58b20 
...
</pre>
</blockquote>
<p>
This stack trace looks suspicious for a variety of reasons.
</p>
<p>
First of all,
look at that offset
<code>EnumResourceLanguagesA+<u>0xbea00</u></code>.
It's unlikely that the
<code>EnumResourceLanguagesA</code>
function (or any other function)
is over 750KB in size, as this offset suggests.
</p>
<p>
Second, it's unlikely that the <code>EnumResourceLanguagesA</code>
function (or any other function, aside from obvious cases
like tree walking) is recursive.
And it's certainly unlikely that a huge function will also be
recursive.
</p>
<p>
Third, it seems unlikely that the <code>EnumResourceLanguagesA</code>
function would call,
<code>NETAPI32!I_NetGetDCList</code>.
What does enumerating resource languages have to do with getting
a DC list?
</p>
<p>
Fourth, look at those functions that are allegedly
callers of <code>EnumResourceLanguagesA</code>:
<code>bogosoft!CObjMarker::RequestBlockForFetch</code>,
<code>bsnetlib!CSubsystem::CancelMain</code>,
<code>bsnetlib!Tcp::ReadSync</code>.
Why would any of these functions want to enumerate resource
languages?
</p>
<p>
These symbols are obvious wrong.
The huge offsets are present because the debugger has access only
to exported functions,
and it's merely showing you the name of the nearest symbol,
even though it has nothing to do with the actual function.
It's just using the nearest signpost it can come up with.
It's like if somebody gave you directions to the movie theater like this:
"Go to city hall downtown and then go north for 35 miles."
This doesn't mean that the movie theater is in the downtown district
or that the downtown district is 35 miles long.
It's just that the person who's giving you directions can't come
up with a better landmark than city hall.
</p>
<p>
This is just another case of the principle that
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2006/07/10/661389.aspx">
you have to know what's right before you can see what's wrong</a>.
If you have no experience with good stack traces,
you don't know how to recognize a bad one.
</p>
<p>
Oh, and even though the functions in question are in
<code>kernel32</code>,
you can still get symbols for that DLL
with the help of the
<a HREF="http://support.microsoft.com/kb/311503">
Microsoft Symbol Server</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-783593">
				<div id="div-comment-783593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783593">
			November 6, 2009 at 7:03 am</a>		</div>

		<p>Oh yes, of course. How could anyone make such silly mistakes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783603">
				<div id="div-comment-783603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DXdude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783603">
			November 6, 2009 at 7:22 am</a>		</div>

		<p>Yes, the symbol server is a great resource, when the symbols you&#8217;re looking for are available.</p>
<p>However, I have not found how to know for sure which symbols are in there, and how to ask for missing symbols to be added to it. The linked page merely explains how to use it, not what it contains.</p>
<p>See, e.g.:<a rel="nofollow" target="_new" href="http://forums.xna.com/forums/t/39102.aspx" rel="nofollow">http://forums.xna.com/forums/t/39102.aspx</a></p>
<p>The worst part ? that missing file makes the &quot;break on D3D error&quot; useless, as visual studio fails to walk the stack then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783613">
				<div id="div-comment-783613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wojciech Gebczyk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783613">
			November 6, 2009 at 7:24 am</a>		</div>

		<p>Hmm&#8230; It could be possible if this magic function will contain &quot;compatibility hacks/patches&quot; for all applications starting from Windows 95 AND has obfuscated name [because original name ApplyUglyHacksForApplication had compatilibity issues it self ;-)]?</p>
<p>;-)</p>
<p>I would state that such thinking has same insanity level like making hacks in OS for broken applications&#8230; :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783663">
				<div id="div-comment-783663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.henke37.cjb.net/' rel='external nofollow' class='url'>Henke37</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783663">
			November 6, 2009 at 8:39 am</a>		</div>

		<p>You have to be insane to do some kinds of programing. Nobody sane would even try it. Yet, someone did it, successfully.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783683">
				<div id="div-comment-783683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783683">
			November 6, 2009 at 9:53 am</a>		</div>

		<p>That movie theater analogy was brilliant and will be shamelessly stolen next time I have to explain distant offsets around seemingly normal symbols. Bravo!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783773">
				<div id="div-comment-783773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783773">
			November 6, 2009 at 1:40 pm</a>		</div>

		<p>One very nice side effect of the MS public symbols existence is that you can glimpse inside MS stuff. Example: see how much C++ is used in Windows :) Hint: not much. I know about WMI and that&#8217;s all. Another interesting observation is that Visual Studio uses ATL and no MFC.</p>
<p>Aside from useless trivia, public symbols greatly help debugging our software, so thanks for everyone responsible for keeping them in sync.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783793">
				<div id="div-comment-783793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783793">
			November 6, 2009 at 3:29 pm</a>		</div>

		<p>@Teo: what the hell are you talking about, there is plenty of c++ used in the shell &amp; explorer, and older versions of VS are MFC</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783833">
				<div id="div-comment-783833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783833">
			November 8, 2009 at 4:19 am</a>		</div>

		<p>!asf, Right now Process Explorer cannot download the symbols from the MS server so I cannot check. I haven&#8217;t checked every dll in the System32 folder, so I may missed some files. But even if the shell uses C++ it&#8217;s just 2 or 3 dlls out of the thousands shipped with Windows. I do not care for old versions of VS, I believe that on the eve of 2010 it&#8217;s obvious I talked about VS 2008.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783843">
				<div id="div-comment-783843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783843">
			November 8, 2009 at 2:53 pm</a>		</div>

		<blockquote><p>
  &gt; I believe that on the eve of 2010 it&#8217;s obvious I talked about VS 2008.
</p></blockquote>
<p>On this site nothing is obvious, also we&#8217;ll have to wait till December 31st to find out what you talked about on the eve of 2010.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783853">
				<div id="div-comment-783853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783853">
			November 8, 2009 at 9:48 pm</a>		</div>

		<p>Actually VS 2010 Beta 2 is out too, so it&#8217;s even less obvious. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-783863">
				<div id="div-comment-783863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783863">
			November 9, 2009 at 12:30 am</a>		</div>

		<p>Teo: I&#8217;m pretty sure the symbol server only shows the public symbols from most of the files you&#8217;ll find in system32. Since the public API of Win32 is C, of course the public symbols are also C. That says nothing about the internal implementation details of those DLLs, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783883">
				<div id="div-comment-783883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783883">
			November 9, 2009 at 3:20 am</a>		</div>

		<p>@Dean: If by public symbols you mean exported ones, no, the symbol server gives much more than that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783893">
				<div id="div-comment-783893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783893">
			November 9, 2009 at 4:12 am</a>		</div>

		<p>Considering the difficulty of using COM from C, I would bet that any part of Windows that uses COM would be written in C++. Explorer would be one significant example of this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-783963">
				<div id="div-comment-783963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-783963">
			November 9, 2009 at 7:52 am</a>		</div>

		<p>I have looked at stack traces before, mostly in IBM mainframe code (!) and when I glanced at this one, I immediately thought that &quot;EnumResourceLanguagesA+0xbea00&quot; looked suspicious. &nbsp;That offset just looks too big.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-784293">
				<div id="div-comment-784293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-784293">
			November 9, 2009 at 5:29 pm</a>		</div>

		<p>BTW, VC disable loading of export symbols by default, to not show misleading symbol names.</p>
<p>&quot;how to ask for missing symbols to be added to it. &quot;</p>
<p>Yep, I was asking the same questions too:</p>
<p><a rel="nofollow" target="_new" href="http://groups.google.com/group/microsoft.public.windbg/browse_frm/thread/11832ced96accccb/be56a50120dad61d" rel="nofollow">http://groups.google.com/group/microsoft.public.windbg/browse_frm/thread/11832ced96accccb/be56a50120dad61d</a></p>
<p><a rel="nofollow" target="_new" href="http://groups.google.com/group/microsoft.public.windbg/browse_frm/thread/d4b3a48f0d2d712c/b3e576aee2a853e6" rel="nofollow">http://groups.google.com/group/microsoft.public.windbg/browse_frm/thread/d4b3a48f0d2d712c/b3e576aee2a853e6</a></p>
<p>I did get help from the MSXML team after I posted via the Contact form of their blog that a security update to MSXML4 was missing symbols, now it is fixed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-784373">
				<div id="div-comment-784373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-784373">
			November 9, 2009 at 10:05 pm</a>		</div>

		<p>&quot;@Dean: If by public symbols you mean exported ones, no, the symbol server gives much more than that.&quot;</p>
<p>Yep, for example symbols can be used to reveal the real name of ordinal-only exports.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-785043">
				<div id="div-comment-785043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-785043">
			November 10, 2009 at 1:13 pm</a>		</div>

		<p>Gabe, if you look at the thread stacks of Explorer in Process Explorer, you&#8217;ll see an awful little C++ functions. Don&#8217;t forget that C++ compiler mangle names, so they are quite easy to spot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-784573">
				<div id="div-comment-784573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-784573">
			November 10, 2009 at 7:42 am</a>		</div>

		<p>One of the first things I do when setting up a new system is to download the Debugging Tools (<a rel="nofollow" target="_new" href="http://www.microsoft.com/whdc/DevTools/Debugging/default.mspx" rel="nofollow">http://www.microsoft.com/whdc/DevTools/Debugging/default.mspx</a>) and set _NT_SYMBOL_PATH to </p>
<p>C:Windows;C:WindowsSystem32;SRV*C:WebSymbols*<a rel="nofollow" target="_new" href="http://msdl.microsoft.com/download/symbols" rel="nofollow">http://msdl.microsoft.com/download/symbols</a></p>
<p>Process Explorer needs to be told where you installed the debugging tools to, so it can use the appropriate DbgHelp.dll. See Options menu, Configure Symbols. If you have a stuck process, you can then look at the Threads tab and see which thread might be stuck. From there you can hit Stack and find out what the thread might be doing.</p>
<p>If it&#8217;s a .NET program, though, you&#8217;ll normally see some huge offsets from somewhere as the native images for any .NET-supplied libraries (e.g. mscorlib.dll) don&#8217;t have associated symbols when the runtime generated the native image, which was done when it was installed on your computer. Everyone&#8217;s copy can be a little different. The CLR knows what the function is, but it has to be asked. The debugger extension !clrstack (in SOS.dll) can show you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-785253">
				<div id="div-comment-785253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.parkscomputing.com/' rel='external nofollow' class='url'>Paul M. Parks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091106-00/?p=16123#comment-785253">
			November 10, 2009 at 6:02 pm</a>		</div>

		<p>@Teo: The non-mangling of names has nothing at all to do with the underlying language. It&#8217;s quite common to export undecorated names from a DLL written in C++ (or some other language) to make it easier to call. I write C++ DLLs like this all the time.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

