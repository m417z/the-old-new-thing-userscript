<html>
<head>
<title>The continuing battle between people who offer a service and others who want to hack into the service</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The continuing battle between people who offer a service and others who want to hack into the service</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 4, 2012 / year-entry #154</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>32</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In the history of the Internet, there have been many cases of one company providing a service, and others trying to piggyback off the service through a nonstandard client. The result is usually a back-and-forth where the provider changes the interface, the piggybacker reverse-engineers the interface, back and forth, until one side finally gives up....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>In  <a href="https://www.youtube.com/watch?v=GsMFyo8DWs4">  the history of the Internet</a>, there have been many cases  of one company providing a service, and others trying to  piggyback off the service through a nonstandard client.  The result is usually a back-and-forth where the provider changes  the interface, the piggybacker reverse-engineers the interface,  back and forth, until one side finally gives up.</p>
<p>  Once upon a time, there was one company with a well-known service,  and another company that was piggybacking off it.  (I first heard this story from somebody who worked at the  piggybacking company.)  The back-and-forth continued for several rounds, until the provider  made a change to the interface that ended the game:  They exploited a buffer overflow bug <i>in their own client</i>.  The server sent an intentional buffer overflow to the client,  resulting in the client being pwned by the server.  I'm not sure what happened next, but presumably the server  sent some exploit code to the client and waited for the client to  respond in a manner that confirmed that the exploit had executed.  </p>
<p>  With that discovery, the people from the piggybacking company gave up.  They weren't going to introduce an intentional security flaw into  their application.  The service provider could send not only the exploit but also some  code to detect and disable the rogue client.  </p>
<p>  By an amazing stroke of good fortune,  I happened to also hear the story of this battle from somebody  who worked at the provider.  He said that they had a lot of fun fighting this particular battle  and particularly enjoyed timing the releases so they caused  maximum inconvenience for their adversaries,  like, for example, 2am on Saturday.  </p>
<p>  <b>Reminder</b>: The  <a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/02/21/77681.aspx">  ground rules</a>  prohibit  "trying to guess the identity of a program whose name I did not reveal."  </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (32)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-996003">
				<div id="div-comment-996003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996003">
			July 4, 2012 at 7:07 am</a>		</div>

		<p>It would have been fun to sit both parties at the same table, preferably with a few pints of beer between them. It surely would have spawn a few memorable stories :-) .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996013">
				<div id="div-comment-996013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996013">
			July 4, 2012 at 7:16 am</a>		</div>

		<p>Nice concept, and it actually doesn&#39;t need a security hole to implement, by making the &quot;client identification&quot; touring complete. The server could send a script which has read-only access to the clients memory space. Let the script compute some hash of the client memory and send it back and you can identify if the client was &#39;real&#39;. Randomize some aspects of the script so it can&#39;t be precomputed. Also can execute any amount of detection logic to find &#39;hostile&#39; code loaded into the clients process.</p>
<p>Anyone wanting to fake such a login process would need to provide a scripting environment mirroring most of the memory state of the original client. Minor changes in the real client or detection scripts can cause huge work for the fake client creators.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes even thread-even depth-1" id="comment-996033">
				<div id="div-comment-996033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996033">
			July 4, 2012 at 7:49 am</a>		</div>

		<p>Did the piggybacking company try to exact their revenge by exploiting the same buffer overflow for evil?</p>
<p>With all the work to reverse-engineer and consume someone else&#39;s service, wouldn&#39;t it have been simpler to just create their own? Perhaps this service was more complex than I am imagining.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996043">
				<div id="div-comment-996043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R. Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996043">
			July 4, 2012 at 7:56 am</a>		</div>

		<p>Is it OK to guess completely nonsensical choices?</p>
<p>If so, I&#39;m guessing the product was Jif Smooth Peanut Butter being used by Hersheys in their peanut butter cups.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996053">
				<div id="div-comment-996053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996053">
			July 4, 2012 at 8:04 am</a>		</div>

		<p>You are saying this as if providing an alternate client were a bad thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996063">
				<div id="div-comment-996063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996063">
			July 4, 2012 at 8:15 am</a>		</div>

		<p>This story reminded me of the Black Sunday kill, which is worth reading if you haven&#39;t already: <a rel="nofollow" target="_new" href="http://www.codinghorror.com/blog/2008/05/revisiting-the-black-sunday-hack.html" rel="nofollow">http://www.codinghorror.com/&#8230;/revisiting-the-black-sunday-hack.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996073">
				<div id="div-comment-996073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996073">
			July 4, 2012 at 8:18 am</a>		</div>

		<p>&quot;Once upon a time, there was one company with a well-known service that used a non-standard protocol, and another company that was trying to reverse engineer the protocol in order to provide an alternative client.&quot;</p>
<p>Which version of the story you prefer depends on your perspective.</p>
<p>Of course, if the company trying to provide an alternative client was doing so to avoid paying for the service then my sympathies would be with the service provider. Otherwise, it&#39;s hard to make the case for non-standard protocols.</p>
<div class="post">[<i>The types of services people try to hack into tend not to be standardized in the first place. It&#39;s not like there&#39;s an RFC for &quot;World of Warcraft client/server protocol.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-996093">
				<div id="div-comment-996093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996093">
			July 4, 2012 at 8:55 am</a>		</div>

		<p>They needed to use HTTPS on the wire. Good luck snooping on that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996103">
				<div id="div-comment-996103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996103">
			July 4, 2012 at 9:00 am</a>		</div>

		<blockquote><p>
  They needed to use HTTPS on the wire. Good luck snooping on that.
</p></blockquote>
<p>Um, how is that supposed to help with anything? &nbsp;HTTPS is a standard protocol that anyone can implement. &nbsp;Just because microsoft.com uses HTTPS for some things doesn&#39;t mean I can&#39;t use Firefox instead of IE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-996113">
				<div id="div-comment-996113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996113">
			July 4, 2012 at 9:04 am</a>		</div>

		<blockquote><p>
  Um, how is that supposed to help with anything? &nbsp;HTTPS is a standard protocol that anyone can implement. &nbsp;Just because microsoft.com uses HTTPS for some things doesn&#39;t mean I can&#39;t use Firefox instead of IE.
</p></blockquote>
<p>HTTPS can be a transport for an application-specific format of data. If you need to reverse-engineer that data, you need to snoop on it. But how?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-996123">
				<div id="div-comment-996123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996123">
			July 4, 2012 at 9:15 am</a>		</div>

		<p>@alegr1 HTTPS protects data from A to B, not so much when there is a debugger/sniffer/whatever at one of the endpoints.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996133">
				<div id="div-comment-996133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/analisnudesette_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>analisnudesette@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996133">
			July 4, 2012 at 9:33 am</a>		</div>

		<p>Hmm, a company who discovers a buffer overflow and, instead of plugging it, uses it to gain a competitive advantage while leaving the software on my machine vulnerable&#8230;</p>
<p>That kind of thing would make me seek out an alternative client and not want to use the service no alternative was available. :)</p>
<div class="post">[<i>But the official client connects only to the service provider. And the client is also under the service provider&#39;s control. So either way, your machine is pwned by the service provider. (You&#39;d have a problem if the client connected to third party service providers, but it doesn&#39;t.) The service provider essentially created a &quot;execute arbitrary code&quot; opcode. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996163">
				<div id="div-comment-996163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996163">
			July 4, 2012 at 11:22 am</a>		</div>

		<p>Reminds me of Achilles and the Tortoise: &quot;I cannot be played on Record Player X.&quot; Except that in this case, the record player blowing up is the desired effect.</p>
<p>If I&#39;d been the other party, I wouldn&#39;t have given up at the buffer overflow maneuver. No way. Detect the overflow and start emulating the code the server sends over. If I have to emulate a copy of the entire OS to fool the server, by God I will.</p>
<p>However, I think the other side has a winning strategy in implementing a zero-knowledge proof protocol that verifies the client is byte-for-byte exactly what we expect it to be. The only way the other side can keep up with this is by actually having a copy of the client, at which point you can nail them for copyright violation. That is, if you could explain in court why your adversary has necessarily broken copyright law.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996173">
				<div id="div-comment-996173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996173">
			July 4, 2012 at 11:40 am</a>		</div>

		<p>An alternate look at the internet: <a rel="nofollow" target="_new" href="http://www.youtube.com/watch?v=sDA1HUmuuJo" rel="nofollow">http://www.youtube.com/watch</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996193">
				<div id="div-comment-996193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996193">
			July 4, 2012 at 12:23 pm</a>		</div>

		<p>@Zarat Instead of just giving up, you could obviously ignore the request sent by the server and let your client always answer with the expected message.</p>
<p>Nobody stopped them from doing exactly the same in this case as well, but I assume it just got too time consuming playing this game.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996203">
				<div id="div-comment-996203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996203">
			July 4, 2012 at 1:54 pm</a>		</div>

		<p>Voo, the problem is that the server may send a different bit of software any time, and if the client has to give the right answer every time you want to log on, the server devs can generate lots of little puzzles really fast. Since reverse engineering is harder than writing simple puzzles, they could basically DOS the alternate client devs.</p>
<p><!-- p>Cesar, they still are. If you want to use them that way you have to run your own server that doesn't use the the buffer overflowing messages. On the other hand, Blu-Ray has fallen victim to the same thing all static content will eventually fall to: if it can be played it can be recorded. Blu-Ray rips of almost anything are out there and usually use a better codec, which means much smaller files without noticeable quality loss. (Not to mention that the DRM scheme has as good as crumbled.)
</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996213">
				<div id="div-comment-996213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996213">
			July 4, 2012 at 4:38 pm</a>		</div>

		<p>@Anonymous Coward: Simple solution there: Send the request of the server to the real client and intercept its answer. Obviously then you&#39;d either have to remove checks done by the client to see if your program is running or hide your own program better. Yes it&#39;s an arms race and it&#39;s certainly more work for the reverse engineers, but it&#39;s still doable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996233">
				<div id="div-comment-996233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gogolkj</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996233">
			July 4, 2012 at 7:12 pm</a>		</div>

		<p>Doesn&#39;t this violate antitrust laws as being an &quot; predatory innovation?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-996263">
				<div id="div-comment-996263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996263">
			July 4, 2012 at 10:31 pm</a>		</div>

		<p>@voo: Except that the expected answer can be &quot;salted&quot;, and the damage trigger can be hidding in the &quot;answer creation algorithm update&quot;. With today&#39;s internet connection, a 1-2 MB package can be transmitted in no time. Go luck trying to strip off all suspicious code in that. They can even supply a custom made codec that you must use the salted &quot;reply&quot; to decode the data stream, instead of requiring you to send the reply back.</p>
<p>In the case of &quot;internet connected service&quot; with client updatable, the service provider aren&#39;t likely to fail if they try hard enough. At some point the hackers attempt to create their own replica will give up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-996283">
				<div id="div-comment-996283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996283">
			July 5, 2012 at 12:37 am</a>		</div>

		<p>I do see an &quot;easy&quot; counter to this maneuver: Leak to the world that the standard client has an unpatched buffer overflow bug. If the initial client outcry doesn&#39;t force the provider to correct the flaw, the first actual malicious use by a third party will.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996303">
				<div id="div-comment-996303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996303">
			July 5, 2012 at 1:01 am</a>		</div>

		<p>Medinoc, I know of three cases where something like this happened, two if we disregard BluRay since that isn&#39;t really a bug, one if we disregard cases where the connection was not an internet connection. So, for that case&#8230;</p>
<p>What happened was that a rumour was started by someone (I don&#39;t believe we know who, and at first the post didn&#39;t look legit) and a software analyst verified it. Then there was a big uproar (on internet forums full of geeks, I don&#39;t think anyone else cared). The bug is hard to exploit however, since to use it effectively you probably need to use a DNS hijack or some other man-in-the-middle attack. The service provider has promoted the bug to feature and it&#39;s still present in the latest version; if you&#39;re running it and someone has access to your internet wire say, he can execute arbitrary code on your computer.</p>
<p>Of course, this also means that if you&#39;re using the server provider&#39;s client to connect to third-party servers&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996313">
				<div id="div-comment-996313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paramanand Singh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996313">
			July 5, 2012 at 1:42 am</a>		</div>

		<p>In my college days I used to this kind of reverse engineering for popular instant messaging protocols. This was very helpful exercise in terms of learning network programming and also decoding protocols. And I don&#39;t consider this wrong. Unless the piggyback company is making some money by reverse engineering it should be OK. But I am sure that they must have been doing this for commercial reasons and that&#39;s why the original service provider went to the extent of executing arbitrary code on client.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996323">
				<div id="div-comment-996323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996323">
			July 5, 2012 at 2:08 am</a>		</div>

		<p>Paramanand, in the case that I was thinking of (which I shan&#39;t name, so don&#39;t ask) the client program was used to connect to a functionally similar service (but using a different protocol). The piggybacking was added for interoperability purposes. This would make it possible to use both services without the need for running two clients. If I recall correctly (but this is a long time ago) both clients were ad-supported.</p>
<p>In the other case that I mentioned (that didn&#39;t use an internet connection), the purpose of running the server-supplied code was to stop people from using the service without paying for it; there was also no risk of the problems I mentioned earlier, so that&#39;s fine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996243">
				<div id="div-comment-996243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996243">
			July 4, 2012 at 8:59 pm</a>		</div>

		<p>&gt;&gt; But the official client connects only to the service provider</p>
<p>The client could be connecting to an attacker that can hijack DNS or TCP connections (e.g. on a public wireless).</p>
<p>They could achive the same effect in a more secure way. &nbsp;For example sending a *signed* piece of code or the client to execute.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996343">
				<div id="div-comment-996343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996343">
			July 5, 2012 at 4:16 am</a>		</div>

		<p>Dave, when you remove the buffer overflow bug as such and just consider it a new execute signed code opcode, you could verify the signature with a public key embedded in the client before running the code. That stops the security vulnerability, and potentially makes it possible to tie the client to the official server.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996363">
				<div id="div-comment-996363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jaloopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996363">
			July 5, 2012 at 5:26 am</a>		</div>

		<p>&quot;executing arbitrary code on client&quot;</p>
<p>I think you mean &quot;Random code&quot; ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996383">
				<div id="div-comment-996383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996383">
			July 5, 2012 at 7:38 am</a>		</div>

		<p>@Anonymous Coward:</p>
<p>&gt;you could verify the signature with a public key embedded in the client before running the code</p>
<p>And the fake client would look at the signature, throw it away, and execute the code anyway. &nbsp;At this point you&#39;re back to square one, both the real client and the fake client are running your checking code.</p>
<div class="post">[<i>AC was explaining how the real client could avoid being pwned by a rogue server. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996293">
				<div id="div-comment-996293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raphael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996293">
			July 5, 2012 at 12:55 am</a>		</div>

		<p>@Medinoc:</p>
<p>I see that you live in some kind of parallel universe where users care about security. *We* live in a universe where people open that mysterious email attachment to see naked pictures of Scarlett Johansson.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-996333">
				<div id="div-comment-996333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996333">
			July 5, 2012 at 3:36 am</a>		</div>

		<p>@James:</p>
<p>&gt;They could achive the same effect in a more secure way. &nbsp;For example sending</p>
<p>&gt;a *signed* piece of code or the client to execute.</p>
<p>And what would that achieve?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996483">
				<div id="div-comment-996483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996483">
			July 5, 2012 at 1:10 pm</a>		</div>

		<p>@Brian_EE: If you follow the link, the actual rule is &quot;no outing&quot;. I believe several of us know which service and which client Raymond is talking about (it was in the tech news back then, and it is such an unusual thing that we can remember at least which service it was). But Raymond does not want us talking about the software and companies involved (it is all ancient story anyways, the service is not as popular as it used to be); the point of Raymond&#39;s post is to talk about the <em>concept</em> (exploiting a buffer overflow in your own client). Like AC&#39;s digression on how to make that safe, for instance.</p>
<p>I believe even saying the genre of the service, or the time frame involved (other than &quot;it was long ago&quot;) would help people who do not know about it finding out who was involved, which goes against at least the intent of Raymond&#39;s &quot;no outing&quot; rule. So (correct me Raymond if you I am wrong) I believe you should stop here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-996613">
				<div id="div-comment-996613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996613">
			July 6, 2012 at 9:11 am</a>		</div>

		<p>RE those who answered me: I am now depressed. That&#39;s what I get for forgetting common mortals are not me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-996793">
				<div id="div-comment-996793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@jaloopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120704-00/?p=7213#comment-996793">
			July 6, 2012 at 3:51 pm</a>		</div>

		<p>No. &quot;Arbitrary code&quot; is more correct than &quot;Random code&quot;.</p>
<p>&quot;Random code&quot; suggests that the attacker doesn&#39;t get to choose what runs &#8211; and in practice the application will crash. &quot;Arbitrary code&quot; means that the attacker gets to steal your credit card information and install a rootkit on your machine.</p>
<div class="post">[<i>Jaloopa was <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/06/18/10321212.aspx" rel="nofollow">making a joke</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

