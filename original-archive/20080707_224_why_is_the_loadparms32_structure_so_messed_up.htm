<html>
<head>
<title>Why is the LOADPARMS32 structure so messed up?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is the LOADPARMS32 structure so messed up?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 7, 2008 / year-entry #225</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>26</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you look at the LOADPARMS32 structure, you'll find a horrific mishmash. Double-null-terminated strings, a null-terminated string, some WORDs, and even a Pascal-style string. What's going on here? Each of those members comes from a different era in time. The oldest member is the Pascal-style command line, which dates back to CP/M. On CP/M, command...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
If you look at the <code>LOADPARMS32</code> structure,
you'll find a horrific mishmash.
Double-null-terminated strings,
a null-terminated string,
some <code>WORD</code>s, and
even a Pascal-style string.
<a HREF="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#516134">
What's going on here</a>?
</p>
<p>
Each of those members comes from a different era in time.
The oldest member is the Pascal-style command line,
which dates back to CP/M.
On CP/M, command lines were stored at a fixed location,
namely 0080h through 00FFh,
in the form of a Pascal string.
The byte at 0080h specified the length of the command line,
and the bytes at 0081h through 00FFh contained the command line itself.
</p>
<p>
MS-DOS based much of its initial interface on CP/M in order to
make porting to the new operating system easier,
and part of what got carried over was the way command lines were
passed from one program to another.
The MS-DOS function to load a program took two parameters,
a pointer to a null-terminated string (specifying the module to load)
and a pointer to a parameter block which took the following form:
</p>
<pre>
LOADPARMS       struc
loadp_environ   dw      ?       ; environment of new process
loadp_cmdline   dd      ?       ; command line of new process
loadp_fcb1      dd      ?       ; first FCB
loadp_fcb2      dd      ?       ; second FCB
LOADPARMS       ends
</pre>
<p>
To ease the transition,
Windows&nbsp;1.0 used the same MS-DOS interface for launching
programs:
You loaded up the registers and issued an
<code>int&nbsp;21h</code> instruction.
All the parameters had the same meaning.
Generally speaking, 16-bit Windows used the old MS-DOS interface
for a lot of functionality, especially disk access.
Want to write to a file?
Put the file handle in the <code>BX</code> register,
the number of bytes in the <code>CX</code> register,
a pointer to the buffer in the <code>DS:DX</code> registers,
function code <code>40h</code> in the <code>AH</code> register,
and issue an
<code>int&nbsp;21h</code>,
just like in MS-DOS.
</p>
<p>
Why do this?
Well, it saved the Windows team from having to invent a whole
boatload of functions that duplicated what MS-DOS already did,
and it meant that existing MS-DOS programs
didn't need to change a thing in their file I/O code.
If they used a runtime library designed for MS-DOS (C or otherwise),
that library would still write to files by setting registers
and issuing an <code>int&nbsp;21h</code>.
If you want people to switch to your new platform, you need to make it easy,
and "you don't have to change anything; it all just works" is pretty easy.
(One minor change was that the first FCB was repurposed to contain
the <code>nCmdShow</code>; the magic value of "2" in the first word of
the FCB signals that it's not really an FCB.)
</p>
<p>
As a minor convenience, the
<code>LoadModule</code> function provided a C-callable version of
the low-level <code>int&nbsp;21h</code>, but you still had to provide
the parameters in the form of the MS-DOS exec structure.
It wasn't until later versions of Windows that the
<code>WinExec</code> function was added,
thereby providing a much more convenient interface to starting a new
program.
No longer did you have to mess with the crazy MS-DOS exec structure
and its strange way of passing the command line and <code>nCmdShow</code>.
</p>
<p>
The people who were designing Win32 created their own function
<code>CreateProcess</code> to launch a new process,
but for backward compatiblity, they retained the
old <code>WinExec</code>
and even older <code>LoadModule</code> mechanisms.
The pointers in the crazy 16-bit exec block got converted to 32-bit,
but the craziness of what they pointed to was retained to make
porting old code easier.
The <code>int&nbsp;21h</code> interface no longer exists, of course.
The craziness is just a leftover from the old MS-DOS days.
The <code>WinExec</code> and <code>LoadModule</code> functions
are now just stub functions that convert their parameters and
call the <code>CreateProcess</code> function to do the real work.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (26)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-645043">
				<div id="div-comment-645043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645043">
			July 7, 2008 at 12:03 pm</a>		</div>

		<p>And in case anyone&#8217;s wondering where LOADPARMS32 is documented:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms684183" rel="nofollow">http://msdn.microsoft.com/en-us/library/ms684183</a>(VS.85).aspx</p>
<p>It&#8217;s part of the LoadModule function docs; it does not have its own doc page, like most of the other Win32 structures do. &nbsp;(Probably because it isn&#8217;t a Win32 structure, really. &nbsp;It&#8217;s a Win16 structure included for source compatibility.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645063">
				<div id="div-comment-645063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Krai Gahwunao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645063">
			July 7, 2008 at 12:34 pm</a>		</div>

		<p>So let me get this straight: Technically speaking, there&#8217;s code in Windows Vista that dates back all the way to CP/M. Nice. (Ok, it&#8217;s &quot;just&quot; a struct, but it&#8217;s still pretty ancient.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645073">
				<div id="div-comment-645073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645073">
			July 7, 2008 at 1:29 pm</a>		</div>

		<p>I would bet there is code in almost any system that dates back +20 years. &nbsp;Why rewrite something just because it is old.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645083">
				<div id="div-comment-645083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Colascione</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645083">
			July 7, 2008 at 2:54 pm</a>		</div>

		<p>Because it needs to use $LATEST_PROGRAMMING_FAD, of course!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645103">
				<div id="div-comment-645103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645103">
			July 7, 2008 at 5:43 pm</a>		</div>

		<p>Another change for Windows was that once you return from the Int 21/AH=4B, the AX register contain the HINSTANCE of the application.</p>
<p>LoadModule was not documented until Windows 3.0, though LoadModule existed in the header files since at least 2.x. Even after WinExec and LoadModule was added, Int 21/AH=4C had to still be used to terminate an app.</p>
<p>And how did you get the return code of a spawned app? You had to use TOOLHELP (which was introduced in Windows 3.1) to watch for program termination.</p>
<p>Int 21 later became DOS3Call in around Windows 3.0 to reduce call overhead in protected mode.</p>
<p>LoadModule could not load a Win32s application because Win32s used a hook into the Windows 3.1 loader that was not invoked if you called LoadModule.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645133">
				<div id="div-comment-645133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.flickr.com/ajgelado/' rel='external nofollow' class='url'>Antonio Rodr&#237;&#173;guez</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645133">
			July 7, 2008 at 8:28 pm</a>		</div>

		<p>When I saw the topic of this post, I was hoping to see some Windows Vista bashing in the comments&#8230; and you haven&#8217;t deceived me ;-) . Windows has code dating from the early 80s for compatibility, true. But both Linux and Mac OS are Unixes, and thus should have code from the early 70s, ten years older than the first version of MS-DOS. Are they worse OSes because of that? No, they aren&#8217;t. But still, it is quite fun to attack Vista at any chance, isn&#8217;t it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645143">
				<div id="div-comment-645143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Colascione</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645143">
			July 7, 2008 at 8:30 pm</a>		</div>

		<p>&lt;nit&gt;</p>
<p>Linux was actually written from the ground up. It contains no Unix code (aside from xfs, these days), and so is technically a Unix-like operating system.</p>
<p>But close enough for practical purposes, sure.</p>
<p>&lt;/nit&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645153">
				<div id="div-comment-645153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645153">
			July 7, 2008 at 10:36 pm</a>		</div>

		<p>I&#8217;m a Linux user (Mac user at work), and not too fond of Vista, but I do also hate the Vista bashing that goes on in internet forums and blogs. &nbsp;If there are problems with Vista, it&#8217;s not the fact that LOADPARM32 has double terminated null strings. &nbsp;For every weird API &quot;feature&quot; in Win32, I can find one or more in the Linux world, some of them introduced even later than the wacko Win32 ones, and with worse rationale. &nbsp;And let&#8217;s not even talk about the pile of crap that is X11&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645163">
				<div id="div-comment-645163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Day</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645163">
			July 7, 2008 at 10:55 pm</a>		</div>

		<p>Antonio, you&#8217;re too sensitive this time. It&#8217;s interesting to know how old bits are and that&#8217;s not necessarily an attack.</p>
<p>It prompted me to check the oldest executable of of a program I wrote that I still use reasonably regularly. That&#8217;s from July 1997 and is a console application using the 1992-copyrighted version of the Microsoft libraries. Fifteen years of backwards compatibility is quite respectable.</p>
<p>One less regularly used (last in October 2007) has a copyright date of 1988 and is written in Borland Turbo Pascal. Nineteen years of backwards compatibility is getting to be pretty good.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645173">
				<div id="div-comment-645173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ATZ Man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645173">
			July 7, 2008 at 11:11 pm</a>		</div>

		<p>The &quot;GNU/&quot; part of GNU/Linux is older than Linux. The nit to be picked here (I know enough to know its there but not enough to actually pick it) lies in the difference between an Operating System and a kernel.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645183">
				<div id="div-comment-645183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://exc@hexatron.com' rel='external nofollow' class='url'>hexatron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645183">
			July 7, 2008 at 11:18 pm</a>		</div>

		<p>Gulp. I still sometimes use WinExec. But not shamelessly.</p>
<p>Well, hell. If it does what you want&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645193">
				<div id="div-comment-645193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645193">
			July 7, 2008 at 11:41 pm</a>		</div>

		<p>&quot;If you want people to switch to your new platform, you need to make it easy, and &quot;you don&#8217;t have to change anything; it all just works&quot; is pretty easy.&quot;</p>
<p>Some DOS functions do require minor changes to ensure code using them are compatible with Windows, for example the interrupt handler code and any data it touches had to be marked as FIXED, which in Windows 3.1 requires it to be placed in a DLL because older linkers default any additional data segments as FIXED because real-mode Windows was not able to fix reference to them when these segments move, and 386 enhanced mode Windows not only fixes but even pagelocks FIXED segments. Even in protected-mode Windows, EXEs that define additional data segments are limited to a single instance for a similar reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645203">
				<div id="div-comment-645203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645203">
			July 8, 2008 at 1:33 am</a>		</div>

		<p>Honestly, the oldest code in Linux proper would date to around 1991, when Linux 0.1 was released. The oldest code in a full GNU/Linux system would probably date to the 60s or 70s, as the beginnings of Emacs. Most Linux systems don&#8217;t have a version of vi derived from Bill Joy&#8217;s code, instead using nvi (a free clone), or more commonly, vim.</p>
<p>OTOH, since this structure is more of an interface than code itself&#8230; this would date Linux&#8217; (and BSD and MacOS X&#8230;) interface to the 70&#8217;s as well. After all, the syscalls haven&#8217;t changed too much over the years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645223">
				<div id="div-comment-645223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645223">
			July 8, 2008 at 4:49 am</a>		</div>

		<p>386 enhanced mode pagelocks fixed segments because software written for older versions of Windows wouldn&#8217;t have known about pagelocking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645233">
				<div id="div-comment-645233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645233">
			July 8, 2008 at 7:32 am</a>		</div>

		<p>From Daniel Colascione:</p>
<p>&quot;Linux was actually written from the ground up. It contains no Unix code (aside from xfs, these days), and so is technically a Unix-like operating system.&quot;</p>
<p>MS-DOS and Windows have no CP/M code either, they just have a little bit of CP/M-like interface.</p>
<p>Further, I think that there&#8217;s very small to no MS-DOS code in Windows NT/2000/XP/Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645283">
				<div id="div-comment-645283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645283">
			July 8, 2008 at 1:40 pm</a>		</div>

		<p>backwards compatibility is a real double edged sword isn&#8217;t it.</p>
<p>If you keep doing it, you end up with hacks on top of kludges on top of workarounds and the code continues to bloat.</p>
<p>But if you lose backwards compatibility, you end up being crucified in the press and people won&#8217;t buy your product because Lotus 1.0 doesn&#8217;t work anymore, or being crucified in the sales department because a lot of apps don&#8217;t work anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-steveshe even thread-even depth-1" id="comment-645323">
				<div id="div-comment-645323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Steve+Sheppard+-+Microsoft' rel='external nofollow' class='url'>Steve Sheppard - Microsoft</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645323">
			July 8, 2008 at 2:52 pm</a>		</div>

		<p>I hereby submit Yuhong Bao for the BDIU award! Raymond, he doesn&#8217;t just pollute your blog, he is doign this crap on every technical blog our there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645333">
				<div id="div-comment-645333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jan Ouen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645333">
			July 8, 2008 at 3:31 pm</a>		</div>

		<p>@Steveshe: Bao wrote some very interesting comments here, so I don&#8217;t see your problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645343">
				<div id="div-comment-645343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mjb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645343">
			July 8, 2008 at 3:54 pm</a>		</div>

		<p>&quot;Linux was actually written from the ground up. It contains no Unix code (aside from xfs, these days), and so is technically a Unix-like operating system.&quot;</p>
<p>Come now. Are you saying no code has been donated to the kernel which originally was from other sources. (appropriately licensed to GPL2 at that point) That seems unlikely to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645373">
				<div id="div-comment-645373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645373">
			July 8, 2008 at 5:15 pm</a>		</div>

		<p>I&#8217;m not really at ease with these articles.</p>
<p>All they seem to do is get people worked up about APIs and structures in Windows that are obsolete, perpetuating the myth that Windows is old and trapped in backward compatibility. &nbsp;</p>
<p>This is doing to harm to Microsoft. &nbsp;it&#8217;ll just end up as fodder on sites that are campaigning against Vista. &nbsp;</p>
<p>I can&#8217;t see any positive aspect to these articles. &nbsp;It&#8217;s dead code, just leave it alone. &nbsp;</p>
<p>Right now Microsoft is in a critically wounded state with Vista, and us third party developers are struggling with clients who want away from Windows because of Vista. Information about CP/M structure in Vista is not helping anyone, it&#8217;s information that is useless for everyone except the competition.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645393">
				<div id="div-comment-645393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Fries</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645393">
			July 8, 2008 at 6:10 pm</a>		</div>

		<blockquote><p>
  it&#8217;ll just end up as fodder on sites that are campaigning against Vista.
</p></blockquote>
<p>Those sites that have such an obvious axe to grind against Microsoft that they&#8217;d use something as benign as a legacy API as a hammer are going to find things to complain about anyway. &nbsp;Most of the complaints about Vista on the net are based solely in fiction as it is (such as the statement that Microsoft is &quot;in a critically wounded state with Vista&quot;).</p>
<p>Raymond&#8217;s blog is a fantastic source of, if nothing else, trivia about why these old APIs are the way they are; and it&#8217;s a shame that you&#8217;re suggesting such a useful and interesting resource stop being so because people who hate Microsoft with every breath might find ammunition here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645403">
				<div id="div-comment-645403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645403">
			July 8, 2008 at 6:12 pm</a>		</div>

		<p>From Ray:</p>
<p>&quot;If you keep doing it, you end up with hacks on top of kludges on top of workarounds and the code continues to bloat.&quot;</p>
<p>There&#8217;re no hack or workaround to make LoadModule work in Windows Vista. It&#8217;s a trivial thunk to CreateProcess that most programmers safely ignore. It simply doesn&#8217;t harm (unlike some backward-compatibility hacks described in other blogs entries).</p>
<p>From Ulric:</p>
<p>&quot;I can&#8217;t see any positive aspect to these articles.&quot;</p>
<p>So, don&#8217;t read them and don&#8217;t flood the comment system.</p>
<p>Read the title of the blog before starting reading entries.</p>
<p>The OLD new thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645413">
				<div id="div-comment-645413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Day</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645413">
			July 8, 2008 at 6:13 pm</a>		</div>

		<p>Ulric, so help your clients do what they believe is best for their business. If that&#8217;s not Windows for some clients, then you should be considering whether and how to service the various markets that make sense.</p>
<p>Meanwhile Raymond is effectively explaining that if they buy a Windows-based application, Microsoft is going to try to make sure that their large investment isn&#8217;t made obsolete in only a couple of years. And that is of considerable value.</p>
<p>Unless your product is tied to Vista or Windows and can&#8217;t possibly work on other systems, stop blaming Raymond and go out and service the markets your customers want you to service. Or let the competition do it, if you&#8217;re really determined not to adapt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645423">
				<div id="div-comment-645423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645423">
			July 8, 2008 at 9:18 pm</a>		</div>

		<p>BTW, back in 1975, C did not exist on anything other than UNIX.</p>
<p>In contrast, by 1983, C compilers are beginning to appear for MS-DOS, and even MS had it&#8217;s own version of Unix called Xenix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-645543">
				<div id="div-comment-645543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.johntopley.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-645543">
			July 9, 2008 at 12:04 pm</a>		</div>

		<p>&quot;Further, I think that there&#8217;s very small to no MS-DOS code in Windows NT/2000/XP/Vista.&quot;</p>
<p>I don&#8217;t think that&#8217;s quite true. IIRC, ntvdm.exe is based on the MS-DOS 5.0 source code. If you were going to provide an environment for running old MS-DOS programs then it would make sense to use at least some of the original code from the original operating system itself. It is probably a small percentage of the overall Windows Vista code base though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646133">
				<div id="div-comment-646133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080707-00/?p=21723#comment-646133">
			July 12, 2008 at 1:53 am</a>		</div>

		<p>In fact, I don&#8217;t think even the changes to Int 21/4B was documented until Windows 3.0. A MS employee posted back in the 2.x days in a newsgroup sample code for spawning a Windows app. Google in Groups &quot;Spawning Windows Applications&quot; to take a look at this code.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

