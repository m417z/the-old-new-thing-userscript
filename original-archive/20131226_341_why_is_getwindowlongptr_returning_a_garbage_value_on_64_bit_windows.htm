<html>
<head>
<title>Why is GetWindowLongPtr returning a garbage value on 64-bit Windows?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is GetWindowLongPtr returning a garbage value on 64-bit Windows?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 26, 2013 / year-entry #342</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>33</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer was running into problems with their application on 64-bit Windows 8. They claimed that on Windows 8, the Get­Window­Long­Ptr is returning a garbage pointer, which causes their program to crash. The same program works fine on 64-bit Windows 7. They asked the Windows team why they broke Get­Window­Long­Ptr. An investigation of the customer's code quickly turned...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was running into problems with their application
on 64-bit Windows&nbsp;8.
They claimed that on Windows&nbsp;8, the
<code>Get&shy;Window&shy;Long&shy;Ptr</code>
is returning a garbage pointer,
which causes their program to crash.
The same program works fine on 64-bit Windows&nbsp;7.
They asked the Windows team why they broke
<code>Get&shy;Window&shy;Long&shy;Ptr</code>.
</p>
<p>
An investigation of the customer's code quickly turned up the issue:
</p>
<pre>
INT_PTR CALLBACK AwesomeDialogProc(
    HWND hdlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
  Awesome *pThis = (Awesome*)GetWindowLongPtr(hdlg, DWLP_USER);

  switch (uMsg) {
  case WM_INITDIALOG:
    pThis = (Awesome*)lParam;
    SetWindowLongPtr(hdlg, DWLP_USER, (LONG)pThis);
    ...
    return TRUE;

   case WM_COMMAND:
     if (pThis != nullptr) {
       // This line crashes with pThis = garbage nonzero value
       return pThis->OnCommand(wParam, lParam);
     }
     return FALSE;

   ...
  }
  return FALSE;
}
</pre>
<p>
See if you can spot the problem.
</p>
<p>
The error is in the line that calls
<code>Set&shy;Window&shy;Long&shy;Ptr</code>.
It takes the 64-bit pointer value <code>pThis</code>
and casts it to a <code>LONG</code>,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/01/31/363790.aspx">
which is a 32-bit integer type</a>.
This truncates the pointer and throws away the upper 32 bits of data.
Therefore, when read back, the pointer looks like garbage
because the top 32 bits were set to zero (or to <code>0xFFFFFFFF</code>,
depending on the value of bit 31).
</p>
<p>
Windows&nbsp;8 made some improvements to the memory manager,
and a side effect was a seemingly harmless change
to the way memory is allocated in 64-bit processes.
As a result of the change, pointer values greater than
4<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2009/06/11/9725386.aspx">GB</a>
are much more common, which means that the pointer truncation
will actually destroy data.
(In Windows&nbsp;7, the default heap tended to hang out below the 2GB
boundary, so the code merely truncated zeros, which is
<a HREF="http://www.amazon.com/dp/0345418778?tag=tholneth=20">
mostly harmless</a>.)
</p>
<p>
What I found particularly interesting about this error is that
the <code>DWL_USER</code> window long was specifically
renamed to <code>DWLP_<wbr>USER</code> in 64-bit Windows in order to force
a build break.
Therefore, developers had to go in and convert each separate use of
<code>[GS]et&shy;Window&shy;Long</code> with
<code>DWL_<wbr>USER</code>
to a version that used
<code>[GS]et&shy;Window&shy;Long&shy;Ptr</code> with
<code>DWLP_<wbr>USER</code>,
being careful not to truncate the pointer.
</p>
<p>
This customer missed that last little bit about not truncating the pointer,
and all they did was a global search/replace:
</p>
<pre>
s/\bGetWindowLong\b/GetWindowLongPtr/g;
s/\bSetWindowLong\b/SetWindowLongPtr/g;
s/\bDWL_USER\b/DWLP_USER/g;
</pre>
<p>
"<a HREF="http://failblog.cheezburger.com/thereifixedit">There,
I fixed it</a>."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (33)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1096133">
				<div id="div-comment-1096133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096133">
			December 26, 2013 at 7:21 am</a>		</div>

		<p>TRWTF is that a pointer is longer than a &quot;LONG&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096143">
				<div id="div-comment-1096143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096143">
			December 26, 2013 at 7:36 am</a>		</div>

		<p>I like how their first instinct is to assume that the Windows team made a gratuitous breaking change in a trivial OS function, rather than to consider what might be wrong with their product.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096153">
				<div id="div-comment-1096153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John D</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096153">
			December 26, 2013 at 8:02 am</a>		</div>

		<p>What, no compiler truncation warning on the SetWindowLongPtr(hdlg, DWLP_USER, (LONG)pThis) cast to LONG ? &nbsp;Don&#39;t ignore warnings. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1096183">
				<div id="div-comment-1096183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096183">
			December 26, 2013 at 9:06 am</a>		</div>

		<p>&gt;What, no compiler truncation warning on the SetWindowLongPtr(hdlg, DWLP_USER, (LONG)pThis) cast to LONG ?</p>
<p>The 64 bit truncation warning was removed from recent compilers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1096193">
				<div id="div-comment-1096193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096193">
			December 26, 2013 at 9:14 am</a>		</div>

		<p>Hi. The post&#39;s main subject was crystal clear but there are a couple of things I didn&#39;t quite understand. First, I don&#39;t get the meaning of the hyperlinks on &quot;mostly harmless&quot; and &quot;There, I fixed it&quot;. Second, what&#39;s TRWTF? (Does it have anything to do with &#8230; you know, its last three letters?)</p>
<div class="post">{<em>The first two should be self-explanatory. One is a link to a book titled &quot;Mostly Harmless.&quot; Another is a link to a photo blog called &quot;There, I fixed it.&quot; TRWTF is explained in Urban Dictionary, popularized by the Daily WTF blog I link to in my blogroll. I&#39;m wondering if I&#39;m being trolled&#8230; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096203">
				<div id="div-comment-1096203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Craig</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096203">
			December 26, 2013 at 9:15 am</a>		</div>

		<p>alegr1: Only sort of true</p>
<p><a rel="nofollow" target="_new" href="http://connect.microsoft.com/VisualStudio/feedback/details/635209/missing-warnings-are-generated-from-vs2010-compiler-that-are-connected-to-64-bit-incompatibility">connect.microsoft.com/&#8230;/missing-warnings-are-generated-from-vs2010-compiler-that-are-connected-to-64-bit-incompatibility</a></p>
<p>In Visual Studio 2005, you could set /Wp64 for your 64-bit builds, and get great truncation warnings, with a very low false positive rate.</p>
<p>In Visual Studios 2008, 2010, and 2012, you could set /Wp64 for your 64-bit build and get great truncation warnings, but you had to tolerate a &quot;command line warning&quot; for every translation unit, warning that the flag was deprecated.</p>
<p>In Visual Studio 2013, /Wp64 no longer catches the truncation warnings, but they can be explicitly enabled on a warning-by-warning basis.</p>
<p>I really don&#39;t understand why these warnings are not turned on with even low warning levels. &nbsp;I think the lack of these flags being turned on results in much lower quality 64-bit software on Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo even thread-even depth-1" id="comment-1096223">
				<div id="div-comment-1096223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096223">
			December 26, 2013 at 9:48 am</a>		</div>

		<p>@Fleet Command:</p>
<p><a rel="nofollow" target="_new" href="http://images2.wikia.nocookie.net/__cb20130212001228/creepypasta/images/b/b7/Willy-wonka-you-must-be-new-here.jpg">images2.wikia.nocookie.net/&#8230;/Willy-wonka-you-must-be-new-here.jpg</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1096233">
				<div id="div-comment-1096233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096233">
			December 26, 2013 at 10:14 am</a>		</div>

		<p>@Matteo: Yes, I am; Still, do you have any answers? Or are you as much unaware in spite of being not new?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096253">
				<div id="div-comment-1096253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Fleet Command</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096253">
			December 26, 2013 at 10:45 am</a>		</div>

		<p>Detailed explanations ruin the joke (plus a passing familiarity with pop/internet culture would suffice to explain the references here).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096303">
				<div id="div-comment-1096303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Byrd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096303">
			December 26, 2013 at 11:52 am</a>		</div>

		<p>@Fleet Command: For TRWTF, you are right about the last three letters. The first two stand for &quot;The Real&quot;, so it could be (politely) translated as &quot;The real problem here&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096313">
				<div id="div-comment-1096313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096313">
			December 26, 2013 at 11:56 am</a>		</div>

		<p>OH MY. I wonder if I smell a compatibility shim coming (limit heap to &lt; 2GB for 64 bit process).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1096323">
				<div id="div-comment-1096323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096323">
			December 26, 2013 at 12:16 pm</a>		</div>

		<p>Looks like Fleet Commander is part of today&#39;s lucky ten thousand! <a rel="nofollow" target="_new" href="http://xkcd.com/1053/">http://xkcd.com/1053/</a></p>
<p>&quot;Mostly harmless&quot; is an in-joke for fans of Douglas Adam&#39;s radio show/book series/movie &quot;The Hitchhiker&#39;s Guide to the Galaxy&quot;. The Guide is a repository of all knowledge in the universe; due to space constraints, the entry for Earth was &quot;Harmless.&quot; The character Ford Prefect did a great deal of research on Earth and submitted it; the updated entry was again edited down, this time to &quot;Mostly harmless.&quot;</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy">en.wikipedia.org/&#8230;/The_Hitchhiker%27s_Guide_to_the_Galaxy</a></p>
<p>&quot;There, I fixed it&quot; is a joke which refers to hacky/lazy fixes, with a connotation of disdain for standard practices and potential long-term problems. Example:</p>
<p>Wife: Honey, the smoke detector keeps beeping. Can you take care of it?</p>
<p>Husband: (takes smoke detector to the garage, runs over it, sweeps pieces into the trash) There, I fixed it.</p>
<p>&quot;TRWTF&quot; stands for &quot;The real WTF.&quot; This is an in-joke on TheDailyWTF.com. A submitter shows some surprising code or other development practice with an obvious defect; a commenter then replies &quot;the real WTF is&#8230;&quot; and then points to an error or &quot;error&quot; which predates the defect shown, often to humorous effect. Example:</p>
<p>Submitter: I found this custom SQL date arithmetic which fails spectacularly in leap years.</p>
<p>Commenter: TRWTF is that &lt;database engine&gt; does not support SQL-92&#39;s DATE type.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096343">
				<div id="div-comment-1096343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096343">
			December 26, 2013 at 1:19 pm</a>		</div>

		<p>Sigh&#8230; &nbsp;I really loved /Wp64 and am sad to see it go in Visual Studio 2013. &nbsp;I work on a team in which the majority of developers like to use Edit and Continue, so that means they&#39;re developing in 32-bit rather than 64-bit. &nbsp;I almost always build the project in 64-bit, partly because I&#39;m more or less responsible for the Win64 port, so I often have to clean up the mess left by others.</p>
<p>@Joshua: You should see the hack I did to work around the fact that an archaic disk file format was designed to be loaded as-is into memory with 32-bit &quot;holes&quot; for pointers. &nbsp;I VirtualAlloc(MEM_RESERVE) 2 GB of address space then create a heap structure inside of it, committing as necessary. &nbsp;Then pointers will fit. &nbsp;(2 GB instead of 4 GB because the format also has 32-bit ptrdiff_t&#39;s to represent distances to other objects&#8230; &nbsp;Lovely, isn&#39;t it?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1096363">
				<div id="div-comment-1096363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096363">
			December 26, 2013 at 2:29 pm</a>		</div>

		<p>@Maurits [MSFT]: Thanks a bunch. :)</p>
<p>P.S. It&#39;s &quot;Fleet Command&quot; with no &quot;er&quot; at the end</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096403">
				<div id="div-comment-1096403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096403">
			December 26, 2013 at 5:20 pm</a>		</div>

		<p>@Maurits Thanks for answering his questions. I was getting slightly frustrated by the number of people who seem to assume that everybody here is a native speaker from a similar cultural background.</p>
<p>I assume I should start making jokes about Dinner for One and berate everybody for not getting it..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096433">
				<div id="div-comment-1096433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096433">
			December 26, 2013 at 6:54 pm</a>		</div>

		<p>@voo &#8211; However both of his questions are trivially answered by the first Google hits for those terms, which takes less effort to do than asking a question here and fits with &quot;smart questions&quot; etiquette &#8211; i.e. the same procedure as every year ;-)</p>
<p>(though if everyone went in for smart questions Raymond would have rather less to write about)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096453">
				<div id="div-comment-1096453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Muller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096453">
			December 26, 2013 at 10:59 pm</a>		</div>

		<p>If I recall correctly, that same thing happened with a lot of applications at the change from 16 bit to 32 bit windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096463">
				<div id="div-comment-1096463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kudryavka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096463">
			December 26, 2013 at 11:14 pm</a>		</div>

		<p>@Joshua &nbsp; </p>
<p>This behavior is Opt-in</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/bb531344(v=vs.110).aspx">msdn.microsoft.com/&#8230;/bb531344(v=vs.110).aspx</a></p>
<p>Therefore, no need shim for old application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096473">
				<div id="div-comment-1096473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096473">
			December 27, 2013 at 5:34 am</a>		</div>

		<p>yep.. &nbsp;Windows 8 is causing a lot of 64 bit pointer truncation bugs to be uncovered, which sucks because our company, like many, doesnt make patches for older apps. &nbsp;so they just get random crahes and then revert to windows 7.</p>
<p>one of the issue I&#39;ve found is a truncation bug in the open source lib PySide (pythin wrapper for Qt) but they are ignoring the bug reports about it. &nbsp;there was anotherone in libtiff or some other OSS image library . &nbsp;We had a dozen cracches, probably havent found them all. &nbsp;the hate for the win8 has slowed fixes bacause many devevelopers refuse to use it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096483">
				<div id="div-comment-1096483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096483">
			December 27, 2013 at 6:18 am</a>		</div>

		<p>Well, the function is called &quot;SetWindowLongPtr&quot;, so the intuitive thing to do is pass it a long. This gets a -6 on Rusty&#39;s API quality scale: &quot;The name tells you how not to use it.&quot;</p>
<p>This is also the kind of thing which can trip Unix developers, who are used to &quot;long&quot; being as long as a pointer, even on 64-bit (most 64-bit Unix systems use the LP64 convention, where int is 32 bits and long is 64 bits). I know I would have a hard time seeing it when reading the code; casting a pointer to a long is the traditional way to store a pointer in an integer variable, and I am trained to think of &quot;long&quot; as &quot;64-bit except on a 32-bit system, where pointers are 32-bit too&quot;.</p>
<p>The modern way is to use uintptr_t (which is always big enough to contain any pointer), but a lot of software is from before it existed, so we still see casts to long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096493">
				<div id="div-comment-1096493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096493">
			December 27, 2013 at 7:06 am</a>		</div>

		<p>Is this the kind of thing that linking with &quot;/HIGHENTROPYVA:NO&quot; will fix?</p>
<div class="post">[<em>Not obvious to me, because HIGHENTROPYVA controls ASLR for executable images, but the heap is not in an executable image. But I would not be surprised if the kernel folks overloaded the flag to control some other things, too. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096513">
				<div id="div-comment-1096513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096513">
			December 27, 2013 at 7:34 am</a>		</div>

		<p>@Cesar except &quot;LONG_PTR&quot; is the name of a type, and it is indeed specifically the type that this function was named to refer to (both the type and the function were newly introduced with the win64 stuff &#8211; the documentation says they&#39;re supported back to Windows 2000, but that&#39;s because the current version of the SDK #defines the functions to refer to the old names when compiling for win32.)</p>
<p>&quot;where GetWindowLong takes a LONG, GetWindowLongPtr takes a LONG_PTR&quot; is the most intuitive thing in the world. The only thing saying otherwise is looking at the name blindly and seeing the word &quot;long&quot; without ever having heard of an older related function that _actually_ took a long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096533">
				<div id="div-comment-1096533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096533">
			December 27, 2013 at 9:15 am</a>		</div>

		<p>@Cesar: The previous correct way was to use ptrdiff_t which existed since at least ANSI C and is big enough to hold a pointer on all architectures where arbitrary pointer arithmetic works (i.e. all flat architectures and most segmented architectures).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096553">
				<div id="div-comment-1096553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096553">
			December 27, 2013 at 9:59 am</a>		</div>

		<p>@Joshua: no architecture is required to allow arbitrary pointer arithmetic (i.e. subtraction of pointers into unrelated objects) to work, even if it is a flat architecture. Breaking arbitrary pointer arithmetic _solely by truncating the result of pointer subtraction_ is a legal choice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096563">
				<div id="div-comment-1096563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096563">
			December 27, 2013 at 11:31 am</a>		</div>

		<p>@ulric</p>
<p>TRWTF is refusing to support older software in any capacity.</p>
<p>Imagine if bridges or skyscrapers worked like that.</p>
<p>&quot;We no longer provide any support for the Golden Gate, but we&#39;ll build you a new one right next to it at ten times the cost.&quot;</p>
<p>&quot;The foundation is shot, we&#39;ll just have to wait until the building collapses, then we&#39;ll put a new one up.&quot;</p>
<div class="post">[<em>I bet if the transportation district called up McClintic-Marshall Construction asking them to fix a problem with the bridge, they&#39;d say &quot;Um, that&#39;s your problem now.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096633">
				<div id="div-comment-1096633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096633">
			December 27, 2013 at 2:43 pm</a>		</div>

		<p>@Random832: Legal, yes, but stupid. In flat architectures, the machine word size is the same as the pointer size.</p>
<p>[I bet if the transportation district called up McClintic-Marshall Construction asking them to fix a problem with the bridge, they&#39;d say &quot;Um, that&#39;s your problem now.&quot; -Raymond]</p>
<p>Troll bait.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096663">
				<div id="div-comment-1096663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096663">
			December 28, 2013 at 4:29 am</a>		</div>

		<p>@anon nobody makes QFEs for older software no longer on support, nobody. &nbsp;especially for new operating systems. &nbsp;the companies will tell you that new os is unsuported/uncertififed. it&#39;s your fault if you broke it by uograding your machine. you should upgrade to the new software as well.</p>
<p>ofher subject, &nbsp;it&#39;s DWORD_PTR I&#39;m familiar with to cast pointers to dwords! &nbsp;that dates way way back. win3.1 perhaps?</p>
<p>sorry for all the typos! insane ipad keyboard</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096683">
				<div id="div-comment-1096683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096683">
			December 28, 2013 at 8:47 am</a>		</div>

		<p>@ulric: Which is why Windows is unsuitable for industrial use. 10 year lifetime for the OS == 40 years too short.</p>
<p>Yes, I know this leaves VxWorks or the vendor supports the OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096713">
				<div id="div-comment-1096713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096713">
			December 29, 2013 at 11:14 am</a>		</div>

		<p>@Joshua: You meant 55 years, of course. 2038 &#8211; 1983 (System V release) = 55 years.</p>
<p>And I don&#39;t quite get why the existence of sowtware which was incorrectly ported to a different processor architecture means that Windows is unsuitable for industrial use. Did SVR4 made it to x64?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096723">
				<div id="div-comment-1096723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">64</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096723">
			December 29, 2013 at 8:04 pm</a>		</div>

		<p>TRWTF is that long in VC++ on 64-bit windows is 32-bit. I know why this was chosen. I still think it was a stupid decision (.net and unix got it right).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1096783">
				<div id="div-comment-1096783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096783">
			December 30, 2013 at 11:19 am</a>		</div>

		<p>I never fully understood why /Wp64 was deprecated/removed. &nbsp;Did it simply issue too many false positives?</p>
<p>For debugging you can force memory allocations to start from high addresses (above the 4GB boundary for /LARGEADDRESSAWARE applications) by setting the registry value:</p>
<p> &nbsp; &nbsp; HKLMSYSTEMCurrentControlSetControlSession ManagerMemory ManagementAllocationPreference</p>
<p>to 0x100000. That causes the `MEM_TOP_DOWN` flag to be set on calls to `NtAllocateVirtualMemory ()`. This will help catch many pointer truncation problem during testing. I think it would have been good for the CRT&#39;s debug heap to set that flag for x64 applications automatically, but oh well.</p>
<p>For details see Windows Internals 6th Ed. Part 2 Chapter 10 or &quot;Introduction to x64 debugging, part 5&quot; on <a rel="nofollow" target="_new" href="http://www.nynaeve.net/?p=14">http://www.nynaeve.net/?p=14</a></p>
<p>Released programs with pointer truncation problems might be made runnable with an appcompat shim &#8211; I see shims named LimitLargeAddressAwareProcessTo3gb and GlobalMemoryStatus2GB that might help (I&#39;m not an appcompat shim expert, so I don&#39;t know precisely what these shims do).</p>
<p>Finally, editbin.exe can be used with the /LARGEADDRESSAWARE:NO option to patch a program (even a 64-bit program) to only get addresses that are below the 2GB threshold. Unfortunately, editbin isn&#39;t included with Windows. It&#39;s provided with MSVC and some (all?) Windows SDKs, so it&#39;s usefulness as something end-users can use to fix programs is pretty much limited to power users.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1096893">
				<div id="div-comment-1096893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1096893">
			December 30, 2013 at 9:10 pm</a>		</div>

		<p>@Joker_vD: The point is I should be able to get security patches somehow, not whether it&#39;s going to get ported to a new processor. The controllers need to keep running on the hardware they were built with until the hardware wears out without worrying about viruses.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097263">
				<div id="div-comment-1097263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Craig</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131226-00/?p=2263#comment-1097263">
			January 2, 2014 at 5:47 am</a>		</div>

		<p>@mikeb</p>
<p>When compiling a 32-bit application with /Wp64, there were definitely too many false positives. &nbsp;typedef&#39;s that varied on bitness (like size_t) had to get special annotation to tell /Wp64 that they were going to be large enough to hold a 64-bit pointer. &nbsp;If you have your own typedefs, you likely wouldn&#39;t have annotated them. &nbsp;In addition, once you get to the internals of a template, some of that annotation information is lost, so you start getting false positives there as well.</p>
<p>I&#39;m still not sure why /Wp64 wasn&#39;t made the default for 64-bit applications though.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

