<html>
<head>
<title>Why does the MoveWindow function let you suppress repainting?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does the MoveWindow function let you suppress repainting?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 16, 2009 / year-entry #85</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Phil Quirk asks via the suggestion box why the MoveWindow function lets you suppress repainting. "Shouldn't the OS be able to figure out if the window needs to be repainted?" Indeed the window manager does do a very nice job of figuring it out if you pass bRepaint = TRUE, which is the expected...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter Phil Quirk asks via the suggestion box <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#544564"> why the <code>MoveWindow</code> function lets you suppress repainting</a>. "Shouldn't the OS be able to figure out if the window needs to be repainted?"</p>
<p> Indeed the window manager does do a very nice job of figuring it out if you pass <code>bRepaint = TRUE</code>, which is the expected value of the parameter. But if you think you're smarter than the window manager, then you can pass <code>bRepaint = FALSE</code> and tell the window manager, "Even though you think the window needs to be repainted, don't repaint it. Trust me on this." </p>
<p> Why would you try to outwit the window manager? Maybe you have special knowledge about how your application behaves. For example, you might exploit special properties about the source and destination coordinates and decide that certain portions of the window should not be redrawn but rather should be shared between the old and new locations, sort of like the <a href="http://blogs.msdn.com/oldnewthing/archive/2003/09/15/54925.aspx"> advanced tricks you can play with the <code>WM_NCCALCSIZE</code> message</a>. Or you might know that your program is going to invalidate the entire client rectangle soon anyway, so a repaint immediately after the move would just be a waste of time. The <code>bRepaint</code> parameter provides an escape hatch, a throwback to the days when <a href="http://blogs.msdn.com/oldnewthing/archive/2005/10/21/483438.aspx"> the window manager let you do strange things because you might be doing them as part of a clever thing</a>. </p>
<p> Mind you, these are pretty advanced concerns and most of the time you would be best off just passing <code>bRepaint = TRUE</code> and letting the window manager do its job of deciding what needs to be repainted. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-717393">
				<div id="div-comment-717393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chuck Norris?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717393">
			March 16, 2009 at 3:25 pm</a>		</div>

		<p>The page from the link &quot;why the MoveWindow function lets you suppress repainting&quot; links to the blog of Zeke Odins-Lucas, which links to the Microspotting website, which has a recent(ish) interview with Raymond&#8230;</p>
<p><a rel="nofollow" target="_new" href="http://www.microspotting.com/2009/01/raymond-chen" rel="nofollow">http://www.microspotting.com/2009/01/raymond-chen</a></p>
<p>which links back to this blog&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-717543">
				<div id="div-comment-717543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717543">
			March 16, 2009 at 8:54 pm</a>		</div>

		<p>As a rule, you move windows in response to user input, otherwise you&#8217;re liable to move the window somewhere that will annoy the user.</p>
<p>Therefore &quot;I&#8217;m about to move a bunch of windows&quot; counts as special knowledge of the fact that somehow you have a reason to do that and its what the user will want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-717563">
				<div id="div-comment-717563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717563">
			March 16, 2009 at 9:33 pm</a>		</div>

		<p>Bob,</p>
<p>How about resizing of a form or a dialog, with automatic rearrangement of the controls?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-717583">
				<div id="div-comment-717583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717583">
			March 16, 2009 at 10:28 pm</a>		</div>

		<p>I think people forget that a &quot;window&quot; in Windows does not just mean top-level windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-717533">
				<div id="div-comment-717533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717533">
			March 16, 2009 at 8:12 pm</a>		</div>

		<p>The &quot;special knowledge&quot; is not the point.</p>
<p>If bRepaint is TRUE, WM_PAINT is *sent* immediately in the MoveWindow context, causing the window to repaint before the function returns, rather than &quot;lazily&quot; in the message loop.</p>
<p>If you are moving or resizing &nbsp;a lot of windows, you may not want them to repaint immediately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-717603">
				<div id="div-comment-717603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gdrprivate.blogspot.com/' rel='external nofollow' class='url'>Leif Strand</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717603">
			March 16, 2009 at 11:29 pm</a>		</div>

		<p>It is interesting to compare/contrast the classic Mac here.</p>
<p>In the Macintosh Toolbox, the functionality of Win32&#8217;s MoveWindow is split between two routines, MoveWindow and SizeWindow. &nbsp;Not coincidentally, SizeWindow has the exact same parameter (&quot;fUpdate&quot;) with (almost) the exact same semantics:</p>
<p><a rel="nofollow" target="_new" href="http://developer.apple.com/DOCUMENTATION/mac/Toolbox/Toolbox-251.html" rel="nofollow">http://developer.apple.com/DOCUMENTATION/mac/Toolbox/Toolbox-251.html</a></p>
<p>The difference is, on the Mac, the behavior is always &quot;lazy&quot;. &nbsp;At the same time, they neglected to include an &#8216;fUpdate&#8217; parameter to MoveWindow:</p>
<p><a rel="nofollow" target="_new" href="http://developer.apple.com/DOCUMENTATION/mac/Toolbox/Toolbox-246.html" rel="nofollow">http://developer.apple.com/DOCUMENTATION/mac/Toolbox/Toolbox-246.html</a></p>
<p>Indeed, since the Mac is always lazy, there is no need for an &#8216;fUpdate&#8217; parameter in the &quot;move a bunch of windows&quot; scenario. &nbsp;You just move the windows around with abandon, confident that you will be fed a stream of update events later (one per window &#8212; no redundant drawing will occur).</p>
<p>Nonetheless, the Mac team felt the need to include &#8216;fUpdate&#8217; with SizeWindow. &nbsp;As Raymond alluded to, it probably has to do with coordinates. &nbsp;Maybe I want the content to shift in response to the resize, in which case the default update region would be annoying.</p>
<p>Going even deeper, I wonder if the reason that Windows is *not* lazy has to do with update events. &nbsp;As I recall, Windows doesn&#8217;t have &quot;update events&quot; &#8212; there is WM_PAINT but it&#8217;s not quite the same thing. &nbsp;On the Mac, update events are funny things which are handled specially by the Toolbox. &nbsp;They aren&#8217;t even posted to the queue (otherwise you could get two redundant update events for the same window). &nbsp;Maybe the Windows team decided that update events were an ugly/useless concept&#8230; but were thus forced to make MoveWindow redraw the window immediately when bRepaint=TRUE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-717623">
				<div id="div-comment-717623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">streuth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717623">
			March 17, 2009 at 6:36 am</a>		</div>

		<p>This one made me think a bit.</p>
<p>I thought to myself&#8230;. I don&#8217;t think I&#8217;m using move window *anywhere*. SetWindowPos would be a preferable call to my way of thinking. So I did a grep on everything I do, and have written, for the word &quot;MoveWindow&quot;.</p>
<p>You must consider, that I cant remember why all the functions I have written exist!</p>
<p>As it happens I have a prototype for &quot;MoveWindow&quot; that simply calls &quot;SetWindowPos&quot;. Stranger still, my own prototype has a repaint parameter!!!!</p>
<p>I&#8217;d say that I probably coded it, with the idea that I could move multiple windows as children (perhaps overlapping) and then repaint them all in one go on conclusion of the multiple move. My own &quot;MoveWindow&quot; appears to forego activation when called with repaint set to false. When set to true it also foregoes activation but forces both pane and frame painting.</p>
<p>As it turns out, the only time I call &quot;MoveWindow&quot; with repaint set to false, is when I have a windows button control drawn on top of part of a windows edit control. In that instance it seems that I&#8217;m moving the window into position, showing it, and then zing to the fore.</p>
<p>Who knows if it&#8217;s the right way to do it, but I&#8217;m fairly sure it works O.K.</p>
<p>HTH</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-719103">
				<div id="div-comment-719103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-719103">
			March 20, 2009 at 2:17 pm</a>		</div>

		<p>it&#8217;s common. &nbsp;Not the first case mentionned by Raymond (exploiting special knowledge), but the second. &nbsp;Alexandre Grigoriev above is correct.</p>
<p>it&#8217;s to avoid flicker and embarassing performance, when you move a bunch of child windows, for example when resizing a dialog, you can do a final InvalidateRect( hwnd, NULL ) at the end and get on repaint instead of a bunch of them. &nbsp;</p>
<p>now of course, there is DeferWindowPos, but that function probably came much later (was it even in Windows 3.x?) &#8211; and I think it is generally little known.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

