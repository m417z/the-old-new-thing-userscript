<html>
<head>
<title>What's the point of the various ...WhenCallbackReturns functions?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What&#8217;s the point of the various &#8230;WhenCallbackReturns functions?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 8, 2013 / year-entry #298</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20131108-00/?p=2703</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The thread pool provides a number of functions named ...When­Callback­Returns. What's the point of all these functions? Why can't you just do the operation yourself immediately before returning? We saw Free­Library­When­Callback­Returns last time. What's the point of the others? Basically, the same thing as Free­Library­When­Callback­Returns. It's a way to release a resource after execution has...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The thread pool provides a number of functions named <code>...When&shy;Callback&shy;Returns</code>. What's the point of all these functions? Why can't you just do the operation yourself immediately before returning?</p>
<p> <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/11/07/10464408.aspx"> We saw <code>Free&shy;Library&shy;When&shy;Callback&shy;Returns</code> last time</a>. What's the point of the others? </p>
<p> Basically, the same thing as <code>Free&shy;Library&shy;When&shy;Callback&shy;Returns</code>. It's a way to release a resource after execution has left the function and the callback is marked as complete. In the case of a synchronization resource, that resource may be what's keeping somebody from unloading your DLL, or it might protect a race condition between the callback function and a function that tries to cancel the callback. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1088213">
				<div id="div-comment-1088213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131108-00/?p=2703#comment-1088213">
			November 8, 2013 at 7:46 pm</a>		</div>

		<p>So, from what I see here, the way Windows API treats its handles is the way a trigger-happy person fires a gun: He or she fires, regardless of the identity of the target: Foe, friendly or self. Thus, an additional function is put there to do the trigger-happy shooting and getting shot.</p>
<p>Why can&#39;t it just verify target ID before trying to kill it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1088223">
				<div id="div-comment-1088223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131108-00/?p=2703#comment-1088223">
			November 9, 2013 at 10:57 am</a>		</div>

		<p>It does verify the target ID. &nbsp;The handle is the ID.</p>
<p>For kernel handles, there is no race condition, because the handle can&#39;t be reused until you release your reference. &nbsp;USER and GDI handles are more problematic, because non-owners using the handle have no way to prevent reuse. &nbsp;Trouble arises, of course, when external code acts on these handles in a way that the code which owns them did not anticipate or permit. &nbsp;But if you don&#39;t have permission to dig into resources of another component, it&#39;s really not surprising if things go awry. &nbsp;And if you do have permission, then you can coordinate with the owning code to control the lifetime.</p>
<p>Note that steps to correct this have already been taken. &nbsp;USER and GDI have been replaced by a &quot;Modern&quot; API that is object-oriented and reference counted, so your concept of identity doesn&#39;t disappear if someone else closes the resource (you&#39;re left with a valid handle to a closed resource). &nbsp;Unfortunately there&#39;s no equivalent for desktop apps&#8230; it isn&#39;t clear to me whether it would be possible to make one, but I think so. &nbsp;There could be reference counted objects with one reference on behalf of (the user + all apps using the legacy handle) and that would disappear with DestroyWindow (for HWND) or DeleteObject (for GDI handles). &nbsp;But the underlying object would still exist, in a closed state, until all consumers of the new object API released their references.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1088233">
				<div id="div-comment-1088233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131108-00/?p=2703#comment-1088233">
			November 9, 2013 at 7:19 pm</a>		</div>

		<p>@Ben Voigt:</p>
<p>&quot;The handle is the ID&quot;. Actually, it is the person that gets killed. It&#39;s like giving the picture of person to a hitman to kill. Now, sometimes, C++ programs give the picture of themselves. So, they use FreeLibraryAndExitThread to give the picture, so that the mistake would be FreeLibraryAndExitThread giving a picture of itself and getting killed.</p>
<p>&quot;USER and GDI have been replaced&quot;. Nice, unless of course, you mean .NET Framework, which technically does not replace them. But can I have the name of this modern API, please? Or, of course, an MSDN link would be much better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1088243">
				<div id="div-comment-1088243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131108-00/?p=2703#comment-1088243">
			November 10, 2013 at 2:05 pm</a>		</div>

		<p>@Fleet Command</p>
<p>It&#39;s more like an undertaker making arrangements for their own funeral with another undertaker.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1088263">
				<div id="div-comment-1088263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131108-00/?p=2703#comment-1088263">
			November 11, 2013 at 6:17 am</a>		</div>

		<p>@Fleet Command:</p>
<p>Object oriented and no equivalent for desktop apps means the Windows 8 UI applications, or Windows Store applications is what I would guess at.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1088383">
				<div id="div-comment-1088383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131108-00/?p=2703#comment-1088383">
			November 11, 2013 at 11:54 pm</a>		</div>

		<p>Oh! I see! Ben Voigt was referring to &quot;Windows Runtime&quot;! I guess I got excited for nothing&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

