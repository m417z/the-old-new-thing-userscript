<html>
<head>
<title>Why do I get the error REGDB_E_IIDNOTREG when I call a method that returns an interface?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why do I get the error REGDB_E_IIDNOTREG when I call a method that returns an interface?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 22, 2009 / year-entry #24</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090122-00/?p=19413</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">This is another manifestation of the missing marshaller problem. IContextMenu *pcm; HRESULT hr = psf->GetUIObjectOf(hwnd, 1, &pidl, IID_IContextMenu, NULL, &pcm); // fails with REGDB_E_IIDNOTREG The IContextMenu interface does not have a proxy/stub factory (as of this writing). Recall that shell objects, as a rule, are apartment model. If you create the object from a multi-threaded...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
This is another manifestation of the
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2004/12/13/281910.aspx">
missing marshaller problem</a>.
</p>
<pre>
IContextMenu *pcm;
HRESULT hr = psf-&gt;GetUIObjectOf(hwnd, 1, &amp;pidl,
               IID_IContextMenu, NULL, &amp;pcm);
// fails with REGDB_E_IIDNOTREG
</pre>
<p>
The <code>IContextMenu</code> interface does not have
a proxy/stub factory (as of this writing).
Recall that shell objects, as a rule, are apartment model.
If you create the object from a multi-threaded apartment,
COM needs to build a wrapper object which can marshal calls
from off-thread back onto the original thread,
in order to adhere to the threading rules for apartment-model objects.
</p>
<p>
And if the COM standard marshaler can't find a proxy/stub factory
for an interface,
it returns the error
<code>REGDB_E_IIDNOTREG</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-703233">
				<div id="div-comment-703233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090122-00/?p=19413#comment-703233">
			January 22, 2009 at 3:29 pm</a>		</div>

		<p>So are there rules for deciding which shell interfaces get a proxy/stub factory, or did they just kind of slip in there during the build process?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-703243">
				<div id="div-comment-703243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090122-00/?p=19413#comment-703243">
			January 22, 2009 at 3:47 pm</a>		</div>

		<p>What John said. Is it okay to use CreateProxyFromTypeInfo and CreateStubFromTypeInfo to roll your own?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-703263">
				<div id="div-comment-703263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090122-00/?p=19413#comment-703263">
			January 22, 2009 at 5:06 pm</a>		</div>

		<p>Dave: I&#8217;m pretty sure the standard COM marshaler will try to use the typelib if it can&#8217;t find the proxy/stub factory. But in the case of IContextMenu, it&#8217;s got some funny pointers and stuff that I doubt would work with standard marshelling. Besides, it might not even have a typelib registered, I&#8217;m not sure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-703273">
				<div id="div-comment-703273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090122-00/?p=19413#comment-703273">
			January 22, 2009 at 5:39 pm</a>		</div>

		<p>For IContext menu, you&#8217;d have to consider the way the interface is used. It&#8217;s very tied up with the processing of window messages, which are thread-bound, so if you did throw together some marshaling support of your own you might still have problems in practice.</p>
<p>I don&#8217;t actually know in this case, since I&#8217;ve never tried, but the short answer to the &quot;are there rules&quot; question is &quot;Yes, proxies are not provided if the original designer of the interface had some reason for wanting to restrict implementations to a single STA.&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-703463">
				<div id="div-comment-703463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/tsfaware' rel='external nofollow' class='url'>Eric</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090122-00/?p=19413#comment-703463">
			January 23, 2009 at 12:52 pm</a>		</div>

		<p>If I&#8217;m not mistaken, the standard COM marshaller will automatically create a proxy/stub if there&#8217;s a typeinfo chunk associated with the interface GUID. &nbsp;Not all interfaces have typeinfo chunks, particularly those interfaces that are internal to an application. &nbsp;(I have a project with a half-dozen COM interfaces that aren&#8217;t even <em>registered</em>, much less with typeinfo.) &nbsp;Most COM registration goo isn&#8217;t needed &#8211; start here: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/larryosterman/archive/2006/01/05/509731.aspx" rel="nofollow">http://blogs.msdn.com/larryosterman/archive/2006/01/05/509731.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

