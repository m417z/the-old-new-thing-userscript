<html>
<head>
<title>Why does each drive have its own current directory?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does each drive have its own current directory?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 11, 2010 / year-entry #289</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>39</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Dean Earley asks, "Why is there a 'current directory' AND an current drive? Why not merge them?" Pithy answer: Originally, each drive had its own current directory, but now they don't, but it looks like they do. Okay, let's unwrap that sentence. You actually know enough to answer the question yourself; you just have...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Commenter Dean Earley asks,
"<a HREF="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#1816690"
>Why is there a 'current directory' AND an current drive</a>?
Why not merge them?"
</p>
<p>
Pithy answer:
Originally, each drive had its own current directory,
but now they don't, but it looks like they do.
</p>
<p>
Okay, let's unwrap that sentence.
You actually know enough to answer the question yourself;
you just have to put the pieces together.
</p>
<p>
Set the wayback machine to DOS&nbsp;1.0.
Each volume was represented by a drive letter.
There were no subdirectories.
This behavior was carried forward from CP/M.
</p>
<p>
Programs from the DOS&nbsp;1.0 era
didn't understand subdirectories;
they referred to files by just drive letter and file name,
for example,
<code>B:PROGRAM.LST</code>.
Let's fire up the assembler
(compilers were for rich people)
and assemble a program whose source code is on the A drive,
but sending the output to the B drive.
</p>
<table CELLPADDING=0 CELLSPACING=0>
<tbody>
<tr>
<td VALIGN=baseline><code>A&gt;asm foo</code></td>
<td>&nbsp; &nbsp; &nbsp;</td>
<td VALIGN=baseline ALIGN=right><i>the ".asm" extension on "foo" is implied</i></td>
</tr>
<tr>
<td VALIGN=baseline COLSPAN=3><code>Assembler version blah blah blah</code></td>
</tr>
<tr>
<td VALIGN=baseline COLSPAN=3><code>Source File: FOO.ASM</code></td>
</tr>
<tr>
<td VALIGN=baseline><code>Listing file [FOO.LST]: <u>NUL</u></code>
    </td>
<td></td>
<td VALIGN=baseline ALIGN=right><i><a HREF="http://blogs.msdn.com/oldnewthing/archive/2003/10/22/55388.aspx">throw away the listing file</a></i></td>
</tr>
<tr>
<td VALIGN=baseline><code>Object file [FOO.OBJ]: <u>B:</u></code></td>
<td></td>
<td VALIGN=baseline ALIGN=right><i>send the object file to drive B</i></td>
</tr>
</tbody>
</table>
<p>
Since we gave only a drive letter in response to the
<code>Object file</code> prompt,
the assembler defaults to a file name of <code>FOO.OBJ</code>,
resulting in the object file being generated as <code>B:FOO.OBJ</code>.
</p>
<p>
Okay, now let's introduce subdirectories into DOS&nbsp;2.0.
Suppose you have want to assemble <code>A:\SRC\FOO.ASM</code>
and put the result into
<code>B:\OBJ\FOO.OBJ</code>.
Here's how you do it:
</p>
<pre>
A&gt; B:
B&gt; CD \OBJ
B&gt; A:
A&gt; CD \SRC
A&gt; asm foo
Assembler version blah blah blah
Source File: FOO.ASM
Listing file [FOO.LST]: NUL
Object file [FOO.OBJ]: B:
</pre>
<p>
The assembler reads from <code>A:FOO.ASM</code> and writes
to <code>B:FOO.OBJ</code>,
but since the current directory is tracked on a per-drive basis,
the results are <code>A:\SRC\FOO.ASM</code> and
<code>B:\OBJ\FOO.OBJ</code> as desired.
If the current directory were not tracked on a per-drive basis,
then there would be no way to tell the assembler to put its
output into a subdirectory.
As a result,
DOS&nbsp;1.0 programs were effectively limited to operating on
files in the root directory,
which means that nobody would put files in subdirectories
(because their programs couldn't access them).
</p>
<p>
From a DOS&nbsp;1.0 standpoint, changing the current directory
on a drive performs the logical equivalent of changing media.
"Oh look, a completely different set of files!"
</p>
<p>
Short attention span.
</p>
<p>
Remembering the current directory for each drive has been preserved
ever since,
at least for batch files,
although there isn't actually such a concept as a <i>per-drive current
directory</i> in Win32.
In Win32, all you have is <i>a</i> current directory.
The appearance that each drive has its own current directory
is a fake-out by <code>cmd.exe</code>, which uses
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2010/05/06/10008132.aspx">
strange environment variables</a>
to create the illusion to batch files that each
drive has its own current directory.
</p>
<p>
Dean continues,
"Why not merge them?
I have to set both the dir and drive if i want a specific working dir."
</p>
<p>
The answer to the second question is, "They already are merged.
It's <code>cmd.exe</code> that tries to pretend that they aren't."
And if you want to set the directory and the drive from the command
prompt or a batch file, just use the <code>/D</code> option to the
<code>CHDIR</code> command:
</p>
<pre>
D:\&gt; CD /D C:\Program Files\Windows NT
C:\Program Files\Windows NT&gt; _
</pre>
<p>
(Notice that the <code>CHDIR</code> command lets you omit quotation
marks around paths which contain spaces:
Since the command takes only one path argument,
the lack of quotation marks does not introduce ambiguity.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (39)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-866583">
				<div id="div-comment-866583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tor Lillqvist</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866583">
			October 11, 2010 at 7:26 am</a>		</div>

		<p>Doesn&#39;t the Win32 subsystem also keep track of the per-drive current directory, not just cmd.exe? How else can one pass drive-relative file names to CreateFile()?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866593">
				<div id="div-comment-866593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clovis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866593">
			October 11, 2010 at 7:32 am</a>		</div>

		<p>You can echo these if you want: &#39;echo %=c:%&#39; works just fine.</p>
<p>The clever thing about using the equals prefix for these magic variables is that you can&#39;t set them with the &#39;set&#39; command because the equals is taken as a token separator so the syntax is wrong &#8211; set believes the variable name is missing. That removes the need for a chunk of code in cmd.exe that would have to add tracking to these magic variables so setting them did exactly what cd does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866613">
				<div id="div-comment-866613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigorievv</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866613">
			October 11, 2010 at 7:35 am</a>		</div>

		<p>@Tor:</p>
<p>And GetFullPathName uses them, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866603">
				<div id="div-comment-866603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866603">
			October 11, 2010 at 7:35 am</a>		</div>

		<p>TL;DR version of this post: Legacy compatibility :)</p>
<p>MS-DOS batch files or programs will expect a current directory on every drive, thus you need one.</p>
<p>Though I personally find it useful (or maybe I&#39;m just used to it from the MS-DOS days) for the command prompt to remember multiple places where I was so I can quickly switch between them. &nbsp;Trying to work on two different directories on the same drive quickly becomes annoying having to type out the full path name for every command, even with tab completion helping.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866623">
				<div id="div-comment-866623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ShuggyCoUk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866623">
			October 11, 2010 at 7:56 am</a>		</div>

		<p>any relatively clean way to make CD be the equivalent of CD /D in cmd?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866633">
				<div id="div-comment-866633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866633">
			October 11, 2010 at 8:10 am</a>		</div>

		<p>Thanks for the tip! I&#39;ve wanted to change drive and directory for a long time but for some reason never thought to try &quot;help cd&quot; and find the switch. :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-866643">
				<div id="div-comment-866643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866643">
			October 11, 2010 at 8:12 am</a>		</div>

		<p>I didn&#39;t know about the /D parameter on Chdir either. &nbsp;Learn something new every day&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-866653">
				<div id="div-comment-866653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866653">
			October 11, 2010 at 8:19 am</a>		</div>

		<p>Dan: you can use subst to assign one of those directories a new drive letter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866663">
				<div id="div-comment-866663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter da Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866663">
			October 11, 2010 at 8:24 am</a>		</div>

		<p>It&#39;s a rotten shame Microsoft didn&#39;t think to copy the solution Cromemco came up with for dealing with file hierarchy issues using CP/M style commands. What they did was have a flat UNIX file system, and VMS style assigned symbols. So &quot;assign M: /a/source&quot; &quot;assign N: /b/destination&quot; and&#8230;</p>
<p>$ cd M:</p>
<p>$ pwd</p>
<p>/a/source</p>
<p>$ asm foo</p>
<p>Assembler version blah blah blah</p>
<p>Source File: FOO.ASM</p>
<p>Listing file [FOO.LST]: NUL</p>
<p>Object file [FOO.OBJ]: N:</p>
<p>Typically we had I: assigned to includes and L: assigned to the libs directory and passed to C80 and L80 on the command line.</p>
<p>This was BEFORE MS-DOS 2.x</p>
<div class="post">[<i>Yeah, it&#39;s a rotten shame nobody invented the SUBST command. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866673">
				<div id="div-comment-866673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866673">
			October 11, 2010 at 8:38 am</a>		</div>

		<p>Strange, I feel like I&#39;ve read that before. Time must be going the other way again &#8230;</p>
<p>@Peter da Silva</p>
<p>That&#39;s the very reason subst was invented. And join, for the other way around.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866683">
				<div id="div-comment-866683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866683">
			October 11, 2010 at 8:58 am</a>		</div>

		<p>@ShuggyCoUk: &nbsp;Yes, but it won&#39;t do what you want.</p>
<p>c:&gt;set cd=/d</p>
<p>c:&gt;cd d:test</p>
<p>c:&gt; &nbsp;[huh?]</p>
<p>c:&gt;d:</p>
<p>d:test&gt; [what the&#8230;?]</p>
<p>d:test&gt;c:</p>
<p>c:&gt;set cd=</p>
<p>c:&gt;cd /d d:test2</p>
<p>d:test2&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866693">
				<div id="div-comment-866693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866693">
			October 11, 2010 at 9:03 am</a>		</div>

		<p>@Rick C: what are you doing there? &nbsp;Setting an environment variable named cd isn&#39;t remotely the same thing as aliasing &#39;cd /d&#39; to be executed when the user types &#39;cd&#39; at the prompt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866703">
				<div id="div-comment-866703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cherry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866703">
			October 11, 2010 at 10:19 am</a>		</div>

		<p>I wonder who invented all those strange sytaxes. Why the hell does &#39;set &quot;&#39; (set, space, doublequote) show hidden env.vars like those =X: things? Or why does &#39;echo.&#39; print an empty line?</p>
<p>By the way, when I execute &#39;set &quot;&#39;, I also get an variable like that: &#39;=::=::&#39;. I wonder why it is there. I don&#39;t have a drive &#39;::&#39; on my computer (although it&#39;s possible however, due to a bug in mountvol: call mountvol without parameters and write down the ID of some volume. Then enter &#39;mountvol :: {the ID you just wrote down}&#39; and &#8211; baaam, you have a &#39;::&#39; drive. Try &#39;dir ::&#39;. Changing the drive letter won&#39;t work however. But the mountvol trick works with all chars, you can also create a drive ù: or 4: or even ^G:, where ^G is Ctrl+G, which will result in a beep.).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866713">
				<div id="div-comment-866713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866713">
			October 11, 2010 at 10:45 am</a>		</div>

		<p>It&#39;s an evolved language. It wasn&#39;t planed, designed or any of those fancy words. People sat down and wrote what they felt useful. Sometimes they documented what they did. Sometimes they didn&#39;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866733">
				<div id="div-comment-866733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RTM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866733">
			October 11, 2010 at 11:13 am</a>		</div>

		<p>@Peter da Silva:</p>
<p>Its a rotten shame no one reads the docs <a rel="nofollow" target="_new" href="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/subst.mspx?mfr=true" rel="nofollow">http://www.microsoft.com/&#8230;/subst.mspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866743">
				<div id="div-comment-866743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866743">
			October 11, 2010 at 11:13 am</a>		</div>

		<p>If you really wanted, you could probably port bash to win32 (no, I mean a native win32, not cygwin) and get different syntax. Despite all appearances, you aren&#39;t actually tied to the nasty mess that is cmd.exe</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866753">
				<div id="div-comment-866753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866753">
			October 11, 2010 at 11:42 am</a>		</div>

		<p>@Cherry:</p>
<p>set &quot;foo&quot; displays all environment variables starting with foo. So set &quot;&quot; displays everything. And a missing end quotation mark is ignored.</p>
<p>I do wonder if the behavior to show the hidden variables is an intended feature or a just a side effect of the implementation, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866763">
				<div id="div-comment-866763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866763">
			October 11, 2010 at 11:58 am</a>		</div>

		<p>@Cooney</p>
<p>Isn&#39;t bash already ported to Win32 via MinGW?</p>
<p>On the other hand, I think I&#39;ll stick with cmd and PowerShell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866773">
				<div id="div-comment-866773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">daev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866773">
			October 11, 2010 at 12:00 pm</a>		</div>

		<p>Drive current directories lead to the interesting case of drive-relative paths; if the current path on drive D: is OBJ, then feeding CMD.EXE a path like &quot;D:FOO.ASM&quot; causes it to refer to &quot;D:OBJFOO.ASM&quot;. &nbsp;If you&#39;re working extensively with two directories, you can SUBST one of them to a drive letter and use drive-relative paths to keep your commands short and simple.</p>
<p>This does lead to an interesting ambiguity. &nbsp;Since the colon was later used for Alternate Data Streams, how should one interpret the path &quot;D:FOO.ASM&quot; in an environment where the current directory has a file named &quot;D&quot;? &nbsp;It could be the ADS &quot;FOO.ASM&quot; in file D, or a drive-relative path on drive D:.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866793">
				<div id="div-comment-866793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866793">
			October 11, 2010 at 12:21 pm</a>		</div>

		<p>@daev</p>
<p>It also leads to another interesting question: how do you put an alternate data stream on the root of a drive letter? &nbsp;&quot;D::stream&quot;? &nbsp;Or does that mean the named stream attached to the current directory on D:?</p>
<p>I think I ran into this weirdness before. &nbsp;Maybe you had to introduce a  (&quot;d::stream&quot;) for that case.</p>
<p>I guess for your case (a file called &quot;D&quot;) you can make it unambiguous by specifying an absolute path (&quot;C:Food:stream&quot;).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866803">
				<div id="div-comment-866803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">benjamin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866803">
			October 11, 2010 at 12:26 pm</a>		</div>

		<blockquote><p>
  just use the /D option
</p></blockquote>
<p>Allow me to quote Chris Tucker and Ice Cube when I say &quot;Daaaamn!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866813">
				<div id="div-comment-866813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866813">
			October 11, 2010 at 12:46 pm</a>		</div>

		<p>@Marquess: IIRC, the MinGW bash is actually a cygwin bash with the cygwin bits statically linked in.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866823">
				<div id="div-comment-866823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866823">
			October 11, 2010 at 12:56 pm</a>		</div>

		<p>@ShuggyCoUk: You could use a Doskey macro to alias &quot;CD=CD /D&quot;. &nbsp;I made an alias file:</p>
<p>CD=CD /D $*</p>
<p>and then made a .cmd script:</p>
<p>DOSKEY.EXE /MACROFILE=&quot;%USERPROFILE%alias&quot;</p>
<p>and then set the registry key:</p>
<p>HKEY_CURRENT_USERSoftwareMicrosoftCommand ProcessorAutoRun</p>
<p>set to invoke that script whenever I open a command prompt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-866843">
				<div id="div-comment-866843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866843">
			October 11, 2010 at 1:20 pm</a>		</div>

		<p>To see all the magic environment variables:</p>
<blockquote><p>
  set &quot;&quot; | findstr ^^=
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866853">
				<div id="div-comment-866853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gibwar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866853">
			October 11, 2010 at 5:43 pm</a>		</div>

		<p>@ShuggyCoUk, Rick C, James: Instead of finding a way to control the &quot;cd&quot; command, you can use the &quot;pushd&quot; and &quot;popd&quot; commands. They&#39;ll work cross drive letters, set those special command prompt variables, and provide the added ability to walk backward the directory stack.</p>
<p>Very useful for batch files to quickly move to a new location, and get back to your original one regardless where it is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866863">
				<div id="div-comment-866863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866863">
			October 11, 2010 at 6:09 pm</a>		</div>

		<p>@Brian G: &nbsp;Actually, many DOS commands let you set a variable with the same name as the command, which the command then uses as default options. &nbsp;CD appears to be one of them, since the behavior is different depending on whether or not there&#39;s an environment variable.</p>
<p>@gibwar: &nbsp;I used pushd and popd all the time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866873">
				<div id="div-comment-866873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866873">
			October 11, 2010 at 7:08 pm</a>		</div>

		<p>In 360KB-floppy-disk-only days, it was quite common for the A: drive to have your program, and the B: drive for your data. It makes sense to have drive-specific current directories for that scenario.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866783">
				<div id="div-comment-866783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866783">
			October 11, 2010 at 12:15 pm</a>		</div>

		<p>The win32 functions [GetFullPathName and thereby everything else] do recognize these variables &#8211; and the documentation suggests that SetCurrentDirectory *ought* to set them [though in fact it doesn&#39;t, but the CRT chdir function does]. What&#39;s lacking is any [documented &#8211; I mean, it&#39;s obvious enough what effect SetEnvironmentVariable is likely to have on the present implementation] way to set it _without_ changing the drive at the same time.</p>
<p>Also, the real current directory is more, er, real &#8211; since it&#39;s an open handle rather than simply a stored pathname.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866833">
				<div id="div-comment-866833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866833">
			October 11, 2010 at 12:59 pm</a>		</div>

		<p>@Coney: &quot;If you really wanted, you could probably port bash to win32 (no, I mean a native win32, not cygwin) and get different syntax. Despite all appearances, you aren&#39;t actually tied to the nasty mess that is cmd.exe&quot;</p>
<p>Of course, that ties you to the nasty mess that is Bash. *Maybe* slightly less nasty than cmd, and certainly nasty in different ways, but still most decidedly quite nasty.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866893">
				<div id="div-comment-866893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tor Lillqvist</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866893">
			October 12, 2010 at 12:57 am</a>		</div>

		<p>@Marquess, @James: You are confusing MSYS and MinGW. They are separate things, even if often used together.</p>
<p>MSYS is a fork of an earlier version of Cygwin, and thus a POSIX emulation layer, with some special features to make interoperability with &quot;native&quot; Win32 programs easier. MSYS does include the bash shell.</p>
<p>MinGW is the gcc compiler and related tools. They are normal &quot;pure&quot; Win32 programs, and can be used with no MSYS or other POSIX emulation involved in any way, if you want to.</p>
<p>As far as I know, POSIX shells like bash would be virtually impossible to meaningfully port to &quot;pure&quot; Win32, without ifdeffing out most reasons to use it, I mean.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866903">
				<div id="div-comment-866903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/members/Px_5F00_x64/' rel='external nofollow' class='url'>px@i.kiev.ua</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866903">
			October 12, 2010 at 1:35 am</a>		</div>

		<blockquote><p>
  [Yeah, it&#39;s a rotten shame nobody invented the SUBST command. -Raymond]
</p></blockquote>
<p>Not command, but tool ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866913">
				<div id="div-comment-866913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866913">
			October 12, 2010 at 2:02 am</a>		</div>

		<p>What bugs me more is that the current directory is a per-process variable and not a per-thread variable.</p>
<p>One could argue compatibility, but it was worked around for the locale (with _configthreadlocale)&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866923">
				<div id="div-comment-866923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866923">
			October 12, 2010 at 2:19 am</a>		</div>

		<p>@Miral:</p>
<p>echo has always been an internal command with special treatment.</p>
<p>MS-DOS 3.3 fixes the file extension when invoking a command so that:</p>
<p>C:&gt; program. asdf</p>
<p>Is the same as</p>
<p>C:&gt; program.com asdf</p>
<p>Or:</p>
<p>C:&gt; program.dsflkjaoreiu asdf</p>
<p>Or:</p>
<p>C:&gt; program:sdf asdf</p>
<p>However, the same command line is passed to the program:</p>
<p>&quot; asdf&quot;</p>
<p>MS-DOS &gt;= 4 don&#39;t recognize this syntax anymore</p>
<p>C:&gt; program.</p>
<p>-&gt; Bad command or filename</p>
<p>Test program:</p>
<p>.model tiny</p>
<p>.code</p>
<p>org 100h</p>
<p>start:</p>
<p>mov bx,1</p>
<p>xor cx,cx</p>
<p>mov cl,[ds:80h]</p>
<p>mov ah, 40h</p>
<p>mov dx,81h</p>
<p>int 21h</p>
<p>ret</p>
<p>end start</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866933">
				<div id="div-comment-866933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">I.D.GUY</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866933">
			October 12, 2010 at 2:52 am</a>		</div>

		<p>HI I CAN MAKE ANYONE A I.D. THAT WILL SCAN AND HAVE HOLOGRAM, AND IT WILL PASS ALL UV LIGHT TEST. YOU WILL BE ABLE TO USE THIS I.D. ANYWHERE AT THE BARS,CLUBS,STORES,AND BANKS. THIS WILL BE A FLAWLESS I.D. COMING FROM ME IF YOU WANT MORE INFORMATION EMAIL <a href="http://www.onguardonline.gov/topics/phishing.aspx" rel="nofollow"><span style="color:red;"><a href="mailto:SPAM@UCE.GOV">SPAM@UCE.GOV</a></span></a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866883">
				<div id="div-comment-866883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866883">
			October 11, 2010 at 9:01 pm</a>		</div>

		<p>Regarding the echo. thing &#8212; it&#39;s all to do with quirks of the command line processor. &nbsp;See, back in ye olde days when you had COM files and the command line was passed in the 127 bytes of the PSP reserved for it, it so happened that the first byte of that space was the separator between the command and the rest of the arguments. &nbsp;Since this was almost always a space, most programs ignored it and just used the remaining 126 bytes as the command line. &nbsp;But it did mean that there was a difference between &quot;echo&quot; and &quot;echo.&quot; and &quot;echo .&quot; &#8212; the command lines received were different in all three cases, and the defined behaviours were &quot;display whether echo is on or off&quot;, &quot;display nothing followed by a newline&quot;, and &quot;display a dot followed by a newline&quot;.</p>
<p>But why did it &quot;display nothing&quot; in the second case? &nbsp;Because the command line wasn&#39;t empty (so it wasn&#39;t supposed to show whether echo was on or not) but the text to display (starting from the *second* character of the command line &#8212; remembering that the separator character gets skipped) was empty. &nbsp;In fact it didn&#39;t really matter what that separator character was, as long as DOS regarded as the end of the command &#8212; you could use &quot;echo:&quot; or any of quite a few variations. &nbsp;People just settled on &quot;echo.&quot; because it was the least obtrusive. &nbsp;Yes, it&#39;s a bit silly, but once &quot;echo&quot; was defined to produce some other output (and using quotes was defined to display those quotes) then there wasn&#39;t much else that could be done.</p>
<p>And @Rick C: The %CD% environment variable contains the current working folder (provided it hasn&#39;t been redefined), not parameters that change the behaviour of the CD command. &nbsp;To be consistent, that latter one would have been CDCMD, but that doesn&#39;t work. &nbsp;Probably because it would break a lot of batch files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866943">
				<div id="div-comment-866943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clovis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-866943">
			October 12, 2010 at 5:31 am</a>		</div>

		<p>Because I.D.GUY&#39;s post is in upper case and I have the attention span of a moth, it has become the most important and useful thing I have read today. I&#39;ve already emailed all my bank details and a photo showing where I keep the spare door key and I look forward to having my very own HOLOGRAM.</p>
<p>What were we talking about again?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-867013">
				<div id="div-comment-867013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-867013">
			October 12, 2010 at 9:25 am</a>		</div>

		<p>@Miral: &nbsp;I didn&#39;t know if CD supported that syntax, I just decided to try it and see&#8230;and it turns out not to work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-867113">
				<div id="div-comment-867113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian G.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-867113">
			October 12, 2010 at 3:50 pm</a>		</div>

		<p>@Rick C: well there&#39;s the useful thing that *I* learned today! &nbsp;Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-867593">
				<div id="div-comment-867593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101011-00/?p=12563#comment-867593">
			October 15, 2010 at 11:22 am</a>		</div>

		<p>It&#39;s even more interesting in Windows NT: In the NT kernel, there is no such concept as current directory. &nbsp;The current directory is faked in user mode by kernel32.dll and ntdll.dll. &nbsp;It does this by holding an open file handle to the directory logically represented as the current directory, and setting up child processes to inherit this handle.</p>
<p>When you open a file in NT, you eventually call NtCreateFile (see ZwCreateFile in Windows Driver Kit). &nbsp;The OBJECT_ATTRIBUTES structure contains a RootDirectory field. &nbsp;If you put a file handle to a directory in the RootDirectory field, the filename you specify will be interpreted relative to that directory. &nbsp;kernel32.dll thus implements current-directory-relative filenames by passing the current directory handle as the RootDirectory field.</p>
<p>Linux buffs may recognize this mechanism as the &quot;*at&quot; series of file calls: openat, chmodat, unlinkat&#8230; &nbsp;Another feature that NT got before Linux. =)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

