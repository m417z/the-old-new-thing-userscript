<html>
<head>
<title>Customizing item enumeration with IShellItem</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Customizing item enumeration with IShellItem</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 26, 2015 / year-entry #18</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you are using the original IShell­Folder interface, then you can use SHCONTF values to customize how child items are enumerated. But what if you're using IShell­Item? Let's take it one step at a time. First, the basic program. (Remember, Little Programs do little to no error checking.) #define UNICODE #define _UNICODE #define STRICT #define...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
If you are using the original
<code>IShell&shy;Folder</code> interface,
then
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/03/17/10508309.aspx">
you can use <code>SHCONTF</code> values to customize
how child items are enumerated</a>.
But what if you're using <code>IShell&shy;Item</code>?
</p>
<p>
Let's take it one step at a time.
First, the basic program.
(Remember, Little Programs do little to no error checking.)
</p>
<pre>
#define UNICODE
#define <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/02/12/71851.aspx">_UNICODE</a>
#define STRICT
#define <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/01/24/10387757.aspx">STRICT_TYPED_ITEMIDS</a>
#include &lt;windows.h&gt;
#include &lt;shlobj.h&gt;
#include &lt;atlbase.h&gt;
#include &lt;atlalloc.h&gt;
#include &lt;propsys.h&gt;
#include &lt;stdio.h&gt;

int __cdecl wmain(int argc, wchar_t **argv)
{
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/05/20/135841.aspx">CCoInitialize</a> init;

 if (argc &lt; 2) return 0;
 CComPtr&lt;IShellItem&gt; spsiFolder;
 SHCreateItemFromParsingName(argv[1], nullptr,
                             IID_PPV_ARGS(&amp;spsiFolder));

 CComPtr&lt;IEnumShellItems&gt; spesi;
 spsiFolder-&gt;BindToHandler(nullptr, BHID_EnumItems,
                              IID_PPV_ARGS(&amp;spesi));

 for (CComPtr&lt;IShellItem&gt; spsi;
      spesi-&gt;Next(1, &amp;spsi, nullptr) == S_OK;
      spsi.Release()) {
  <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/30/10202076.aspx">PrintDisplayName</a>(spsi, SIGDN_NORMALDISPLAY, L"Display Name");
  PrintDisplayName(spsi, SIGDN_FILESYSPATH, L"File system path");
  wprintf(L"\n");
 }
 return 0;
}
</pre>
<p>
Run this program with the fully-qualified path to a directory
as the command line argument, and it enumerates all the items
in the folder.
This uses the default enumeration, which is "include both folders
and non-folders, and include hidden items,
but not super-hidden items."
</p>
<p>
But what if we want to customize the enumeration?
</p>
<p>
We saw that
the <code>IBindCtx</code> parameter
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2015/01/22/10587918.aspx">
acts as a catch-all <i>options</i> parameter</a>.
In this case, we need to look at the options available for
<code>BHID_<wbr>Enum&shy;Items</code> and see if any of them
help us.
</p>
<p>
Fortunately, we have
<code>STR_<wbr>ENUM_<wbr>ITEMS_<wbr>FLAGS</code>
which lets us override the default enumeration mode.
Let's say that we want only folders, and we want to respect the
user's preferences for hidden items (which means that we omit
<code>SHCONTF_<wbr>HIDDEN</code>).
</p>
<p>
I'm goint to do this two ways.
First the flat version:</p>
<p>
<pre>
 ...
 <font COLOR=blue>CComPtr&lt;IBindCtx&gt; spbcEnum;
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2015/01/23/10588226.aspx">CreateDwordBindCtx</a>(STR_ENUM_ITEMS_FLAGS, SHCONTF_FOLDERS,
                    &amp;spbcEnum);</font>

 CComPtr&lt;IEnumShellItems&gt; spesi;
 spsiFolder-&gt;BindToHandler(<font COLOR=blue>spbcEnum</font>, BHID_EnumItems,
                              IID_PPV_ARGS(&amp;spesi));
</pre>
<p>
Now the fluent version:
</p>
<pre>
 ...
 <font COLOR=blue><a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2015/01/23/10588226.aspx">CBindCtxBuilder</a> builder;
 builder.SetVariantDword(STR_ENUM_ITEMS_FLAGS, SHCONTF_FOLDERS);</font>

 CComPtr&lt;IEnumShellItems&gt; spesi;
 spsiFolder-&gt;BindToHandler(<font COLOR=blue>builder.GetBindCtx()</font>, BHID_EnumItems,
                              IID_PPV_ARGS(&amp;spesi));
</pre>
<p>
(Don't forget that error checking has been elided for expository purposes.)
</p>
<p>
The
<code>STR_<wbr>ENUM_<wbr>ITEMS_<wbr>FLAGS</code>
bind context string was added in Windows&nbsp;8,
so it has no effect on older versions of Windows.
We'll address this next week.
</p>
<p>
Note that the
<code>IEnum&shy;Shell&shy;Items</code> interface is incorrectly-named.
The convention for enumeration interfaces is to name them
<code>IEnum&shy;XXX</code>, where XXX is <i>singular</i>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1172803">
				<div id="div-comment-1172803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833#comment-1172803">
			January 26, 2015 at 3:57 pm</a>		</div>

		<p>I wrote one myself earlier.</p>
<p>But my current challenge is to customize all icons that shell displays with a replacement from a local resource. (You already wrote about this.) The current belief in my workplace is that we can gain a market edge if we use a custom shared library containing the Crystal Clear icons to improve the visuals of our program, especially because Windows 10 icons are hideous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1172823">
				<div id="div-comment-1172823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833#comment-1172823">
			January 27, 2015 at 2:42 am</a>		</div>

		<p>@Fleet Command: Assuming you mean Windows 10 Technical Preview build 9926 icons, then I agree, they definitely look worse than the previous build. (And I don&#39;t like what they&#39;ve done to the start menu either; I had to pin RDC to the taskbar as a workaround.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1172833">
				<div id="div-comment-1172833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nikos z</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833#comment-1172833">
			January 27, 2015 at 6:09 am</a>		</div>

		<p>does this work for SHCONTF_INCLUDESUPERHIDDEN in windows 8?</p>
<div class="post">[<em>What makes you think it wouldn&#39;t? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1172923">
				<div id="div-comment-1172923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nikos z</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833#comment-1172923">
			January 27, 2015 at 10:03 am</a>		</div>

		<p>Before you mentioned this magic bind context, item enumeration in windows 8 was &quot;broken&quot; in terms of superhidden files. I will try this new approach and as you say it should work &#8212; thanks!</p>
<p>It looks like IShellItem enumeration is basically built on top of traditional IShellFolder enumeration. This would mean that working with IShellItems is perhaps not the most efficient way, if one is looking for maximum speed and efficiency, right? I am working on a desktop search engine (<a href="http://zabkat.com/blog/deskrule-desktop-indexed-search-engine.htm" rel="nofollow" target="_new">zabkat.com/&#8230;/deskrule-desktop-indexed-search-engine.htm</a>) and speed is of the essense</p>
<div class="post">[<em>All the bind context does is let you customize the shcontf passed to IShellFolder::EnumObjects. If there&#39;s a problem with IShellFolder::EnumObjects, that&#39;s a separate issue unrelated to IShellItem. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1173073">
				<div id="div-comment-1173073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150126-00/?p=44833#comment-1173073">
			January 28, 2015 at 7:09 am</a>		</div>

		<p>@Neil: Well, at my workplace, what I like or dislike doesn&#39;t matter. It is my boss that matters.</p>
<p>I have no personal comment on Windows 10 in this blog, but I&#39;d like to say Crystal Clear by EC rocks!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

