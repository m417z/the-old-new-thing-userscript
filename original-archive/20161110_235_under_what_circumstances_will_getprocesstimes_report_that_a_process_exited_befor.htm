<html>
<head>
<title>Under what circumstances will GetProcessTimes report that a process exited before it was created?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Under what circumstances will GetProcessTimes report that a process exited before it was created?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 10, 2016 / year-entry #236</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If it hasn't exited yet.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that their automation started reporting
strange values:
</p>
<pre>
HANDLE process = ...;
FILETIME creation, exit, kernel, user;
if (GetProcessTimes(process, &amp;creation,
                    &amp;exit, &amp;kernel, &amp;user))
{
   // use the values of creation, exit, kernel, and user
}
</pre>
<p>
Their test automation reported that the process had an
exit time <i>earlier</i> than its creation time.
How is this even possible?
This apparent violation of causality was causing their
automation to stop working.
</p>
<p>
If you take a closer look at
<a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/ms683223(v=vs.85).aspx">
the documentation for
<code>Get&shy;Process&shy;Times</code></a>,
it says for the <code>lpExit&shy;Time</code> parameter:
</p>
<blockquote CLASS=q><p>
If the process has not exited,
the content of this structure is undefined.
</p>
</blockquote>
<p>
What probably is happening is that the process being monitored
has not yet exited,
so the exit time is undefined.
The undefined value might be less than the creation time.
It might be greater than the creation time.
Heck, if you're really (un)lucky, it might even be <i>equal</i>
to the creation time.
</p>
<p>
My guess is that the "undefined" result is coming from uninitialized
stack garbage,
and the nature of uninitialized stack garbage is that while it
is unpredictable,
it can also often be consistent over short stretches.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1272806">
				<div id="div-comment-1272806" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cezary</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272806">
			November 10, 2016 at 7:29 am</a>		</div>

		<p>FILETIMEs are not based on a monotonic timebase, so a NTP step at just the right time could also account for that, no?  (Yes, NTP prefers gradual ramp changes and not steps for just this reason, but sometimes you have a step.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1272807">
				<div id="div-comment-1272807" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272807">
			November 10, 2016 at 8:02 am</a>		</div>

		<p>Sorry for the off-topic comment &#8212; Happy 33rd Birthday to Windows 1.0!</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1272815">
				<div id="div-comment-1272815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272815">
			November 10, 2016 at 8:03 am</a>		</div>

		<p>That is, it was 33 years ago that billg announced Windows 1.0 to the world &#8212; not when it shipped.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt depth-2 parent" id="comment-1272825">
				<div id="div-comment-1272825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272825">
			November 10, 2016 at 8:04 am</a>		</div>

		<p>&gt; 33rd Birthday&#8230;</p>
<p>That should be &#8220;Happy 0x21st Birthday&#8221;. Hit the bars!</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1272865">
				<div id="div-comment-1272865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272865">
			November 10, 2016 at 9:56 am</a>		</div>

		<p>I like your way of thinking!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1272845">
				<div id="div-comment-1272845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272845">
			November 10, 2016 at 8:49 am</a>		</div>

		<p>The undefined process exit time might be January 1, 1980, and it will match the file creation times that you mentioned a couple of days ago!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1272855">
				<div id="div-comment-1272855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">George</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272855">
			November 10, 2016 at 9:37 am</a>		</div>

		<p>It&#8217;s not like there seems to be a method that you can call that would give Process state, is there?  If you got the handle to the process as close as is shown in the sample code, it would be highly unlikely, but somewhat of a race condition, for the &#8216;exitFileTime&#8217; parameter to have been set.  And if you had to call 2 different methods to learn this, there would be an inherent race condition.  There might (or might not) be some hope in initializing the FILETIME exit structure to some value, and test whether it has been changed by calling GetProcessTimes, to attempt to learn all of this in one method call.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1272875">
				<div id="div-comment-1272875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272875">
			November 10, 2016 at 10:09 am</a>		</div>

		<p>GetProcessExitCode() can be used to find out if a process is still running. It returns 254 (STILL_ACTIVE) if it is not exited yet.</p>
<p>&#8230;of course there is nothing to stop a process returning 254 as its exit code though&#8230;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-jeremytais even depth-3 parent" id="comment-1272895">
				<div id="div-comment-1272895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272895">
			November 10, 2016 at 10:35 am</a>		</div>

		<p>You can check if a process is still running by<br />
    WaitForSingleObject(, 0) == WAIT_TIMEOUT // Little Program error checking warning here, unless you turned on CrashMyProcessWhenInvalidHandlesAreUsed.</p>
<p>While the race condition cannot be fully avoided, if you call WaitForSingleObject first then things will be fine since you will assume that the exit time is invalid.  At least this is a safe race condition.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4 parent" id="comment-1272915">
				<div id="div-comment-1272915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272915">
			November 10, 2016 at 11:14 am</a>		</div>

		<p>The handle remains valid until you close it, so there is no race condition on the handle. There is a race condition on the exit state, but that race is pre-existing because app could exit immediately after you call GetProcessTime.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1272946">
				<div id="div-comment-1272946" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272946">
			November 10, 2016 at 3:50 pm</a>		</div>

		<p>I don&#8217;t see the race condition. Call GetExitCodeProcess() then call GetProcessTime(). If GetExitCodeProcess() returned STILL_ACTIVE ignore the value shoved into lpExitTime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1272975">
				<div id="div-comment-1272975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272975">
			November 10, 2016 at 7:03 pm</a>		</div>

		<p>@Joshua The race condition is that you might be ignoring a valid value because the process actually exited right in between the calls. That there is a race condition is inarguable, as there is no single, atomic function that tells you definitively whether the process is running *and* what its exit code is, if applicable. The question is whether it is okay to potentially, in very rare cases, treat an exited process&#8217; GetProcessTimes results as though they came from a live process. To me, intuitively, the answer would seem generally to be &#8220;yes&#8221;. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1272905">
				<div id="div-comment-1272905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">George</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272905">
			November 10, 2016 at 10:42 am</a>		</div>

		<p>Apparently, it&#8217;s GetExitCodeProcess, NOT GetProcessExitCode.  And the correct value for STILL_ACTIVE seems to be 259, not 254, unless the MSDN article on that function is not correct.  And having to use a separate function to query status leaves a race condition between getting status and getting process times (or vice versa.)  Best you could do with that is to check GetExitCodeProcess, query for process times, GetExitCodeProcess again, and use the times if and  only if the two status codes were the same.</p>
<p>In an automation controller, you are probably looping thru a largeish list of processes that the controller likely started to see if they have ended yet.  So either you need to spin up a bunch of threads to wait one per process, or poll efficiently.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4 parent" id="comment-1272916">
				<div id="div-comment-1272916" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272916">
			November 10, 2016 at 11:15 am</a>		</div>

		<p>You&#8217;re working too hard. GetProcessTime already has an inherent race condition. GetExitCodeProcess does nothing to address the race condition inherent in GetProcessTime.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1272957">
				<div id="div-comment-1272957" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272957">
			November 10, 2016 at 6:56 pm</a>		</div>

		<p>Assuming you check for the process having exited *before* retrieving the times, the worst case for the race condition is that you don&#8217;t use the exit time for a process that exited only a few nanoseconds ago. If the call and process exit had happened in the other order, it would have been meaningless data anyway. I&#8217;d venture that a program that handles both cases can handle getting the data the next time it tries. It&#8217;s a little bit like a speed of light constraint on communication &#8212; one way to look at it is that the process *has* exited, but news of the exit hasn&#8217;t yet reached your app and its calls to WaitForSingleObject and GetProcessTimes. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1272965">
				<div id="div-comment-1272965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272965">
			November 10, 2016 at 6:59 pm</a>		</div>

		<p>Yes. You should NEVER use GetExitCodeProcess to determine *if* a process has exited. There&#8217;s a reason the function is called GetExitCodeProcess and not GetHasProcessExited. A still-running process gives a return value of STILL_RUNNING, but not vice versa. Always use WaitForSingleObject to test if a process is running &#8212; it can be made to return immediately with a zero millisecond timeout, as others have noted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1273146">
				<div id="div-comment-1273146" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1273146">
			November 12, 2016 at 12:54 pm</a>		</div>

		<p>Futhermore, process termination is not atomic. ExitProcess first sets exit code with NtTerminateProcess(NULL, ExitCode) &#8211; but this doesn&#8217;t actually terminate process, and only then process actually terminated with NtTerminateProcess(-1, ExitCode). So only WaitForSingleObject is guaranteed way to make sure process really terminated at some moment.<br />
PS: Above behaviour true for Windows till Win7. Didnt verify if its true for later versions.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1272885">
				<div id="div-comment-1272885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272885">
			November 10, 2016 at 10:12 am</a>		</div>

		<p>&#8220;It’s not like there seems to be a method that you can call that would give Process state, is there?&#8221; If WaitForSingleObject(process, 0) returns 0, the process has terminated. Of course, this is rarely useful since it would imply polling. Usually you just wait for termination.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1273145">
				<div id="div-comment-1273145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua A. Schaeffer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1273145">
			November 12, 2016 at 4:54 am</a>		</div>

		<p>&gt; Of course, this is rarely useful since it would imply polling.</p>
<p>This invites an old question of mine, maybe better for a Microsoft engineer: why is there no version of WaitForSingleObject() that sends a packet to an IOCP? It gets unsettling seeing threads doing nothing but waiting on 64 handles; that can&#8217;t possibly scale or integrate with the thread pool&#8217;s IOCP&#8230;and there seems to be a ton of transitions to convert that signalled object into a high-level work item. Or how about this&#8230; why can&#8217;t an IOCP handle be made to signal when it has a queued item? Sometimes you have to use an IOCP for job notifications, but you don&#8217;t want to have a dedicated thread pumping it.</p>
<p>I&#8217;m getting off-track but I blended it in as best I could. :)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1272886">
				<div id="div-comment-1272886" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272886">
			November 10, 2016 at 10:24 am</a>		</div>

		<p>And here I thought it was time for a daylights savings reminder. Because I bet that changing the system clock will allow this insanity.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman even depth-2 parent" id="comment-1272935">
				<div id="div-comment-1272935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272935">
			November 10, 2016 at 12:05 pm</a>		</div>

		<p>Now that you mentioned it, we didn&#8217;t get our usual semi-annual &#8220;daylight saving time change&#8221; OldNewThing article about handling time in Windows. Perhaps Raymond has run out of  ideas for articles on that topic, or he just forgot. Similarly, the quarterly link clearance posts are no longer quarterly.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1272995">
				<div id="div-comment-1272995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272995">
			November 11, 2016 at 7:03 am</a>		</div>

		<p>Ask for a refund.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1272955">
				<div id="div-comment-1272955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frank</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161110-00/?p=94685#comment-1272955">
			November 10, 2016 at 5:15 pm</a>		</div>

		<p>UB causing time travel again.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

