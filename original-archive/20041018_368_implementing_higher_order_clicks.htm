<html>
<head>
<title>Implementing higher-order clicks</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Implementing higher-order clicks</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 18, 2004 / year-entry #369</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>35</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Another question people ask is "How do I do triple-click or higher?" Once you see the algorithm for double-clicks, extending it to higher order clicks should be fairly natural. The first thing you probably should do is to remove the CS_DBLCLKS style from your class because you want to do multiple-click management manually. Next, you...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Another question people ask is "How do I do triple-click or higher?"
Once you see
<a HREF="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/aboutmouseinput.asp">
the algorithm for double-clicks</a>, extending it to higher
order clicks should be fairly natural.  The first thing you probably
should do is to remove the <code>CS_DBLCLKS</code> style from your class because
you want to do multiple-click management manually.
</p>
<p>
Next, you can simply reimplement the same algorithm that the
window manager uses, but take it to a higher order than just two.
Let's do that.  Start with a clean
<a HREF="/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a> and add the following:
</p>
<pre>
int g_cClicks = 0;
RECT g_rcClick;
DWORD g_tmLastClick;

void OnLButtonDown(HWND hwnd, BOOL fDoubleClick,
                   int x, int y, UINT keyFlags)
{
  POINT pt = { x, y };
  DWORD tmClick = GetMessageTime();

  if (!PtInRect(&amp;g_rcClick, pt) ||
      tmClick - g_tmLastClick &gt; GetDoubleClickTime()) {
    g_cClicks = 0;
  }
  g_cClicks++;

  g_tmLastClick = tmClick;
  SetRect(&amp;g_rcClick, x, y, x, y);
  InflateRect(&amp;g_rcClick,
              GetSystemMetrics(SM_CXDOUBLECLK) / 2,
              GetSystemMetrics(SM_CYDOUBLECLK) / 2);

  TCHAR sz[20];
  wnsprintf(sz, 20, TEXT("%d"), g_cClicks);
  SetWindowText(hwnd, sz);
}

void ResetClicks()
{
  g_cClicks = 0;
  SetWindowText(hwnd, TEXT("Scratch"));
}

void OnActivate(HWND hwnd, UINT state, HWND, BOOL)
{
  ResetClicks();
}

void OnRButtonDown(HWND hwnd, BOOL fDoubleClick,
                   int x, int y, UINT keyFlags)
{
  ResetClicks();
}

    HANDLE_MSG(hwnd, WM_LBUTTONDOWN, OnLButtonDown);
    HANDLE_MSG(hwnd, WM_ACTIVATE, OnActivate);
</pre>
<p>
[Boundary test for double-click time corrected 10:36am.]
</p>
<p>
(Our scratch program doesn't use the <code>CS_DBLCLKS</code> style,
so we didn't need to remove it - it wasn't there to begin with.)
</p>
<p>
The basic idea here is simple:  When a click occurs, we see
if it is in the "double-click zone" and has occurred within
the double-click time.  If not, then we reset the consecutive
click count.
</p>
<p>
(Note that the SM_CXDOUBLECLK and SM_CYDOUBLECLK values are the
width of the entire rectangle, so we cut it in half when inflating
so that the rectangle extends halfway in either direction.
Yes, this means that a pixel is lost if the double-click width is
odd, but Windows has been careful always to set the value to
an even number.)
</p>
<p>
Next, we record the coordinates and time of the current click
so the next click can compare against it.
</p>
<p>
Finally, we react to the click by putting the consecutive click
number in the title bar.
</p>
<p>
There are some subtleties in this code.
First, notice that setting <code>g_cClicks</code> to zero
forces the next click to be treated as the first
click in a series, for regardless of whether it matches the
other criteria, all that will happen is that the click count
increments to 1.
</p>
<p>
Next, notice that the way we test whether the clicks occurred
within the double click time was done in a manner that is not
sensitive to timer tick rollover.  If we had written</p>
<p>
<pre>
      <font COLOR=red>tmClick &gt; g_tmLastClick + GetDoubleClickTime()</font>) {
</pre>
<p>
then we would fail to detect multiple clicks
 properly near the timer tick rollover.
(Make sure you understand this.)
</p>
<p>
Third, notice that we reset the click count when the
window gains or loses activation.
That way, if the user
clicks, then switches away, then switches back, and then
clicks again, that is not treated as a double-click.
We do the same if the user clicks the right mouse button in between.
(You may notice that few programs bother with quite this much subtlety.)
</p>
<p>
Exercise:  Suppose your program isn't interested in anything
beyond triple-clicks.  How would you change this program in
a manner consistent with the way the window manager stops at
double-clicks?</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-218483">
				<div id="div-comment-218483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218483">
			October 18, 2004 at 7:31 am</a>		</div>

		<p>This is nit-picking, but I don&#8217;t like the hit-test rectangle because it&#8217;s not symmetrical around the starting point, and the code is broken when SM_CXDOUBLECLK==1.  (Even if this can&#8217;t happen in practice, it&#8217;s still scruffy.)  You can fix both problems by inflating a 1&#215;1 rectangle rather than an empty rectangle.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218503">
				<div id="div-comment-218503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218503">
			October 18, 2004 at 8:05 am</a>		</div>

		<p>A more important question would be:</p>
<p>&quot;Does Raymond Chen know everything!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218513">
				<div id="div-comment-218513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218513">
			October 18, 2004 at 8:32 am</a>		</div>

		<p>Windows doesn&#8217;t make sure it&#8217;s an even number (hell, it doesn&#8217;t even make sure it&#8217;s a positive number) in the call to SystemParametersInfo.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218523">
				<div id="div-comment-218523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218523">
			October 18, 2004 at 8:36 am</a>		</div>

		<p>Raymond Chen forgot to make his rect bottom right exclusive? Ha, that sounds like a much needed blog entry. Dealing with bottom right exclusive rects in Win32 :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218533">
				<div id="div-comment-218533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Thresher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218533">
			October 18, 2004 at 8:43 am</a>		</div>

		<p>Is this what you wanted <a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/02/18/75652.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/02/18/75652.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218553">
				<div id="div-comment-218553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218553">
			October 18, 2004 at 8:50 am</a>		</div>

		<p>hmmm. isn&#8217;t that ironic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218563">
				<div id="div-comment-218563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthew Riley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218563">
			October 18, 2004 at 8:55 am</a>		</div>

		<p>g_rcClick is of indeterminate value the first time through this function and is passed to PtInRect before initialized&#8230; might this pose a problem?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218583">
				<div id="div-comment-218583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218583">
			October 18, 2004 at 9:10 am</a>		</div>

		<ol>
<li>Yes, the rectangle is asymmetric, but that&#8217;s how Windows has worked since 1983 and the goal here is to emulate the behavior not to fix it.
<p>2. asdf: I meant that the Windows control panels enforce the even-ness, not the API.</p>
<p>3. Matthew: One of the subtleties of the code is that it doesn&#8217;t matter what g_rcClick is initialized to.</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218603">
				<div id="div-comment-218603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas Allen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218603">
			October 18, 2004 at 9:43 am</a>		</div>

		<p>Merle-</p>
<p>Your browser probably supports triple clicking as well.  In Netscape it selects the line while in IE it selects the paragraph.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218613">
				<div id="div-comment-218613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/merle_/' rel='external nofollow' class='url'>Merle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218613">
			October 18, 2004 at 9:45 am</a>		</div>

		<p>Ha!  You&#8217;re right.  Even if the click happens to be within the uninitialized g_rcClick, and if by wild happenstance g_tmLastClick is close to what GetMessageTime() returns (another uninitialized variable), it&#8217;s a NOOP the first time through.</p>
<p>Tricky.</p>
<p>I&#8217;d feel safer initializing the RECT, though. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218623">
				<div id="div-comment-218623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/merle_/' rel='external nofollow' class='url'>Merle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218623">
			October 18, 2004 at 9:48 am</a>		</div>

		<p>Nicholas: hmm, you&#8217;re right.  Even though Opera 5 pops up a contexty menu on double click, continued clicking selects text much as in Word.  Never noticed.  (never tried, actually)  Three clicks gives you text between punctuation (oddly stopping at the comma), four the paragraph.</p>
<p>But I maintain my initial question: why do you want that?</p>
<p>Especailly since it&#8217;s not consistent between apps&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218633">
				<div id="div-comment-218633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas Allen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218633">
			October 18, 2004 at 10:03 am</a>		</div>

		<p>Merle-</p>
<p>Well, it&#8217;s mostly because you can&#8217;t just shove everything into a context menu.  Usability studies have shown that small, consistent context menus are the best way to go.  So rarely used features get pushed to more obscure trigger combinations.  At some point they should be dropped entirely but then you&#8217;d get nasty letters by the three people that use the feature all the time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218643">
				<div id="div-comment-218643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Smeghead</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218643">
			October 18, 2004 at 10:13 am</a>		</div>

		<p>Apple has it right, Microsoft has it wrong. </p>
<p>This just in, Water is wet, the sky is blue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218653">
				<div id="div-comment-218653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218653">
			October 18, 2004 at 10:20 am</a>		</div>

		<p>Shouldn&#8217;t:</p>
<p>tmClick &#8211; g_tmLastClick &gt;= GetDoubleClickTime()) {</p>
<p>be:</p>
<p>tmClick &#8211; g_tmLastClick &gt; GetDoubleClickTime()) {</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218663">
				<div id="div-comment-218663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218663">
			October 18, 2004 at 10:36 am</a>		</div>

		<p>Anon: Yup, good catch. Fortunately this is undetectable in practice since no human being can do things to 1ms precision anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218673">
				<div id="div-comment-218673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.whirlingdervishes.com' rel='external nofollow' class='url'>Henk Devos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218673">
			October 18, 2004 at 11:04 am</a>		</div>

		<p>Smeghead: Why does Apple get it right and Microsoft wrong?<br />
<br />I just tested on Safari and IE:Mac.<br />
<br />On Safari, 1 click is positioning the cursor, 2 clicks is selecting a word, 3 clicks is selecting a line.<br />
<br />In IE:Mac, this behavior is the same, except that 4 clicks is selecting a paragraph. They are compatible, while offering an extra option that is more useful than selecting a line.<br />
<br />I think Microsoft got it right and Apple got it wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218693">
				<div id="div-comment-218693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Smeghead</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218693">
			October 18, 2004 at 11:56 am</a>		</div>

		<p>Not according to the users I have to HELP.  ITs always confusion between LEFT or RIGHT and single nad double click. So yes, Apple (or xerox) got it right numbnuts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218703">
				<div id="div-comment-218703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.highprogrammer.com/alan/' rel='external nofollow' class='url'>Alan De Smet</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218703">
			October 18, 2004 at 1:06 pm</a>		</div>

		<p>I understand that GetMessageTime&#8217;s return value occasionally wraps around to 0.  But I&#8217;m not entirely clear on how your suggestion is better.</p>
<p>The wrong answer is:</p>
<p>    tmClick &gt; g_tmLastClick + GetDoubleClickTime()</p>
<p>As far as I can tell, this will actually work in practice.  Everyone should get<br />
<br />promoted to LONG.  GetMessageTime rolls over based on MAXLONG.  So<br />
<br />(g_tmLastClick+GetDoubleClickTime()) should roll over in matching behavior.<br />
<br />That said, relying on roll over and generally overflowing variables is A Bad<br />
<br />Idea, so it&#8217;s wrong.  Am I correct so far?</p>
<p>The right answer is apparently:</p>
<p>    tmClick &#8211; g_tmLastClick &gt; GetDoubleClickTime()</p>
<p>However, if GetMessageTime rolled over, we&#8217;ve still got problems. tmClick will be small, g_tmLastClick will be very large.  (tmClick-g_tmLastClick) will be massively negative and will never trigger.  As far as I can tell any click over the rollover boundary will register as double/triple/whatever click.</p>
<p>This leads me to conclude that I need to do something like so (code untested):</p>
<p>LONG clickDelta = tmClick &#8211; g_tmLastClick;<br />
<br />if ( tmClick &lt; g_tmLastClick) {<br />
<br />    clickDelta += MAXLONG;<br />
<br />}</p>
<p>I suspect I&#8217;m overlooking something and would appreciate knowing what.</p>
<p>(Oh, and thanks for the blog, it&#8217;s fascinating reading.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218713">
				<div id="div-comment-218713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218713">
			October 18, 2004 at 1:12 pm</a>		</div>

		<p>Everything gets promoted to DWORD, not LONG. Does that help? (Hint: What if g_tmLastClick = 0xFFFFFFFF &#8211; GetDoubleClickTime()?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218733">
				<div id="div-comment-218733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A non anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218733">
			October 18, 2004 at 2:53 pm</a>		</div>

		<p>Uhm. None of the g_* variables in the sample code are uninitialized, since global variables are zero-initialized.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218573">
				<div id="div-comment-218573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/merle_/' rel='external nofollow' class='url'>Merle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218573">
			October 18, 2004 at 8:55 am</a>		</div>

		<p>Why in the name of all that is sacred would you want to use *triple* clicks in an application?</p>
<p>Yes, I understand Word has some magic selection behaviour where the more you click the more text is selected.  But I still don&#8217;t think that&#8217;s a good idea.  I would much rather have that sort of thing in a context menu where you can select.  It feels more like a &quot;wow, this is so cool that I can detect this, let&#8217;s give it some random functionality&quot; thing to me.</p>
<p>Unless you have a trackball (or glidepoint and use the buttons) it&#8217;s really hard to click multiple times without moving the mouse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218793">
				<div id="div-comment-218793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.digitalfanatics.org' rel='external nofollow' class='url'>Johan Thelin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218793">
			October 18, 2004 at 10:00 pm</a>		</div>

		<p>The lovely editor nedit uses multiple clicks in a great way. Single click moves the carret, double click selects a line, tripple click selects a paragraph and, if I&#8217;m not missremembering, quadruple(!) click selects the entire document. Quite handy actually :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218813">
				<div id="div-comment-218813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">muro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218813">
			October 18, 2004 at 10:35 pm</a>		</div>

		<p>OK, this is nitpicking, but anyway:<br />
<br />shouldn&#8217;t there be another line at the end?<br />
<br />HANDLE_MSG(hwnd, WM_RBUTTONDOWN, OnRButtonDown);</p>
<p>a pleasure to read this stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218823">
				<div id="div-comment-218823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218823">
			October 18, 2004 at 10:37 pm</a>		</div>

		<p>Extending to right-clicks is left as an exercise.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218833">
				<div id="div-comment-218833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">muro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218833">
			October 18, 2004 at 10:38 pm</a>		</div>

		<p>The missing line is actually funny, when you read second paragraph from the end of the article &#8211; especially the parenthesis. :-)<br />
<br />but sorry for nitpicking, its lame.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218843">
				<div id="div-comment-218843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218843">
			October 18, 2004 at 10:40 pm</a>		</div>

		<p>Oh, you&#8217;re right. I forgot what I wrote. (I wrote it so long ago.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218853">
				<div id="div-comment-218853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/cyrusn' rel='external nofollow' class='url'>Cyrus Najmabadi</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218853">
			October 19, 2004 at 12:06 am</a>		</div>

		<p>Ugh, you had to write the code for this now after i spent a good half day getting this working right in some code i was writing.  What&#8217;s worse is that you&#8217;re the one who told me how to do it, but you weren&#8217;t willing to take the time to write this up :-P</p>
<p>Oh, and to those of you who are interested this was to add a feature in C# where as you click more and more we start selecting more and more of the C# code you&#8217;ve written based on the parse tree.</p>
<p>So we&#8217;ll start by selecting the expression, then the statement, the then method, then the class, namespace, etc.  Basically each successive click selects one higher level in the parse tree.</p>
<p>it&#8217;s a feature you grow to love :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218863">
				<div id="div-comment-218863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://pinterkr@freemail.hu' rel='external nofollow' class='url'>krisztian pinter</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218863">
			October 19, 2004 at 12:30 am</a>		</div>

		<p>i still not get that DoubleClickTime trick</p>
<p>say<br />
<br />g_tmLastClick == ~4bil<br />
<br />tmClick == 10</p>
<p>now 10 &#8211; ~4bil is a large number because of the overflow. it will treated as a double. OK.</p>
<p>but</p>
<p>g_tmLastClick == ~4bil<br />
<br />tmClick == 60000 (click one minute later)</p>
<p>60000 &#8211; ~4bil is still a large number, so it will also be treated as double, however it is clearly a single.</p>
<p>can someone explain this to me?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218883">
				<div id="div-comment-218883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">muro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218883">
			October 19, 2004 at 2:07 am</a>		</div>

		<p>To clarify: consider, the difference calculation is correct:<br />
<br />tmClick &#8211; g_tmLastClick really calculates the time difference between the clicks correctly for our purpose, even when an overflow happens.</p>
<p>First, lets show the overflow calculations with 8bits. GetDoubleClickTime() = 0x10:<br />
<br />0x01 &#8211; 0xff = 0x01 + ~(0xff) = 0x01 + (0x100 &#8211; 0xff) = 0x01 + 0x01 = 0x02 -&gt; double click<br />
<br />0x21 &#8211; 0xff = 0x21 + ~(0xff) = 0x21 + (0x100 &#8211; 0xff) = 0x21 + 0x01 = 0x22 -&gt; single click</p>
<p>Then the same for 32bit:<br />
<br />GetDoubleClickTime() = 10:<br />
<br />g_tmLastClick == 4bil = e.g.: 2^32 &#8211; 10<br />
<br />tmClick == 5:<br />
<br />5 &#8211; 4bil = 5 + ~(4bil) = 5 + (2^32 &#8211; 10) = 5 + 10 = 15 -&gt; double click</p>
<p>tmClick == 60000 (click one minute later):<br />
<br />60000 &#8211; 4bil = 60000 + ~(4bil) = 60000 + (2^32 &#8211; 10) = 60000 + 10 = 60010 -&gt; single click</p>
<p>Sometimes it helps to think in lower precision. Makes all the scary big numbers go away :-). And off course &#8211; remember that subtraction is addition of complement. Makes it even less scary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218893">
				<div id="div-comment-218893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">muro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218893">
			October 19, 2004 at 2:10 am</a>		</div>

		<p>Overlooked in 32 bit part:<br />
<br />GetDoubleClickTime() = 10: would mean, the first 32bit example is also single click (as time difference is 15), but I hope you get the idea.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218903">
				<div id="div-comment-218903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">krisztian pinter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218903">
			October 19, 2004 at 2:50 am</a>		</div>

		<p>thanks, muro!</p>
<p>in my mind, result of substraction was the same as the distance. in a &quot;modulo world&quot;, it is not that easy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218943">
				<div id="div-comment-218943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-218943">
			October 19, 2004 at 8:05 am</a>		</div>

		<p>You can think of modulo arithmetic as points around a circle. Subtraction gives you the distance along the circumference, which doesn&#8217;t care where your zero marker is.</p>
<p>Another way of looking at subtraction is to view it as a translation of the circle, which is isometric (distance-preserving).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-224743">
				<div id="div-comment-224743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasmusic.com' rel='external nofollow' class='url'>Joshua Schaeffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-224743">
			November 11, 2004 at 3:58 pm</a>		</div>

		<p>Merle, triple clicks in Word are one of the biggest time savers for me. Sometimes I&#8217;m in this utmost lazy chair position where even using right-click is a tiresome expense of a few seconds. Although I personally wouldn&#8217;t mind a &quot;click chart&quot; like so:</p>
<p>1 &#8211; (normal)<br />
<br />2 &#8211; word<br />
<br />3 &#8211; sentence<br />
<br />4 &#8211; paragraph<br />
<br />5 &#8211; everything</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-278673">
				<div id="div-comment-278673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/05/31/423407.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-278673">
			May 31, 2005 at 9:03 am</a>		</div>

		<p>Avoiding timing overflows is easier than you think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-661083">
				<div id="div-comment-661083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.redmountainsw.com/wordpress/archives/clairvoyant-interaction' rel='external nofollow' class='url'>Clairvoyant Interaction | Chui&#8217;s counterpoint</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041018-00/?p=37543#comment-661083">
			August 24, 2008 at 12:41 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.redmountainsw.com/wordpress/archives/clairvoyant-interaction" rel="nofollow">http://www.redmountainsw.com/wordpress/archives/clairvoyant-interaction</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

