<html>
<head>
<title>Woe unto PROGMAN.INI</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Woe unto PROGMAN.INI</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 3, 2009 / year-entry #279</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Sad but true: Once you document a file format, it becomes a de facto API. The Windows 95 team learned this the hard way when they set out to replace Program Manager with Explorer. Not only were the settings in the PROGMAN.INI file documented, so too was the binary file format of *.GRP files. The binary...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Sad but true: Once you document a file format, it becomes a de facto API.</p>
<p> The Windows&nbsp;95 team learned this the hard way when they set out to replace Program Manager with Explorer. Not only were the settings in the <code>PROGMAN.INI</code> file documented, so too was the binary file format of <code>*.GRP</code> files. The binary file format was included for diagnostic purposes: If you have a corrupted <code>GRP</code> file, you can use the binary file format documentation to try to recover what you can out of it. </p>
<p> But many people treated this documentation not as a FYI, but as a backdoor API. Instead of using the formal DDE interface for creating program groups and icons, they just directly edited the <code>PROGMAN.INI</code> file and the applicable <code>GRP</code> files to get the icons and groups they wanted. </p>
<p> Oh wait, and then you need to reboot in order for the backdoor API to take effect, because all you did was modify the on-disk files, not the in-memory copy held by <code>PROGMAN.EXE</code>. </p>
<p> Of course, when Windows&nbsp;95 replaced Program Manager with Explorer, these programs found themselves modifying the data files of a program that no longer was running. Special code had to be added to Explorer to read settings from <code>PROGMAN.INI</code> and even detect that a new <code>GRP</code> file was added and convert it into shortcuts on the Start menu. </p>
<p> I wouldn't be surprised if that code is still lying around, just in case somebody pulls out an old application from 1994 and installs it. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-766143">
				<div id="div-comment-766143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766143">
			September 3, 2009 at 12:38 pm</a>		</div>

		<p>I am dealing with a similar situation. &nbsp;We use a 3rd-party component consisting of a user-mode library and a kernel-mode driver. &nbsp;The library deploys the driver not via the SCM interface, but by writing the necessary registry entries and calling NtLoadDriver. &nbsp;The problem is that the in-memory service table doesn&#8217;t get updated and you can&#8217;t manage the service until you reboot. &nbsp;Idiots.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-766203">
				<div id="div-comment-766203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766203">
			September 3, 2009 at 4:12 pm</a>		</div>

		<blockquote><p>
  Oh wait, and then you need to reboot</p>
<p>  in order for the backdoor API to take effect,
</p></blockquote>
<p>Clearly, progman should re-write the files from its in-memory version during its shutdown sequence.</p>
<p>;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-766233">
				<div id="div-comment-766233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.flickr.com/photos/ajgelado/' rel='external nofollow' class='url'>Antonio Rodr&#237;&#173;guez</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766233">
			September 3, 2009 at 5:02 pm</a>		</div>

		<blockquote><p>
  The library deploys the driver not via the SCM interface,</p>
<p>  but by writing the necessary registry entries and calling NtLoadDriver.
</p></blockquote>
<p>That&#8217;s clearly a case of having to work thrice because you didn&#8217;t read the documentation and reinvented the wheel. SCM has a simple API that can make most things with just a handful of calls: it took me just one afternoon to code in Visual Basic the equivalent to the Services MMC snap-in, including a couple of classes that expose the registered services in nice objects :-) . I wonder how much time did those guys spend in coding and testing the code against the different target platforms&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-766123">
				<div id="div-comment-766123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766123">
			September 3, 2009 at 12:28 pm</a>		</div>

		<p>We *really* need a way to deliver electric shocks through the keyboard &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-766283">
				<div id="div-comment-766283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766283">
			September 3, 2009 at 10:37 pm</a>		</div>

		<p>I&#8217;m afraid even undocumented files become unofficial APIs. Just look at the people who reverse engineered bits of the excel and word file formats before there was official documentation. Caused all sorts of odd issues for the office team.</p>
<p>At a certain point you either have to embrace their hackery or break backward compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-766313">
				<div id="div-comment-766313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766313">
			September 4, 2009 at 12:00 am</a>		</div>

		<p>I&#8217;d say how dare they killed the functionality of AUTOEXEC.BAT before killing the code for reading PROGMAN.INI / GRP files, considering the number of application using these &quot;documented features&quot;. :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-766323">
				<div id="div-comment-766323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766323">
			September 4, 2009 at 1:17 am</a>		</div>

		<p>Luckily, support for it doesn&#8217;t have to around much longer. 16-bit apps won&#8217;t work if you&#8217;re running in x64 Windows &#8211; x64 mode disables everything but 32-bit protected&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-766333">
				<div id="div-comment-766333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Colin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766333">
			September 4, 2009 at 1:26 am</a>		</div>

		<blockquote><p>
  I wouldn&#8217;t be surprised if that code is still lying around, just in case somebody pulls out an old application from 1994 and installs it.
</p></blockquote>
<p>See KB 119941. &nbsp;GRPCONV.EXE is still shipped in Windows 7.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-766343">
				<div id="div-comment-766343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Ellison-Taylor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766343">
			September 4, 2009 at 1:54 am</a>		</div>

		<p>GrpConv!! I remember it well :)</p>
<p>There was one app that both wrote the binary files directly as well as used DDE. I could only guess that two different devs worked on the app and didn&#8217;t talk to each other.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-766363">
				<div id="div-comment-766363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766363">
			September 4, 2009 at 3:34 am</a>		</div>

		<blockquote><p>
  Luckily, support for it doesn&#8217;t have to around much longer. 16-bit apps won&#8217;t work if you&#8217;re running in x64 Windows &#8211; x64 mode disables everything but 32-bit protected&#8230;
</p></blockquote>
<p>Don&#8217;t worry, I&#8217;m sure there are 32-bit programs that still use this backdoor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-766383">
				<div id="div-comment-766383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766383">
			September 4, 2009 at 8:07 am</a>		</div>

		<p>Maybe the team that documented the GRP/ini file formats should have provided a dire warning not to use it like that and a working sample of how group creation and modification should be done.</p>
<div class=post>[<i>You forget that back in the time the documentation was written, it was assumed that programmers were smart. -Raymond</i>]</div>
<p>@James: So you&#8217;re saying that shoehorning driver loading onto the for this purpose ill-fitting registry API, with registry keys that are just as arbitrary as any new functions in a brand new API, is a good idea? I&#8217;m glad you&#8217;re not on the team that gave us SCM.</p>
<p>And a little tip: it really is faster to use the proper API to do things, even if you have to look it up, than it is to look up the registry entries/file names/what have you, and come up with a half-working hack.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-766413">
				<div id="div-comment-766413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766413">
			September 4, 2009 at 10:21 am</a>		</div>

		<p>I suggest the ultimate approach to weeding the hacks. To use any new features of the OS, the executable should be marked as compiled for the OS version. Then, all compat hacks get also disabled. </p>
<p>So there is the choice for the app programmer: Want new features &#8211; remove the hacks.</p>
<div class=post>[<i>We&#8217;ll have to delete all the articles that say &#8220;It&#8217;s easy to add this feature to your program,&#8221; then. Because the implied zeroth step is &#8220;Fix all the existing places in your program that rely on old behavior. (Good luck finding them all. Come back here after a few months when you think you got them all. Oh wait, your program links to a DLL that hasn&#8217;t been upgraded? Then I guess you&#8217;ll never be able to use this feature.)&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-766373">
				<div id="div-comment-766373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James Sutherland</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766373">
			September 4, 2009 at 5:38 am</a>		</div>

		<p>&quot;Once you document a file format, it becomes a de facto API.&quot;</p>
<p>Yes &#8211; moreover, fail to document it, it becomes a de facto undocumented API. As Scott points out, failing to document something won&#8217;t stop people using it &#8211; but worse than that, it&#8217;ll make it harder for them to use and more likely they use it wrongly, meaning more breakage and/or more compatibility headaches in future.</p>
<p>If I&#8217;d been given a straight choice between creating a GRP file and editing an INI file or jumping through some DDE hoop, I&#8217;d go the file route every time and twice on Sundays. Antonio, I&#8217;d say the &quot;simple&quot; SCM API is still far more work than creating a few registry entries, because there&#8217;s no new API to learn at all there! Much better to have a single operation which makes services.exe re-read the registry data after a change (or have it use change notification, meaning no extra work at all) rather than introduce yet another new pile of functions and structures. The end result in both the PROGMAN case and Services is that there are now *two* ways of doing something which need to be supported forever, instead of just one!</p>
<p>&quot;someone else&quot;: Yes, and that feature should be activated every time someone thinks of introducing yet another new API instead of using an existing approach :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-766543">
				<div id="div-comment-766543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James Sutherland</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766543">
			September 4, 2009 at 2:53 pm</a>		</div>

		<p>@AC: I see nothing &quot;ill-fitting&quot;: you&#8217;re adding a few pieces of data to a list of services, which is precisely the intended usage of the Registry and indeed precisely what service.exe will be doing for you in your own route. The only drawback of any kind is services.exe&#8217;s apparent inability to update its internal state to reflect updates, which is a trivial implementation flaw. Not naming names, this also seems to be the route taken (and explained and boasted about as a feature!) by at least one popular MS tool &nbsp;Then there&#8217;s the .INF method, which is essentially a direct mapping onto the Services registry keys &#8211; and AFAICS, these are very much an officially approved way of installing, not to mention the way most of MS&#8217;s own drivers get installed&#8230;</p>
<p>Your &quot;tip&quot; seems rather implausible when merely finding the right documentation for yet another single-purpose API will take longer than figuring out the handful of registry values to insert &#8211; and that&#8217;s before taking into account the fact the API may very well not be directly available in the environment you&#8217;re in (an MSI or installation script, for example) &#8211; meaning now you&#8217;ve got another hurdle, and need to resort to a custom action or process invocation, rather than using your installer&#8217;s built-in registry functionality. Moreover, a quick Google for blog posts from people struggling to jump through this very hoop in their installers seems to suggest you&#8217;re wrong about the API being such a wonderful option.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-766553">
				<div id="div-comment-766553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Different Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766553">
			September 4, 2009 at 3:10 pm</a>		</div>

		<p>[You forget that back in the time the documentation was written, it was assumed that programmers were smart. -Raymond]</p>
<p>Shame Raymond you don&#8217;t have to work with the programmers I have too. &nbsp;I swear the universities are just rubber stamping CS degrees.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-766623">
				<div id="div-comment-766623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766623">
			September 4, 2009 at 11:22 pm</a>		</div>

		<p>Cheong: Considering Windows is no longer DOS-based, AUTOEXEC.BAT support was never really killed&#8230; NT was built from the ground up without it!</p>
<p>Nowadays they are only used by NTVDM when running DOS or 16-bit apps AFAIK, I think there&#8217;s still a few lines you can stick in there to fix some compatibility issues or whatever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-766703">
				<div id="div-comment-766703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://me.me' rel='external nofollow' class='url'>Me</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090903-00/?p=16863#comment-766703">
			September 6, 2009 at 5:41 pm</a>		</div>

		<p>Regarding SCM &#8212; it is much slower and more cumbersome to use than the NtLoadDriver and that is the reason why people are avoiding it.</p>
<p>Same reason must have been with DDE .vs. GRP/INI &#8212; file API is something everyone knows while DDE has learning curve.</p>
<p>It is a shame that nowadays you have to invoke COM and suffer its slowness and bloat just to create a damn shortcut.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

