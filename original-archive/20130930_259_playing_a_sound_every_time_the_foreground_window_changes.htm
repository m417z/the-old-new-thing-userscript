<html>
<head>
<title>Playing a sound every time the foreground window changes</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Playing a sound every time the foreground window changes</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 30, 2013 / year-entry #260</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program plays a little sound every time the foreground window changes. One of my colleagues wondered if such a program was possible, "so that I stop accidentally typing the second halves of paragraphs into windows that pop up and steal focus." It's not clear whether this program will actually solve the bigger problem,...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program plays a little sound every time the foreground
window changes.
One of my colleagues wondered if such a program was possible,
"so that I stop accidentally typing the second halves of paragraphs
into windows that pop up and steal focus."
It's not clear whether this program will actually solve the bigger
problem,
but it was fun writing the program,
and maybe you can use it for something.
</p>
<pre>
#define STRICT
#include &lt;windows.h&gt;
#include &lt;mmsystem.h&gt;

void CALLBACK WinEventProc(
    HWINEVENTHOOK hWinEventHook,
    DWORD event,
    HWND hwnd,
    LONG idObject,
    LONG idChild,
    DWORD dwEventThread,
    DWORD dwmsEventTime
)
{
  if (hwnd &amp;&amp;
      idObject == OBJID_WINDOW &amp;&amp;
      idChild == CHILDID_SELF &amp;&amp;
      event == EVENT_SYSTEM_FOREGROUND) {
   PlaySound(TEXT("C:\\Windows\\Media\\Speech Misrecognition.wav"),
             NULL, SND_FILENAME | SND_ASYNC);
 }
}

int WINAPI WinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPSTR lpCmdLine, int nShowCmd)
{
  HWINEVENTHOOK hWinEventHook = SetWinEventHook(
     EVENT_SYSTEM_FOREGROUND, EVENT_SYSTEM_FOREGROUND,
     NULL, WinEventProc, 0, 0,
     WINEVENT_OUTOFCONTEXT | WINEVENT_SKIPOWNPROCESS);

  MSG msg;
  while (GetMessage(&amp;msg, NULL, 0, 0)) {
   TranslateMessage(&amp;msg);
   DispatchMessage(&amp;msg);
  }

  if (hWinEventHook) UnhookWinEvent(hWinEventHook);

  return 0;
}
</pre>
<p>
This program installs an accessibility hook that
listens for changes to the system foreground.
And when it happens, we play a little sound.
</p>
<p>
I chose the Windows&nbsp;7 Speech Misrecognition sound
because it's relatively unobtrusive.
And the sound is played asynchronously so as not to
block the message pump thread.
It also has as a pleasant side-effect that if
the foreground changes many times rapidly,
the new sound will interrupt the old one rather than
queueing up behind it.
</p>
<p>
Note that there is no way to exit this program short of
killing it in Task Manager.
That's why it's a Little Program rather than a real program.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1080413">
				<div id="div-comment-1080413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080413">
			September 30, 2013 at 7:18 am</a>		</div>

		<p>I suppose you could use sendkeys to actually prevent keystroke stealing; however this gets hairy fast.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080423">
				<div id="div-comment-1080423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080423">
			September 30, 2013 at 7:19 am</a>		</div>

		<p>The problem with the bigger problem is that it&#39;s got infinite variations. In particular, even if this &quot;solution&quot; works perfectly, it can&#39;t handle the case where you press enter (or space) _immediately_ after a dialog box pops up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080433">
				<div id="div-comment-1080433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080433">
			September 30, 2013 at 7:26 am</a>		</div>

		<p>@Random832 IIRC if the dev followed MS guidelines, the default option in the dialog should be the safest, least destructive one.</p>
<p>That is a pretty big IF, of course.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080443">
				<div id="div-comment-1080443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080443">
			September 30, 2013 at 7:54 am</a>		</div>

		<p>The better solution would be for programs to not steal focus in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1080453">
				<div id="div-comment-1080453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080453">
			September 30, 2013 at 8:03 am</a>		</div>

		<p>&gt;The better solution would be for programs to not steal focus in the first place.</p>
<p>Tell that to Internet Explorer devs. They&#39;ve been very successful in overcoming whatever USER32 devs were throwing at them.</p>
<p>Though it looks like USER32 team finally won.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080463">
				<div id="div-comment-1080463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080463">
			September 30, 2013 at 8:16 am</a>		</div>

		<p>&quot;IIRC if the dev followed MS guidelines, the default option in the dialog should be the safest, least destructive one.&quot;</p>
<p>I&#39;m still mad about the XP Automatic Updates reboot dialog (<a rel="nofollow" target="_new" href="http://www.codinghorror.com/blog/2007/12/please-dont-steal-my-focus.html">http://www.codinghorror.com/&#8230;/please-dont-steal-my-focus.html</a>).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080473">
				<div id="div-comment-1080473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">db2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080473">
			September 30, 2013 at 8:35 am</a>		</div>

		<p>Yes, use it for &quot;something&quot;, such as driving your coworkers straight into madness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080483">
				<div id="div-comment-1080483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080483">
			September 30, 2013 at 8:50 am</a>		</div>

		<p>Windows badly needs a setting/GPO/Whathaveyou that says &quot;Prohibit any application which is not the currently focused window from programmatically altering the currently focused window under any and all circumstances.&quot;</p>
<p>(If it was up to me, this would be an unalterable part of the UI.)</p>
<p>I&#39;m certain that I&#39;ve never once been pleased that any window took focus away from the current window. I&#39;m equally certain that I&#39;ve never once encountered a circumstance where it was necessary or pertinent for any window that wasn&#39;t a child of the currently focused window to be granted focus.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080503">
				<div id="div-comment-1080503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080503">
			September 30, 2013 at 9:05 am</a>		</div>

		<p>A hook, huh? Funny, me being a fan of hooks and always preaching that if you want something done 100% sure eventually a hook will be the only approach, on various occasions here in the past comments, and you always saying a hook takes resources blah blah, hook is evil blah blah.</p>
<div class="post">[<em>Hooks take resources, injected hooks are even worse, etc. But if your feature requires a hook, then the best you can do is choose the least expensive one. Out-of-context asynchronous accessibility hooks are the cheapest of the accessibility hooks, and are way cheaper than injected hooks. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080523">
				<div id="div-comment-1080523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skip</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080523">
			September 30, 2013 at 10:09 am</a>		</div>

		<p>I must be the only Windows user on the planet who runs silent most of the time. No speakers, no sounds, no music. Occasionally when my cubicle neighbors get oppressively loud, I&#39;ll remember that I have iTunes and ChatterBlocker installed, and dig up my headphones, but most of the time I&#39;m not listening to anything at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080533">
				<div id="div-comment-1080533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080533">
			September 30, 2013 at 10:29 am</a>		</div>

		<p>@Anon: &nbsp;One good use of focus stealing, that you may have found useful, is the debugger taking focus from the program being debugged when it hits a breakpoint.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-1080543">
				<div id="div-comment-1080543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080543">
			September 30, 2013 at 10:30 am</a>		</div>

		<p>I wish there were many more sound events built into Windows. Although there have been some additions in each release, the events themselves are far too less. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080603">
				<div id="div-comment-1080603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080603">
			September 30, 2013 at 1:45 pm</a>		</div>

		<p>@Rodger: The app steals focus by spawning a new program that calls SetFocus. Microsoft can&#39;t block that. Users would revolt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080553">
				<div id="div-comment-1080553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080553">
			September 30, 2013 at 10:48 am</a>		</div>

		<p>@Danny Clearly if hooks are the solution to one problem, that means it&#39;s *not* stupid to abuse them in cases where other less intrusive, resource stealing solutions would work? I assume that&#39;s what you&#39;re trying to tell us?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080633">
				<div id="div-comment-1080633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080633">
			September 30, 2013 at 6:04 pm</a>		</div>

		<p>How about if the OS notes the the WindowStation(s) on which the parent had the focus, in addition to the time the process launched? Then deny SetFocus if not in magic time or parent did not have focus.</p>
<p>The only problem I see is a process not owning the focus window even if it&#39;s the logical owner just then (think console app/helper app).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080583">
				<div id="div-comment-1080583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rodger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080583">
			September 30, 2013 at 11:29 am</a>		</div>

		<p>This programs reminded me of how Comodo updater, a background app that steals focus when it runs and checks for updates.</p>
<p>I reported the issue several years ago.</p>
<p>Another company that doesn&#39;t know what to do with bug reports and feedback.</p>
<p>This started me to think about how to block programs from stealing focus again. Implement some sort of dll that patches all the window stealing api&#39;s and either removes the focus stealing flags (filtering) or simply returns nops the api if the program is not allowed to steal focus.</p>
<p>Sort of like how some firewall programs work.</p>
<p>I wonder how many windows programs would break *cough* metro and office if I implemented this.</p>
<p>Thoughts anyone?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080643">
				<div id="div-comment-1080643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Georg Rottensteiner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080643">
			September 30, 2013 at 10:52 pm</a>		</div>

		<p>Windows could detect if the user is currently in a state of &quot;writing text&quot;. In this mode not even a newly started app may receive focus.</p>
<p>I don&#39;t dare to think on that many cases where this could go wrong though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080663">
				<div id="div-comment-1080663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080663">
			October 1, 2013 at 2:38 am</a>		</div>

		<p>How does a programm even accomplish this Focus stealing?</p>
<p>I certainly don&#39;t want to do it in my programms, but in order to understand how e.g. Rodger would want to block the API, I really wonder how it&#39;s actually done: Is it that one undocumented, now documented api call? Do these programms modify FlashTimeout registry keys? Use foreground?</p>
<p>There must be some info about it somewhere, but I was not able to find it.</p>
<p>And without knowing what&#39;s happening, one can&#39;t patch it away, e.g. with idapro.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080693">
				<div id="div-comment-1080693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080693">
			October 1, 2013 at 3:30 am</a>		</div>

		<p>A hack to make the program easier to close might be to display a message box (and you get a message loop for free!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080733">
				<div id="div-comment-1080733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080733">
			October 1, 2013 at 6:23 am</a>		</div>

		<p>AFAIK newly started programs (can) gain the focus for their start-window if they open it early enough, independent of their long-runnung demon parent, of which they are a logical part. Not sure if its automatic or on request&#8230;</p>
<p>Multi-stealing is possible because this May-Force-Focus privilege is not rescinded on first use, but stays valid for the duration.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1080793">
				<div id="div-comment-1080793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1080793">
			October 1, 2013 at 9:59 am</a>		</div>

		<p>&gt;Multi-stealing is possible because this May-Force-Focus privilege is not rescinded on first use, but stays valid for the duration.</p>
<p>May-Force-Focus privilege be with you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1081093">
				<div id="div-comment-1081093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">e</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130930-00/?p=3083#comment-1081093">
			October 4, 2013 at 5:07 pm</a>		</div>

		<p>&gt;<a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/09/30/10452928.aspx#10453303" rel="nofollow" target="_new">blogs.msdn.com/&#8230;/10452928.aspx</a></p>
<p>&gt;Windows could detect if the user is currently in a state of &quot;writing text&quot;. In this &gt;mode not even a newly started app may receive focus.</p>
<p>I was thinking the same. Registry-configurable cool-down timer after writing during which non-user initiated programs can&#39;t become foreground. Also need to factor in the mouse somehow, although keyboard input is the larger problem.</p>
<div class="post">[<em>This is what the foreground lock timeout tried to be, but people found holes in its initial implementation, and those holes are now de facto features. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

