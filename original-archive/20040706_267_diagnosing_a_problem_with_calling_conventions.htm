<html>
<head>
<title>Diagnosing a problem with calling conventions</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Diagnosing a problem with calling conventions</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 6, 2004 / year-entry #268</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040706-00/?p=38543</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>3</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A commenter asks for help with an unresolved external. One of my goals is to give you more insight into how things work so you can solve problems yourself. This particular problem - resolving the error "Undefined symbol: '__stdcall(0) pl_pvcam_init (_pl_pvcam_init@0)' referenced from '_main' in Acquisition.c:15" is one example of something you can solve with...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://weblogs.asp.net/oldnewthing/archive/2004/01/08/48616.aspx#143025">  A commenter asks for help with an unresolved external</a>.  One of my goals is to give you more insight into  how things work so you can solve problems yourself.  This particular problem - resolving the error  "Undefined symbol: '__stdcall(0) pl_pvcam_init (_pl_pvcam_init@0)'   referenced from '_main' in Acquisition.c:15" is one example of  something you can solve with the tips you've already learned.</p>
<p>  First, let's look at the unresolved external itself.  "_pl_pvcam_init@0".  <a href="http://weblogs.asp.net/oldnewthing/archive/2004/01/08/48616.aspx">  From the article this comment was posted to</a>,  you can see that the leading underscore and trailing @0  indicate that the function uses the __stdcall calling convention.  (This is confirmed by the linker's undeciration of the name.)  </p>
<p>  So your function "_main" wants the function pl_pvcam_init  with the __stdcall calling convention.  But it's not found in the library even though you linked to it.  </p>
<p>  If you look inside the library itself, you'll find the desired  symbols with some decoration.  Decode that decoration.  (<a href="http://weblogs.asp.net/oldnewthing/archive/2004/02/17/74812.aspx#74862">My psychic powers</a> tell me that  when you do, you'll find that the decoration is  "_pl_pvcam_init", which is the __cdecl calling convention.)  </p>
<p>  So now you see the problem.  Your code is calling with the __stdcall calling convention,  but the function actually uses the __cdecl calling convention.  The calling conventions don't match up, so the linkage fails.  </p>
<p>  The solution, of course, is to fix the declaration of  the pl_pvcam_init function in the header file to specify  the correct calling convention.  My psychic powers tell me  that the header file doesn't specify any calling convention at all,  which puts it at the mercy of the ambient calling convention for  your project, which appears to be __stdcall.  But the author of the header file expected __cdecl to be the  default calling convention.  </p>
<p>  Put explicit calling conventions on the functions and you should  be all set.  </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-191083">
				<div id="div-comment-191083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Keith Moore [exmsft]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040706-00/?p=38543#comment-191083">
			July 6, 2004 at 10:24 am</a>		</div>

		<p>It should be noted (if it hasn&#8217;t been already) that link errors like this are a Very Good Thing. It would suck if this linked properly. It would really suck if the calling convention mismatch was in some rarely exercised (and therefore mostly untested) code path, leading to subtle and oh-so-fun-to-debug stack corruption problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-191403">
				<div id="div-comment-191403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Keith Hill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040706-00/?p=38543#comment-191403">
			July 6, 2004 at 6:52 pm</a>		</div>

		<p>Actually you can run into these problems if you dynamically load DLLs and do GetProcAddress.  The linker doesn&#8217;t catch this sort of problem, however you can compile with /GZ in your debug bits to enable stack checking OR if you want to handle the chores yourself like so:</p>
<p>#define SAVE_STACK_REGISTER() __asm(mov f_startingESPValue, esp)<br />
<br />#define #define CHECK_STACK_REGISTER()<br />
<br />    __asm(mov f_endingESPValue, esp);<br />
<br />    if (f_endingESPValue != f_startingESPValue)<br />
<br />    {<br />
<br />        // Alert user of calling convention mismatch &#8211; avoid using stack variables :-)<br />
<br />    }</p>
<p>SAVE_STACK_REGISTER()<br />
<br />pDllFunction();<br />
<br />CHECK_STACK_REGISTER()</p>
<p>Note that you can&#8217;t use /GZ with the above method.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-193773">
				<div id="div-comment-193773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voidref</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040706-00/?p=38543#comment-193773">
			July 11, 2004 at 1:28 am</a>		</div>

		<p>&quot;.. ambient calling convention &#8230;&quot;</p>
<p>Man, that&#8217;s just poetic!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

