<html>
<head>
<title>Execute a file as if it were a program, even though its extension is not EXE</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Execute a file as if it were a program, even though its extension is not EXE</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 10, 2014 / year-entry #38</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>32</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program executes a file as if it were a program, even though its extension is not EXE. The idea here is to prevent somebody from running your program by accident, so you give it an extension like .MOD. This is great for preventing somebody from running the program by mistake, but how do...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program executes a file as if it were a program,
even though its extension is not EXE.
The idea here is to prevent somebody from running your program
by accident, so you give it an extension like <code>.MOD</code>.
This is great for preventing somebody from running the program
by mistake, but how do you do it on purpose?
</p>
<pre>
#define STRICT
#include &lt;windows.h&gt;
#include &lt;shellapi.h&gt;

int WINAPI WinMain(
    HINSTANCE hinst, HINSTANCE hinstPrev,
    LPSTR lpCmdLine, int nCmdShow)
{
  SHELLEXECUTEINFO sei = { 0 };
  sei.cbSize = sizeof(sei);
  sei.nShow = SW_SHOWNORMAL;
  sei.lpFile = TEXT("C:\\full\\path\\to\\program.mod");
  sei.fMask = SEE_MASK_CLASSNAME;
  sei.lpVerb = TEXT("open");
  sei.lpClass = TEXT("exefile");
  ShellExecuteEx(&amp;sei);
  return 0;
}
</pre>
<p>
We're merely
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/01/10033224.aspx">
using the <code>lpClass</code> member of the
<code>SHELL&shy;EXECUTE&shy;INFO</code> structure</code></a>
to force the file to be interpreted as the type we specify,
overriding the default type inference code.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (32)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1105473">
				<div id="div-comment-1105473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105473">
			February 10, 2014 at 7:17 am</a>		</div>

		<p>system(&quot;cmd /c &quot;c:\full\path\to\program.mod&quot;&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1105523">
				<div id="div-comment-1105523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105523">
			February 10, 2014 at 8:13 am</a>		</div>

		<p>@Joshua: &quot;Error: Command Prompt is disabled by domain Group Policy&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105533">
				<div id="div-comment-1105533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105533">
			February 10, 2014 at 8:14 am</a>		</div>

		<p>Of course, the NT-style CreateProcess (as opposed to the shell APIs) can be used for this just as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105543">
				<div id="div-comment-1105543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nathan_works</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105543">
			February 10, 2014 at 8:28 am</a>		</div>

		<p>why does this seem like a rather bad idea in the first place ? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105563">
				<div id="div-comment-1105563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105563">
			February 10, 2014 at 8:58 am</a>		</div>

		<p>@Fleet Command: cmd.exe doesn&#39;t check when invoked with /c. Older versions didn&#39;t check when invoked with /k either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105573">
				<div id="div-comment-1105573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105573">
			February 10, 2014 at 9:34 am</a>		</div>

		<p>@Joshua This is just to prevent accidental execution, eg from a curious user poking through Program Files. &nbsp;As you&#39;ve indicated you can still run it if you&#39;re determined enough; renaming it back to a .EXE, for example, is an easy way.</p>
<p>@Raphael In your examples you should probably be checking your inputs anyway and aborting if there&#39;s a problem. &nbsp;Most programs I&#39;ve seen use that approach, or at least a &quot;secret&quot; parameter that they require to run, otherwise they tell you to run the main program and quit.</p>
<p>Perhaps a more fool-proof process is to make it a .DLL instead and call an exported function in it from your main program. &nbsp;Then it can&#39;t be run as an .EXE as there&#39;s no main(). &nbsp;Of course if you want the process to fork off and run out of process that won&#39;t work. &nbsp;Best you can do is a new thread.</p>
<p>Of course then you can use rundll32 to invoke the DLL&#39;s function. &nbsp;And the cat and mouse game continues. &nbsp;But I refer you to what I told Joshua.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105583">
				<div id="div-comment-1105583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105583">
			February 10, 2014 at 10:03 am</a>		</div>

		<p>I actually did one such thing once where the user is never expected to invoke the program.</p>
<p>The program is compiled as a Windows subsystem program and expects to receive it&#39;s directive from standard input (as a binary read). There&#39;s simply no obvious way the user can provide what it wants and it bails immediately on incorrect invocations (read EOF -&gt; exit main loop). I suppose the user could try redirecting in some binary file, but all malformed invocations -&gt; exit main loop, usually with a binary coded exception written to standard output.</p>
<p>Incidentally the binary stdin/stdout is in fact a natural way to perform the invocation given what the program is doing (hoisting a third-party component call out of process as this component misbehaves).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105593">
				<div id="div-comment-1105593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105593">
			February 10, 2014 at 10:12 am</a>		</div>

		<p>&quot;For a more concrete example, consider a program that should not be run without parameters or that should only be run once certain files have been created (saving the user an error message).&quot;</p>
<p>I still think it&#39;s kind of a weird example. Who&#39;s digging through their Program Files folder, running executables at random, and getting confused and surprised when they see an error message?</p>
<div class="post">[<em>You guys are so cute thinking such people don&#39;t exist. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105603">
				<div id="div-comment-1105603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Caron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105603">
			February 10, 2014 at 10:24 am</a>		</div>

		<p>@Tim &#8211; someone like my dad, who decided that the best way to save disk space was to go in to Program Files and start deleting files. That is, people who think that any possible action they take should be interpreted sensibly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105623">
				<div id="div-comment-1105623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105623">
			February 10, 2014 at 11:10 am</a>		</div>

		<p>There&#39;s nothing wrong with naming an exectuable program with something other than .EXE, and Windows even ships with such programs. It is standard practice to name screensavers with the .SCR extension instead of .EXE, presumably so that the dialog that lets you choose one has an easy way of determining which ones to show.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105643">
				<div id="div-comment-1105643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105643">
			February 10, 2014 at 11:56 am</a>		</div>

		<p>It&#39;s irritating when someone gives an executable file an extension that&#39;s commonly used for other file types. &nbsp;I have one software package that has some executables with a &quot;.inf&quot; extension.</p>
<p>That seems wrong to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105653">
				<div id="div-comment-1105653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105653">
			February 10, 2014 at 12:19 pm</a>		</div>

		<p>@Joshua: yet another approach is to require a specific argument in the first part of the command line, where the path to the executable normally goes. &nbsp;Using `CreateProcess` you can pass whatever command line you like, ignoring the convention that you should put the path to the executable at the beginning, but as far as I know there&#39;s no way to do this from the shell or from the command prompt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105683">
				<div id="div-comment-1105683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105683">
			February 10, 2014 at 12:59 pm</a>		</div>

		<p>@ The MAZZTer &quot;Of course then you can use rundll32 to invoke the DLL&#39;s function.&quot;</p>
<p>I know the system tries to patch up problems with rundll32 invocations, but to prevent it from being used to call your DLL, you could probably write your DLL&#39;s exported function in such a way as to cause it to crash.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105693">
				<div id="div-comment-1105693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105693">
			February 10, 2014 at 1:09 pm</a>		</div>

		<p>So now I know how OpenOffice/LibreOffice can open up soffice.bin as an executable on Windows. I think some major installer platform (don&#39;t remember which) does this too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105703">
				<div id="div-comment-1105703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105703">
			February 10, 2014 at 1:45 pm</a>		</div>

		<p>.mod is a known extension for a music module, so it may be associated with a media player. I would avoid this particular extension for an executable file. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105553">
				<div id="div-comment-1105553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raphael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105553">
			February 10, 2014 at 8:42 am</a>		</div>

		<p>That&#39;s not actually a bad idea at all. Raymond gave an (somewhat abstract) example of when you might need it. For a more concrete example, consider a program that should not be run without parameters or that should only be run once certain files have been created (saving the user an error message).</p>
<p>How would *you* do it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105613">
				<div id="div-comment-1105613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105613">
			February 10, 2014 at 10:26 am</a>		</div>

		<p>I think one potential problem is that for a lot of such programs you *wouldn&#39;t* see an error message. A lot of subsidiary programs like this are written to not have any kind of UI or anything like that and just work from standard input &amp; output &#8212; for that kind of program, putting something in there to even display an error to the user means extra dependencies and stuff like that. (I guess you could just display the message to standard output and wait for anything on standard input and have it display the console, but that&#39;s still somewhat ugly when you can just make it so the user isn&#39;t even tempted to run it in the first place.)</p>
<p>Is for digging through Program Files and running executables at random &#8212; &quot;at random&quot; is way too strong, but I&#39;ve definitely started programs directly for one reason or another, and it&#39;s not terribly uncommon that there will be a couple executables present and you have to guess which one is the thing you&#39;re actually &quot;supposed&quot; to run.</p>
<p>In short, I consider this question well-intentioned.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105743">
				<div id="div-comment-1105743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BOFH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105743">
			February 10, 2014 at 6:58 pm</a>		</div>

		<p>I wonder, what extra functionality does this little program accomplish that you don&#39;t already get with cmd.exe?</p>
<p>If I take the ls.exe program from Gnu On Windows as an example and rename it to ls.mod, then I only need to execute ls.mod from the commandline:</p>
<p>C:test&gt;ren ls.exe ls.mod</p>
<p>C:test&gt;ls.mod -Alh</p>
<p>total 180K</p>
<p>-rwxrwxrwx &nbsp;1 user 0 177K 2005-04-21 02:41 ls.mod</p>
<p>The only difference being that I must use the full filename &quot;ls.mod&quot; on the commandline, instead of simply &quot;ls&quot;.</p>
<div class="post">[<em>The program is not interesting by itself, but it can be useful when incorporated into a larger program. Consider, for example, a three-pass compiler. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105753">
				<div id="div-comment-1105753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105753">
			February 11, 2014 at 2:40 am</a>		</div>

		<p>@BOFH: you can do</p>
<p> &nbsp; &nbsp;set PATHEXT=%PATHEXT%;.MOD</p>
<p>and it will work without extension.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105763">
				<div id="div-comment-1105763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105763">
			February 11, 2014 at 3:18 am</a>		</div>

		<p>I am reminded of WINOA386.MOD which has something to do with virtualising MS-DOS programs in the days before NTVDM.EXE, and MMTASK.TSK which has something to do with playing sounds in the background. (Apparently in Windows 3.x MMTASK.TSK was passed a pointer on the command line, because it was possible to pass arbitrary bytes back then.)</p>
<p>Then there&#39;s the Windows 3.x debugger that renamed its copy of DBGHELP.DLL to make it look like a font. (Under Windows 3.x fonts were actually a type of resource-only DLL anyway.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105773">
				<div id="div-comment-1105773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">metafonzie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105773">
			February 11, 2014 at 4:29 am</a>		</div>

		<p>The author has provided a perfectly valid suggestion as to why such a technique might be needed. Some developers are so limited by their ignorance&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105783">
				<div id="div-comment-1105783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105783">
			February 11, 2014 at 4:29 am</a>		</div>

		<p>&gt; I think some major installer platform (don&#39;t remember which) does this too.</p>
<p>A better question would be, which installer doesn&#39;t do that.</p>
<p>It&#39;s also possible to directly run something from an alternate data stream this way, if you want to be extra sneaky.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-markkeyb even thread-even depth-1" id="comment-1105803">
				<div id="div-comment-1105803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MarkKB' rel='external nofollow' class='url'>MarkKB</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105803">
			February 11, 2014 at 5:59 am</a>		</div>

		<p>&gt;[You guys are so cute thinking such people don&#39;t exist. -Raymond]</p>
<p>Indeed, at the age of ten when I was just a proto-geek, I went through both the Program Files and Windows directory and basically launched everything I saw that had &quot;.exe&quot; beside it. Because when you&#39;re ten, you just want to explore everywhere and poke everything to see what it does. :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105813">
				<div id="div-comment-1105813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105813">
			February 11, 2014 at 6:20 am</a>		</div>

		<p>&quot;Indeed, at the age of ten when I was just a proto-geek, I went through both the Program Files and Windows directory and basically launched everything I saw that had &quot;.exe&quot; beside it. Because when you&#39;re ten, you just want to explore everywhere and poke everything to see what it does. :D&quot;</p>
<p>This ^</p>
<p>I also remember being delighted when I discovered clock.avi among various other things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105823">
				<div id="div-comment-1105823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BOFH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105823">
			February 11, 2014 at 6:47 am</a>		</div>

		<p>Yes, adding .MOD to the %PATHEXT% is even better.</p>
<p>I&#39;m just curious, is there something that is gained by this little program, or was this scenario just a setup to show how to programmatically execute progam files with arbitrary file extensions?</p>
<div class="post">[<em>Somebody who adds .MOD to the %PATHEXT% is clearly doing it on purpose, not by accident. They are outside the target audience for this trick. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105843">
				<div id="div-comment-1105843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105843">
			February 11, 2014 at 8:20 am</a>		</div>

		<p>[Somebody who adds .MOD to the %PATHEXT% is clearly doing it on purpose, not by accident. They are outside the target audience for this trick. -Raymond]</p>
<p>Just don&#39;t add .DLL. There&#39;s some difference about the entry point.</p>
<p>On the flip side, if you&#39;re willing to tinker with assembly, you could write such an entry point as detects the sense of the invocation and does the right thing. This is not a particularly good idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105853">
				<div id="div-comment-1105853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105853">
			February 11, 2014 at 8:54 am</a>		</div>

		<p>[On the flip side, if you&#39;re willing to tinker with assembly, you could write such an entry point as detects the sense of the invocation and does the right thing. This is not a particularly good idea.]</p>
<p>I did that once. I had an EXE that copied itself as DLL and set the &quot;is a DLL&quot; bit in the PE header. The entry point was an assembly stub that checked this bit and jumped to WinMain or DllMain, depending.</p>
<p>(Obviously such a binary did not depend on the CRT)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1105963">
				<div id="div-comment-1105963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105963">
			February 11, 2014 at 5:44 pm</a>		</div>

		<p>@Neil: Don&#39;t forget XCOPY32.MOD too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105973">
				<div id="div-comment-1105973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1105973">
			February 11, 2014 at 7:02 pm</a>		</div>

		<p>msdn still recommends launching ctl applets with rundll32:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/cc144191%28v=vs.85%29.aspx">msdn.microsoft.com/&#8230;/cc144191%28v=vs.85%29.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1106073">
				<div id="div-comment-1106073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1106073">
			February 12, 2014 at 8:24 am</a>		</div>

		<p>@MarkKB: &quot;Program Files&quot; didn&#39;t exist back when I tried to do that ;-)</p>
<p>Though I don&#39;t remember what happened when you double-clicked on krnl386.exe or user.exe. It was either nothing or some error message.</p>
<p>And MS-DOS was even better. RECOVER.EXE anyone?</p>
<p>[cue someone else channeling the Four Yorkshiremen sketch and mentioning an even older system]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1106293">
				<div id="div-comment-1106293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1106293">
			February 12, 2014 at 2:19 pm</a>		</div>

		<p>[cue someone else channeling the Four Yorkshiremen sketch and mentioning an even older system]</p>
<p>I give you &lt;A HREF=&quot;<a rel="nofollow" target="_new" href="http://ask.slashdot.org/story/07/05/09/1937218/big-red-button-disasters&quot;&gt;halt.ireallymeanit&lt;/A&gt;">ask.slashdot.org/&#8230;/A&gt;</a> (about 3/4 of the way down the long page &#8212; use find on page).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1107093">
				<div id="div-comment-1107093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ignacio Rodriguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140210-00/?p=1823#comment-1107093">
			February 17, 2014 at 3:50 am</a>		</div>

		<p>The last time I did that (renaming exes) I hit people with so much time in their hands that they looked for files starting with &quot;MZ&quot; for re-renaming.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

