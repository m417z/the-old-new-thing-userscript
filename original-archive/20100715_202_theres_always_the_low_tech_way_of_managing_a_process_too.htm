<html>
<head>
<title>There's always the low-tech way of managing a process, too</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>There&#8217;s always the low-tech way of managing a process, too</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 15, 2010 / year-entry #203</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">One of my colleagues had a problem with content management. I've changed the underlying scenario but the principle is the same. Is there a way to require that someone other than the author of a proposal sign off before the proposal tracking system accepts it? We had an issue where somebody wrote up a proposal,...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>One of my colleagues had a problem with content management. I've changed the underlying scenario but the principle is the same.</p>
<blockquote class="q"><p> Is there a way to require that someone other than the author of a proposal sign off before the proposal tracking system accepts it? We had an issue where somebody wrote up a proposal, and due to a miscommunication, the proposal coordinator thought the proposal was ready and submitted it prematurely. This happened to another team in our group, and we want to make sure we don't make the same mistake. </p>
</blockquote>
<p> Another colleague explained: </p>
<blockquote class="m"><p> This is a people problem, not a technology problem. One way to work around it is to tell the proposal coordinator, "Don't submit the proposal until I sent you email that says it's okay to submit the proposal." </p>
</blockquote>
<p> I agree that this was a people problem, but the offered solution suffers from the same miscommunication problem as the original. The proposal coordinator might ask, "Is the proposal ready?" and the author responds, "It'll be ready tomorrow." The next morning, the proposal coordinator submits the proposal assuming that the author's response meant "Submit it tomorrow," when the author actually meant "You will get an email message from me tomorrow when it's ready." </p>
<p> My colleague responded that the technique still has a single point of failure: An error by one person (the proposal coordinator or the proposal author&mdash;you decide who is at fault) results in the proposal to be submitted prematurely. We want to make sure two people sign off on the proposal before it is submitted. </p>
<p> I proposed a method popularized by Henry Ford: The assembly line. </p>
<blockquote class="m"><ul>
<li>Author writes proposal. Places proposal in Location&nbsp;1. </li>
<li>Proposal is reviewed by reviewer&nbsp;A.     When it passes review, it is moved to Location&nbsp;2. </li>
<li>Proposal is reviewed by reviewer&nbsp;B.     When it passes review, it is moved to Location&nbsp;3. </li>
<li>Proposal coordinator picks up proposals from Location&nbsp;3     and submits them. </li>
</ul>
<p>  With this scheme, every proposal must be approved by both reviewer&nbsp;A and reviewer&nbsp;B. If reviewer&nbsp;A fails to approve the proposal, then it remains in location&nbsp;1. If reviewer&nbsp;B fails to approve the proposal, then it remains in location&nbsp;2. </p>
</blockquote>
<p> This is another one of those <a href="http://blogs.msdn.com/oldnewthing/archive/2005/12/05/500072.aspx"> simple low-tech solutions</a>: Instead of putting all proposals (complete and incomplete) in one location, the location of the proposal represents its approval state. </p>
<p> Of course, you can add more bells and whistles to this technique. For example, you can allow reviews in parallel by having Location&nbsp;1 mean "unapproved", Location&nbsp;2a mean "approved by reviewer&nbsp;A only", Location&nbsp;2b mean "approved by reviewer&nbsp;B only", and Location&nbsp;3 mean "approved by both reviewers." I'm sure you can come up with other tweaks. (I'm assuming that the proposal file format doesn't support custom fields like "signed off by".) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-845923">
				<div id="div-comment-845923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RobertWrayUK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-845923">
			July 15, 2010 at 7:05 am</a>		</div>

		<p>This reminds me of the Maker/Checker (<a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Maker-checker" rel="nofollow">en.wikipedia.org/&#8230;/Maker-checker</a>) technique that banks use, or at least they&#39;re both of a similar ilk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-nathan_works odd alt thread-odd thread-alt depth-1" id="comment-845933">
				<div id="div-comment-845933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/nathan_works' rel='external nofollow' class='url'>nathan_works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-845933">
			July 15, 2010 at 7:21 am</a>		</div>

		<p>workflow, man, workflow..</p>
<p>(OK, since we don&#39;t know when this blog post was generated).. But Sharepoint does a great job of this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-845943">
				<div id="div-comment-845943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JerryR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-845943">
			July 15, 2010 at 7:32 am</a>		</div>

		<p>Very similar to kanban concept devised by Toyota for lean/just-in-time production.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-845953">
				<div id="div-comment-845953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arnshea</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-845953">
			July 15, 2010 at 8:07 am</a>		</div>

		<p>One of my first gigs after grad school was putting together a web-based app that did exactly what you&#39;re talking about. &nbsp;In this case the department was responsible for password resets and various permissions. &nbsp;Certain requests had to be routed to certain people for their approval with various emails indicating state transitions and a few loops to allow for the occasional screw up (ala Jill rejected Mike&#39;s request but should have approved it). &nbsp;Throw in a final state for &quot;provisioned&quot; after the work has been done. &nbsp;I&#39;m sure this kind of workflow applies to a ton of other business processes.</p>
<p>I&#39;d never thought of it as an assembly line but you&#39;re spot on, it&#39;s very much an assembly line-like process. &nbsp;The thing being &quot;produced&quot; if you will is whatever you submitted the request for &#8211; in your example getting the proposal submitted, in my case getting the request provisioned (e.g., password reset or permission to access file system X).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-845973">
				<div id="div-comment-845973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-845973">
			July 15, 2010 at 10:19 am</a>		</div>

		<p>Isn&#39;t the point of software to simplify workflow? What&#39;s wrong with having software require you to do something instead of telling people to follow a process and have them ignore it because it &quot;takes too long&quot;?</p>
<p>For example, when I started my current job, I intended to organize every email I receive at the time I receive it. Guess what? There are now 1140 emails in my inbox compared to 159 in my largest folder. I&#39;m lazy and would benefit greatly from some sort of automated solution (it&#39;s not as simple as filtering. I need to sort emails by project, type, resolved status, etc).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-845983">
				<div id="div-comment-845983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-845983">
			July 15, 2010 at 10:50 am</a>		</div>

		<p>A problem with status-based location is that it means everyone who has an interest in the item has to know what status it&#39;s in in order to find it (e.g., for further review). Not a problem when you have 3 documents, perhaps, but doesn&#39;t necessarily scale all that well. The reason I know this is is that we use this system (in DevDiv UE, among others) to track art requests for documentation. They enter the system as requests, go through a &quot;in process&quot; stage, a &quot;review&quot; stage, and then a &quot;final&quot; stage. Problem is that the original submitter (a writer) doesn&#39;t necessarily know whether the graphics person has gotten to the request, and ends up having to sift through potentially thousands of requests to find his or her specific request. (In reality it&#39;s not that dire, since we can search by ID, but that&#39;s the point &#8212; you have to search for something who&#39;s ID/title you actually know.)</p>
<p>Consider an analogy &#8212; you drop your car off for servicing. You come back and you have to go to a different counter to ask about it, depending on whether they&#39;ve even started on it (pending request), are working on it (in process), or are done with it (ready). Only you&#39;ve dropped off a dozen cars over the course of a month and so have 300 other people.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-845993">
				<div id="div-comment-845993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-845993">
			July 15, 2010 at 11:25 am</a>		</div>

		<p>Boris, maybe this won&#39;t work for you, but it works for me. I just gave up trying to organize emails, and now I get everything I need by either:</p>
<p>1) Copying the email file into the project folder it applies to</p>
<p>2) Searching my inbox</p>
<p>Anyway, my inbox has tens of thousands of messages in it, and I seem to be able to get at information the same as everybody else, so I&#39;m happy with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-846003">
				<div id="div-comment-846003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicole DesRosiers</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-846003">
			July 15, 2010 at 11:50 am</a>		</div>

		<p>Mike: Isn&#39;t the great thing about virtual documents that they can have more than one location at a time? &nbsp;Let&#39;s say that Reviewer A and Reviewer B both have huge piles of stuff, and you need to find your item. &nbsp;Since it&#39;s a virtual document, it can be in both Reviewer A&#39;s pile and in your &quot;Things I Submitted&quot; pile.</p>
<p>Problem solved?</p>
<p>(Could require specific software, but could also be handled by, say, tagging.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-846013">
				<div id="div-comment-846013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arnshea</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-846013">
			July 15, 2010 at 1:43 pm</a>		</div>

		<p>RE finding email. &nbsp;I gave up on organizing email a few years back.</p>
<p>Search/Windows Search/Windows Desktop Search FTW</p>
<p>kind:email has:attachment sent:&quot;last week&quot; &quot;I&#39;m buying lunch&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-845963">
				<div id="div-comment-845963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-845963">
			July 15, 2010 at 8:13 am</a>		</div>

		<p>This is why it&#39;s so hard for software engineers to beat a *good* paper process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-846023">
				<div id="div-comment-846023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jasomill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-846023">
			July 15, 2010 at 6:41 pm</a>		</div>

		<p>Off-topic, but amen to the &quot;search-based organization of email.&quot; For the past decade, after reading my email, I&#39;ve put it all in a folder called &quot;Saved,&quot; which now contains over 30,000 messages. When I need to find something, I search. Funny how Google came up with the same basic idea when developing Gmail. I probably have </p>
<p>&quot;How do you find anything?&quot; I&#39;m often asked. Never been a problem (the few times when I&#39;ve really needed &quot;all the emails relating to a particular such-and-such,&quot; e.g., for litigation purposes, it takes only a few minutes to do so; why optimize for this uncommon case?). On the other hand, I&#39;ve noticed the people who &quot;organize&quot; their email into innumerable subfolders are the ones who have the most trouble finding old messages (mainly because they never bother to learn about their email package&#39;s search features).</p>
<p>Email, like most nontrivial forms of information, doesn&#39;t admit a natural* hierarchical structure (&quot;I need to sort emails by project, type, resolved status, etc.&quot;, Boris writes above), and attempts to &quot;shoe-horn&quot; such a structure are often, at best, a waste of time.</p>
<p> &nbsp; &nbsp;-jtm</p>
<p>* In the sense of &quot;there&#39;s one, and only one, obvious way to do it,&quot; or, if you prefer rigor, in the sense of category theory &#8212; the &quot;obvious way to do it&quot; depending, in this case, on the circumstances. Incidentally, this is why relational databases work much better, in both theory and practice, than hierarchical databases. It&#39;s also why object-oriented design is so hard to do well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-846033">
				<div id="div-comment-846033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KatieL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-846033">
			July 16, 2010 at 5:35 am</a>		</div>

		<p>I just grep across directories of flat archives to find email as well. I&#39;ve got a decade of email in there; probably hundreds of thousands of messages. It&#39;s reasonably fast &#8212; and it&#39;s more capable of handling that bulk than any of the UIs I&#39;ve found.</p>
<p>The main way it could be improved is if grep supported &quot;X within N lines of Y&quot;&#8230; but then I guess that&#39;s what Perl is for :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-846043">
				<div id="div-comment-846043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-846043">
			July 16, 2010 at 7:58 am</a>		</div>

		<p>I wish I could tag an e-mail message, WHEN I receive it, that it will expire on a certain date and should be deleted on that date.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-846063">
				<div id="div-comment-846063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-846063">
			July 16, 2010 at 8:50 am</a>		</div>

		<p>David: you can use a mail action to do that right now&#8230; I guess I don&#39;t understand what feature you&#39;re asking for?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-846103">
				<div id="div-comment-846103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arnshea</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100715-00/?p=13423#comment-846103">
			July 16, 2010 at 10:56 am</a>		</div>

		<p>@david, hmmm, a poor man&#39;s way of doing that in outlook &#8211; drag the message to the task pane, prepend DELETE MSG &#8211; to the subject and set the date to the date you want to delete it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

