<html>
<head>
<title>How do I customize the console properties for a shortcut to a console application?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I customize the console properties for a shortcut to a console application?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 27, 2013 / year-entry #143</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You already know how to create a shortcut: #include <windows.h> #include <tchar.h> #include <shlobj.h> #include <atlbase.h> // class CCoInitialize incorporated here by reference int __cdecl _tmain(int argc, TCHAR **argv) { // error checking elided for expository purposes CCoInitialize init; CComPtr<IShellLink> spsl; spsl.CoCreateInstance(CLSID_ShellLink); spsl->SetPath(TEXT("C:\\Windows\\system32\\cmd.exe")); CComQIPtr<IPersistFile>(spsl)->Save(L"Here.lnk", TRUE); return 0; } If you double-click the resulting shortcut from...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
You already know how to create a shortcut:
</p>
<pre>
#include &lt;windows.h&gt;
#include &lt;tchar.h&gt;
#include &lt;shlobj.h&gt;
#include &lt;atlbase.h&gt;

// <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/05/20/135841.aspx">class CCoInitialize</a> incorporated here by reference

int __cdecl _tmain(int argc, TCHAR **argv)
{
 // error checking elided for expository purposes
 CCoInitialize init;
 CComPtr&lt;IShellLink&gt; spsl;
 spsl.CoCreateInstance(CLSID_ShellLink);
 spsl-&gt;SetPath(TEXT("C:\\Windows\\system32\\cmd.exe"));
 CComQIPtr&lt;IPersistFile&gt;(spsl)-&gt;Save(L"Here.lnk", TRUE);
 return 0;
}
</pre>
<p>
If you double-click the resulting shortcut from Explorer,
it will run the command processor in a default console window.
</p>
<p>
Today's Little Program
customizes the other console properties,
so you can control settings like the
console buffer size and whether
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/09/13/4886108.aspx">
QuickEdit</a>
is enabled by default.
</p>
<p>
We use the <code>IShell&shy;Data&shy;List</code> interface to attach
"bonus data" to the shell link.
The data we are interested in here is the
<code>NT_<wbr>CONSOLE_<wbr>PROPS</code>.
Remember, Little Programs perform little to no error checking,
use hard-coded paths,
and all that other stuff that make them
unsuitable for shipping-quality code.
</p>
<pre>
int __cdecl _tmain(int argc, TCHAR **argv)
{
 CCoInitialize init;
 CComPtr&lt;IShellLink&gt; spsl;
 spsl.CoCreateInstance(CLSID_ShellLink);
 spsl-&gt;SetPath(TEXT("C:\\Windows\\system32\\cmd.exe"));

 <font COLOR=blue>NT_CONSOLE_PROPS props;
 ZeroMemory(&amp;props, sizeof(props));
 props.dbh.cbSize = sizeof(props);
 props.dbh.dwSignature = NT_CONSOLE_PROPS_SIG;
 props.wFillAttribute = FOREGROUND_BLUE | FOREGROUND_GREEN |
                        FOREGROUND_RED; // white on black
 props.wPopupFillAttribute = BACKGROUND_BLUE | BACKGROUND_GREEN |
                             BACKGROUND_RED | BACKGROUND_INTENSITY |
                             FOREGROUND_BLUE | FOREGROUND_RED;
                             // purple on white
 props.dwWindowSize.X = 132; // 132 columns wide
 props.dwWindowSize.Y = 50; // 50 lines tall
 props.dwScreenBufferSize.X = 132; // 132 columns wide
 props.dwScreenBufferSize.Y = 1000; // large scrollback
 props.uCursorSize = 25; // small cursor
 props.bQuickEdit = TRUE; // turn QuickEdit on
 props.bAutoPosition = TRUE;
 props.uHistoryBufferSize = 25;
 props.uNumberOfHistoryBuffers = 4;
 props.ColorTable[ 0] = RGB(0x00, 0x00, 0x00);
 props.ColorTable[ 1] = RGB(0x00, 0x00, 0x80);
 props.ColorTable[ 2] = RGB(0x00, 0x80, 0x00);
 props.ColorTable[ 3] = RGB(0x00, 0x80, 0x80);
 props.ColorTable[ 4] = RGB(0x80, 0x00, 0x00);
 props.ColorTable[ 5] = RGB(0x80, 0x00, 0x80);
 props.ColorTable[ 6] = RGB(0x80, 0x80, 0x00);
 props.ColorTable[ 7] = RGB(0xC0, 0xC0, 0xC0);
 props.ColorTable[ 8] = RGB(0x80, 0x80, 0x80);
 props.ColorTable[ 9] = RGB(0x00, 0x00, 0xFF);
 props.ColorTable[10] = RGB(0x00, 0xFF, 0x00);
 props.ColorTable[11] = RGB(0x00, 0xFF, 0xFF);
 props.ColorTable[12] = RGB(0xFF, 0x00, 0x00);
 props.ColorTable[13] = RGB(0xFF, 0x00, 0xFF);
 props.ColorTable[14] = RGB(0xFF, 0xFF, 0x00);
 props.ColorTable[15] = RGB(0xFF, 0xFF, 0xFF);
 CComQIPtr&lt;IShellLinkDataList&gt;(spsl)-&gt;AddDataBlock(&amp;props);</font>

 CComQIPtr&lt;IPersistFile&gt;(spsl)-&gt;Save(L"Here.lnk", TRUE);
 return 0;
}
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1058253">
				<div id="div-comment-1058253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1058253">
			May 27, 2013 at 7:48 am</a>		</div>

		<p>For fun, here&#39;s the original EGA color palette (at least, this is what I observed it as, back in the day):</p>
<p>props.ColorTable[ 0] = RGB(0x00, 0x00, 0x00);</p>
<p>props.ColorTable[ 1] = RGB(0x00, 0x00, 0xAA);</p>
<p>props.ColorTable[ 2] = RGB(0x00, 0xAA, 0x00);</p>
<p>props.ColorTable[ 3] = RGB(0x00, 0xAA, 0xAA);</p>
<p>props.ColorTable[ 4] = RGB(0xAA, 0x00, 0x00);</p>
<p>props.ColorTable[ 5] = RGB(0xAA, 0x00, 0xAA);</p>
<p>props.ColorTable[ 6] = RGB(0xAA, 0x55, 0x00);</p>
<p>props.ColorTable[ 7] = RGB(0xAA, 0xAA, 0xAA);</p>
<p>props.ColorTable[ 8] = RGB(0x55, 0x55, 0x55);</p>
<p>props.ColorTable[ 9] = RGB(0x55, 0x55, 0xFF);</p>
<p>props.ColorTable[10] = RGB(0x55, 0xFF, 0x55);</p>
<p>props.ColorTable[11] = RGB(0x55, 0xFF, 0xFF);</p>
<p>props.ColorTable[12] = RGB(0xFF, 0x55, 0x55);</p>
<p>props.ColorTable[13] = RGB(0xFF, 0x55, 0xFF);</p>
<p>props.ColorTable[14] = RGB(0xFF, 0xFF, 0x55);</p>
<p>props.ColorTable[15] = RGB(0xFF, 0xFF, 0xFF);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1058273">
				<div id="div-comment-1058273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1058273">
			May 27, 2013 at 8:21 am</a>		</div>

		<p>Too bad this struct does not have a mask field to mark which fields you want to set, you either have to guess what the correct defaults should be for the things you don&#39;t need to change or read from the registry.</p>
<p>You don&#39;t seem to set any of the font fields, does 0 mean default? MSDN does not say anything about it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1058303">
				<div id="div-comment-1058303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1058303">
			May 27, 2013 at 10:32 am</a>		</div>

		<p>I couldn&#39;t comment further on &quot;Reading mouse input from a console program, and programmatically turning off Quick Edit mode&quot; (can&#39;t link)</p>
<p>So, I think the actual reason the ENABLE_EXTENDED_FLAGS exists is this: &quot;Why isn&#39;t QuickEdit on by default in console windows?&quot; (can&#39;t link)</p>
<p>Probably, its name would better be something along the lines of &quot;enable special mouse modes&quot;, as insert mode uses the right mouse button and quick-edit mode uses drag and drop and the right mouse button, both messing with mouse input.</p>
<p>Being that NT_CONSOLE_PROPS is the structure used to deal with shortcuts, maybe the situation was only dealt with at runtime with SetConsoleMode, unlike what I previously suspected.</p>
<p>Anyway, Raymond, what has the future reserved for shell experts? I mean, Windows 8 removed the start menu and yet added a ribbon to Explorer. Ok, I guess you can&#39;t answer this, but this is kind of contradictory, specially now that Modern is the New Thing, until it&#39;s the Old.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1058323">
				<div id="div-comment-1058323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1058323">
			May 27, 2013 at 12:14 pm</a>		</div>

		<p>John Doe: The Ribbon was in the Developer Preview, before they removed the start menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1058373">
				<div id="div-comment-1058373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1058373">
			May 28, 2013 at 2:53 am</a>		</div>

		<p>^You mean the ribbon is not actually present in the retail Windows 8 explorer?</p>
<p>On shortcuts: Sweet! It&#39;s PIF all over again! Minus the &quot;keep console open after program ends&quot; option.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1058383">
				<div id="div-comment-1058383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1058383">
			May 28, 2013 at 4:48 am</a>		</div>

		<p>@The MAZZTer: I always wondered why #6 was #AA5500 and not, say, #AAAA00.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1058393">
				<div id="div-comment-1058393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Typo in source</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1058393">
			May 28, 2013 at 5:49 am</a>		</div>

		<ul>
<li>
<p>CComQIPtr&lt;IShellDataList&gt;(spsl)-&gt;AddDataBlock(&amp;props);</p>
</li>
<li>
<p>CComQIPtr&lt;IShellLinkDataList&gt;(spsl)-&gt;AddDataBlock(&amp;props);</p>
</li>
</ul>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1059283">
				<div id="div-comment-1059283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lorin Geisendorfer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1059283">
			June 2, 2013 at 8:42 am</a>		</div>

		<p>Using CComQIPtr for an example is OK but in the real world you really need to get the hResult.</p>
<p>ATL is nice if you know how to use it in production. You demand your readers learn the API that</p>
<p>is what I respect most about all your posts. Good quality but could use more reader input. You</p>
<p>have challenged me many times to write code that is correct and full.</p>
<div class="post">[<em>I think you completely missed the point of Little Programs. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1059293">
				<div id="div-comment-1059293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lorin Geisendorfer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130527-00/?p=4253#comment-1059293">
			June 2, 2013 at 8:54 am</a>		</div>

		<p>if you want to code review just ask me.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

