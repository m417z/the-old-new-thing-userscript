<html>
<head>
<title>On the ways of creating a GUID that looks pretty</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>On the ways of creating a GUID that looks pretty</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 10, 2015 / year-entry #75</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>39</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer had what at first appeared to be a question born of curiousity. Is it possible that a GUID can be generated with all ASCII characters for bytes? In other words, is it possible that a GUID can be generated, and then if you interpret each of the 16 bytes as an ASCII character,...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had what at first appeared to be a question born of
curiousity.
</p>
<blockquote CLASS=q><p>
Is it possible that a GUID can be generated
with all ASCII characters for bytes?
In other words, is it possible that a GUID can be generated,
and then if you interpret each of the 16 bytes as
an ASCII character,
the result is a printable string?
Let's say for the sake of argument that the printable
ASCII characters are U+0020 through U+007E.
</p>
</blockquote>
<p>
Now, one might start studying the
various GUID specifications to see whether such as GUID is legal.
For example, types 1 and 2 are based on a timestamp
and MAC address.
An all-ASCII MAC address is legal.
The locally-administered bit has value 0x02,
and one you set that bit,
all the other bits can be freely assigned by the
network administrator.
But then you might notice the Type Variant field,
and the requirement that all new GUIDs must
set the top bit, so that takes you out of
the printable ASCII region, so bzzzzt,
no all-ASCII GUID for you.
</p>
<p>
But we've fallen into the trap of
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/06/20/10427187.aspx">
answering the question
instead of
solving the problem</a>.
</p>
<p>
What is the problem that you're trying to solve,
where you are wondering about all-ASCII GUIDs?
</p>
<blockquote CLASS=q><p>
We want to create some sentinel values in our database,
and we figured we could use some all-ASCII GUIDs for convenience.
</p>
</blockquote>
<p>
If you want a sentinel value that is guaranteed to be unique,
why not create a GUID?
</p>
<pre>
C:\&gt; <a HREF="http://uuidgen.com/">uuidgen</a>
GUID_SpecialSentinel = {that GUID}
</pre>
<p>
Now you are guaranteed that the value is unique
and will never collide with any other valid GUID.
</p>
<blockquote CLASS=q><p>
We could do that, but we figured it'd be handy if those
sentinel values spelled out something
so they'd be easier to spot in a dump file.
If we know that all-ASCII GUIDs are not valid,
then we can use all-ASCII GUIDs for our sentinel values.
</p>
</blockquote>
<p>
Now, while <code>uuidgen</code> does produce valid GUIDs,
it's also the case that those valid GUIDs aren't
particularly easy to remember, nor do they exactly
trip off the tongue.
After all, the space of values that are
easy to pronounce and remember
is much, much smaller than 2&sup1;&sup2;&#x2078;.
It's probably more on the order of 2&sup2;&#x2070;,
which is not enough bits to ensure global uniqueness.
Heck, it's not even
enough bits to describe all the pixels
on your screen!
</p>
<p>
So w00t! Since all-ASCII GUIDs are not generatable under
the current specification for GUIDs,
I can go ahead and name my GUID
<code>{6d796152-6e6f-4364-6865-6e526f636b73}</code>
which shows up in a memory dump as
</p>
<pre>
52 61 79 6d 6f 6e 64 43-68 65 6e 52 6f 63 6b 73  RaymondChenRocks
</pre>
<p>
I am so awesome!
</p>
<p>
But even if you convince yourself that no current
GUID generation algorithm could create
a GUID that collides with your special
easy-to-remember and quick-to-pronounce sentinel GUIDs,
there is no guarantee that you will make
a particularly unique choice of sentinel value.
</p>
<p>
This is also known as
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/06/07/426294.aspx">
What if two people did this?</a>
</p>
<p>
There are many people named Raymond Chen in the world.
Heck, there are many people named
Raymond Chen <i>at Microsoft</i>.
(We get each other's mail sometimes.)
What if somebody else named Raymond Chen gets
this same clever idea and creates their own
sentinel value called <code>RaymondChenRocks</code>?
Everything works great until my database starts
interoperating with the other Raymond Chen's
database,
and now we have a GUID collision.
</p>
<p>
Now,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2009/10/01/9901585.aspx">
the most common way to create a duplicate GUID
is to duplicate it</a>.
But here, we created a duplicate GUID because the thing we created
<i>was not generated via a duplicate-avoidance algorithm</i>.
If the algorithm wasn't designed to avoid duplicates,
then it's not too surprising that there may be duplicates.
I just pulled this GUID out of my butt.
(Mind you, my butt rocks.)
</p>
<p>
Okay, so let's go back to the original problem so we can solve it.
</p>
<p>
The most straightforward solution
is simply to create a standard GUID each time you
need a new sentinel value.
"Oh, I need a GUID to represent an item
which has been discontinued.
Let me run uuidgen and hey look, there's a new GUID.
I will call it <code>GUID_<wbr>Discontinued</code>."
This solves the uniqueness problem,
and it is very simple to explain and prove correct.
This is what people end up doing the vast majority of the time,
and it's what I recommend.
</p>
<p>
Okay, you want to have the property
that these special GUIDs can be easily
spotted in crash dumps.
One way to do this is to
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/02/11/71307.aspx">
extract the MAC address from a network card,
then destroy the card</a>.
You can now use the 60 bits of the
timestamp fields to encode your ASCII message.
</p>
<p>
A related problem is that you want to generate a GUID based on some other
identifying information, with the properties that
</p>
<ul>
<li>Two items with the same identifying information
    should have the same GUID.</p>
<li>Two items with different identifying information
    should have different GUIDs.</p>
<li>None of these GUIDs should collide with
    GUIDs generated by any other means.
</ul>
<p>
For that, you can use
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/03/24/10145093.aspx">
a name-based GUID generation algorithm</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (39)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1184243">
				<div id="div-comment-1184243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184243">
			April 10, 2015 at 7:11 am</a>		</div>

		<p>So we faced a problem like this with the number of sentinel guids very large. Thankfully we can specify all the sources so we used another algorithm not colliding with 1 or 4.</p>
<p>We&#39;ve seen all-ASCII before: gpt</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184253">
				<div id="div-comment-1184253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 993175</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184253">
			April 10, 2015 at 7:33 am</a>		</div>

		<p>&quot;Extract the MAC address from a network card, then destroy the card,&quot; then hope it isn&#39;t one of the (thankfully exceedingly rare) cards where the manufacturer messed up an assigned duplicate MACs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184263">
				<div id="div-comment-1184263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184263">
			April 10, 2015 at 8:16 am</a>		</div>

		<p>I&#39;ve generated &quot;memorable&quot; GUIDs by simply running a guid program hundreds of thousands of times, filtering out the ones that didn&#39;t start with a pre-determined set of characters, and the eyeballing the remaining choices. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184273">
				<div id="div-comment-1184273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184273">
			April 10, 2015 at 8:28 am</a>		</div>

		<p>Hey! &nbsp;That&#39;s a good looking GUID you have there. &nbsp;Be a shame if something happened to it&#8230;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184303">
				<div id="div-comment-1184303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184303">
			April 10, 2015 at 8:44 am</a>		</div>

		<p>&quot;not generatable under the current specification for GUIDs&quot;</p>
<p>This is just waiting to become a compatibility problem when the specs are updated.</p>
<p>Reminds me of when someone rejected a proposal to add a version byte to a data format, should we need to change it again. &nbsp;&quot;We&#39;re never going to change this again.&quot; &nbsp;Yes, that is apparently what everyone thought the last time it changed, and here we are again&#8230;. &nbsp;IIRC, they didn&#39;t even leave a &quot;save old version&quot; option available.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184313">
				<div id="div-comment-1184313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184313">
			April 10, 2015 at 8:54 am</a>		</div>

		<p>Globally unique, human-memorable, and non-centrally distributed. &nbsp;Pick two.</p>
<p>GUIDs are globally unique and non-centrally distributed, but not human-memorable.</p>
<p>Human names are human-memorable and non-centrally distributed, but not globally unique.</p>
<p>Names from a central authoritative store (like an email address or username) are globally unique and human-memorable, but not non-centrally distributed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184333">
				<div id="div-comment-1184333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184333">
			April 10, 2015 at 9:36 am</a>		</div>

		<p>@Peter. What a waste of several hundred thousand perfectly good GUIDs!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184343">
				<div id="div-comment-1184343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">abelenky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184343">
			April 10, 2015 at 10:21 am</a>		</div>

		<p>I once worked on a project where the devs liked to hand-generate their own vanity GUIDs.</p>
<p>The project was code-named BobSled, and most of the project guids started with &quot;leet-speek&quot; for Bobsled, like:</p>
<p>{B0B57ED0-aaaa-bbbb-cccc-1234567890ab}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184353">
				<div id="div-comment-1184353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184353">
			April 10, 2015 at 10:23 am</a>		</div>

		<p>The designers of the various Guid formats seem to have had little understanding of the fact that a collision of two randomly generated Guids is incredibly unlikely. A collision is as likely as winning the lottery multiple times in a row. All structure in Guids results in no improvement under any circumstances. Just make it 16 random bytes.</p>
<p>Also, no system that I know of makes use of the structure of Guids. It&#39;s just 16 opaque bytes to all systems that I know of.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184363">
				<div id="div-comment-1184363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A Nony Moose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184363">
			April 10, 2015 at 10:28 am</a>		</div>

		<p>I&#39;d hate to be the intern that gets one of your emails&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184393">
				<div id="div-comment-1184393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184393">
			April 10, 2015 at 12:00 pm</a>		</div>

		<p>&quot;It&#39;s probably more on the order of 2²⁰, which is not enough bits to ensure global uniqueness. Heck, it&#39;s not even enough bits to describe all the pixels on your screen!&quot;</p>
<p>Neither is 2^128.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184403">
				<div id="div-comment-1184403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Farnsworth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184403">
			April 10, 2015 at 12:19 pm</a>		</div>

		<p>@Myria</p>
<p>It depends how you interpret &quot;not enough bits to describe all the pixels on your screen&quot;. I&#39;m writing this on a low-end laptop, with a 1366&#215;768 screen. That means I have 2^20 + 512 pixels on screen; 2^20 is thus not enough bits to uniquely name each pixel position on my screen.</p>
<p>2 ^ 128, however, is enough bits to uniquely name every pixel on your screen, even if you run at 4096&#215;2304 (digital cinema 4K resolution).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184433">
				<div id="div-comment-1184433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184433">
			April 10, 2015 at 1:17 pm</a>		</div>

		<p>Thanks for the correction and the link!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein odd alt thread-odd thread-alt depth-1" id="comment-1184443">
				<div id="div-comment-1184443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184443">
			April 10, 2015 at 2:00 pm</a>		</div>

		<p>@mark:</p>
<p>GUIDs are generated and compared many orders of magnitude more often than lotteries are being played.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein even thread-even depth-1" id="comment-1184453">
				<div id="div-comment-1184453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184453">
			April 10, 2015 at 2:24 pm</a>		</div>

		<p>Also, generating enough entropy for 16 bytes of randomness strikes me as computationally a lot harder then basing the result on NIC and date/time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184463">
				<div id="div-comment-1184463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Lyon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184463">
			April 10, 2015 at 2:33 pm</a>		</div>

		<p>Going back to the original problem, GUID_NULL (all zeros) makes a wonderful sentinel. It&#39;s guaranteed not to be a valid GUID.</p>
<div class="post">[<em>ZOMG! This crash dump is filled with our sentinel value! -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chuckop even thread-even depth-1" id="comment-1184483">
				<div id="div-comment-1184483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ChuckOp' rel='external nofollow' class='url'>ChuckOp</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184483">
			April 10, 2015 at 4:16 pm</a>		</div>

		<p>Possibly another question, but similar topic; how did the Office team get away all those &quot;0FF1CE&quot; GUIDs? &nbsp;I think they are IID&#39;s in the registry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184383">
				<div id="div-comment-1184383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184383">
			April 10, 2015 at 11:29 am</a>		</div>

		<p>&quot;Random&quot; has unpredictable collsions. To what is the PRNG initialized?</p>
<p>The original concept was simple: you want a number that is unique in time and space. Very well: there is a time component (clock ticks since some epoch) and a space component (using a common piece of equipment, the hardware address(*) of the NIC, as a proxy for space).</p>
<p>There&#39;s a couple of wrinkles in that, based on handling clocks being set backwards and how quickly you can move a NIC from one machine to another, but on the whole, it&#39;s a complete solution. &nbsp;Until people start to worry that it is also a tracking identifier.</p>
<p>(*) the one in the ROM, as distinct from the address the NIC is using right now, which is software-settable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184503">
				<div id="div-comment-1184503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184503">
			April 10, 2015 at 7:23 pm</a>		</div>

		<p>[ZOMG! This crash dump is filled with our sentinel value! -Raymond]</p>
<p>lol. That just made the site worth it for today.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184413">
				<div id="div-comment-1184413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184413">
			April 10, 2015 at 12:26 pm</a>		</div>

		<p>2**128 is enough bits to have a unique address for every atom in the known universe &#8212; not accounting for dark matter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184423">
				<div id="div-comment-1184423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@128BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184423">
			April 10, 2015 at 1:10 pm</a>		</div>

		<p>Not quite, 2**128 is only about 10**41 (give or take). &nbsp;The current estimate of atoms in the (observable) universe is around 10**80, so we&#39;re not safe until we have 256 bit GUIDs.</p>
<p>Numbers come from <a rel="nofollow" target="_new" href="http://www.universetoday.com/36302/atoms-in-the-universe/" rel="nofollow">http://www.universetoday.com/&#8230;/atoms-in-the-universe</a> so may have changed in the last few years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184493">
				<div id="div-comment-1184493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184493">
			April 10, 2015 at 5:51 pm</a>		</div>

		<p>@ChuckOp</p>
<p>By choosing them manually, because nothing technically prevented them from doing so. It&#39;s not like there are GUID Police who will strike vengeance upon those who use non-randomly-generated GUIDs.</p>
<p>@mark</p>
<p>I think the idea is that, with one of the non-random uniqueness algorithms, you have *zero* chance of duplication on this planet, unless someone screws up the generation process (say, by setting their timestamp backwards). Not 2^-128, but 0.</p>
<div class="post">[<em>I suspect the odds of somebody screwing up the generation process is greater than 1 in 2^128. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184513">
				<div id="div-comment-1184513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184513">
			April 11, 2015 at 1:00 am</a>		</div>

		<p>@12bitslab: You don&#39;t need very many bits to label every particle in the universe. About 5 would probably suffice. According to the rules of QM, all particles of the same type are intrinsically indistinguishable. Not only is it futile to try to tell them apart, it actually gives the wrong answers if you try.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184523">
				<div id="div-comment-1184523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hot</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184523">
			April 11, 2015 at 3:07 am</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://secretgeek.net/hotGuids/index.htm">secretgeek.net/&#8230;/index.htm</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1184533">
				<div id="div-comment-1184533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184533">
			April 11, 2015 at 4:20 am</a>		</div>

		<p>There are 2^128 ≈ 3.4e38 possible values for a GUID (ignoring namespace restrictions.) We can expect a duplicate on the order of every 2e19 GUIDs, give or take a factor of π.</p>
<p>There are 95 characters from U+20 to U+7E inclusive, which makes for 95^16 ≈ 4.4e31 &quot;printable GUIDs&quot;. We can expect a duplicate on the order of every 7e15 &quot;printable GUIDs&quot;.</p>
<p>So printability sacrifices *some* uniqueness, but is probably still good enough for most applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184563">
				<div id="div-comment-1184563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boogaloo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184563">
			April 12, 2015 at 1:14 am</a>		</div>

		<p>Get one before they all run out <a rel="nofollow" target="_new" href="http://wasteaguid.info/">http://wasteaguid.info/</a></p>
<p>&quot;Globally unique, human-memorable, and non-centrally distributed. &nbsp;Pick two.&quot;</p>
<p>Most people don&#39;t need globally unique, it just needs to be unique among their database which in most cases is sitting on a single machine. All they have to worry about is that two people aren&#39;t generating sentinels. Centrally distributing sentinels within your organisation should be pretty trivial. Within a single organisation there are many problems that can be caused if you allow two people to do things without managing it. Unmanaged employees are more likely to produce &quot;oh yeah I&#39;ve been using the tax table for logging holiday requests because it was easier than creating a table, the down side is we now owe a load of tax and will get a complete audit&quot; than a duplicate guid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1184583">
				<div id="div-comment-1184583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184583">
			April 12, 2015 at 7:16 pm</a>		</div>

		<p>Fortunately when you add values to unique value, the result must be also unique.</p>
<p>I would probably tell them to prepend, say&#8230; DEADBEEF, before the generated GUID value, so when they assess the dump and see DEADBEEF, they could check whether the latter values are valid GUID to know whether it&#39;s their sentinel values or not. I believe it&#39;ll be easier for them this way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184593">
				<div id="div-comment-1184593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boogaloo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184593">
			April 13, 2015 at 12:49 am</a>		</div>

		<p>@cheong00 A Guid is fixed size, you can&#39;t just add something to it without removing something else. You&#39;re thinking about a variable length string which has less restrictions and wouldn&#39;t have required the question to be asked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1184673">
				<div id="div-comment-1184673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184673">
			April 13, 2015 at 10:05 am</a>		</div>

		<p>@boogaloo: A GUID + fixed prefix is also a fixed size. Size = sizeof(GUID) + sizeof(prefix). And if you&#39;re using it as a sentinel value (in a database for instance) you just make the field the larger size. Nothing says the table column has to be only 16 bytes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184693">
				<div id="div-comment-1184693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184693">
			April 13, 2015 at 10:34 am</a>		</div>

		<p>@boogaloo: more people need &quot;globally-unique&quot; identifiers than they realize. &nbsp;I do tech support for an RDBMS-based document-management system. &nbsp;The internal identifiers for the document are sequential numbers based on the date at the time of the document creation; for instance, 2014123100000571. &nbsp;Those numbers are OK for uniquely identifying a document within one database, but what happens when you want to merge the contents of two database? &nbsp;such as when to companies, both of which happen to use my application, merge and want to use a combined system? &nbsp;Now you have all sorts of internal (not shown to the users) identifiers in the database tables that cannot be merged due to uniqueness conflicts. &nbsp;If they had used GUIDs from the start for the internal IDs (which they did for other identifiers in the system&#8230;) then database merging would have been a simple process. &nbsp;As it stands we have to make do with a number of workarounds, none of which are entirely satisfactory for my customers: build a new database for all users and mark the old databases as read-only/legacy; export/import database records from one system to another using their buggy database tool. &nbsp;That import/export tool, in fact, was modified to work around the identifier limitation specifically; I can see notes about it in the change log : )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184763">
				<div id="div-comment-1184763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boogaloo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184763">
			April 13, 2015 at 2:44 pm</a>		</div>

		<p>@brian_ee: You&#39;ve just changed the field type from a Guid to a string, which is like going into a shop to buy a wrench for your car and being sold a new car instead.</p>
<p>&quot;A GUID + fixed prefix is also a fixed size. Size = sizeof(GUID) + sizeof(prefix). And if you&#39;re using it as a sentinel value (in a database for instance) you just make the field the larger size. Nothing says the table column has to be only 16 bytes&quot;</p>
<p>@morlamweb: I would imagine as the developer of the system then you assigned the sentinels and they are both the same in both databases because they mean the same thing. If the two companies assigned them then they are likely to be different. If they picked the same one and want them to be different then you remap them when importing and charge them for your time. If you&#39;re talking about randomly assigned Guid&#39;s for things like Invoices etc, then you might want to sanity check them when importing that they don&#39;t exist already (i.e. don&#39;t do an &quot;UPSERT&quot;). </p>
<p>For your example where you&#39;re generating numbers that are human readable and have a high chance of collision then you probably want to have a &quot;company&quot; field that is also part of your key so that old records can share the same number. You can&#39;t rekey it as your customers customers will have problems when referring to invoices etc (or whatever your documents are). But they&#39;ll know which company they dealt with, so you can deal with it that way.</p>
<p>&quot;such as when to companies, both of which happen to use my application, merge and want to use a combined system?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184773">
				<div id="div-comment-1184773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184773">
			April 13, 2015 at 3:27 pm</a>		</div>

		<p>@Rich M Whenever I&#39;m testing and making a lot of GUIDs there&#39;s always a small voice in my head saying &quot;Oh no, you&#39;re wasting GUIDs&quot;. Then I feel bad for all those GUIDs that will never get used for anything important. Just sitting there representing an employee named &quot;123 123&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1184793">
				<div id="div-comment-1184793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184793">
			April 13, 2015 at 6:45 pm</a>		</div>

		<p>@boogaloo: It&#39;s perfectly okay to store it as original GUID in database, and that modify it with prefix/suffix when using it as sentinel value.</p>
<p>I can&#39;t believe I had to write this (TM). (/joke)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184823">
				<div id="div-comment-1184823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tyler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184823">
			April 13, 2015 at 8:56 pm</a>		</div>

		<p>Noticed a few dead links to RFC 4122 on the linked post &quot;How can I generate a consistent but unique value that can coexist with GUIDs?&quot; &#8211; It seems a stable URL is <a rel="nofollow" target="_new" href="http://www.ietf.org/rfc/rfc4122.txt">http://www.ietf.org/&#8230;/rfc4122.txt</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com0003400180b2af1b even thread-even depth-1" id="comment-1184833">
				<div id="div-comment-1184833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Cube+8' rel='external nofollow' class='url'>Cube 8</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184833">
			April 13, 2015 at 11:12 pm</a>		</div>

		<p>uuidgen .com : Account Suspended</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1184883">
				<div id="div-comment-1184883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boogaloo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184883">
			April 14, 2015 at 7:29 am</a>		</div>

		<p>@cheong00 The original question was: &quot;We want to create some sentinel values in our database&quot; and your answer doesn&#39;t allow the sentinel to be stored in the database, therefore I don&#39;t believe it is perfectly okay.</p>
<p>&quot;It&#39;s perfectly okay to store it as original GUID in database, and that modify it with prefix/suffix when using it as sentinel value.</p>
<p>I can&#39;t believe I had to write this (TM). (/joke)&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1184923">
				<div id="div-comment-1184923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184923">
			April 14, 2015 at 9:22 am</a>		</div>

		<p>@boogaloo: I think you completely misunderstood my comment. &nbsp;I wasn&#39;t writing about sentinel values in a database; I was responding to your comment and the potential short-sightedness of using non-globally-unique values in a database. &nbsp;To quote you: &quot;Most people don&#39;t need globally unique, it just needs to be unique among their database &#8230;&quot;. &nbsp;I would argue that most people DO need globally-unique identifiers in a database, even if it&#39;s just a &quot;test&quot; system or somesuch. &nbsp;I know of about 10 customer production systems of my application that scaled up from &quot;pilot&quot; projects. &nbsp;They were initially scoped for ~15 users for ~6 months, and then they end up running 3 years later with over 50 users. &nbsp;I use this to illustrate my point: you just never know how something will end up being used, even if you have a say in the design of the system. &nbsp;To be clear, I&#39;m not a developer of this system; I thought it was clear when I stated &quot;I do tech support&quot; as my primary role.</p>
<p>In short, if you have the choice to go with globally-unique or locally-unique identifiers in your system (assuming that it&#39;s in the design stage, or at a point where it can be changed), then do those of us in support a favor and go with globally-unique IDs. &nbsp;People who come after you who need to push the system into areas that the original design did not call for will thank you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1184993">
				<div id="div-comment-1184993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1184993">
			April 14, 2015 at 6:38 pm</a>		</div>

		<p>&quot;The original question was: &quot;We want to create some sentinel values in our database&quot; and your answer doesn&#39;t allow the sentinel to be stored in the database, therefore I don&#39;t believe it is perfectly okay.&quot;</p>
<p>Try create a MSSQL with 5 fields, and then a char(8) field + uniqueidentifier field. Add 2 record with &quot;DEADBEEF&quot; on char(8) field and a GUID on uniqueidentifier field. Now shutdown the database and try to open the MDF file with binary editor, and observe.</p>
<p>Of course by database it could mean other database, but I think most database that doesn&#39;t do data compression should behave similarly. (And for those which do data compression, you can&#39;t see the sentinel value conveniently anyway)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1185013">
				<div id="div-comment-1185013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150410-00/?p=44263#comment-1185013">
			April 14, 2015 at 7:44 pm</a>		</div>

		<p>Oh, I have forgotten what I thought yesterday, so a re-try&#8230;</p>
<p>By &quot;create some sentinel values in our database&quot;, I believe they&#39;re implementing their own database. Since modern database systems rearrange field storage order to make more efficient use of space, adding sentinel values as fields will almost always prove to be useless later. (Your table cannot contain any variable-length fields, and you have to carefully plan the table structure so the fields agrees with memory alignment.)</p>
<p>Because of this, adding prefix to GUID as sentinel values shouldn&#39;t matter.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

