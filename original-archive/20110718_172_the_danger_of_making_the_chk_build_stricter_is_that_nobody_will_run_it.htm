<html>
<head>
<title>The danger of making the chk build stricter is that nobody will run it</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The danger of making the chk build stricter is that nobody will run it</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 18, 2011 / year-entry #173</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>31</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Our old pal Norman Diamond suggested that Windows should go beyond merely detecting dubious behavior on debug builds and should kill the application when it misbehaves. The thing is, if you make an operating system so strict that the slightest misstep results in lightning bolts from the sky, then nobody would run it. Back in...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Our old pal Norman Diamond suggested that Windows should go beyond merely detecting dubious behavior on debug builds and should <a href="http://blogs.msdn.com/oldnewthing/archive/2006/04/25/583093.aspx#583990"> kill the application when it misbehaves</a>.</p>
<p> The thing is, if you make an operating system so strict that the slightest misstep results in lightning bolts from the sky, then nobody would run it. </p>
<p> Back in the days of 16-bit Windows, as today, there were two builds, the so-called <i>retail</i> build, which had assertions disabled, and the so-called <i>debug</i> build, which had assertions enabled and broke into the debugger if an application did something suspicious. (This is similar to today's terms <a href="http://blogs.msdn.com/larryosterman/archive/2005/08/31/458572.aspx"> checked and free</a>.) </p>
<p> Now, the Windows development team is big on self-hosting. After all, if you are writing the operating system, you should be running it, too. What's more, it was common to self-host the <i>debug</i> version of the operating system, since that's the one with the extra checks and assertions that help you flush out the bugs. </p>
<p> As it happens, the defect tracking system we used back in the day triggered a lot of these assertions. As I recall, refreshing a query resulted in about 50 parameter validation errors caught and reported by Windows. This made using the defect tracking system very cumbersome because you had to babysit the debugger and hit "i" (for <i>ignore</i>) 50 times each time you refreshed a query. </p>
<p> (As I noted in <a href="http://blogs.msdn.com/oldnewthing/archive/2009/11/16/9922754.aspx"> my talk at Reflections|Projections 2009</a>, the great thing about defect tracking systems is that you will hate every single one you use. Sure, the new defect tracking system may have some new features and be easier to use and run faster, but all that does is delay the point at which you begin hating it.) </p>
<p> If Windows had taken the stance that the slightest error resulted in the death of the application, then it would have been impossible for a member of the Windows development team to run the defect tracking system program itself, because once it hit the first of those 50 parameter validation error reports, the program would have been killed, and the defect tracking system would have been rendered useless. </p>
<p> Remember, <a href="http://blogs.msdn.com/oldnewthing/archive/2006/08/15/701130.aspx"> don't change program semantics in the debug build</a>. That just <a href="http://blogs.msdn.com/oldnewthing/archive/2010/01/11/9946339.aspx"> creates Heisenbugs</a>. </p>
<p> I remember that at one point the Windows team asked the people who supported the defect tracking system, "Hey, your program has a lot of problems that are being reported by the Windows debug build. Can you take a look at it?" </p>
<p> The response from the defect tracking system support team was somewhat ironic: "Sorry, we don't support running the defect tracking system on a debug build of Windows. We found that the debug version of Windows breaks into the debugger too much." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (31)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-925293">
				<div id="div-comment-925293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925293">
			July 18, 2011 at 8:12 am</a>		</div>

		<p>This is a variation on this law: If you want to make people do the right thing then you have to make it easier to do the right thing than the wrong thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925313">
				<div id="div-comment-925313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925313">
			July 18, 2011 at 8:53 am</a>		</div>

		<p>Wait. Why didn&#39;t anyone (possibly higher up) exert some pressure on them to support the debug build?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925323">
				<div id="div-comment-925323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [Visual C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925323">
			July 18, 2011 at 8:54 am</a>		</div>

		<p>If programs which triggered assertions in the checked build were denied Windows Logo status, then Windows Logo might actually be a benefit to consumers, and running the checked build for day-to-day development might not be so painful.</p>
<div class="post">[<i>You&#39;d be surprised how angry ISVs get when the logo requirements are made stricter. Make it too strict, and nobody will bother getting logo status. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925333">
				<div id="div-comment-925333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925333">
			July 18, 2011 at 9:00 am</a>		</div>

		<p>I don&#39;t understand what problem killing the misbehaving program would solve in the first place. How would you debug the program that got killed?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925343">
				<div id="div-comment-925343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925343">
			July 18, 2011 at 9:35 am</a>		</div>

		<p>[You&#39;d be surprised how angry ISVs get when the logo requirements are made stricter. Make it too strict, and nobody will bother getting logo status. -Raymond]</p>
<p>You got that right. Between UAC and MSI we see no reason to try anymore. UAC was fixed years later <em>by not installing to Program Files</em>. MSI cannot be fixed until MSI is made re-entrant, by this I mean invoke EXE that invokes MSI from inside MSI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925353">
				<div id="div-comment-925353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">benjamin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925353">
			July 18, 2011 at 9:38 am</a>		</div>

		<p>Maybe I&#39;m missing something here, but if the Defect Tracking system was throwing asserts, isn&#39;t the solution to, you know, make it stop doing that?</p>
<p>Preferably by fixing the suspicious operations?</p>
<div class="post">[<i>See final sentence. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925363">
				<div id="div-comment-925363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925363">
			July 18, 2011 at 9:44 am</a>		</div>

		<blockquote><p>
  UAC was fixed years later <em>by not installing to Program Files</em>.
</p></blockquote>
<p>This sound like your program has a serious limited-user-account bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925373">
				<div id="div-comment-925373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925373">
			July 18, 2011 at 10:16 am</a>		</div>

		<blockquote><p>
  This sound like your program has a serious limited-user-account bug.
</p></blockquote>
<p>Well, this is mainly down to Microsoft suddenly asserting the limited user account like they did. It wasn&#39;t too unexpected because people had gotten too used to running with Admin rights most of the time, but also if they had gradually introduced this kind of thing then most people wouldn&#39;t have started to use it anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925383">
				<div id="div-comment-925383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925383">
			July 18, 2011 at 11:11 am</a>		</div>

		<p>About dogfooding: There&#39;s a philosophical argument in favor of making things as painful for employees of the company that produces the produvt or service.</p>
<p>For example, when I worked for an airline way back when, I enjoyed being able to fly almost anywhere, standby, for pretty cheap (it wasn&#39;t free, and it was more than just the taxes on the airfare). &nbsp;Of course, if the seats were all full pf paying passengers, you were not allowed on the plane. &nbsp;And missing work on Monday because you&#39;re stuck in a different city was frowned upon by the bosses.</p>
<p>So we were insulated from the price of airfare. &nbsp;On the other hand, when I heard that many mid and high-level executives of car companies are pretty much insulated from the pain of mechanical defects, that seems like it takes away the incentives for them to build cards that don&#39;t break. &nbsp;I understand that they are (or were) able to park their cars at work, and have company mechanics work on the cards right there. &nbsp;No fuss, no scheduling with a garage, no bother to get a ride to work and back when you dropped your car off, no expensive car repairs. &nbsp;Somehow, I think that car company executives SHOULD have to dogfood the car repair process.</p>
<p>If the defect tracking system was a commercial product, then it SHOULD be forced to work on a debug build &#8212; maybe an edict from Bill G would have done it. &nbsp;If it was not a commercial product, then &#8230; who knows?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925393">
				<div id="div-comment-925393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925393">
			July 18, 2011 at 11:13 am</a>		</div>

		<p>About logo requirements: &nbsp;I hate, hate the programs (there are a few) that still want to install themselves into the root of the C Drive, and can&#39;t handle blanks in path names. &nbsp;We have only had blanks in path names for, what, 16 years now&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925403">
				<div id="div-comment-925403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925403">
			July 18, 2011 at 11:14 am</a>		</div>

		<p>@Thomas: no, it worked just fine as limited user in XP and in Vista with UAC off. We never could isolate the cause.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925413">
				<div id="div-comment-925413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925413">
			July 18, 2011 at 11:18 am</a>		</div>

		<p>Sorry for the multiple posts&#8230; but &nbsp;arrrgh: &quot;Microsoft suddenly asserting the limited user account like they did&quot;. &nbsp;Well, your company was warned in plenty of time to fix the issue. &nbsp;If a program can&#39;t be bothered to install into Program Files, I probably won&#39;t buy it. &nbsp;What other things does it fail on? &nbsp;Non-US English operating systems? &nbsp;Systems that don&#39;t have a C drive, or where Windows runs off of the D or E drive? &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925423">
				<div id="div-comment-925423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JJJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925423">
			July 18, 2011 at 12:10 pm</a>		</div>

		<p>When I was a new developer, I once took the initiative and ran the product we were developing through Application Verifier and the program crashed. &nbsp;I wrote up a bug report with a stack trace and all that and asked the senior developer of that module to take a look. &nbsp;The response was, &quot;Come on, we can&#39;t support running under every development tool that Microsoft releases.&quot;</p>
<p>I then took the initiative and debugged and fixed the problem myself. &nbsp;This experience was one of the defining moments of my early career, when I discovered that senior developers are not necessarily any good at writing software.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925433">
				<div id="div-comment-925433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">metafonzie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925433">
			July 18, 2011 at 1:22 pm</a>		</div>

		<p>Its kind of obvious but I think its kind of cool that Apple has built a reputation amongst its customesr that they can rely on the OS to be &quot;stable&quot; and &quot;correct&quot; and weed out bad apps. If the users of windows had a microsoft controlled positive experience of tested software from the moment they bought the PC the users would sort of get the idea that &quot;Oh I installed application X and my computer started crashing more&quot; rather than &quot;App not working .. probably some weird windows stuff.. blame microsoft&quot;. This would transfer the balance of power back to microsoft in forcing ISVs into creating more robust apps as customers now have a reliable signal in detecting crappy applications. Even so, I&#39;m not fully convinced that microsofts management values positive customer experiences over making more money.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925443">
				<div id="div-comment-925443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925443">
			July 18, 2011 at 1:49 pm</a>		</div>

		<p>@Metafonzie:</p>
<p>If you think there are no bad apps on OSX, I believe you have lived a sheltered use of OSX. And that&#39;s not because of enforcement on the part of the OS. (It&#39;s more that OSX postdates Windows by about 10 years and therefore has a little less legacy cruft to carry around &#8212; and NO 16 bit cruft to carry around)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd odd alt thread-odd thread-alt depth-1" id="comment-925453">
				<div id="div-comment-925453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925453">
			July 18, 2011 at 2:55 pm</a>		</div>

		<p>This reminds me of something John Robbins said in a class. He couldn&#39;t believe that the Exchange team would crash processes for asserts, instead of having a popup and breaking into the debugger. The result of doing that though, is that the Exchange team runs debug builds all of the time, and since the crash data goes to a central repository they can track the issues.</p>
<p>On the other hand, some people do some crazy double checking/self testing in debug builds, and it does not make sense to run another teams test passes (regularly) ontop of those because everything really slows down. Those should be special &quot;test&quot; builds.</p>
<p>I prefer crashing on asserts. It gets problems fixed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925463">
				<div id="div-comment-925463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925463">
			July 18, 2011 at 4:05 pm</a>		</div>

		<p>I second jader3rd.</p>
<p>If you need to turn assertions off to function you&#39;ve got problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925473">
				<div id="div-comment-925473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925473">
			July 18, 2011 at 5:14 pm</a>		</div>

		<p>@Metafonzi:</p>
<p>I think what you&#39;re trying to say, when translated from marketing-speak, is that Apple has trained their users not to expect their programs to function after an OS upgrade. &nbsp;An Apple user has been trained to say &quot;I guess I better spend the $29.99 to buy the upgrade!&quot; &nbsp;On the other hand, Windows users expect VisiCalc and SimCity 1 to function on Windows 7. &nbsp;It&#39;s not a case of &quot;blame Microsoft&quot; but rather &quot;tell friends that installing Windows 7 breaks everything.&quot;</p>
<p>Expecting too much backwards-compatibility is silly, but assuming that it&#39;s normal for an OS upgrade to break half the applications on your computer is even worse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925483">
				<div id="div-comment-925483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">frymaster</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925483">
			July 18, 2011 at 5:47 pm</a>		</div>

		<p>@Metafonzi</p>
<p>&#39;I think its kind of cool that Apple has built a reputation amongst its customesr that they can rely on the OS to be &quot;stable&quot;&#39;</p>
<p>quite the opposite. &nbsp;Apple are infamous for causing programs to fail when osx is updated, and not only the badly-bahaving ones</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925493">
				<div id="div-comment-925493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925493">
			July 18, 2011 at 6:35 pm</a>		</div>

		<p>@Thomas: Wait. Why didn&#39;t anyone (possibly higher up) exert some pressure on them to support the debug build?</p>
<p>As I understand, the defect tracking system was integrated in the debug build (self hosted) and it wasn&#39;t compatible with itself? Seen as a whole, this system was buggy. You can say it was defect ;)</p>
<p>And yes, exert pressure is exactly what should have been done. You don&#39;t let incompatibilities between two internal apps/systems out the door, or even out of the team. The right solution is to FIX IT. No one should be forced to work with crappy systems where you have to press a button 50 times only to be able to start working.</p>
<div class="post">[<i>What do you mean &quot;compatible with itself&quot;? The defect tracking system is just an app written by some group outside the Windows division. There&#39;s no integration here. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925553">
				<div id="div-comment-925553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925553">
			July 18, 2011 at 10:56 pm</a>		</div>

		<blockquote><p>
  if they had gradually introduced this kind of thing then most people wouldn&#39;t have started to use it anyway
</p></blockquote>
<p>How would you &quot;gradually introduce&quot; UAC? &nbsp;Only turn it on on Tuesdays?</p>
<p>(I&#39;m quite serious here, it&#39;d be interesting to see people&#39;s ideas on how you&#39;d phase in something like this).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925563">
				<div id="div-comment-925563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925563">
			July 19, 2011 at 12:02 am</a>		</div>

		<p>Actually, Mac users had the same problems since 1984. The deal was, Apple simply said that what was in the API books was it. What was documented was that. If you need something not in the APIs, you&#39;re SOL.</p>
<p>Of course, this wasn&#39;t good enough, so devs started doing the same things Raymond gets headaches about. And Apple has a tendency to muck around with internals. A lot. So the next release (major or minor), boom, those apps break. Just like they do on Windows.</p>
<p>Except Apple doesn&#39;t worry about it, with no enterprise customers to support and regular customers who want the new features and keep their systems relatively updated, forcing devs to either not do those tricks or keep up to date.</p>
<p>Heck, one known set of hacks (haxies, using the input manager) basically always breaks because they&#39;re doing stuff that really messes with the internals.</p>
<p>On iOS, Apple does static API scans on apps, trying to pre-empt the use of undocumented or private APIs so they would work on the next OS rev. (You can always do runtime links&#8230; but really if you&#39;re doing that&#8230;).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925573">
				<div id="div-comment-925573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">metafonzie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925573">
			July 19, 2011 at 12:20 am</a>		</div>

		<blockquote><p>
  quite the opposite. &nbsp;Apple are infamous for causing programs to fail when osx is updated, and not only the badly-bahaving ones
</p></blockquote>
<p>What I meant is that Apple usually doesn&#39;t coddle developers and ISVs (i.e. no Developers, Developers, Developers) and thus won&#39;t support broken programs. IMO users who go out and buy the upgrade version are a (vocal) minority.</p>
<blockquote><p>
  Except Apple doesn&#39;t worry about it, with no enterprise customers to support and regular customers who want the new features and keep their systems relatively updated, forcing devs to either not do those tricks or keep up to date.
</p></blockquote>
<p>I was speaking about the consumer side of things. Obviously on the enterprise side the OS would never be installed w/o proper testing of LOB apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925583">
				<div id="div-comment-925583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925583">
			July 19, 2011 at 1:08 am</a>		</div>

		<blockquote><p>
  What I meant is that Apple usually doesn&#39;t coddle developers and ISVs (i.e. no Developers, Developers, Developers) and thus won&#39;t support broken programs.
</p></blockquote>
<p>That might help explain their market share.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925613">
				<div id="div-comment-925613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam V</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925613">
			July 19, 2011 at 7:59 am</a>		</div>

		<p>@David Walker:</p>
<blockquote><p>
  Somehow, I think that car company executives SHOULD have to dogfood the car repair process.
</p></blockquote>
<p>You do that by charging them for the repair &amp; car rental costs. Obviously it&#39;ll be a drop in the bucket for them, but when December rolls around and they see their YTD charges for repairs, they may look at each other and say &quot;This has got to stop. If this is what it&#39;s costing us then it&#39;s taking a huge chunk out of the pockets of our customers.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925643">
				<div id="div-comment-925643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925643">
			July 19, 2011 at 8:54 am</a>		</div>

		<p>[You&#39;d be surprised how angry ISVs get when the logo requirements are made stricter. Make it too strict, and nobody will bother getting logo status. -Raymond]</p>
<p>That&#39;s because logo certification is currenly used (by ms) as a marketing feature, not as a technical proof of quality. For example, the requirements for vista was ridiculous because it&#39;s purpose was to boost vista sales.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925693">
				<div id="div-comment-925693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925693">
			July 19, 2011 at 11:35 am</a>		</div>

		<p>&quot;The defect tracking system is just an app written by some group outside the Windows division. There&#39;s no integration here.&quot;</p>
<p>Why is this accepted as okay? Why can&#39;t the Windows division fix the bugs in their code? It seems like this post is crying out for either better employees, better integration, or both. Yet I don&#39;t see you acknowledging either of these things as necessary.</p>
<div class="post">[<i>So the Windows team should take one of its developers away from fixing bugs in Windows to go over to the team that is responsible for the defect tracking tool, learn how the prorgam works, and fix a bug in it. I don&#39;t know why you&#39;re going on and on about integration since <span style="text-decoration:underline;">this is not integration</span>. It&#39;s just application compatibility. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925733">
				<div id="div-comment-925733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925733">
			July 19, 2011 at 6:07 pm</a>		</div>

		<p>Actually, I think a lot of debugger have option for you to select which type of exceptions/errors to ignore. Maybe also if it&#39;s from specific process? It&#39;s hard to imagine why they don&#39;t make any of these features after you teams complain to them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925763">
				<div id="div-comment-925763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925763">
			July 20, 2011 at 2:02 am</a>		</div>

		<p>Perhaps if they had started developing using checked builds they would have found and fixed the code generating the assertions as it was written, instead of having to go back afterwards.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925743">
				<div id="div-comment-925743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925743">
			July 19, 2011 at 11:03 pm</a>		</div>

		<p>Cheong: Nobody has mentioned a debugger. Raymond was talking about running a defect tracking system (a program used to *report* bugs, not fix them) on a &quot;debug&quot; build of the OS.</p>
<p>Maybe this shouldn&#39;t surprise me at all, but I&#39;m amazed that such a clearly-written article can be so badly misinterpreted by so many people! &quot;Integration&quot;? &quot;Debugger&quot;? Where are these concepts coming from?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925783">
				<div id="div-comment-925783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110718-00/?p=10123#comment-925783">
			July 20, 2011 at 6:23 am</a>		</div>

		<p>The response of the defect tracking system support team is unbelievably unprofessional. Why not descend to their level? Use shims to replicate the behaviour of the checked version of Windows and reply to any bug queries with an unhelpful &quot;this is an error in your code&quot; response.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

