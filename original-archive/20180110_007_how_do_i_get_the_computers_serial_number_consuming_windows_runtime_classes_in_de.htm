<html>
<head>
<title>How do I get the computer's serial number? Consuming Windows Runtime classes in desktop apps, part 5: PowerShell</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I get the computer&#8217;s serial number? Consuming Windows Runtime classes in desktop apps, part 5: PowerShell</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 10, 2018 / year-entry #7</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Now we're cooking with power.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Continuing our series on getting the computer's serial number
in desktop apps in various languages,
we look at PowerShell.
</p>
<p>
I warned you that you're going to be underwhelmed,
so prepare to be underwhelmed.
</p>
<pre>
# The following line has been broken up for readability purposes.
# Make sure to glue them together into one long line.
# (The continuation character doesn't work here.)
$addType = [Windows.System.Profile.SystemManufacturers.SmbiosInformation,
            Windows.System.Profile.SystemManufacturers,
            ContentType=WindowsRuntime]

[Windows.System.Profile.SystemManufacturers.SmbiosInformation]::SerialNumber
</pre>
<p>
The first thing we do is add the type to PowerShell,
which we do by loading up the type from the Windows Runtime metadata.
Specify the type, the parent namespace, and say <code>ContentType = WindowsRuntime</code>.
</p>
<p>
And that's it.
We can now obtain the <code>Serial&shy;Number</code> static property from the
<code>Smbios&shy;Information</code> class just like any other type.
</p>
<p>
Next time, we'll wrap things up with a brief discussion of the
<code>Smbios&shy;Information</code> class itself.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1320295">
				<div id="div-comment-1320295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320295">
			January 10, 2018 at 7:09 am</a>		</div>

		<p>Note that for this particular example you might find it easier to use WMI:</p>
<p>gwmi win32_bios | fl SerialNumber</p>
<p>Though I understand that the point of this series is to document how to integrate with WindowsRuntime in a bunch of platforms.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1320305">
				<div id="div-comment-1320305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jedak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320305">
			January 10, 2018 at 8:09 am</a>		</div>

		<p>I feel gipped.  I was promised underwhelming, and I was not underwhelmed. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1320306">
				<div id="div-comment-1320306" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lars</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320306">
			January 10, 2018 at 8:57 am</a>		</div>

		<p>I&#8217;d like to echo Jedak here. The $addType statement is non-obvious if you aren&#8217;t familiar with PowerShell. OTOH, the C# version is immediately readable (and writable) to someone not familiar with the language. (Linux user here)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1320315">
				<div id="div-comment-1320315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wayne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320315">
			January 10, 2018 at 9:03 am</a>		</div>

		<p>PowerShell is utterly inscrutable; it&#8217;s like C#, Bash, and Perl had a really ugly baby.  I don&#8217;t know why this monstrosity of a language was hoisted on us; it&#8217;s filled with more symbols and bizarre semantics than decades of Unix shells.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1320325">
				<div id="div-comment-1320325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320325">
			January 10, 2018 at 9:10 am</a>		</div>

		<p>I think it&#8217;s because C#, Bash, and Perl, for all their foibles, are still better than Batch. So their baby must be too, right?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1320466">
				<div id="div-comment-1320466" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320466">
			January 11, 2018 at 6:36 am</a>		</div>

		<p>Using :: as scope separator as seen in the example above, is from c++. Not the best decision.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alexcohn even depth-5" id="comment-1320795">
				<div id="div-comment-1320795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320795">
			January 12, 2018 at 11:16 pm</a>		</div>

		<p>No, <code>::</code> must be coming from PHP. There, it&#8217;s officially titled <code>T_PAAMAYIM_NEKUDOTAYIM</code></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1320415">
				<div id="div-comment-1320415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320415">
			January 10, 2018 at 3:51 pm</a>		</div>

		<p>&#8220;itâ€™s filled with more symbols and bizarre semantics than decades of Unix shells&#8221;<br />
I&#8217;m not sure if you&#8217;re serious or not, but the claim that PowerShell is more bizarre than bash is.. bizarre really.</p>
<p>The thing is everybody has been writing bash scripts for decades so we just got used to most of its idiosyncrasies, but really that&#8217;s it. </p>
<p>While PowerShell is far from perfect (but then what mainstream language ever is), it&#8217;s still much, much nicer than writing bash scripts (the horror of parsing arguments in bash alone..). </p>
<p>It takes a while to get used to when starting, but the same is true for every new language that&#8217;s noticeably different from what you&#8217;re used to.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1320755">
				<div id="div-comment-1320755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wayne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320755">
			January 12, 2018 at 1:46 pm</a>		</div>

		<p>You&#8217;re right; it isn&#8217;t worse than Bash but that is small comfort really.</p>
<p>The question is, why is Powershell &#8220;noticeably different than what I&#8217;m used to&#8221;?  Why not make a language that is comfortable and familiar to anyone who has worked in C#, Java, JavaScript, C, C++?  Instead the semantics are hard for beginners and experts to understand.  It&#8217;s clearly inspired by Linux shells but not enough like them to even make that knowledge transferable.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1320915">
				<div id="div-comment-1320915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320915">
			January 15, 2018 at 4:19 pm</a>		</div>

		<p>PowerShell is actually incredibly similar to c- based languages all things considered. </p>
<p>But yes there are differences, but those are mostly due to the different use cases. </p>
<p>C# is a general purpose programming language that ought to scale from thousands lines of code (almost no real world c# programs are smaller than that) to millions. Pretty much nobody uses it interactively despite the ability to do so having existed for years. </p>
<p>PowerShell on the other hand is used interactively to a large degree. The vast majority of PowerShell scripts is anywhere from 100 characters to a few hundred lines of code at most. </p>
<p>Two totally different use cases which necessitate very different decisions. That doesn&#8217;t make either of them wrong it just means you have to pick the right tool for the right job. And PowerShell is excellent for system administration and build system configuration &#8211; from simple things like not having to parse your own arguments (and then document them separately) to complex things like remoting.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 even depth-2" id="comment-1320345">
				<div id="div-comment-1320345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320345">
			January 10, 2018 at 12:20 pm</a>		</div>

		<p>That&#8217;s really only because Raymond is assigning the results to a variable, $addType, as a way of avoiding the output from importing a type. Personally I&#8217;d pipe that line into Out-Null instead, which makes the intent more obvious.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1320355">
				<div id="div-comment-1320355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320355">
			January 10, 2018 at 12:49 pm</a>		</div>

		<p>&#8220;Next time, we&#8217;ll wrap things up with a brief discussion of the SmbiosÂ­Information class itself&#8221;<br />
No Ada? I&#8217;m disappointed, I was looking forward to it after all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1320395">
				<div id="div-comment-1320395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Doubleday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320395">
			January 10, 2018 at 3:29 pm</a>		</div>

		<p>I miss the good old days of INT21H &#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1320486">
				<div id="div-comment-1320486" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320486">
			January 11, 2018 at 7:06 am</a>		</div>

		<p>You have something against CALL 5?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jccompton43 even thread-odd thread-alt depth-1 parent" id="comment-1320536">
				<div id="div-comment-1320536" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ChrisCompton' rel='external nofollow' class='url'>ChrisCompton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320536">
			January 11, 2018 at 1:11 pm</a>		</div>

		<p>I wasn&#8217;t able (yes, as Admin) to run it; error ==<br />
Unable to find type [Windows.System.Profile.SystemManufacturers.SmbiosInformation<br />
,Windows.System.Profile.SystemManufacturers, ContentType=WindowsRuntime].<br />
At line:1 char:1<br />
+ $addType = [Windows.System.Profile.SystemManufacturers.SmbiosInformat &#8230;<br />
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br />
    + CategoryInfo          : InvalidOperation: (Windows.System&#8230;.=WindowsRunti<br />
   me:TypeName) [], RuntimeException<br />
    + FullyQualifiedErrorId : TypeNotFound</p>
<p>Is it because of a version (win 7), the fact that I ran it from virtual, or something else?</p>
<p>Thanks @pc for the gwmi command that works (without admin; virtual and not)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1320576">
				<div id="div-comment-1320576" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1320576">
			January 11, 2018 at 6:08 pm</a>		</div>

		<p>Um, Windows 7 doesn&#8217;t have Windows Runtime types.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1321745">
				<div id="div-comment-1321745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180110-00/?p=97755#comment-1321745">
			January 22, 2018 at 12:10 am</a>		</div>

		<p>You might have noticed this in the first post of the series:<br />
&#8220;Windows 8 introduced the Windows.System.Profile.SystemÂ­Manufacturers.SmbiosInformation runtime class which parses out the serial number for you.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

