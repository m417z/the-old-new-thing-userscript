<html>
<head>
<title>Why is Explorer opted out of Data Execution Prevention and termination on heap corruption, and how effective is the policy to opt it back in?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is Explorer opted out of Data Execution Prevention and termination on heap corruption, and how effective is the policy to opt it back in?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 20, 2017 / year-entry #142</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It's out, but it quickly comes back in, unless you tell it to stay out.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<!-- Aaron Margosis (aaromar) shelltlk 2016/10/19 "File Explorer GP security settings" -->
<p>
Every so often, somebody will report a security issue
with the fact that Explorer is linked
with <code>/NXCOMPAT:NO</code>,
which opts it out of
Data Execution Prevention (DEP),
also known as no-execute (NX).
Explorer is also opted out of termination on heap corruption,
but that's harder to detect from a static analysis.
Why does Explorer opt out of these things?
Doesn't that make it less secure?
</p>
<p>
Explorer opts out of DEP and termination on heap corruption
as a backward-compatibility concession to shell extensions which
are not DEP-compatible, or which corrupt the heap and managed
to get away with it in earlier versions of Windows.
</p>
<p>
This compatibility concession applies only to the x86 version of
Explorer.
Explorer on all other processors
(such as x64)
enables both data execution prevention and termination on heap corruption.
</p>
<p>
Furthermore, this compatibility concession is controlled by
a pair of group policies,
both under
Computer Configuration,
Administrative Templates,
Windows Components,
File Explorer:
</p>
<ul>
<li>Turn off Data Execution Prevention for Explorer</li>
<li>Turn off heap termination on corruption&sup1;</li>
</ul>
<p>
This means that even though x86 Explorer does not have
DEP or termination on heap corruption enabled in its file header,
it will manually enable them as soon as it verifies that neither
policy is in effect.
This is one of the first things Explorer does, so the window
of opportunity is relatively small.
(And, as noted earlier, this situation exists only on x86.
All other processor architectures enable DEP and termination on
heap corruption from the get-go.)
</p>
<p>
Windows defaults to the safe setting of the policy,
namely to re-enable DEP and termination on heap corruption.
The policy is there so that organizations can selectively
enable the policies if they have a shell extension
that is not DEP-compliant or which contains
heap corruption bugs.
</p>
<p>
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20170328-00/?p=95845">
Explorer is a single-instance application</a>,
and this means that if you are running the x64 version of Windows,
and you manually run the x86 version of Explorer,
that copy of Explorer doesn't do much other than hand the request
to the existing 64-bit copy of Explorer.
So the 32-bit version is there, but it doesn't hang around for long.
</p>
<p>
So go ahead and disable those policies in your organization.
The x64 version of Explorer already has DEP and termination
on heap corruption enabled.
Disabling these policies (or leaving them unconfigured)
will make sure you cover the x86 systems as well.
</p>
<p>
<b>Bonus chatter</b>:
But wait, if I run an x86 application on an x64 version of Windows,
and I use the File.Open dialog,
then doesn't that give me an x86 Explorer?
And wouldn't the policies take effect in that case?
</p>
<p>
No, the policies don't take effect in that case because the
File.Open dialog is not running inside the Explorer process.
It's running inside Notepad, or whatever your x86 process is.
The DEP and termination on heap corruption policies of the host
process are the ones that control behavior.
</p>
<p>
&sup1;
You might have noticed the incorrect wording of the policy.
The policy text says "heap termination on corruption",
but that doesn't make sense because it's not the heap that is
terminating; it's the process that is terminating.
The phrase should be "termination on heap corruption".
The reason for the messed up wording is that the heap feature is
known as "terminate on corruption",
and people lazily glue the word "heap" onto the phrase
"terminate on corruption".</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1300035">
				<div id="div-comment-1300035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300035">
			June 20, 2017 at 7:48 am</a>		</div>

		<p>As a highly paid security consultant that only knows how to check header flags I will keep telling my clients that explorer is dreadfully vulnerable. Sorry but I need to justify those consulting fees somehow :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1300045">
				<div id="div-comment-1300045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">middings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300045">
			June 20, 2017 at 9:18 am</a>		</div>

		<p>Would the phrase &#8220;termination on corruption of heap&#8221; satisfy everybody?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1300055">
				<div id="div-comment-1300055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BZ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300055">
			June 20, 2017 at 9:47 am</a>		</div>

		<p>@middings,<br />
no, that would need to be &#8220;corruption of the heap&#8221; at which point it might be too long</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1 parent" id="comment-1300065">
				<div id="div-comment-1300065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300065">
			June 20, 2017 at 9:50 am</a>		</div>

		<p>It used to be possible to run the 32-bit version of Explorer in 64-bit Windows. I wonder why this was broken in Win7 (I think).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1300075">
				<div id="div-comment-1300075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300075">
			June 20, 2017 at 10:05 am</a>		</div>

		<p>You weren&#8217;t ever supposed to be able to run the 32-bit version of Explorer on 64-bit Windows. If you could, it was a bug. I guess Windows 7 finally fixed that bug.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-3" id="comment-1300145">
				<div id="div-comment-1300145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300145">
			June 21, 2017 at 6:56 am</a>		</div>

		<p>Bob: &#8220;So we just went ahead and fixed the glitch.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1300605">
				<div id="div-comment-1300605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300605">
			June 24, 2017 at 9:17 pm</a>		</div>

		<p>The reason to run 32 bit explorer is to get at that shell extension that doesn&#8217;t come in 64 bit. Since the binary actually *works* on 64 bit Windows, defeating the &#8220;am I on 64 bit windows&#8221; check makes it work again. This is trivial if one possesses a debugger. But then again, 32 bit only shell extensions are broken.</p>
<p>The one that got on my nerves was mstsc.exe; there&#8217;s no good reason why that program should forward to the 64 bit version if somebody launched the 32 bit version; and gethostbyname() by somebody&#8217;s VPN solution stopped working.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt depth-3" id="comment-1300637">
				<div id="div-comment-1300637" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300637">
			June 25, 2017 at 4:34 pm</a>		</div>

		<p>Vista/Server 2008 &#8220;View 32-bit Control Panel Items&#8221; used the 32-bit version of explorer.exe.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1300125">
				<div id="div-comment-1300125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua Schaeffer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300125">
			June 20, 2017 at 5:55 pm</a>		</div>

		<p>Fortunately you can still run a 32-bit Explorer clone just fine. All those IShellFolder and IContextMenu posts pay off sooner or later.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-scott-brickey odd alt thread-even depth-1 parent" id="comment-1300085">
				<div id="div-comment-1300085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Scott+Brickey' rel='external nofollow' class='url'>Scott Brickey</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300085">
			June 20, 2017 at 10:06 am</a>		</div>

		<p>Re: single instance&#8230; so what would happen if explorer crashes, and task manager is used to specifically open the x86 build? would the x86 recognize that it&#8217;s running on x64 platform and hand off the instance, or would it just look to see if &#8216;explorer.exe&#8217; is running (finding that it&#8217;s not) and allow it to start?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1300105">
				<div id="div-comment-1300105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300105">
			June 20, 2017 at 11:12 am</a>		</div>

		<p>I don&#8217;t remember. You could always try it and see.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1300215">
				<div id="div-comment-1300215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>GL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300215">
			June 21, 2017 at 9:20 am</a>		</div>

		<p>If you start <code>C:\Windows\SysWoW64\explorer.exe</code>, it will instead start an <code>C:\Windows\explorer.exe</code>. My guess is that the 32-bit explorer will always start the 64-bit explorer with appropriate command line and leave the &#8220;handling the single-instance thing&#8221; to the 64-bit one. Not verified though.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-odd thread-alt depth-1 parent" id="comment-1300095">
				<div id="div-comment-1300095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300095">
			June 20, 2017 at 10:32 am</a>		</div>

		<p>Don&#8217;t forget that a lot of shell extensions use ATL too, and /NXCOMPAT might break them without ATL thunk emulation.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1300115">
				<div id="div-comment-1300115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300115">
			June 20, 2017 at 11:14 am</a>		</div>

		<p>Isn&#8217;t that what I said in the article? &#8220;as a backward-compatibility concession to shell extensions which are not DEP-compatible.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1300245">
				<div id="div-comment-1300245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300245">
			June 21, 2017 at 11:20 am</a>		</div>

		<p>What an unusual move by MS, now sloppy developers need to actually fix bugs in their plugins when they recompile the code for x64. Not just pressing Ctrl+Shift+B with the eyes closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd odd alt thread-odd thread-alt depth-1 parent" id="comment-1300366">
				<div id="div-comment-1300366" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300366">
			June 22, 2017 at 6:36 am</a>		</div>

		<p>How do i opt into *Termination on Heap Corruption*?</p>
<p>I know how to opt into NX: </p>
<p>    MapAndLoad(pathToExe, null, out li, false, false);<br />
    LI.FileHeader.OptionalHeader.DllCharacteristics ^= IMAGE_DLLCHARACTERISTICS_NX_COMPAT;<br />
    UnMapAndLoad(li);</p>
<p>Microsoft Security Research and Defense blog says: </p>
<p>&gt; These improvements are enabled by default (with the exception of termination on heap corruption) </p>
<p>**Note**: There are compilers besides Visual Studio and GCC that create native Windows executables. I&#8217;m using one such compiler (which is why i have to edit PE flags directly)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1300375">
				<div id="div-comment-1300375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300375">
			June 22, 2017 at 7:13 am</a>		</div>

		<p>Raymond wrote: &#8220;Explorer is also opted out of termination on heap corruption, but that&#8217;s harder to detect from a static analysis.&#8221;</p>
<p>Which implies that the option isn&#8217;t configured with a flag in the PE file.  Call HeapSetInformation.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1300475">
				<div id="div-comment-1300475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Barteks2x</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170620-00/?p=96435#comment-1300475">
			June 22, 2017 at 9:10 pm</a>		</div>

		<p>Probably not very relevant but reading this remineded me of something:</p>
<p>Back when I used windows XP (32-bit), after a clean system reinstall + (maybe, I don&#8217;t remember) instaling an antivirus, I started getting message that said that &#8220;Data Execution Prenention&#8221; prevented Explorer.exe from working (or something like that, worded differently). It was the first time I&#8217;ve seen tat windows even has such feature!</p>
<p>Even now if I got such error, I would di the same thing as I did back then &#8211; reinstall windows again.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

