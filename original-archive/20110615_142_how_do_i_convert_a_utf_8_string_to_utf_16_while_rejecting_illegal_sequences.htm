<html>
<head>
<title>How do I convert a UTF-8 string to UTF-16 while rejecting illegal sequences?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I convert a UTF-8 string to UTF-16 while rejecting illegal sequences?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 15, 2011 / year-entry #143</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">By default, when you ask Multi­Byte­To­Wide­Char to convert a UTF-8 string to UTF-16 that contains illegal sequences (such as overlong sequences), it will try to muddle through as best as it can. If you want it to treat illegal sequences as an error, pass the MB_ERR_INVALID_CHARS flag. The MSDN documentation on this subject is, to...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p> By default, when you ask <code>Multi&shy;Byte&shy;To&shy;Wide&shy;Char</code> to convert a UTF-8 string to UTF-16 that contains illegal sequences (such as overlong sequences), it will try to muddle through as best as it can. If you want it to treat illegal sequences as an error, pass the <code>MB_<wbr>ERR_<wbr>INVALID_<wbr>CHARS</wbr></wbr></wbr></code> flag. </p>
<p> The MSDN documentation on this subject is, to be honest, kind of hard to follow and even includes a double-negative: "The function does not drop illegal code points if the application does not set this flag." Not only is this confusing, it doesn't even say what happens to illegal code points when you omit this flag; all it says is what it <i>doesn't</i> do, namely that it doesn't drop them. Does it set them on fire? (Presumably, if you omit the flag, then it retains illegal code points, but how do you retain an illegal UTF-8 code point in UTF-16 output? It's like saying about a function like <code>atoi</code> "If the value cannot be represented as an integer, it is left unchanged." Huh? The function still has to return an integer. How do you return an unchanged string as an integer?) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-919063">
				<div id="div-comment-919063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919063">
			June 15, 2011 at 7:43 am</a>		</div>

		<p>Illegal code points get the Old Yeller treatment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-919073">
				<div id="div-comment-919073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919073">
			June 15, 2011 at 7:56 am</a>		</div>

		<p>This was starting to look like another edition of &quot;Raymond explains something which MSDN documented poorly&quot; post until I hit the &quot;Does it set them on fire?&quot; bit. &nbsp;I love your dry humor, Raymond.</p>
<p>In a test that I did, it looks like it converts illegal sequences into U+FFFD (REPLACEMENT CHARACTER), and it does it as soon as it detects an illegal sequence. &nbsp;So the 5 bytes F9 AA AA AA AA (which would code the invalid code point U+1AAAAAA) get converted into 5 instances of U+FFFD, since F9 isn&#39;t a valid initial byte. &nbsp;The 3 bytes ED A0 B4 (which would code the invalid code point U+D834, a low surrogate) get converted into 2 instances of U+FFFD, since ED is a valid initial byte, but no valid code sequence begins ED A0 (they all lead to low surrogates), and the remaining B4 isn&#39;t a valid initial byte.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-919083">
				<div id="div-comment-919083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919083">
			June 15, 2011 at 8:45 am</a>		</div>

		<p>I could make an argument that the replacement logic is wrong because of the UTF resync logic, but I could make a stronger argument that not passing flag MB_ERR_INVALID_CHARS is always a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-919093">
				<div id="div-comment-919093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919093">
			June 15, 2011 at 8:46 am</a>		</div>

		<p>I could make an argument that the replacement logic is wrong because of the UTF resync logic, but I could make a stronger argument that not passing flag MB_ERR_INVALID_CHARS is always a bug.</p>
<p>What gives about the comment dropping?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes even thread-even depth-1" id="comment-919103">
				<div id="div-comment-919103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919103">
			June 15, 2011 at 8:58 am</a>		</div>

		<p>@Joshua &#8211; I wouldn&#39;t say that calling it without MB_ERR_INVALID_CHARS is &quot;always&quot; a bug. There may be circumstances where you expect illegal code points (e.g. Third party data source with less vigorous standards). In this case, you would want to do something sensible with the illegal code points while preserving as much valid data as possible. It would be nice if the documentation was more clear on this behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-919113">
				<div id="div-comment-919113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jeffwhitledge_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jeffwhitledge@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919113">
			June 15, 2011 at 9:35 am</a>		</div>

		<p>Calling it without the flag is always a bug, because itâ€™s relying on undocumented behavior! :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-919123">
				<div id="div-comment-919123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R. Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919123">
			June 15, 2011 at 10:23 am</a>		</div>

		<p>Clearly it sets them on fire because they&#39;re a Spy!</p>
<p>And I play way too much Team Fortress 2.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-919143">
				<div id="div-comment-919143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919143">
			June 15, 2011 at 11:51 pm</a>		</div>

		<p>The more fun way &#8211; strip off the high byte and treat as a char. Converting then is trivial.</p>
<p>output = (uint16_t)(input &amp; 0x7F);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-919153">
				<div id="div-comment-919153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919153">
			June 16, 2011 at 1:59 am</a>		</div>

		<p>@worf: that&#39;s for people who never understood what this whole Unicode thing was about anyway, and don&#39;t see why you would need to pad ASCII characters with NUL bytes &#8212; but hey, if people want that we can sure provide it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-919193">
				<div id="div-comment-919193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919193">
			June 16, 2011 at 8:53 am</a>		</div>

		<p>And what do we burn apart from illegal code sequences? More illegal code sequences!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-919203">
				<div id="div-comment-919203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110615-00/?p=10423#comment-919203">
			June 16, 2011 at 9:34 am</a>		</div>

		<p>Joshua: &quot;[&#8230;] not passing flag MB_ERR_INVALID_CHARS is always a bug.&quot;</p>
<p>If browser vendors followed your advice you would perceive the majority of the internet outside ASCII-only-land as a series of generic error messages. In general, content served by a web server is compiled from a number of different sources (HTML files, databases, plain text files, code, etc.) and quite often they do not agree on a common encoding. You can&#39;t just go ahead and play the &quot;in a perfect world&#8230;&quot; game with the user.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

