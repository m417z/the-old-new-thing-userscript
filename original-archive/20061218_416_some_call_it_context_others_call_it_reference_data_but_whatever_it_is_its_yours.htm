<html>
<head>
<title>Some call it context, others call it reference data, but whatever it is, it's yours</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Some call it context, others call it reference data, but whatever it is, it&#8217;s yours</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 18, 2006 / year-entry #417</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>24</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Different functions call it different things. RegisterWaitForSingleObject calls it Context. SetWindowSubclass calls it reference data. EnumWindows calls it lParam. CreateThread just calls it a parameter! But whatever its name is, it means the same thing: It's a value the function doesn't care about. All the function does is hand that value back to you. What...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Different functions call it different things. <code>RegisterWaitForSingleObject</code> calls it <code>Context</code>. <code>SetWindowSubclass</code> calls it reference data. <code>EnumWindows</code> calls it <code>lParam</code>. <code>CreateThread</code> just calls it a parameter! But whatever its name is,  it means the same thing: It's a value the function doesn't care about. All the function does is hand that value back to you. What the value means is up to you.</p>
<p> What if you need to pass more context than a single pointer? What if you want to pass, say, two pointers? Then put the two pointers in a structure and pass a pointer to that structure. When you do this, you introduce lifetime issues, so make sure you have a plan for deciding who is responsible for freeing the memory when it is no longer needed. </p>
<p> "Why isn't this documented in MSDN? Otherwise, people who call <code>CreateThread</code> won't know that the parameter needs to be a pointer to this structure and that the thread procedure needs to free the memory." </p>
<p> It's not documented in MSDN because MSDN doesn't care. This is entirely a convention within your program. It's your responsibility to ensure that the code that calls <code>CreateThread</code> and the thread procedure agree on what the thread parameter means and how it should be managed. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-453773">
				<div id="div-comment-453773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453773">
			December 18, 2006 at 11:07 am</a>		</div>

		<p>This is useful advice. It may seem obvious to you but it would be helpful to have MSDN add a sentence or two (they could be your sentences above) to explain this very issue. You say this is common to many API calls? Okay, then, have them all link to a single page explaining the issue. </p>
<p>I know this can happen when Microsoft cares enough about something, because it was done for security issues in API calls a couple of years ago. You could make the &#8220;it&#8217;s obvious to a reasonably competent programmer&#8221; argument there too, but it was documented for the unreasonably incompetent ones too. :)</p>
<div class="post">[<i>My sentences above would be considered woefully inadequate for MSDN. &#8220;Make sure you have a plan for deciding who is responsible for freeing the memory&#8221;? People would expect MSDN to list all the possible plans and compare their pros and cons. You have to decide where MSDN ends and a book on computer programming begins, and I think &#8220;working out how to put together the building blocks into a complicated program&#8221; falls on the book side of the line. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-453783">
				<div id="div-comment-453783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.differentpla.net/' rel='external nofollow' class='url'>Roger Lipscombe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453783">
			December 18, 2006 at 11:13 am</a>		</div>

		<p>You&#8217;ll see this being used in a lot of C++ code. For example:</p>
<p> &nbsp; &nbsp;EnumWindows(StaticEnumWindowsProc, (LPARAM)this);</p>
<p> &nbsp; &nbsp;// &#8230;</p>
<p>BOOL CALLBACK Foo::StaticEnumWindowsProc(HWND hWnd, LPARAM lParam)</p>
<p>{</p>
<p> &nbsp; &nbsp;return ((Foo *)lParam)-&gt;EnumWindowsProc(hWnd);</p>
<p>}</p>
<p>I believe that the C++ spec says that you shouldn&#8217;t rely on static member functions being callable as if they were C functions, but it works fine in Microsoft C++.</p>
<p>Any comments about this from you, Raymond?</p>
<div class="post">[<i>I leave that as an exercise. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453803">
				<div id="div-comment-453803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453803">
			December 18, 2006 at 11:41 am</a>		</div>

		<p>Should MSDN also have a link to the C++ standard on every page just in case programmers don&#8217;t know it yet?</p>
<p>(actually, that&#8217;s probably not a bad idea)</p>
<p>This is one of those basic &#8216;always free your mallocs&#8217; type things that you should have learned in &quot;Intro to C++&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-453823">
				<div id="div-comment-453823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/uber1024' rel='external nofollow' class='url'>uber1024</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453823">
			December 18, 2006 at 12:27 pm</a>		</div>

		<p>This is one of those interesting posts that&#8217;s going to be immediately obvious to some and might wind up making a light bulb appear over the heads of some others. &nbsp;Then there&#8217;s the third group that completely ignores it and continues to supply TheDailyWTF.com with more material.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453873">
				<div id="div-comment-453873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Jones</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453873">
			December 18, 2006 at 12:42 pm</a>		</div>

		<p>Raymond, can I ask a dumb off topic question&#8230;</p>
<p>&nbsp; &nbsp;Is Vista built on Win32?</p>
<p>Just wondering. &nbsp;Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-453923">
				<div id="div-comment-453923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CRM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453923">
			December 18, 2006 at 2:25 pm</a>		</div>

		<p>.Net calls it &quot;object Tag&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453943">
				<div id="div-comment-453943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.parkscomputing.com/' rel='external nofollow' class='url'>Paul M. Parks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453943">
			December 18, 2006 at 3:06 pm</a>		</div>

		<p>&quot;Is Vista built on Win32?&quot;</p>
<p>If Raymond will indulge, a rambling, off-topic reply&#8230;</p>
<p>Three years ago I had to patiently explain to people with whom I worked that Visual Studio .NET 2003 could compile C and C++ code and generate native (non-managed) code. An alarmingly large number of people assumed that the &quot;.NET&quot; moniker indicated that the compiler suite could not output native code &#8212; I still encounter professional developers today that hold to this notion.</p>
<p>While Microsoft has wisely eliminated &quot;.NET&quot; from the name of the current version of VS, and it was eliminated from what is now known as Windows Server 2003, I&#8217;m noticing similar confusion regarding Vista, and if it weren&#8217;t for my experience with VS 2003 I might be optimistic that it would be cleared up in short order.</p>
<p>I think a number of people thought that Vista would be built on what was once called WinFX rather than a more &quot;traditional&quot; API like Win32. Considering that post-Longhorn-reset, Vista was begun from the Windows Server 2003 source base, it could hardly be anything else.</p>
<p>PMP</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-453993">
				<div id="div-comment-453993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453993">
			December 18, 2006 at 5:25 pm</a>		</div>

		<blockquote><p>
  Is Vista built on Win32?
</p></blockquote>
<p>No, it was built on Starbucks coffee and, in some cases, San Pellegrino Limonata.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-454073">
				<div id="div-comment-454073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454073">
			December 18, 2006 at 6:59 pm</a>		</div>

		<p>Define &#8216;Vista&#8217; and &#8216;Win32&#8217;. Windows Vista has an implementation of the Win32 API and can run Win32 programs. What bit of the system is &#8216;the Win32 API&#8217;? Nothing. It&#8217;s a contract between the program and the OS (libraries) that says if the program does this, the OS will do that. What is a Win32 program? It&#8217;s a program that makes use of the Win32 API.</p>
<p>Very circular, isn&#8217;t it?</p>
<p>The Win32 API is implemented by a lot of libraries, but primarily user32.dll, kernel32.dll and gdi32.dll. These in turn talk to the Win32 Subsystem, largely implemented in CSRSS.EXE and the WIN32K.SYS driver, for windowing and graphics functions, and to the NT Executive/Kernel (ntoskrnl.exe) using the native NT API implemented in NTDLL.DLL.</p>
<p>Now, if you were to ask how various subcomponents were implemented, it would be possible to answer. There were plans to implement some components on top of what is now known as WPF, but those were scaled back. Explorer is still implemented entirely with Win32 native API calls &#8211; I don&#8217;t think there&#8217;s any managed code in there at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-453833">
				<div id="div-comment-453833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453833">
			December 18, 2006 at 12:30 pm</a>		</div>

		<p>The problem is that many APIs don&#8217;t have a clue about this useful pattern, forcing one to use globals: EnumCalendarInfo, EnumDateFormats, EnumDateFormats, EnumTimeFormats, EnumSystemCodePages, EnumSystemLocales. Most have a (still bad) *Ex version.</p>
<p>Finally, some of them are fixed by an *ExEx version, starting with Vista (took a while), but some are still not (EnumSystemCodePages).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-454113">
				<div id="div-comment-454113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454113">
			December 18, 2006 at 8:42 pm</a>		</div>

		<p>I agree with those who say that it would be helpful to add a sentence to each of these MSDN pages. &nbsp;Here&#8217;s why:</p>
<p>&gt; RegisterWaitForSingleObject calls it Context.</p>
<p>&gt; SetWindowSubclass calls it reference data.</p>
<p>&gt; EnumWindows calls it lParam. CreateThread just</p>
<p>&gt; calls it a parameter!</p>
<p>Experienced programmers can read an MSDN page and think, how nice it would be if this could be a pointer to a structure defined by the programmer. &nbsp;Experienced plus brave programmers can figure out how to experiment, casting a (struct*) to an (LPARAM) or whatever type and then decide to rely on undocumented behaviour because there&#8217;s no other way.</p>
<p>If each of these MSDN pages would say &#8220;This parameter is usually a pointer to an application-defined structure, cast to an (LPARAM)&#8221; (or whatever type) then experienced programmers would be more comfortable and new programmers would have that light bulb appear over their heads.</p>
<div class=post>[<i>I can hear the argument now. </p>
<p>&#8220;You can&#8217;t pass an integer there. MSDN says that it&#8217;s usually a pointer, so you have to declare a structure and put the integer in it, and then pass the structure by address.&#8221; </p>
<p>&#8220;I&#8217;m pretty sure that passing an integer is just fine. I&#8217;ve been doing it for years.&#8221; </p>
<p>&#8220;Well, then you&#8217;ve been doing it wrong for years. MSDN says that you should pass a pointer. I will not sign off on your change until you change it to pass a pointer.&#8221; -Raymond</p>
<p></i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-454153">
				<div id="div-comment-454153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rhomboid</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454153">
			December 18, 2006 at 10:57 pm</a>		</div>

		<p>Have any of you bought a stepladder recently? &nbsp;Have you noticed that stepladders today come with what seems like pages and pages of warning stickers listing all the stupid things you shouldn&#8217;t try to do with your new ladder lest you hurt yourself. &nbsp;I think I read somewhere that a significant amount of the cost of a ladder goes towards liability insurance and litigation on the part of the manufacturer, not on actual material, manufacturing, or R&amp;D costs.</p>
<p>I mention all that because it&#8217;s kind of the same thing here with MSDN. &nbsp;I think any competant programmer that is practicing his art should be able to read a page of documentation that says &quot;this DWORD can be used by the user for any purpose&quot; and be able to realize that they can:</p>
<ul>
<li>Ignore it / not set or check its value at all</li>
<li>
<p>Use it to pass a single DWORD value</p>
</li>
<li>
<p>Use it as indirection to a struct with multiple values</p>
</li>
<li>
<p>Some other variation on this</p>
</li>
</ul>
<p>To do anything else amounts to slathering the stepladder with paragraphs and paragraphs of warning stickers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453953">
				<div id="div-comment-453953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-453953">
			December 18, 2006 at 3:18 pm</a>		</div>

		<p>static member functions are just regular functions except instead of being looked up in global or some namespace&#8217;s scope, they&#8217;re looked up in the class&#8217;s (for the most part). The only thing you have to worry about is mixing extern &quot;C++&quot; function pointers with ones that expect extern &quot;C&quot; ones because of possible ABI issues:</p>
<p><a rel="nofollow" target="_new" href="http://everything2.com/index.pl?node_id=1347400&amp;lastnode_id=0" rel="nofollow">http://everything2.com/index.pl?node_id=1347400&#038;lastnode_id=0</a></p>
<p>I don&#8217;t think MSVC cares but I do it the correct way anyway. There is one rule you should always follow though and that&#8217;s ***never throw an exception from that callback***.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-454173">
				<div id="div-comment-454173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454173">
			December 19, 2006 at 12:39 am</a>		</div>

		<blockquote><p>
  I can hear the argument now.</p>
<p>  &quot;You can&#8217;t pass an integer there. MSDN says</p>
<p>  that it&#8217;s usually a pointer
</p></blockquote>
<p>If readers can&#8217;t distinguish between &quot;usually&quot; and &quot;is required to be&quot; then let&#8217;s just hear the arguments and laugh. &nbsp;It&#8217;s still better to say it than not to say it. &nbsp;Compare that to the argument about whether it&#8217;s safe to pass a pointer through an LPARAM parameter when MSDN doesn&#8217;t say so (as far as I can see).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-454213">
				<div id="div-comment-454213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ema</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454213">
			December 19, 2006 at 2:40 am</a>		</div>

		<p>About Vista.</p>
<p>I think I will try not to install it till I&#8217;ll be able to play games with Wine under Ubuntu, but as die-hard Win32 developer I&#8217;m asking:</p>
<p>Is Vista API a C or C++ API?</p>
<p>Will WinNT api calls supported (I&#8217;m not referring to ntdll.dll exported -hidden- functions), like the Net* functions?</p>
<p>Thank you. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-454243">
				<div id="div-comment-454243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454243">
			December 19, 2006 at 3:12 am</a>		</div>

		<p>I wrote:</p>
<blockquote><p>
  whether it&#8217;s safe to pass a pointer through</p>
<p>  an LPARAM parameter when MSDN doesn&#8217;t say so</p>
<p>  (as far as I can see).
</p></blockquote>
<p>Sorry. &nbsp;MSDN does actually say that now for ordinary (non-CE) versions of Windows.</p>
<p>Tuesday, December 19, 2006 2:40 AM by Ema</p>
<blockquote><p>
  Is Vista API a C or C++ API?
</p></blockquote>
<p>Some Win32 APIs were added to Vista. &nbsp;They are callable from C.</p>
<blockquote><p>
  Will WinNT api calls supported [&#8230;] like the</p>
<p>  Net* functions?
</p></blockquote>
<p>Interesting. &nbsp;According to</p>
<p><a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/aa370290.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/aa370290.aspx</a></p>
<p>NetAccessAdd is obsolete on Windows Server 2003 and Windows XP/2000/NT but not on Longhorn Server or Vista. &nbsp;In the Requirements section it says that NetAccessAdd still exists on Longhorn Server and Vista. &nbsp;Maybe its obsolescence is obsolete?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-454253">
				<div id="div-comment-454253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ema</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454253">
			December 19, 2006 at 3:45 am</a>		</div>

		<p>Thanks but if I&#8217;d like to develope natively for Vista, which language should I use?</p>
<p>C, C++ or freakin&#8217; .NET?</p>
<p>Or, in which language should be called exported Vista API?</p>
<p>Or again, basically, in which language is this operative system written?</p>
<p>I hope is C,</p>
<p>Thanks in advance for your answers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-454273">
				<div id="div-comment-454273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ema</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454273">
			December 19, 2006 at 5:29 am</a>		</div>

		<p>Yes I already know what you have written; I know what you mean about __stdcall or __cdecl about who has to clear the stack and so on&#8230;</p>
<p>But my question is:</p>
<p>If some years ago I had to develop in Windows, before MFC, I had to use C api.</p>
<p>Then with MFC I can use both C/C++.</p>
<p>Now I can use C/C++/C#.</p>
<p>With Vista is there a full C api?</p>
<p>If I want to access all functionalities in C, can I? Do I have to forcibly use C++? Or even C# for some components?</p>
<p>Will custom MSGINA.dll be supported?</p>
<p>And this si another question: in which language is the O.S. core written?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-454293">
				<div id="div-comment-454293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454293">
			December 19, 2006 at 6:51 am</a>		</div>

		<p>Yes, with Vista you can still do C. It is even more awful than it used to be, COM-in-C is horrible. It&#8217;s easier to learn VC++ than to learn COM-in-C. However, it really doesn&#8217;t matter much. x86 CPUs need binary (now also known as native or unmanaged code) so as long as your compiler emits that, you can do the same with Vista in all languages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-454303">
				<div id="div-comment-454303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ema</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454303">
			December 19, 2006 at 7:08 am</a>		</div>

		<p>Errhhh to be honest I thought x86 CPUs needed text files and parsed them in real time and outputted directly colors and fonts on my screen&#8230; No I&#8217;m joking pal. Do you really think that people which read this blog are so ignorant?</p>
<p>So is that true that all Vista APIs will be exposed even in plain C? If it&#8217;s true this would show even in these days that the old frekin&#8217; C is even more than alive&#8230;</p>
<p>What about msgina?</p>
<p>And most of all, this is for my personal interest, in which language (apart the asm base) is the OS core written? Do you know?</p>
<p>Are there any vital Vista DLLs (like ntdll.dll for winnt/xp) written in C++?</p>
<p>Thanks again! :-)</p>
<p>Ps. I don&#8217;t know why you used &quot;VC++&quot; word. C++ is a language, VC++ isn&#8217;t a language. I think you referred to MS C++ COM API, isn&#8217;t it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-454473">
				<div id="div-comment-454473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kwailo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454473">
			December 19, 2006 at 11:15 am</a>		</div>

		<p>Ema:</p>
<p>Raymond had this to say about programming languages used internally at Microsoft:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/11/25/496955.aspx#497180" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/11/25/496955.aspx#497180</a></p>
<p>&lt;hearsay&gt;</p>
<p>&nbsp; According to my spies at Redmond, the kernel is written in C. Don&#8217;t know about the rest of the OS.</p>
<p>&lt;/hearsay&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-454593">
				<div id="div-comment-454593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454593">
			December 19, 2006 at 12:33 pm</a>		</div>

		<p>Back when Windows Server 2003 was called Windows.NET, I remember having to explain to it&#8217;s not actually written in managed code.</p>
<p>And yes, most of the low-level parts of the OS (kernel, ntdll.dll, etc) are written in C. There may be some parts &#8211; even there &#8211; written in C++. Grab the public symbols and have a look!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-454263">
				<div id="div-comment-454263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-454263">
			December 19, 2006 at 5:13 am</a>		</div>

		<p>Tuesday, December 19, 2006 3:45 AM by Ema</p>
<p>&gt; Thanks but if I&#8217;d like to develope natively</p>
<p>&gt; for Vista, which language should I use?</p>
<p>&gt; C, C++ or freakin&#8217; .NET?</p>
<p>C and C++ can generate either native code or .NET code. &nbsp;If you want to do native programming then you use native C or native C++ and do not use .NET C++.</p>
<p>&gt; Or again, basically, in which language is</p>
<p>&gt; this operative system written?</p>
<p>This is a completely different question. &nbsp;The APIs specify what services the built-in functions are supposed to provide to their callers when their callers meet certain conditions. &nbsp;Essentially they do not specify which language either side is written in[*]. &nbsp;They don&#8217;t require both sides to be written in the same language.</p>
<p>[* Sometimes you have to use funny eyeglasses and read the letters P A S C A L as the word __stdcall instead of the name of a programming language.]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-455113">
				<div id="div-comment-455113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ema</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061218-04/?p=28683#comment-455113">
			December 20, 2006 at 2:34 am</a>		</div>

		<p>Thank you guys! :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

