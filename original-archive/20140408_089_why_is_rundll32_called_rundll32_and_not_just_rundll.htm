<html>
<head>
<title>Why is Rundll32 called Rundll32 and not just Rundll?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is Rundll32 called Rundll32 and not just Rundll?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 8, 2014 / year-entry #90</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>35</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There is an oft-abused program named rundll32.exe. Why does its name end in 32? Why not just call it rundll.exe? (I will for the moment ignore the rude behavior of calling people stupid under the guise of asking a question.) Because there needed to be a way to distinguish the 16-bit version from the 32-bit...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>There is an oft-abused program named <code>rundll32.exe</code>. Why does its name end in <code>32</code>? <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/09/09/10208136.aspx#10209012"> Why not just call it <code>rundll.exe</code></a>? (I will for the moment ignore the rude behavior of calling people stupid under the guise of asking a question.)</p>
<p> Because there needed to be a way to distinguish the 16-bit version from the 32-bit version. </p>
<p> Windows&nbsp;95 had  both <code>rundll.exe</code> (the 16-bit version) and <code>rundll32.exe</code> (the 32-bit version). Of course, with the gradual death of support for 16-bit Windows, the 16-bit <code>rundll.exe</code> is now just a footnote in history, leaving just the 32-bit version. </p>
<p> But why did the two have to have different names? Why not just use the same name (<code>rundll.exe</code>) for both, putting the 16-bit version in the 16-bit system directory and the 32-bit version in the 32-bit system directory? </p>
<p> Because Windows&nbsp;95 didn't have separate 16-bit and 32-bit system directories. There was just one system directory called <code>SYSTEM</code> and everything hung out there, both 16-bit and 32-bit, like one big happy family. </p>
<p> Well, maybe not a happy family. </p>
<p> At any rate, when 64-bit Windows was introduced, the plan was not to do things the crazy mishmash way and instead separate the 32-bit files into one directory and the 64-bit files into a different directory. That way, no files needed to be renamed, and your batch file that ran <code>rundll32.exe</code> with some goofy command line still worked, even on 64-bit Windows. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1117773">
				<div id="div-comment-1117773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117773">
			April 8, 2014 at 7:03 am</a>		</div>

		<p>This is just one of those things. No better design avoids it. Oh well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117783">
				<div id="div-comment-1117783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117783">
			April 8, 2014 at 7:07 am</a>		</div>

		<p>Except its still called rundll32 even 64-bit so its still wrong LOL.</p>
<p>/snark</p>
<p>:) :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1117793">
				<div id="div-comment-1117793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117793">
			April 8, 2014 at 7:16 am</a>		</div>

		<p>@Nick &#8211; Ah, thanks! I was wondering about Raymond&#39;s &quot;your batch file that ran rundll32.exe with some goofy command line still worked&quot; comment, because I was thinking that surely rundll32.exe would still be there on 64-bit windows, because 64-bit windows includes 32-bit components by default, like 32-bit rundll32.exe.</p>
<p>The idea that he was talking about a 64-bit version of rundll32.exe didn&#39;t even occur to me. So I take it that the 64-bit rundll32.exe lives in the system32 directory, while the 32-bit version lives in the syswow64 directory?</p>
<p>(Definitely no crazy mishmashes there. Nope.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117803">
				<div id="div-comment-1117803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark (The Other Mark)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117803">
			April 8, 2014 at 7:20 am</a>		</div>

		<p>&quot;At any rate, when 64-bit Windows was introduced, the plan was not to do things the crazy mishmash way and instead separate the 32-bit files into one directory and the 64-bit files into a different directory.&quot; </p>
<p>A decision with which everyone agrees with, and no one ever mocks, particularly not folks who don&#39;t understand that 64 Bit Windows predates WoW64.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1117823">
				<div id="div-comment-1117823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117823">
			April 8, 2014 at 7:56 am</a>		</div>

		<p>&gt; and your batch file that ran rundll32.exe with some goofy command line still worked,</p>
<p>WOOO!! And that is the only instance of that :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117833">
				<div id="div-comment-1117833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">I need a time machine</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117833">
			April 8, 2014 at 8:05 am</a>		</div>

		<p>If Apple designed Windows we&#39;d have universal binaries instead of this mess.</p>
<div class="post">[<em>The downside of universal binaries is that they take up a lot of disk space for architectures you may not need. At the time this decision was made, your typical hard drive was around 30MB (with an M), so conserving disk space was important. Apple had the luxury of waiting until 2005, when typical hard drives were 250GB. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1117843">
				<div id="div-comment-1117843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117843">
			April 8, 2014 at 8:50 am</a>		</div>

		<p>I suppose we could bring back rundll.exe now as a hotlink to rundll32.exe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117853">
				<div id="div-comment-1117853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117853">
			April 8, 2014 at 8:53 am</a>		</div>

		<p>Apple: Waits a decade after everyone else to implement something, hailed as the first to do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1117863">
				<div id="div-comment-1117863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Heffernan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117863">
			April 8, 2014 at 8:58 am</a>		</div>

		<p>Mildly funny that the person calling everyone else stupid couldn&#39;t even get the name right and called it runndll32!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117873">
				<div id="div-comment-1117873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117873">
			April 8, 2014 at 9:10 am</a>		</div>

		<p>&quot;If Apple designed Windows we&#39;d have universal binaries instead of this mess.&quot;</p>
<p>If it was Apple they would happily just break old programs/batch files etc. They have a different outlook to backwards compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1117883">
				<div id="div-comment-1117883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117883">
			April 8, 2014 at 9:22 am</a>		</div>

		<p>What is the history of rundll in NT? As dual 16/32 predated Windows 95 by a couple of years.</p>
<div class="post">[<em>Rundll/Rundll32 was introduced in Windows 95. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117893">
				<div id="div-comment-1117893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Dahlberg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117893">
			April 8, 2014 at 9:41 am</a>		</div>

		<p>Expanding Karellen&#39;s comment into a question, is there an explanation for why the System folder with 32 in its name (System32) contains the 64-bit binaries and the System folder with 64 in its name (SysWOW64) contains the 32-bit binaries?</p>
<div class="post">[<em>I&#39;m sure <a href="http://technet.microsoft.com/en-us/magazine/ff955767.aspx">I discussed it before</a>. It&#39;s so that people who hard-code &quot;system32&quot; get the right version. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1117903">
				<div id="div-comment-1117903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117903">
			April 8, 2014 at 9:59 am</a>		</div>

		<p>&gt; Apple: Waits a decade after everyone else to implement something, hailed as the first to do it.</p>
<p>Wow. <a href="http://www.folklore.org" rel="nofollow">http://www.folklore.org</a>. Everyone is awesome.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse odd alt thread-odd thread-alt depth-1" id="comment-1117913">
				<div id="div-comment-1117913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117913">
			April 8, 2014 at 10:20 am</a>		</div>

		<p>Reading one of the early KB articles on rundll (<a href="http://support.microsoft.com/kb/164787" rel="nofollow" target="_new">support.microsoft.com/&#8230;/164787</a>), I&#39;m still not certain about its original use but I have a couple of theories. The first is that this method would allow you to &quot;load&quot; a DLL out-of-process in a standardized fashion (useful for OLE/COM?); the second is that you would be able to call a 16/32-bit DLL from a 32/16-bit process without thunking (or, I suppose, a 32/64-bit DLL from a 64/32-bit process).</p>
<p>I like that the article states: &quot;The Rundll and Rundll32 utility programs were originally designed only for internal use at Microsoft. But the functionality provided by them is sufficiently generic that they are now available for general use.&quot; Sounds like famous last words to me!</p>
<div class="post">[<em>The original purpose was that the shell team didn&#39;t want to create 100 separate EXEs [see: 30MB hard drive], so they created one EXE (rundll.exe) that let you say &quot;Hey, use that function in that DLL as if it were your main()&quot;. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1117923">
				<div id="div-comment-1117923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117923">
			April 8, 2014 at 10:55 am</a>		</div>

		<p>I remember double-clicking this file (among others!) when I explored the system directories in Windows 95 way back when. It didn&#39;t seem to do much though ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117933">
				<div id="div-comment-1117933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dominic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117933">
			April 8, 2014 at 11:01 am</a>		</div>

		<p>Never attribute to luxury what can be explained by incompetence.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1117943">
				<div id="div-comment-1117943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117943">
			April 8, 2014 at 12:29 pm</a>		</div>

		<p>Winhelp.exe&#39;s 32-bit binary had to be called Winhlp32.exe to fit the 8.3 name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117953">
				<div id="div-comment-1117953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117953">
			April 8, 2014 at 1:29 pm</a>		</div>

		<p>Obviously, calling the new (new for 32-bit Windows) program &#39;rundll&#39; was insufficiently forward-thinking. &nbsp;It should have been called &#39;advrundll&#39;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1117963">
				<div id="div-comment-1117963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117963">
			April 8, 2014 at 2:28 pm</a>		</div>

		<p>On a similar way, I learned that you should always use regedt32.exe instead of regedit.exe, because regedit.exe doesn&#39;t support things like permissions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1117973">
				<div id="div-comment-1117973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117973">
			April 8, 2014 at 2:37 pm</a>		</div>

		<p>Cesar: Regedit.exe and regedt32.exe were entirely different programs which just happened to have a similar purpose. Originally the registry was just for managing OLE configuration, so the regedit.exe was very simple. That registry only had keys &#8212; no values.</p>
<p>Then Windows NT came along and expanded the registry to hold configuration for the whole system. They added more roots, security, and typed values, and remote access. Obviously a new editor was needed for editing the 32-bit registry, so I guess it made sense to put a 32 at the end of the name. Since WinNT had to install on down-level FAT systems (8.3-only), all filenames had to conform to 8.3 conventions.</p>
<p>When Win95 came out, they updated the regedit.exe to support the additional roots and typed values, yielding the basic Regedit as you know today. Somewhat later they decided that having two similar registry editors was redundant, and added the missing features to Regedit so they could stop shipping Regedt32.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1117983">
				<div id="div-comment-1117983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117983">
			April 8, 2014 at 4:12 pm</a>		</div>

		<p>[The downside of universal binaries is that they take up a lot of disk space for architectures you may not need. At the time this decision was made, your typical hard drive was around 30MB (with an M), so conserving disk space was important. Apple had the luxury of waiting until 2005, when typical hard drives were 250GB. -Raymond]</p>
<p>And it wouldn&#39;t have worked. This program is the rare beast where the bitness of the program comes from the bitness of its first argument.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1117993">
				<div id="div-comment-1117993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1117993">
			April 8, 2014 at 6:39 pm</a>		</div>

		<p>[If it was Apple they would happily just break old programs/batch files etc. They have a different outlook to backwards compatibility.]</p>
<p>Agreed. Before OSX, everytime you upgrade your Mac, none of your old prgram will work on the new system and you have to buy everything you need to use again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118033">
				<div id="div-comment-1118033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nitpicker (Corner?)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118033">
			April 8, 2014 at 11:30 pm</a>		</div>

		<p>[The downside of universal binaries is that they take up a lot of disk space for architectures you may not need. At the time this decision was made, your typical hard drive was around 30MB (with an M), so conserving disk space was important. Apple had the luxury of waiting until 2005, when typical hard drives were 250GB. -Raymond]</p>
<p>250GB hard disks in 1994 (the 68K -&gt; PowerPC changeover)? Must have missed that&#8230;</p>
<div class="post">[<em>Wikipedia says &quot;The universal binary format was introduced at the 2005 Apple Worldwide Developers Conference.&quot; So Wikipedia lied to me. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118053">
				<div id="div-comment-1118053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eddie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118053">
			April 9, 2014 at 7:50 am</a>		</div>

		<p>@Nitpicker (Corner?)</p>
<p>I remember 1994, The average hard drive was less than 1GB. &nbsp;If your Mac/PowerPC computer had a 250GB hard drive then congratulations (must be nice to be rich).</p>
<p>As for us PC people there weren&#39;t any 250GB drives around in 1994 (not in any way that was price-friendly to the consumer).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1118093">
				<div id="div-comment-1118093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118093">
			April 9, 2014 at 8:24 am</a>		</div>

		<p>@Nitpicker (corner?):</p>
<p>Raymond&#39;s point is that in 1994, Windows moved from 16bit to 32bit (technically before that &#8212; but I&#39;ll let that slide), and a 100mb hard drive was luxurious in that time period.</p>
<p>The counter argument runs like this.</p>
<p>In 2003, Microsoft was supporting at least 16-bit, 32-bit, Power, Alpha and Itanium. &nbsp;That means 5 copies of the code, for the single binary approach. &nbsp;One of which is relevant to the user.</p>
<p>We were deploying on 3.5&quot; disks still for many customers, at their request. &nbsp;So instead of 20 disks &#8212; and yes, we were at that level (don&#39;t know about Microsoft) &#8212; you&#39;d be talking 100 disks. &nbsp;And we were all code, no data at all, on our install.</p>
<p>That&#39;s a lot of added cost, it&#39;s a lot of disks to ship, it&#39;s a lot of disks for the user to juggle to install, and its a lot of space on their hard drive for bytes that their machine will never, ever load.</p>
<p>I pay by the byte for data sent from Amazon, Microsoft or Google to users &#8212; the app store transfers are free, but are capped at 20mb over Cell networks in most cases. &nbsp;And so every byte, it still counts. &nbsp;a 1% reduction in executable size translates to hundreds of dollars for a modestly successful project.</p>
<p>And then you have the fact that users are often running tablets with 8gb, 16gb of storage &#8212; and so shoving an x86, x64 and ARM version of the binary on that device makes no sense.</p>
<p>And then, here&#39;s the kicker &#8212; if I install the x86 in one folder, and the x64 in another folder &#8212; how is that materially different from having one single binary?</p>
<p>And does the user even care which one they run. &nbsp;There&#39;s that issue to &#8212; when does an actual user care? &nbsp;When they cross 4gb? &nbsp;Not necessarily &#8212; lets say you&#39;re reading from the disk &#8212; if they&#39;ve got 16, 32, more gb of RAM &#8212; that&#39;ll be disk cache, so who cares? :P &nbsp;</p>
<p>So you&#39;re talking an app that actively needs 4gb or more of data simultaneously before it even matters. &nbsp;Since Windows just is running 32bit apps in 64bit memory space and zeroing the 32 most significant bits anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118103">
				<div id="div-comment-1118103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ofek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118103">
			April 9, 2014 at 8:30 am</a>		</div>

		<p>A similar puzzle pops to mind: &nbsp;why the 64 suffix in all those DbgHelp functions and types? &nbsp; (StackWalk64, EnumerateLoadedModules64 et.al.) &nbsp; These were all alive long before Win64.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118153">
				<div id="div-comment-1118153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118153">
			April 9, 2014 at 10:20 am</a>		</div>

		<p>[The original purpose was that the shell team didn&#39;t want to create 100 separate EXEs]</p>
<p>Ah yes need to reduce the number of EXEs. The UNIX way was the multi-call binary but no way is that happening on Win95 (FAT16 filesystem!). I suppose they could have fixed FAT16 to allow hardlinks but then you couldn&#39;t dual-boot Pre-7 DOS on the same disk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-1118163">
				<div id="div-comment-1118163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118163">
			April 9, 2014 at 10:46 am</a>		</div>

		<p>@Nitpicker (Corner?): PowerPC Macs didn&#39;t have fat binaries, with all code compiled separately for both 68K and PowerPC embedded in the same executable. That choice could be made per-routine, with those routines written for 68K being executed under the emulator, and the PowerPC ones running native. Mac OS itself was mostly still 68K code on the first PowerMacs.</p>
<p>Certainly developers had the option to make a fat binary by compiling all code for both architectures, but most started by just making the most performance-critical parts PowerPC code.</p>
<p>In contrast, Intel Macs required fat binaries. Either the whole program must exist as x86 code, or the PowerPC code was executed with Rosetta. There was no partial emulation as for 68K code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118203">
				<div id="div-comment-1118203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Glaurung</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118203">
			April 9, 2014 at 4:38 pm</a>		</div>

		<p>&quot;Wikipedia says &quot;The universal binary format was introduced at the 2005 Apple Worldwide Developers Conference.&quot; So Wikipedia lied to me. -Raymond&quot;</p>
<p>Universal binary =/= Application bundle. &nbsp;The application bundle (all resources needed to launch an app exist in the app&#39;s directory, clicking on the directory&#39;s icon launches the app) was introduced on Macs with OS X, way back in 2001. &nbsp;But it first showed up on NEXT workstations, a full decade prior, when hard disks were even smaller.</p>
<div class="post">[<em>I was responding to the comment &quot;If Apple designed Windows we&#39;d have universal binaries instead of this mess.&quot; Universal binaries, according to Wikipedia, were introduced in 2005. Hard drive sizes in 2005 were different from 1989. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118243">
				<div id="div-comment-1118243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ThomasX</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118243">
			April 10, 2014 at 12:52 am</a>		</div>

		<p>&gt; (I will for the moment ignore the rude behavior of calling people stupid under the guise of asking a question.)</p>
<p>The people were asked a question. Nobody called the people stupid. Therefore it is obviously obvious that the people feel stupid for their own reasons. Next time ask them what the reasons are.</p>
<div class="post">[<em>FTA: &quot;Please tell me this isn&#39;t yet one more stupid mistake of ms employees&#8230;&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1118263">
				<div id="div-comment-1118263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118263">
			April 10, 2014 at 2:01 am</a>		</div>

		<p>I think something like ARJ already has SFX+run support at that time, if there is just limited commands that need this special treatment, I&#39;d think it&#39;s feasible (Whether it&#39;s worthwhile is another issue. My classmate bought his shiny Win95 PC with 1.5GB harddisk only, when the HDD I have in my home has 203 MB only.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118293">
				<div id="div-comment-1118293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118293">
			April 10, 2014 at 8:03 am</a>		</div>

		<p>[Universal binaries, according to Wikipedia, were introduced in 2005.]</p>
<p>I think the problem is that people were using &quot;universal binary&quot; as a general term without knowing it&#39;s the name of a specific thing. Wikipedia asserts that &quot;fat binary&quot; is instead the general term, even though I associate &quot;fat&quot; with the specific implementation of the 68k/PPC changeover. &quot;Universal&quot; certainly _feels_ a lot more generic than &quot;fat&quot;, especially knowing the latter was a novel use of the word coined by apple.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1118313">
				<div id="div-comment-1118313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118313">
			April 10, 2014 at 9:36 am</a>		</div>

		<p>Sven2: You don&#39;t understand why there needs to be both versions of an EXE. When the OS loads an EXE (before it even starts executing), the architecture has to be determined. Back then the OS needed to know if the process will be 16-bit or 32-bit. Nowadays the OS needs to know if the process will be 32-bit or 64-bit.</p>
<p>If you had a 16-bit DLL to load, you&#39;d have to tell Windows to load it with RUNDLL.EXE; if you had a 32-bit DLL to load, you&#39;d start up RUNDLL32.EXE to load it. In order to be able to combine them into one file, MS would have had to both create a format that allows multiple bitnesses to coexist in a single executable (plus the build tools to create them) and a way for a batch file to tell which kind of process to create.</p>
<p>Or with no additional effort they could just create two differently-named executables. Of course, nowadays they have the same name but are in different directories.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1118283">
				<div id="div-comment-1118283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1118283">
			April 10, 2014 at 6:26 am</a>		</div>

		<p>Why would universal binaries should take up more space. You could have binaries that contains multiple code segments for different supported architectures, but aren&#39;t required to ship every architecture in every binary.</p>
<p>For rundll: There would be only one rundll.exe that contains both 32bit and 16bit code (and decides on context which one to use), but for paint, you would ship only the 32bit version.</p>
<p>Effectively, you would just combine *.dll/*.exe and *32.dll/*32.dll into a single binary. I&#39;d argue this would actually use less space than the current approach.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1119513">
				<div id="div-comment-1119513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140408-00/?p=1303#comment-1119513">
			April 13, 2014 at 6:00 am</a>		</div>

		<p>Now we will have to wait for 128-bit Windows before the exe file will be named correctly, without and bitness in the name. :(</p>
<p>Only bitness in the name does NOT constitute an architecture.</p>
<p>Universal binaries also includes non-x86, and non-86-64 architectures. The SysWOW64 does NOT have support for that, the day MS needs to support both x86 and ARM, they will have to invent yet another hack.</p>
<p>@Dave Bacher:</p>
<p>All people in general actually, please don&#39;t use the call it &quot;disk cache&quot; when you&#39;re referring to file cache. OS file cache doesn&#39;t cache disk sectors, it caches *files*. If an app reopens a *file* nothing is cached from previous accesses at all. That&#39;s why disk accesses are improved by using an additional cache on another level in the stack. Please understand this or I will have to explain it again.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

