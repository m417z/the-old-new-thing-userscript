<html>
<head>
<title>Enumerating cyclical decompositions with Stirling numbers</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Enumerating cyclical decompositions with Stirling numbers</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 6, 2014 / year-entry #238</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">This whole enumeration nightmare-miniseries started off with Stirling numbers of the second kind. But what about Stirling numbers of the first kind? Those things ain't gonna enumerate themselves! The traditional formulation of the recursion for Stirling numbers of the first kind (unsigned version, since it's hard to enumerate negative numbers) goes like this: c(n +...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
This whole enumeration nightmare-miniseries started off with
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/03/24/10510315.aspx">
Stirling numbers of the second kind</a>.
But what about
<a HREF="http://en.wikipedia.org/wiki/Stirling_numbers_of_the_first_kind">
Stirling numbers of the first kind</a>?
Those things ain't gonna enumerate themselves!
</p>
<p>
The traditional formulation of the
recursion for Stirling numbers of the first kind
(unsigned version, since it's hard to enumerate negative numbers)
goes like this:
</p>
<p>
<var>c</var>(<var>n</var> + 1, <var>k</var>) =
<var>n</var> &middot; <var>c</var>(<var>n</var>, <var>k</var>) +
<var>c</var>(<var>n</var>, <var>k</var> &minus; 1).
</p>
<p>
although it is more convenient from a programming standpoint to
rewrite it as
</p>
<p>
<var>c</var>(<var>n</var>, <var>k</var>) =
(<var>n</var> &minus; 1) &middot; <var>c</var>(<var>n</var> &minus; 1, <var>k</var>) +
<var>c</var>(<var>n</var> &minus; 1, <var>k</var> &minus; 1).
</p>
<p>
The Wikipedia article explains the combinatorial interpretation,
which is what we will use to enumerate all the possibilities.
</p>
<ul>
<li>The first term says that we recursively generate
    the ways of decomposing <var>n</var> &minus; 1 items
    into <var>k</var> cycles,
    then insert element <var>n</var> in one of <var>n</var> &minus; 1 ways.</p>
<li>The second term says that we recursively generate
    the ways of decomposing <var>n</var> &minus; 1 items
    into <var>k</var> &minus; 1 cycles,
    then add a singleton cycle of just <var>n</var>.
</ul>
<pre>
function Stirling1(n, k, f) {
 if (n == 0 && k == 0) { f([]); return; }
 if (n == 0 || k == 0) { return; }

 // second term
 Stirling1(n-1, k-1, function(s) { f(s.concat([[n]])); });

 // first term
 Stirling1(n-1, k, function(s) {
  for (var i = 0; i < s.length; i++) {
   for (var j = s[i].length; j > 0; j--) {
    f(s.map(function(e, index) {
     return i == index ? e.slice(0, j).concat(n, e.slice(j)) : e;
    }));
   }
  }
 });
}

Stirling1(5, 3, function(s) { console.log(JSON.stringify(s)); });
</pre>
<p>
The inner loop could just as easily gone
</p>
<pre>
   for (var j = 0; j < s[i].length; j++) {
</pre>
<p>
but I changed the loop control for
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2012/11/13/10367904.aspx">
style points</a>.
(It makes the output prettier.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1154413">
				<div id="div-comment-1154413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Al go</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154413">
			October 6, 2014 at 3:54 pm</a>		</div>

		<p>Enough of this series.</p>
<div class="post">[<em>I have issued a full refund to your account. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1154423">
				<div id="div-comment-1154423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154423">
			October 6, 2014 at 4:40 pm</a>		</div>

		<p>So sad really. I don&#39;t see a good reason why Raymond can&#39;t talk about what he wants to talk about on his own blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1154433">
				<div id="div-comment-1154433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Womble</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154433">
			October 6, 2014 at 5:23 pm</a>		</div>

		<p>The change to the j loop changes the bounds of the iteration. Are the references to j inside the loop modified to compensate? Or should they be (j-1)? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1154443">
				<div id="div-comment-1154443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154443">
			October 6, 2014 at 5:44 pm</a>		</div>

		<p>@Womble</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ie/tkcsy6fe(v=vs.94).aspx">msdn.microsoft.com/&#8230;/tkcsy6fe(v=vs.94).aspx</a></p>
<p>&gt; The slice method copies up to, but not including, the element indicated by end.</p>
<p>Perhaps Raymond could have made this clearer by using (j &#8211; 1) + 1 instead of j.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1154463">
				<div id="div-comment-1154463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Womble</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154463">
			October 6, 2014 at 9:37 pm</a>		</div>

		<p>@Maurits &#8211; oh, cool &#8211; I&#39;m not a Javascript coder. Definitely scores style points :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00034001a5381f07 odd alt thread-odd thread-alt depth-1" id="comment-1154473">
				<div id="div-comment-1154473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Georg_Rottensteiner' rel='external nofollow' class='url'>Georg_Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154473">
			October 6, 2014 at 11:15 pm</a>		</div>

		<p>WAT!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1154483">
				<div id="div-comment-1154483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154483">
			October 7, 2014 at 3:21 am</a>		</div>

		<p>Do you need to stringify s before logging it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1154493">
				<div id="div-comment-1154493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fhe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154493">
			October 7, 2014 at 6:13 am</a>		</div>

		<p>&gt;oh, cool &#8211; I&#39;m not a Javascript coder</p>
<p>Look out the window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1154523">
				<div id="div-comment-1154523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154523">
			October 7, 2014 at 7:58 am</a>		</div>

		<p>For those people who don&#39;t have an immediate need for this knowledge in their daily lives, or their jobs: If you are at all interested in computer programming, it is ALWAYS worthwhile to see, and ruminate on, how various mathematical concepts translate into computer code. &nbsp;You may learn some techniques that you can apply to other problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1154593">
				<div id="div-comment-1154593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve D</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154593">
			October 7, 2014 at 3:56 pm</a>		</div>

		<p>Perhaps if Al Go remembered to add a :-) his comment would make more sense?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1154613">
				<div id="div-comment-1154613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141006-00/?p=43913#comment-1154613">
			October 7, 2014 at 10:32 pm</a>		</div>

		<p>@Neil: it makes it a lot more readable. If I recall correctly, just outputting an array in javascript will get you its contents separated by commas, but the contents in this case might all be &#39;object&#39;. Not sure, and didn&#39;t test it, but with stringify you will always get a readable result :)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

