<html>
<head>
<title>Horrifically nasty gotcha: FindResource and FindResourceEx</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Horrifically nasty gotcha: FindResource and FindResourceEx</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 1, 2015 / year-entry #1</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The Find­Resource­Ex function is an extension of the Find­Resource function in that it allows you to specify a particular language fork in which to search for the resource. Calilng the Find­Resource function is equivalent to calling Find­Resource­Ex and passing zero as the wLanguage. Except for the horrible nasty gotcha: The second and third parameters to...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The <code>Find&shy;Resource&shy;Ex</code> function is an extension of the <code>Find&shy;Resource</code> function in that it allows you to specify a particular language fork in which to search for the resource. Calilng the <code>Find&shy;Resource</code> function is equivalent to calling <code>Find&shy;Resource&shy;Ex</code> and passing zero as the <code>wLanguage</code>.</p>
<p> Except for the horrible nasty gotcha: The second and third parameters to <code>Find&shy;Resource&shy;Ex</code> are in the opposite order compared to the second and third parameters to <code>Find&shy;Resource</code>! </p>
<p> In other words, if you are adding custom language support to a program, you cannot just stick a <code>wLanguage</code> parameter on the end when you switch from <code>Find&shy;Resource</code> to <code>Find&shy;Resource&shy;Ex</code>. You also have to flip the second and third parameters. </p>
<table border="0" bordercolor="0" cellpadding="2">
<tr>
<td>Original code</td>
<td>     <code>Find&shy;Resource(<wbr>hModule,     MAKEINTRESOURCE(IDB_MYBITMAP),     RT_BITMAP)</wbr></code> </td>
</tr>
<tr>
<td>You change it to</td>
<td>     <code>Find&shy;Resource&shy;<span style="border: solid 1px black">Ex</span>(<wbr>hModule,     MAKEINTRESOURCE(IDB_MYBITMAP),     RT_BITMAP,     <span style="border: solid 1px black">0</span>)</wbr></code> </td>
</tr>
<tr>
<td>You should have changed it to</td>
<td>     <code>Find&shy;Resource&shy;<span style="border: solid 1px black">Ex</span>(<wbr>hModule,     <span style="border: solid 1px black">     RT_BITMAP</span>,     <span style="border: solid 1px black">     MAKEINTRESOURCE(IDB_MYBITMAP)</span>,     <span style="border: solid 1px black">0</span>)</wbr></code> </td>
</tr>
</table>
<p> The nasty part of this is that since the second and third parameters are the same type, the compiler won't notice that you got them backward. The only way you find out is that your resource code suddenly stopped working. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1169343">
				<div id="div-comment-1169343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169343">
			January 1, 2015 at 7:15 am</a>		</div>

		<p>Raymond, is there any sort of team at Microsoft that has oversight on official API structure?</p>
<div class="post">[<em>There is now (in the form of a <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/12/11/10376210.aspx">v-team</a>), but there wasn&#39;t back in 1989. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1169353">
				<div id="div-comment-1169353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169353">
			January 1, 2015 at 7:41 am</a>		</div>

		<p>&quot;The nasty part of this is that since the second and third parameters are the same type&quot;.</p>
<p>Ah, the ancient variant of the modern &quot;stringly typed&quot; approach. Let&#39;s call it &quot;types are integral for quality assurance&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1169363">
				<div id="div-comment-1169363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169363">
			January 1, 2015 at 8:10 am</a>		</div>

		<p>How could such an horrible API extension happen?</p>
<div class="post">[<em>Things were a bit wilder back in 1989. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1169373">
				<div id="div-comment-1169373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169373">
			January 1, 2015 at 8:43 am</a>		</div>

		<p>Perhaps FindResourceEx should be deprecated in favor of a hypothetical FindResourceExEx which doesn&#39;t switch the parameters?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1169383">
				<div id="div-comment-1169383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169383">
			January 1, 2015 at 8:43 am</a>		</div>

		<p>In retrospect, lpType looks like a good candidate for an enum.</p>
<div class="post">[<em>Though that wouldn&#39;t leave a place for user-defined types. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1169393">
				<div id="div-comment-1169393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169393">
			January 1, 2015 at 9:33 am</a>		</div>

		<p>[Though that wouldn&#39;t leave a place for user-defined types. -Raymond]</p>
<p>Wait, you can add user-defined types? What happens when the next version of Windows supports that type?</p>
<div class="post">[<em>Windows-defined types are integers (<code>RT_*</code>). User-defined types are strings (<code>TEXT(&quot;name&quot;)</code>). -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1169403">
				<div id="div-comment-1169403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Euro Micelli</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169403">
			January 1, 2015 at 10:26 am</a>		</div>

		<p>@Joshua, I imagine that most people calling FindResourceEx are also authors of the resources themselves. I suspect that interference shouldn&#39;t be much of a real problem in practice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1169413">
				<div id="div-comment-1169413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deanna </cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169413">
			January 1, 2015 at 12:55 pm</a>		</div>

		<p>Joshua, the types are just recommendations, and can actually contain any data you want, if you read them in a generic way. </p>
<p>Of course, if you want something else to read them, then stick to the standard type values. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1169423">
				<div id="div-comment-1169423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169423">
			January 1, 2015 at 2:21 pm</a>		</div>

		<p>Ok now I feel really silly. FindResourceEx/LoadResource return the raw bytes even if it is a standard type. Calling LoadResource on an icon resource returns the bytes of the .ico file. While I&#39;m pretty sure a cross-id would cause major headaches, it won&#39;t be a headache here (although it might have been on Win9x but that branch is not getting anymore feature releases).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00034001a5381f07 odd alt thread-odd thread-alt depth-1" id="comment-1169473">
				<div id="div-comment-1169473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Georg_Rottensteiner' rel='external nofollow' class='url'>Georg_Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169473">
			January 1, 2015 at 10:34 pm</a>		</div>

		<p>Is there any specific reason why there never was a LoadStringEx method that allowed passing a language ID as well?</p>
<p>It&#39;s not too hard to assemble, but it shouldn&#39;t be required.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1169573">
				<div id="div-comment-1169573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169573">
			January 2, 2015 at 12:41 pm</a>		</div>

		<p>@Greg Rottensteiner. Those resource API&#39;s take an instance handle to the DLL as the first parameter. Isn&#39;t that usually the MUI DLL&#39;s handle, done by LoadMUILibrary for old Windows versions, and just LoadLibrary for Vista and beyond? (And I suppose you could implement a custom scheme if you want as long as you get the desired resource DLL HINSTANCE.) But I&#39;m not a globalisation dude so may be wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1169613">
				<div id="div-comment-1169613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169613">
			January 2, 2015 at 1:45 pm</a>		</div>

		<p>You can do user-defined types with an integer (e.g., WM_USER.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1169653">
				<div id="div-comment-1169653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169653">
			January 3, 2015 at 12:37 am</a>		</div>

		<p>Similar thing happened to me with WNetAddConnection2, whose prototype is (&#8230;, LPCTSTR lpPassword, LPCTSTR lpUsername, &#8230;). Who in his right mind puts the password first? That&#39;s one debugging day I&#39;d like to have back.</p>
<p>In other news, C# and other modern languages have named parameters to avoid these kinds of mistakes:</p>
<p>WNetAddConnection2(&#8230;, lpPassword: myPassword, lpUsername: myUsername, &#8230;)</p>
<p>I&#39;ve been pestering my team mates to add these anywhere the params are not blindingly obvious.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1169973">
				<div id="div-comment-1169973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1169973">
			January 6, 2015 at 7:36 am</a>		</div>

		<p>&quot;In other news, C# and other modern languages have named parameters to avoid these kinds of mistakes&quot;</p>
<p>And if you&#39;re using Visual Studio (or another IDE that provides an equivalent) IntelliSense will help you out as you&#39;re typing the function call out by showing you the parameter names.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1170203">
				<div id="div-comment-1170203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243#comment-1170203">
			January 7, 2015 at 12:28 am</a>		</div>

		<p>&quot;IntelliSense will help you&quot; This helps to write a new call, but it doesn&#39;t help you to verify (understand) already written code. (I know how to force the tooltip in the IDE. But if you are looking at something in source control, you can&#39;t.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

