<html>
<head>
<title>When studying performance, you need to watch out not only for performance degradation, but also unexpected performance improvement</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>When studying performance, you need to watch out not only for performance degradation, but also unexpected performance improvement</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 23, 2012 / year-entry #274</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20121123-00/?p=6013</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In addition to specific performance tests run by individual feature teams, Windows has a suite of automated performance tests operated by the performance team, and the results are collated across a lot of metrics. When a number is out of the ordinary, the test results are flagged for further investigation. The obvious thing that the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>In addition to specific performance tests run by individual feature teams, Windows has a suite of automated performance tests operated by the performance team, and the results are collated across a lot of metrics. When a number is out of the ordinary, the test results are flagged for further investigation.</p>
<p> The obvious thing that the performance metrics look for are sudden drops in performance. If an operation that used to consume 500KB of memory now consumes 750KB of memory, then you need to investigate why you're using so much memory all of a sudden. The reasons for the increase might be obvious, like "Oh, rats, there's a memory leak." Or they might be indirect, like "<a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/05/02/588350.aspx">We changed our caching algorithm</a>." Or "In order to address condition&nbsp;X, we added a call to function&nbsp;Y, but it turns out that function&nbsp;Y allocates a lot of memory." Or it could be something really hard to dig up. "We changed the timing of the scenario, so a window gets shown before it is populated with data, resulting in two render passes instead of one; the first pass is of an empty window, and then second is a when the data is present." Chasing down these elusive performance regressions can be quite time consuming, but it's part of the job. </p>
<p> (End of exposition.) </p>
<p> The non-obvious thing is that the performance metrics also look for sudden <i>improvements</i> in performance. Maybe the memory usage plummeted, or the throughput doubled. Generally speaking, a sudden improvement in performance has one of two sources. </p>
<p> The first is the one you like: The explained improvement. Maybe the memory usage went down because you found a bug in your cache management policy where it hung onto stale data too long. Maybe the throughput improved because you found an optimization that let you avoid some expensive computations in a common case. Maybe you found and fixed the timing issue that was resulting in wasted render passes. (And then there are two types of explained improvements: the expected explained improvement, where something improved because you specifically targeted the improvement, and the unexpected explained improvement, where something improved as an understood side-effect of some other work.) </p>
<p> The second is the one that you don't like: The unexplained improvement. The memory usage activity went down a lot, but you don't remember making any changes that affect your program's memory usage profile. Things got better <i>but you don't know why</i>. </p>
<p> The danger here is that the performance gain may be the result of a bug. Maybe the scenario completed with half the I/O activity because the storage system is ignoring flush requests. Or it completed 15% faster because the cache is returning false cache hits. </p>
<p> At the end of the day, when you finally understand what happened, you can then make an informed decision as to what to do about it. Maybe you can declare it an acceptable degradation and revise the performance baseline. ("Yes, we use more memory to render, but that's because we're using a higher-quality effects engine, and we consider the additional memory usage to be an acceptable trade-off for higher quality output.") Maybe you will look for an alternate algorithm that is less demanding on memory usage, or bypass calling function&nbsp;Y if it doesn't appear that condition&nbsp;X is in effect. Maybe you can offset the performance degradation by improving other parts of the component. Maybe the sudden performance improvement is a bug, or maybe it's an expected gain due to optimizations. </p>
<p> But until you know <i>why</i> your performance profile changed, you won't know whether the change was good or bad. </p>
<p> After all, if you don't know why your performance improved, how do you know that it won't degrade just as mysteriously? Today, you're celebrating that your memory usage dropped from 200MB to 180MB. Two weeks from now, when the mysterious condition reverts itself, you'll be trying to figure out why your memory usage jumped from 180MB to 200MB. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1022283">
				<div id="div-comment-1022283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lockwood</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121123-00/?p=6013#comment-1022283">
			November 23, 2012 at 8:35 am</a>		</div>

		<p>User is complaining of having filled his 4MB* allocation and wanting more free space.</p>
<p>BOFH: &lt;clickety-click&gt; there you go, you now have 4MB free</p>
<p>User: Cool, so 8MB total</p>
<p>BOFH: No, 4MB total</p>
<p>User: Aaaaaargh</p>
<p>Be careful of the &quot;unexplained&quot; increases</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1022313">
				<div id="div-comment-1022313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121123-00/?p=6013#comment-1022313">
			November 23, 2012 at 12:08 pm</a>		</div>

		<p>How are past performance metrics tracked to be compared to? &nbsp;Using a baseline, using previous results or something else?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo even thread-even depth-1" id="comment-1022363">
				<div id="div-comment-1022363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121123-00/?p=6013#comment-1022363">
			November 25, 2012 at 7:31 am</a>		</div>

		<p>[ The danger here is that the performance gain may be the result of a bug. Maybe the scenario completed with half the I/O activity because the storage system is ignoring flush requests. Or it completed 15% faster because the cache is returning false cache hits. ]</p>
<p>Been there. Some image manipulation process got significantly faster, then we noticed some regression in the result&#8230; due to a bug a (quite slow) part of the algorithm was now completely skipped, and, as we know, the fastest code is the code that is not run. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1022583">
				<div id="div-comment-1022583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121123-00/?p=6013#comment-1022583">
			November 26, 2012 at 1:42 pm</a>		</div>

		<p>Problems that go away by themselves, come back by themselves</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ericlaw even thread-even depth-1" id="comment-1023393">
				<div id="div-comment-1023393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/EricLaw+%5Bex-MSFT%5D' rel='external nofollow' class='url'>EricLaw [ex-MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121123-00/?p=6013#comment-1023393">
			November 29, 2012 at 2:07 pm</a>		</div>

		<p>Back in my IE Performance Lab days, we&#39;d often casually track the progress of fixes to major functional regressions by simply watching the performance lab&#39;s test results. When we &quot;lost&quot; the phantom improvement, we knew the fix had made it in to the tested branch.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

