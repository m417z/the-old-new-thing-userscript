<html>
<head>
<title>Broadcasting user-defined messages</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Broadcasting user-defined messages</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 5, 2004 / year-entry #174</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040505-00/?p=39503</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When you broadcast a message (via HWND_BROADCAST) remember that the message you broadcast must have global meaning. I discussed earlier what the various message ranges mean. Notice that only the system-defined range (0..WM_USER-1) and the registered message range (MAXINTATOM .. MAXWORD) have global meaning. The other two ranges have class-specifc or application-specific meanings. In other...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>When you broadcast a message  (via HWND_BROADCAST)  remember that the message you broadcast must have global meaning.  <a href="http://weblogs.asp.net/oldnewthing/archive/2003/12/02/55914.aspx">  I discussed earlier what the various message ranges mean</a>.  Notice that only the system-defined range (0..WM_USER-1) and  the registered message range (MAXINTATOM .. MAXWORD) have global  meaning.  The other two ranges have class-specifc or  application-specific meanings.</p>
<p>  In other words, you can't broadcast a message in the WM_USER range  since that message has a different meaning for each window class.  Similarly, a message in the WM_APP range has a different meaning  for each application.  </p>
<p>  We ran into this problem in Windows&nbsp;95.  There were programs that decided to broadcast  private messages like WM_USER+0x0100,  intending them to be delivered to  other instances of that program.  Of course, when those messages reached some other windows,  they interpreted WM_USER+0x0100 as some other private message  and either acted funny or crashed.  </p>
<p>  On the other hand, the programs really wanted the message to  reach the windows of other copies of itself, so we couldn't  just block the broadcast of the programs would stop working.  Progams were relying on the system not trying to stop them from  crashing other programs!  </p>
<p>  The solution was to split the difference.  If you broadcast a message that was not safe to broadcast,  Windows 95 would send it only to old-style programs.  New-style programs (marked as version 4.0 or higher) would not  receive the messages.  </p>
<p>  That way, old programs continued to affect each other as they  always did, but new programs followed the new rules.  </p>
<p>  Moral of the story:  When you broadcast a message, make sure it's one that every  receiving window will be able to handle.  </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-171583">
				<div id="div-comment-171583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Montgomery</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040505-00/?p=39503#comment-171583">
			May 5, 2004 at 5:36 pm</a>		</div>

		<p>That&#8217;s why I use &quot;RegisterWindowMessage( )&quot; to create unique messages when I need to send messages globally via &quot;HWND_BROADCAST&quot;.  Raymond,  any insight into the overhead of using &quot;HWND_BROADCAST&quot; versus a targetted handle to send a message to?  I assume it&#8217;s just one message added to the monster flow of messages every app normally sees.  The problem, of course, is that when you assume&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-171593">
				<div id="div-comment-171593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040505-00/?p=39503#comment-171593">
			May 5, 2004 at 7:52 pm</a>		</div>

		<p>Actually you want to avoid doing too much of this, since it wakes up all apps, even dormant ones. For example, if you take notepad, minimize it, and never touch it, none of its code runs and it all eventually gets paged out. But if somebody sits around and keeps broadcasting messages, then notepad&#8217;s window procedure will get paged in for the sole purpose of saying, &quot;No, I don&#8217;t want that message.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-171603">
				<div id="div-comment-171603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jeffdav' rel='external nofollow' class='url'>jeffdav</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040505-00/?p=39503#comment-171603">
			May 5, 2004 at 11:17 pm</a>		</div>

		<p>What about calling EnumWindows() and then sending your WM_USER+h directly to your window?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-171613">
				<div id="div-comment-171613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040505-00/?p=39503#comment-171613">
			May 5, 2004 at 11:29 pm</a>		</div>

		<p>i normally just create a chunk of shared memory (mapped file) to store my window handles when i need to send messages between applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-390093">
				<div id="div-comment-390093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/06/10/625322.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040505-00/?p=39503#comment-390093">
			June 10, 2006 at 10:00 am</a>		</div>

		<p>Most messages are not safe to broadcast.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

