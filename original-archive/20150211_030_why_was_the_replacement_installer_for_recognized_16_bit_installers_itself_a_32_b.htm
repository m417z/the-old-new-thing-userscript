<html>
<head>
<title>Why was the replacement installer for recognized 16-bit installers itself a 32-bit program instead of a 64-bit program?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why was the replacement installer for recognized 16-bit installers itself a 32-bit program instead of a 64-bit program?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 11, 2015 / year-entry #31</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>34</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Even though 64-bit Windows does not support 16-bit applications, there is a special case for 16-bit installers for 32-bit applications. Windows detects this scenario and substitutes a 32-bit replacement installer which replicates the actions of the 16-bit installer. Commenter Karellen is horrified at the fact that the replacement installer is a 32-bit program. "You're writing...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Even though 64-bit Windows does not support 16-bit applications, there is a special case for 16-bit installers for 32-bit applications. Windows detects this scenario and substitutes a 32-bit replacement installer which replicates the actions of the 16-bit installer. Commenter Karellen is horrified at the fact that the replacement installer is a 32-bit program. "You're writing a program that will run exclusively on 64-bit systems. <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/10/31/10461992.aspx#10462285"> Why not built it to run natively on the OS it's designed for</a>? Why is this apparently not the "obvious" Right Thing(tm) to do? What am I missing?"</p>
<p> Recall that a <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/03/19/10403330.aspx"> science project</a> is a programming project that is technically impressive but ultimately impractical. For example it might be a project that nobody would actually use, or it attempts to add a Gee-Whiz feature that nobody is really clamoring for. </p>
<p> But at least a science project is trying to solve a problem. This proposal doesn't even solve any problems! Indeed, this proposal <i>creates</i> problems. One argument in favor of doing it this way is that it is satisfies some obsessive-compulsive requirement that a 64-bit operating system have no 32-bit components beyond the 32-bit emulation environment itself. </p>
<blockquote class="q"><p> Because! Because you're running a 64-bit system, and running apps native to that system is just more elegant. </p>
</blockquote>
<p> Okay, it's not obsessive-compulsive behavior. It's some sort of aesthetic ideal, postulated for its own sake, devoid of practical considerations. </p>
<p> Remember the problem space. We have a bunch of 32-bit applications that use a 16-bit installer. Our goal is to get those applications installed on 64-bit Windows. By making the replacement installer a 32-bit program, you get the emulator to do all the dirty work for you. Things like registry redirection, file system redirection, and 32-bit application compatibility. </p>
<p> Suppose the original installer database says </p>
<ul>
<li>Copy X.DLL file into the     <code>%Program&shy;Files%\<wbr>AppName</wbr></code>     directory.   </li>
<li>Copy Y.DLL into the       <code>%windir%\<wbr>System32</wbr></code> directory. </li>
<li>If the current version of <code>C:\Program Files\<wbr>Common     Files\<wbr>Adobe\<wbr>Acrobat\<wbr>ActiveX\<wbr>AcroPDF.dll</wbr></wbr></wbr></wbr></wbr></code>     is 7.5 or higher, then set this registry key. </li>
</ul>
<p> If you write the replacement installer as a 32-bit program, then other parts of the 32-bit emulation engine do the work for you. </p>
<ul>
<li>The environment manager knows that     64-bit processes get the environment variable     <code>Program&shy;Files</code> pointing to     <code>C:\Program Files</code>,     whereas 32-bit processes get     <code>Program&shy;Files</code> pointing to     <code>C:\Program Files (x86)</code>. </li>
<li>The file system redirector knows that if a 32-bit process     asks for     <code>%windir%\<wbr>System32</wbr></code>,     it should really get     <code>%windir%\<wbr>SysWOW64</wbr></code>. </li>
<li>The registry redirector knows that if a 32-bit process tries to     access certain parts of the registry, they should be sent to     the <code>Wow&shy;64&shy;32&shy;Node</code> instead. </li>
</ul>
<p> If you had written the replacement installer as a 64-bit program, you would have to replicate all of these rules and make sure your copy of the rules exactly matched the rules used by the real environment manager, file system redirector, and registry redirector. </p>
<p> Now you have to keep two engines in sync: the 32-bit emulation engine and the 64-bit replacement installer for 32-bit applications. This introduces fragility, because any behavior change in the 32-bit emulation engine must be accompanied by a corresponding change in the 64-bit replacement installer. </p>
<p> Suppose the application compatibility folks add a rule that says, "If a 32-bit installer tries to read the version string from <code>C:\Program Files\<wbr>Common Files\<wbr>Adobe\<wbr>Acrobat\<wbr>ActiveX\<wbr>AcroPDF.dll</wbr></wbr></wbr></wbr></wbr></code>, return the version string from <code>C:\Program Files (x86)\<wbr>Common Files\<wbr>Adobe\<wbr>Acrobat\<wbr>ActiveX\<wbr>AcroPDF.dll</wbr></wbr></wbr></wbr></wbr></code> instead." And suppose that rule is not copied to the 64-bit replacement installer. Congratulations, your 64-bit replacement installer will incorrectly install any program that changes behavior based on the currently-installed version of AcroPDF. </p>
<p> I don't know for sure, but I wouldn't be surprised if some of these installers support plug-ins, so that the application developer can run custom code during installation. It is possible for 16-bit applications to load 32-bit DLLs via a technique known as <a href="http://support.microsoft.com/kb/125710"> generic thunking</a>, and the 16-bit stub installer would use a generic thunk to call into the 32-bit DLL to do whatever custom action was required. On the other hand, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2008/10/20/9006720.aspx"> 64-bit applications cannot load 32-bit DLLs</a>, so if the 64-bit replacement installer encountered a 32-bit DLL plug-in, it would have to run a 32-bit helper application to load the plug-in and call into it. So you didn't escape having a 32-bit component after all. </p>
<p> And the original obsessive-compulsive reason for requiring the replacement installer to be 64-bit was flawed anyway. This is a replacement installer <i>for a 32-bit application</i>. Therefore, the replacement installer is part of the 32-bit emulation environment, so it is allowed to be written as a 32-bit component. </p>
<p> Let's look at the other arguments given for why the replacement installer for a 32-bit application should be written as a 64-bit application. </p>
<blockquote class="q"><p> Because complexity is what will be our undoing in the end, and reducing it wherever we can is always a win. </p>
</blockquote>
<p> As we saw above, writing the replacement installer as a 64-bit application <i>introduces</i> complexity. Writing it as a 32-bit application <i>reduces</i> complexity. So this statement itself argues for writing the replacement installer as a 32-bit application. </p>
<blockquote class="q"><p> Because we can't rewrite everything from scratch at once, but we can create clean new code one small piece at a time, preventing an increase to our technical debt where we have the opportunity to do so at negligible incremental cost to just piling on more cruft. </p>
</blockquote>
<p> As noted above, the incremental cost is hardly negligible. Indeed, writing the replacement installer as a 64-bit application is not merely more complex, it <i>creates</i> an ongoing support obligation, because any time there is a change to the 32-bit emulation environment, that change needs to be replicated in the 64-bit replacement installer. This is a huge source of technical debt: Fragile coupling between two seemingly-unrelated components. </p>
<p> And writing the replacement installer as a 32-bit application does not create a future obligation to port it to 64 bits when support for 32-bit applications is dropped in some future version of Windows. Because when support for 32-bit applications disappears (as it already has on Server Core), there will be no need to port the replacement installer to 64-bit because there's no point writing an installer for a program that cannot run! </p>
<p> Writing the replacement installer as a 32-bit program was the right call. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (34)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1175233">
				<div id="div-comment-1175233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kelden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175233">
			February 11, 2015 at 7:16 am</a>		</div>

		<p>I can imagine there are crazy people who creates 32-bit installers to install 64-bit applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175243">
				<div id="div-comment-1175243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dmw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175243">
			February 11, 2015 at 7:24 am</a>		</div>

		<p>That reminds me of another science project:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2012/12/18/10378851.aspx">blogs.msdn.com/&#8230;/10378851.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175253">
				<div id="div-comment-1175253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175253">
			February 11, 2015 at 7:37 am</a>		</div>

		<p>@Kelden, it is not even that crazy, if the installer performs architecture detection and then installs either the 32-bit or 64-bit binaries as appropriate.</p>
<p>Of course, that leads to failures in the Windows-server-SKU-without-32-bit-support-installed scenarios, but for many applications, those scenarios represent a trivial fraction of potential users.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175273">
				<div id="div-comment-1175273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger Lipscombe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175273">
			February 11, 2015 at 7:53 am</a>		</div>

		<p>I saw this:</p>
<p>&gt; It&#39;s some sort of aesthetic ideal, postulated for its own sake, devoid of practical considerations.</p>
<p>&#8230;and thought of this:</p>
<p>&gt; Any run-of-the-mill engineer can design something which is elegant. A good engineer designs systems to be efficient. A great engineer designs them to be effective.</p>
<p>&#8230;from <a rel="nofollow" target="_new" href="http://spacecraft.ssl.umd.edu/akins_laws.html">spacecraft.ssl.umd.edu/akins_laws.html</a>, which I was reading this morning.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175283">
				<div id="div-comment-1175283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poizan42</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175283">
			February 11, 2015 at 8:01 am</a>		</div>

		<p>&gt; On the other hand, 64-bit applications cannot load 32-bit DLLs,</p>
<p>Well, you can call/jmp to 0x23:(addr of 32-bit code) and from the 32-bit code call ntdll!LdrLoadDll. The Win32 subsystem does not support this, and kernel32.dll refuses to load (which is enforced by hardcoding the name of kernel32.dll inside of ntdll (ntdll!LdrpKernel32DllName)&#8230;). So this seems to be a case of Raymond looking at the world with userspace-colored glasses.</p>
<div class="post">[<em>So you&#39;re going to introduce even more complexity by having the 64-bit installer break the rules and do something that the kernel team doesn&#39;t support? (On top of that, it will also have to patch the 32-bit DLL in order to do file system redirection, registry redirection, and all the other things that emulation would have done for you. Complex enough for you?) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd odd alt thread-odd thread-alt depth-1" id="comment-1175293">
				<div id="div-comment-1175293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175293">
			February 11, 2015 at 8:27 am</a>		</div>

		<p>What i like about your blog, and it&#39;s been happening more and more in recent years, is that you don&#39;t simply throw a comment out there. You actually explain it all the way down to the very end, and then come back up. </p>
<p>Some things that might seem obvious to some developers, and complete unknown to others.</p>
<p>For example, the post from December 2014 about getting procedure addresses by ordinal. If the ordinal isn&#39;t there, it&#39;s obviously bad. But it&#39;s only obviously bad to me, because i know what a DLL is, what an export is, what exporting by ordinal is, and what the alternative to exporting by ordinal is. So while i didn&#39;t need the depth, others can use it.</p>
<p>On the other hand i knew nothing about Acquire and Release semantics, fibers, SSE, and the intricacies of undefined behavior in a post-modern optimizing compilers. In those cases i appreciate, and need, the depths of knowledge that accompany the blog.</p>
<p>Sometimes i wonder if you feel silly repeating so much detail on a subject. But the informal nature of a blog and be so much more expressive and helpful than pure documentation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175303">
				<div id="div-comment-1175303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175303">
			February 11, 2015 at 8:58 am</a>		</div>

		<p>@Raymond: One possible implementation for how folder redirection works is it&#39;s inside 32 bit NtDll. If this were in fact the implementation used poizan42 might be on the right track. But it&#39;s not there&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175313">
				<div id="div-comment-1175313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wyatt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175313">
			February 11, 2015 at 9:35 am</a>		</div>

		<p>I create 32-bit installers to install 64 bit applications just like Ben mentioned above. &nbsp;I can&#39;t imagine the number of problems I&#39;d run into with people trying to run the 64 bit installer on a 32 bit OS. &nbsp;Of course, most of my files are .NET assemblies marked as Any CPU, but I do have a couple that install with a condition based on the processor architecture because the vendor doesn&#39;t have an &quot;Any CPU&quot; version.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175323">
				<div id="div-comment-1175323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175323">
			February 11, 2015 at 9:49 am</a>		</div>

		<p>I&#39;m actually surprised that the 16-bit installers (for 32-bit applications) have survived for so long. &nbsp;We have had 32-bit programs for how long, now?</p>
<p>I suppose the reason that the installer-makers have not rewritten the installers as 32-bit installers is because, what, the 16-bit installers work fine and no one wants to update them?</p>
<p>&quot;Windows detects this scenario and substitutes a 32-bit replacement installer which replicates the actions of the 16-bit installer.&quot; &nbsp;Does this apply to 16-bit installers that weren&#39;t even written by Microsoft? &nbsp;Does Microsoft completely emulate 16-bit installers from other companies (like InstallShield)? &nbsp;That would seem like a large undertaking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 odd alt thread-odd thread-alt depth-1" id="comment-1175333">
				<div id="div-comment-1175333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175333">
			February 11, 2015 at 10:20 am</a>		</div>

		<p>@DWalker: The replacement installer engine is for certain versions of the InstallShield and Acme installers, presumably because they were so prevalent at the time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175353">
				<div id="div-comment-1175353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark VY</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175353">
			February 11, 2015 at 11:13 am</a>		</div>

		<p>I have the opposite question: why does 64-bit Windows come with ANY 64-bit programs? &nbsp;Why not just the kernel and maybe a few utilities like Task Manager? &nbsp;Does Notepad need several gigs of RAM? &nbsp;Minesweeper? &nbsp;The cost to port them was high. &nbsp;As you once said, Pinball had to be sacrificed. &nbsp;Things like Internet Explorer need a 32-bit version anyway so plugins work. &nbsp;This trick doesn&#39;t help shell plugins, so many 3rd-party shell plugins go bye-bye.</p>
<p>To what end?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175363">
				<div id="div-comment-1175363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175363">
			February 11, 2015 at 11:22 am</a>		</div>

		<p>Unfortunately there is no chance this explanation will stop people from making future ill-thought-out comments about &#39;omg Microsoft is doing it wrong!!!111&#39;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse even thread-even depth-1" id="comment-1175373">
				<div id="div-comment-1175373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175373">
			February 11, 2015 at 11:45 am</a>		</div>

		<p>@Mark VY: Windows Server 2008 R2 and higher made WoW64 optional (see <a rel="nofollow" target="_new" href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd371790(v=vs.85).aspx">msdn.microsoft.com/&#8230;/dd371790(v=vs.85).aspx</a>), so 32-bit stuff wouldn&#39;t work there period. I&#39;m sure that it would be fun to run a server where you don&#39;t even have basic &quot;taken for granted&quot; tools available!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175383">
				<div id="div-comment-1175383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175383">
			February 11, 2015 at 11:52 am</a>		</div>

		<p>I wish that 64-bit Windows allowed us to create LDT entries like the Linux and Mac OS kernels do. &nbsp;Then I could create my own NTVDM that works on Win64. &nbsp;Instead, Microsoft made this impossible without patching the NT kernel. &nbsp;Oh wait, they made that impossible, too.</p>
<p>@Erik F: WOW64 is only optional in Server Core. &nbsp;If you have the GUI, WOW64 is mandatory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175393">
				<div id="div-comment-1175393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175393">
			February 11, 2015 at 11:57 am</a>		</div>

		<p>Thanks for the answers. &nbsp;Andy: &quot;The replacement installer engine is for certain versions of the InstallShield and Acme installers, presumably because they were so prevalent at the time.&quot; &nbsp;I suppose that &quot;at the time&quot; means when 64-bit Windows was first delivered. &nbsp;That makes sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari odd alt thread-odd thread-alt depth-1" id="comment-1175403">
				<div id="div-comment-1175403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175403">
			February 11, 2015 at 12:19 pm</a>		</div>

		<p>InstallShield is still pretty damn prevalent. &nbsp;</p>
<p>I suspect the other reason there were so many 32-bit applications with 16-bit installers was &quot;why should we buy the new 32-bit version when the old 16-bit one still works?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175413">
				<div id="div-comment-1175413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poizan42</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175413">
			February 11, 2015 at 1:17 pm</a>		</div>

		<p>&gt; So you&#39;re going to introduce even more complexity by having the 64-bit installer break the rules and do something that the kernel team doesn&#39;t support?</p>
<p>No not at all, I was just pointing out that your statement wasn&#39;t completely correct. 64-bit applications can in theory load 32-bit dlls &#8211; at least native dlls.</p>
<div class="post">[<em>You may as well say &quot;Of course it&#39;s possible. You just install a kernel driver that takes over the CPU and does the thing you want.&quot; It&#39;s not possible <span style="text-decoration:underline;">while staying within the rules of the system</span>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175423">
				<div id="div-comment-1175423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bekenn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175423">
			February 11, 2015 at 1:37 pm</a>		</div>

		<p>Myria: How do you create an LDT entry on OSX from a 64-bit application? &nbsp;i386_set_ldt is exported for 64-bit, but doesn&#39;t work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175433">
				<div id="div-comment-1175433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darran Rowe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175433">
			February 11, 2015 at 2:16 pm</a>		</div>

		<p>@poizan42:</p>
<p>In theory it is always possible, but there is always a huge problem with pointers and stuff. So that is more impractical than just writing a 32 bit installer.</p>
<p>There is problems of the stack being in RSP and possibly being high up in the address space, calling convention differences, pointers to memory needing to be in the low 2GB/4GB of the address space and so on.</p>
<p>@Mark YV:</p>
<p>But 64 bit applications is more than just address space. Also, we can&#39;t be sure what will happen in years to come. 4k resolutions are here where at 32bpp, we can see a fair amount of memory usage per frame. 8k also exists and is coming to more common use, and that seems to be extending things to 48bpp too.</p>
<p>Also as far as plugins are concerned, things have moved on. I normally use the 64 bit versions of browsers and I have no issues with the plugins I use. So years ago that may have been a major factor, but these days things have changed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175443">
				<div id="div-comment-1175443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175443">
			February 11, 2015 at 3:38 pm</a>		</div>

		<p>Also consider that things like ASLR can be much more effective in a 64-bit address space; in a 32-bit space it usually has little enough entropy that brute forcing the locations of things is often a reasonable thing to do. In a 64-bit world brute force goes out the window and you need something like an information disclosure bug or another better technique.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1175463">
				<div id="div-comment-1175463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175463">
			February 11, 2015 at 6:23 pm</a>		</div>

		<p>I have a question: I remember that newer server version like Win2012 does not have 32-bit sub-system on it by default (you have to explicitly select it from Windows features), is the installer there 32-bit or 64-bit? Or is that the 32-bit version of installer will be installed and take over when 32-bit subsystem got installed?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175343">
				<div id="div-comment-1175343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175343">
			February 11, 2015 at 10:47 am</a>		</div>

		<p>@DWalker: &quot;I&#39;m actually surprised that the 16-bit installers (for 32-bit applications) have survived for so long. &nbsp;We have had 32-bit programs for how long, now?&quot;</p>
<p>I suspect it&#39;s for programs that were written when 32-bit programs had *not* been around long. There is one 1996 game I&#39;ve run into this with IIRC. Unfortunately, I guess the mechanism for replacing the installer didn&#39;t catch it; fortunately, if memory serves, installing it in a 32-bit VM and copying the installation directory out seemed to work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1175473">
				<div id="div-comment-1175473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175473">
			February 11, 2015 at 9:16 pm</a>		</div>

		<p>@dmw: You might want to re-read this part:</p>
<p>— henke37: And just leaving it as 32-bit was out of the question then?</p>
<p>— Raymond: That would have been even more work, because there was at the time no infrastructure in Setup for having 32-bit-only components. (And then automatically uninstalling it when WOW64 was disabled.) And besides, all the people who criticized Windows 95 as &quot;not really a 32-bit operating system because it has some parts in 16-bit&quot; would use the same logic to say that 64-bit Windows is &quot;not really a 64-bit operating system.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-1175483">
				<div id="div-comment-1175483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175483">
			February 11, 2015 at 11:35 pm</a>		</div>

		<p>Microsofties still use the word &#39;program&#39; once in a while instead of &#39;app&#39; :O?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175493">
				<div id="div-comment-1175493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark VY</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175493">
			February 12, 2015 at 2:08 am</a>		</div>

		<p>Thanks to all the people who gave reasons why my idea might not be quite as good as I thought :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175503">
				<div id="div-comment-1175503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dmw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175503">
			February 12, 2015 at 2:11 am</a>		</div>

		<p>@Fleet Command: I read that. But contrary to what Raymond describes, no x64 release prior to Server 2008 R2 (if I recall correctly) even allowed to disable WOW64 in shipping configurations. WOW64 was practically indispensable when 64-bit releases were introduced; everyone relied on existing x86 software, so even the IA64 builds could run it. Now reconsider that project: porting all system components, even games (typically running on client machines) to x64 just in case someone installs without WOW64 (typically only on servers; not possible at all at the time). Wouldn&#39;t this classify as a science project by Raymond&#39;s standards? And don&#39;t you sense &quot;some sort of aesthetic ideal, postulated for its own sake, devoid of practical considerations&quot; in the &quot;not really a 64-bit operating system&quot; part of the comment?</p>
<p>Anyway, I&#39;m sure the 64-bit porting effort wasn&#39;t meant to be a science project. Supposedly requirements have changed during development (towards unconditional inclusion of WOW64); and other than the typical science project, the porting effort was easily dismissed when it prove inefficient. But Raymond usually has strong arguments to justify the decisions he is recounting, and it is always intersting to have the arguments for two seemingly adversary decisions collide :)</p>
<div class="poate">[<em>I forget whether ia64 had WOW64 or not. I doubt axp64 did. There were other practical reasons for porting even if WOW64 existed: To update all the interfaces to 64-bit. Sure, maybe Pinball doesn&#39;t have an interface for other programs to use, but lots of other components do. The porting effort made those interfaces were available in 64-bit versions. And it also uncovered places where those interfaces needed to be revised for 64-bit. It was a demonstration proof that 64-bit Windows has a complete API surface. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00037ffe8545d1b7 even thread-even depth-1" id="comment-1175513">
				<div id="div-comment-1175513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/David+Totzke' rel='external nofollow' class='url'>David Totzke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175513">
			February 12, 2015 at 5:46 am</a>		</div>

		<p>@Roger Lipscombe Thanks for that link to Akin&#39;s Laws. &nbsp;Love it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175523">
				<div id="div-comment-1175523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175523">
			February 12, 2015 at 6:28 am</a>		</div>

		<p>In the mid 1990s 16-bit x86 code could run on any Windows platform. &nbsp;Windows NT running on MIPS and Alpha included WOW and an emulator for 16-bit x86.</p>
<p>A 16-bit installer stub could detect the platform and launch a 16-bit installer or a 32-bit installer compiled for whatever CPU was present or display a meaningful message if it was unsupported.</p>
<p>Thus the 16-bit code had a purpose, and didn&#39;t become actively unhelpful until 64-bit versions of Windows came along. &nbsp;So it lingered.</p>
<p>Though I wonder if the &quot;sorry MIPS isn&#39;t supported&quot; message in a typical stub was ever seen by anybody.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175563">
				<div id="div-comment-1175563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175563">
			February 12, 2015 at 8:40 am</a>		</div>

		<p>Was the copy logic really in a 16-bit installer? &nbsp;I thought these were there just to bootstart the real 32-bit installer when the application had x86 and Alpha installers. &nbsp; </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175613">
				<div id="div-comment-1175613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175613">
			February 12, 2015 at 10:11 am</a>		</div>

		<p>This is probably a dumb question, but:</p>
<p>With 16-bit Windows, the System directory held 16-bit files.</p>
<p>With 32-bit Windows, System held 16-bit files, and System32 held 32-bit files.</p>
<p>With 64-bit Windows, System32 holds 64-bit files, and SysWOW64 holds 32-bit files.</p>
<p>Why not use System64, and leave System32 for 32-bit files?</p>
<div class="post">[<em>I discussed this <a href="https://technet.microsoft.com/en-us/magazine/ff955767.aspx">several years ago</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-1175593">
				<div id="div-comment-1175593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175593">
			February 12, 2015 at 9:32 am</a>		</div>

		<p>IA64 did have WOW64. Early Itanium processors had a form of hardware support for x86, but basically just in-order translation of one x86 instruction to one IA64 instruction bundle for simple instructions, with a microcode ROM for more complex instructions. Significantly it didn&#39;t feature out-of-order execution or much instruction-level parallelism, so was far, far slower than the contemporary Pentium III and Pentium 4 designs even just on instructions-per-clock. The PIII and P4 designs were typically clocked 50-100% faster than the Itaniums as well. With an emulator that slow, it was definitely worth having native 64-bit versions of everything possible.</p>
<p>As I understand it, 64-bit Windows 2000 for Alpha was well underway when Compaq dropped support, after buying Digital. Indeed Raymond mentions a 64-bit Alpha system in this Windows Confidential article: <a rel="nofollow" target="_new" href="https://technet.microsoft.com/en-us/magazine/2008.08.windowsconfidential.aspx" rel="nofollow">technet.microsoft.com/&#8230;/2008.08.windowsconfidential.aspx</a> . I don&#39;t know if it supported Alpha-Windows-on-Alpha-Win64, though. There were presumably *some* commercial Alpha32 packages that wouldn&#39;t have been immediately ported to 64-bit. (Visual Basic and Visual C++ 6.0 were both released for Alpha.)</p>
<p>The October 2001 MSDN Library (I still have it installed &#8211; it was the last release to support Visual Studio 6.0) has a whole section on building for 64-bit Windows, including a section on Running 32-bit Applications. AMD didn&#39;t have working x86-64 hardware until 2003 and Windows didn&#39;t appear on x64 until mid-2005.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175723">
				<div id="div-comment-1175723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175723">
			February 13, 2015 at 4:14 am</a>		</div>

		<p>&gt; Was the copy logic really in a 16-bit installer? &nbsp;I thought these were there just to bootstart the real 32-bit installer when the application had x86 and Alpha installers. &nbsp;</p>
<p>At least with InstallShield it&#39;s like this &#8211; 16-bit bootstrapper was used to detect the CPU architecture, then run the appropriate installer for the architecture (or whine that whatever you have isn&#39;t supported).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-samuel-bronson even thread-even depth-1" id="comment-1175943">
				<div id="div-comment-1175943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Samuel+Bronson' rel='external nofollow' class='url'>Samuel Bronson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175943">
			February 13, 2015 at 5:55 pm</a>		</div>

		<p>@Myria, @dmw: What about Windows Preinstallation/Recovery Environment? I&#39;ve noticed that the recovery partition on my Windows 7 system doesn&#39;t have WoW64 either: despite having a GUI, it can only run 64-bit software. &nbsp;(And, incidentally, it doesn&#39;t have Explorer.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis odd alt thread-odd thread-alt depth-1" id="comment-1175973">
				<div id="div-comment-1175973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150211-00/?p=44703#comment-1175973">
			February 14, 2015 at 6:28 pm</a>		</div>

		<p>@laonianren: exactly correct &#8211; and 16-bit code could also run on the Win9x platforms, too.</p>
<p>Not a science project: I was working with customers that had really old programs with 16-bit installers that they needed to install on 64-bit Windows. &nbsp;But for some reason the emulation for those particular installers didn&#39;t work. &nbsp;That became The Case of the App Install Recorder, which you can read about here: &nbsp;<a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/aaron_margosis/archive/2014/09/05/the-case-of-the-app-install-recorder.aspx">blogs.msdn.com/&#8230;/the-case-of-the-app-install-recorder.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

