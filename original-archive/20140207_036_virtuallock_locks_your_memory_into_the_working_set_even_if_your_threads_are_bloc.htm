<html>
<head>
<title>VirtualLock locks your memory into the working set, even if your threads are blocked</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>VirtualLock locks your memory into the working set, even if your threads are blocked</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 7, 2014 / year-entry #37</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today, a correction to an earlier article on Virtual­Lock. When you lock memory with Virtual­Lock, it will remain locked even if all your threads are blocked. As noted in the Follow-up section at the end of the referenced article, the behavior of the operating system never changed. Virtually-locked pages were never unlocked in practice. What...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Today, a correction to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/11/06/5924058.aspx"> an earlier article on <code>Virtual&shy;Lock</code></a>.</p>
<p> When you lock memory with <code>Virtual&shy;Lock</code>, it will remain locked even if all your threads are blocked. As noted in the <i>Follow-up</i> section at the end of the referenced article, the behavior of the operating system never changed. Virtually-locked pages were never unlocked in practice. What changed is that an implementation detail was elevated to contract. The intention when <code>Virtual&shy;Lock</code> was originally designed was that virtually-locked pages were potentially unlockable if the application is not running. However, the memory manager folks never got around to implementing that part. At some point, they decided that they would abandon any future intention to to do and strengthened the contract accordingly. </p>
<p> Mind you, <code>Virtual&shy;Lock</code> does not guarantee that the same physical frame will always be assigned to the memory. The memory manager may reassign the memory to another physical frame in order to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/01/28/10121300.aspx"> defragment memory so that it can allocate physically contiguous pages</a>, primarily for I/O purposes, but occasionally to satisfy a large-page request. All it guarantees is that the memory will always be present. </p>
<p> The memory manager folks tell me that locked memory remains locked even if the application is suspended. But I don't know whether that's an implementation detail or contractual, so I wouldn't run around relying on it. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1105223">
				<div id="div-comment-1105223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105223">
			February 7, 2014 at 7:02 am</a>		</div>

		<p>Which is a good thing when the locked pages are for AIO requests.</p>
<div class="post">[<em>Wait, are you saying that you have to VirtualLock all asynchronous I/O buffers? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105233">
				<div id="div-comment-1105233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grzechooo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105233">
			February 7, 2014 at 7:16 am</a>		</div>

		<p>&quot;The memory manager folks tell me that locked memory remains locked even if the application is suspended. But I don&#39;t know whether that&#39;s an implementation detail or contractual, so I wouldn&#39;t run around relying on it.&quot;</p>
<p>Bet you someone wrote a program which relies on just this detail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105243">
				<div id="div-comment-1105243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105243">
			February 7, 2014 at 7:30 am</a>		</div>

		<p>Grzechooo: If you are locking pages, it&#39;s likely that you&#39;re doing so in order to maintain a fast response time. If your memory cache gets paged out to disk while you&#39;re sitting there waiting for a request, what is the point of having the cache in the first place?</p>
<p>In other words, probably everybody who uses VirtualLock expects that their locked pages don&#39;t get paged out while blocked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105283">
				<div id="div-comment-1105283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105283">
			February 7, 2014 at 8:50 am</a>		</div>

		<p>[Wait, are you saying that you have to VirtualLock all asynchronous I/O buffers? -Raymond]</p>
<p>No. If your AIO is hard real-time (e.g. CD burner), the fact that they remain locked when your threads are all waiting is vital.</p>
<div class="post">[<em>Oh, I see. I thought you were talking about locking memory for asynchronous I/O requests that are currently active. But rather you are talking about memory that will be used for asynchronous I/O request that will be issued <span style="text-decoration:underline;">in the near future</span>. (In other words, you used the present tense when you should have used the future tense.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105293">
				<div id="div-comment-1105293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105293">
			February 7, 2014 at 10:37 am</a>		</div>

		<p>(ref: linked article)</p>
<p>[I wonder how unix debuggers work if they can&#39;t read the memory of the process being debugged. -Raymond]</p>
<p>In the intervening years, there is now a policy added to *nix systems that only allows a process to be attached by its parents (parent, grandparent, etc). For not very obvious reasons, this policy has to be turned off when running Windows programs under wine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105313">
				<div id="div-comment-1105313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105313">
			February 7, 2014 at 11:42 am</a>		</div>

		<p>@Joshua: &quot;For not very obvious reasons, this policy has to be turned off when running Windows programs under wine.&quot;</p>
<p>Or plenty of other common debugging scenarios. In my current work for example, I virtually always attach to existing processes from a non-parent rather than start the program under a debugger. (There are too many layers on top of the process I eventually want to debug.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105323">
				<div id="div-comment-1105323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105323">
			February 7, 2014 at 2:58 pm</a>		</div>

		<p>Is VirtualLock safe to use for cryptographic purposes &#8211; that is, to avoid sensitive memory being written to disk?</p>
<p>In addition to that, it would be nice to have a way to tell Windows, &quot;Please decommit this memory block if this machine hibernates&quot;. You could just handle the exception if somehow you were frozen at an inopportune time.</p>
<div class="post">[<em>There does not appear to be any guarantee that the memory won&#39;t be written to disk while locked. As you noted, the machine may be hibernated, or it may be running in a VM that gets snapshotted. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105343">
				<div id="div-comment-1105343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105343">
			February 7, 2014 at 5:03 pm</a>		</div>

		<p>@Joshua: I may be misunderstanding you, but I used gdb before to debug running processes without any problems under Linux. So do common distributions just disable that policy by default or how does that work?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1105363">
				<div id="div-comment-1105363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105363">
			February 7, 2014 at 9:09 pm</a>		</div>

		<p>It seems to be contractual now, the VirtualLock manpage says that &quot;pages are guaranteed not to be written to the pagefile while they are locked&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105383">
				<div id="div-comment-1105383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cowardly Anon Moose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105383">
			February 8, 2014 at 3:19 am</a>		</div>

		<p>@Dave: They may still be written to the hibernation file or a VM snapshot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1105443">
				<div id="div-comment-1105443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105443">
			February 9, 2014 at 11:54 pm</a>		</div>

		<p>Proofread: Second paragraph last line: &quot;&#8230;would abandon any future intention to [to] do&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1105723">
				<div id="div-comment-1105723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140207-00/?p=1833#comment-1105723">
			February 10, 2014 at 2:25 pm</a>		</div>

		<p>@Myria. No. If you care about memory being written to disk you either need it to be in non-paged kernel mode memory, or you need to remember that Bitlocker stops people who aren&#39;t logged in from reading data in your pagefile, and hence rendering the question as to whether it was written to disk completely moot.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

