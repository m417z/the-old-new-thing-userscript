<html>
<head>
<title>Why is the limit of window handles per process 10,000?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is the limit of window handles per process 10,000?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 18, 2007 / year-entry #260</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>37</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If your program runs haywire, you will find that it manages to create about 10,000 window manager objects and then the system won't let it have any more. Why stop at 10,000? The first answer is "If you have to ask, you're probably doing something wrong." Programs shouldn't be creating anywhere near ten thousands window...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>If your program runs haywire, you will find that it manages to create about 10,000 window manager objects and then the system won't let it have any more. Why stop at 10,000?</p>
<p> The first answer is "If you have to ask, you're probably doing something wrong." Programs shouldn't be creating anywhere near ten thousands window manager objects in the first place. </p>
<p> Furthermore, as we saw last time, the maximum number of window manager objects that can be created is around 32,700. Giving a program 10,000 is already a third of the total amount available. That's already pretty darned generous, if you ask me. Preventing a program from running away and consuming all of the window manager objects is an attempt to contain the damage caused by a runaway program. Even if a program goes haywire, there's still around 20,000 objects available for the other programs to use. One of them might even be Task Manager, which the user fired up in order to kill the runaway program. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (37)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-526923">
				<div id="div-comment-526923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-526923">
			July 18, 2007 at 10:18 am</a>		</div>

		<p>640K should be enough for anyone!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526943">
				<div id="div-comment-526943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Juan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-526943">
			July 18, 2007 at 10:33 am</a>		</div>

		<p>I know this is totally off topic, but shouldn&#8217;t be the task manager run under special priority like CTRL ALT DEL signal does? I mean bypassing even any pending completion ports request by the shell?. (It happens to be a question I&#8217;ve always made to myself)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526973">
				<div id="div-comment-526973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-526973">
			July 18, 2007 at 10:58 am</a>		</div>

		<p>I just tried and I could only create 9,998 objects. &nbsp;I am being cheated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526983">
				<div id="div-comment-526983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-526983">
			July 18, 2007 at 11:03 am</a>		</div>

		<p>Why 10000? Why not a nice round number like 8192 or 16384?</p>
<div class="post">[<i>10,000 is a nice round number. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527013">
				<div id="div-comment-527013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527013">
			July 18, 2007 at 11:35 am</a>		</div>

		<p>John: &#8230;ages to create &lt;b&gt;about&lt;/b&gt; 10,000 window manager objects and the&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527033">
				<div id="div-comment-527033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Charlie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527033">
			July 18, 2007 at 11:40 am</a>		</div>

		<blockquote><p>
  [10,000 is a nice round number. -Raymond]
</p></blockquote>
<p>I think with that response you&#8217;ve passed the Turing test. Congratulations!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527063">
				<div id="div-comment-527063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BA</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527063">
			July 18, 2007 at 11:55 am</a>		</div>

		<p>10,000 is a lot, but a lot less than you think.</p>
<p>Especially when you consider that the most pervasive abstraction in Windows is the window itself. Every button, textbox, label, checkbox, etc. are all windows.</p>
<p>Like this page alone consumes at least 8 windows, that I can spot offhand. Let&#8217;s ignore the fact that I&#8217;m running Firefox and have multiple tabs open, where each tab is also probably a window. The address bar, the menus, the toolbars, the buttons in the toolbars, the google search bar, all windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527073">
				<div id="div-comment-527073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527073">
			July 18, 2007 at 11:57 am</a>		</div>

		<p>Juan: a process will, by design, never get stuck during termination. The only part that might be subject to indefinite delays is waiting for all pending I/O to complete, and even that has a timeout. Of course, the process might still get stuck for an unseen side effect of termination&#8230; the most common being a deadlocked KernelMode wait (UserMode waits are interrupted automatically by termination, but being in an UserMode wait marks the kernel-mode stack as pageable, so to make things simpler everyone uses KernelMode waits&#8230;). I believe Windows Vista and later fix the most common cases of processes stuck during termination, but I have not really tried</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527083">
				<div id="div-comment-527083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527083">
			July 18, 2007 at 12:02 pm</a>		</div>

		<p>Adam: <a rel="nofollow" target="_new" href="http://www.wired.com/politics/law/news/1997/01/1484" rel="nofollow">http://www.wired.com/politics/law/news/1997/01/1484</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527103">
				<div id="div-comment-527103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527103">
			July 18, 2007 at 12:08 pm</a>		</div>

		<p>BA: as I see it, Microsoft should just document their windowless controls library (DirectUI) already&#8230; it&#8217;s the one used to render forms (entire pages?) in Internet Explorer, or the Task Pane in Explorer, or the Install or Remove Applications window in the control panel &#8211; check it out: the whole window with all the customized widgets takes exactly one HWND (I believe it started out as a HTA, and was ported to DirectUI for Windows XP)</p>
<div class=post>[<i>You are mistaken, but I&#8217;m not going to correct you. And I don&#8217;t think you understand what you&#8217;re asking for, because even if you got it, it would be useless. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527113">
				<div id="div-comment-527113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527113">
			July 18, 2007 at 12:12 pm</a>		</div>

		<p>BA: Ah, but you&#8217;re wrong! &nbsp;Open DOM Inspector and inspect a Mozilla Firefox window. &nbsp;It&#8217;s not windows, it&#8217;s HTML!</p>
<p>You can use a program like Spy++ (Included with some versions of Visual C++) to look at all the windows currently open to see what is a window and what isn&#8217;t.</p>
<p>WndList also has this basic functionality: <a rel="nofollow" target="_new" href="http://www.bttsoftware.co.uk/wndlist.html" rel="nofollow">http://www.bttsoftware.co.uk/wndlist.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527123">
				<div id="div-comment-527123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527123">
			July 18, 2007 at 12:13 pm</a>		</div>

		<p>I&#8217;ve worked with applications that created tons and tons of windows. &nbsp;For example, the build their own &quot;Property inspector&quot; where each element was a different window. &nbsp;For each value, the left side was a static control, the right side was an edit control with up to three different buttons.</p>
<p>The thing was DOG SLOW.</p>
<p>I wrote a new one using a single listbox and dynamically created edit controls on selection and it was VERY FAST. &nbsp;They were shocked that my control could handle 10,000 values without an issue (a count that the old version would need to create 50,000 windows).</p>
<p>Even if creating 10,000 windows might &quot;work&quot; from a user&#8217;s perspective, the performance issues to the computer would probably drive it insane.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527193">
				<div id="div-comment-527193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ralf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527193">
			July 18, 2007 at 2:58 pm</a>		</div>

		<p>Pardon my ignorance, but how does the ~32,700 window limit apply to Terminal Server sessions and/or Citrix?</p>
<p>If 100 simulatenous users create 400 windows each, what happens?</p>
<p>Or is that 32,700 windows per virtual desktop?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527203">
				<div id="div-comment-527203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527203">
			July 18, 2007 at 3:26 pm</a>		</div>

		<p>I&#8217;ve run xwininfo on Linux with a number of apps open and the highest number of X windows I&#8217;ve seen is in the 3000 range. &nbsp;That&#8217;s shared amongst all applications. &nbsp;The major toolkits use X windows for any widget that can receive events, so even with all the buttons and stuff, there&#8217;s still only 3000 or so X windows. &nbsp;No application should need 10,000 window handles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527213">
				<div id="div-comment-527213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BA</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527213">
			July 18, 2007 at 3:38 pm</a>		</div>

		<p>Dan: Well I knew that IE created windowless controls for a page&#8217;s content, I wasn&#8217;t sure if Firefox did or not (and true Firefox&#8217;s browser UI is rendered using XUL).</p>
<p>However, the point still stands that more windows are created by an application than are actually realized.</p>
<p>And I have used Spy++ (from both VS6.0 and VS2005 Standard Edition). Point it at some third party apps, you&#8217;ll see more windows than you expect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527233">
				<div id="div-comment-527233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asmguru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527233">
			July 18, 2007 at 3:42 pm</a>		</div>

		<p>Just want to mention that buttons on a toolbar are not windows (as have HWND), they are simple data objects based on RECT structure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527243">
				<div id="div-comment-527243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527243">
			July 18, 2007 at 4:38 pm</a>		</div>

		<p>When you talk about &quot;window manager objects&quot;, are these the same thing as &quot;GDI Objects&quot; in Task Manager?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527273">
				<div id="div-comment-527273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Filip</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527273">
			July 18, 2007 at 5:41 pm</a>		</div>

		<p>Ralf: Look up &quot;Window Stations&quot; and &quot;Desktops&quot; on MSDN. To put it very simply, each terminal server session has it&#8217;s own limit of 32768 handles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527313">
				<div id="div-comment-527313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Illuminator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527313">
			July 18, 2007 at 6:22 pm</a>		</div>

		<p>Window manager objects are User objects and drawing objects like pens/bitmaps/paths/etc are GDI objects, or so I always thought.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527343">
				<div id="div-comment-527343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ultranos.com' rel='external nofollow' class='url'>Ultrano</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527343">
			July 18, 2007 at 6:39 pm</a>		</div>

		<p>In some software it really is necessary to have more than 10,000 controls/windows. Music-studio software like Propellerheads Reason, Orion, UltranoSoft Dreamer, Project5, etc. There we go around it all by making virtual-windows and draw it all with DIBs, basic GDI, or Direct3D.</p>
<p>A similar approach is used in browsers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527043">
				<div id="div-comment-527043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527043">
			July 18, 2007 at 11:48 am</a>		</div>

		<p>True, if a program *designed for Windows* tries to create 10,000 window handles, then it probably is poorly designed. &nbsp;And it&#8217;s cool that Windows puts some reasonable artificial limits in place to stop runaway programs before they cripple the system.</p>
<p>But Windows has these limits for historical reasons. &nbsp;When resources were tight, it made sense to have very flat window hierarchies with relatively smart controls that encapsulated lots of complex behavior. &nbsp;Programs built for Windows generally have to follow that model.</p>
<p>But suppose windows were cheap, lightweight objects. &nbsp;Further suppose they could be combined in interesting ways. &nbsp;You could imagine a world where it does make sense to create tens of thousands of them in deep hierarchies which layer on complex behavior with incredible generality. &nbsp;It would be a very powerful system. &nbsp;(I believe WPF/XAML goes in this direction.)</p>
<p>I&#8217;m not knocking Windows, or this limit, or Raymond&#8217;s advice. &nbsp;I&#8217;m just pointing out that, while it&#8217;s insane for a program to want to create zillions of Windows windows, it doesn&#8217;t necessarily mean that all designs which involve creating lots of objects are bad. &nbsp;I think programmers sometimes get into that mindset, and it precludes elegant designs.</p>
<p>The thing that drove this home for me was the original _Design Patterns_ book, which describes a document editor that treats every single glyph as an object, and each of those has much of the functionality of a window. &nbsp;I was flabbergasted at first. &nbsp;But by keeping glyphs simple and by combining them with composition and decoration, they produce an elegant, extensible, and efficient design.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527353">
				<div id="div-comment-527353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Illuminator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527353">
			July 18, 2007 at 7:03 pm</a>		</div>

		<p>I was surprised that the .NET Framework was still using old fashioned window handles underneath.</p>
<p>How much kernel memory is used by each barebones traditional window object?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527373">
				<div id="div-comment-527373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527373">
			July 18, 2007 at 7:30 pm</a>		</div>

		<blockquote><p>
  Microsoft should just document their windowless controls library
</p></blockquote>
<p>Out of curiosity I&#8217;d love to see the doco for whatever Office uses (or used) to do its dialogs &#8212; I&#8217;ve been intrigued by its low-handle approach since Windows 3 (uh&#8230; Winword 1.1 or something). Me, I just use as many handles as I need these days. Greedy.</p>
<p>As for tools, Winspector is my Spy++ replacement of choice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527403">
				<div id="div-comment-527403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527403">
			July 18, 2007 at 8:42 pm</a>		</div>

		<p>Sorry to double post, but we&#8217;ve been here before..</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/02/11/371042.aspx#371157" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/02/11/371042.aspx#371157</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527413">
				<div id="div-comment-527413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527413">
			July 19, 2007 at 12:32 am</a>		</div>

		<p>You get around the 32K window limit in Terminal Server because these objects seem to be stored in &quot;Session Space,&quot; which is a piece of Kernel-mode memory that is mapped into every process in a given session. &nbsp;</p>
<p>I&#8217;m curious about whether someone ever considered making a set of preallocated handles for taskmgr (perhaps controlled by a SYSTEM-level regkey with application &#8211; quota pairs) that could be deployed when GDI resources are low. &nbsp;Probably the extra complexit wasn&#8217;t worth it at the time, but are there any other problems with this idea?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527423">
				<div id="div-comment-527423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527423">
			July 19, 2007 at 12:48 am</a>		</div>

		<p>Interestingly enough I&#8217;ve had a problem I believe is related to window objects before.</p>
<p>My standard XP SP2 install flipped out a year or so ago and started acting oddly without any obvious reason. &nbsp;I would have a couple apps open (several IE windows, Outlook, Word, Visual Studio, etc) and out of the blue when I went to open another window or app I&#8217;d hear the critical stop sound (but see no message) and the app would crash (Task Manager included).</p>
<p>I found that if I closed a few programs I had open (an IE window for example) I could then open the program I was trying to use. &nbsp;I played around with Task Manager to try and see if any apps were gobbling up GDI Objects (again, is that the right metric?), but none seemed to be going nuts.</p>
<p>I seemed to have the most problems when trying to open programs with lots of menus/buttons (Paint Shop Pro and Photoshop come to mind), and the probably sometimes became so bad I&#8217;d have to reboot, in which case it cleared up for an hour or so. &nbsp;In the end I had to reinstall because it was killing my productivity.</p>
<p>Yeah, blah blah who cares, not a tech support forum, but I figured I&#8217;d put this out and see if anyone has any ideas about what could cause something like this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-527433">
				<div id="div-comment-527433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527433">
			July 19, 2007 at 1:10 am</a>		</div>

		<p>Nick: &quot;USER Objects&quot; corresponds to Windows (+ a few other window manager objects, I believe). &quot;GDI Objects&quot; corresponds to GDI things (obviously): pens, brushes and so on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527443">
				<div id="div-comment-527443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527443">
			July 19, 2007 at 1:24 am</a>		</div>

		<p>Nick: Something is chewing up the desktop hezp I believe. I have the same issue as well &#8211; but this time things don&#8217;t draw correctly &#8211; a dialog may be missing buttons, a window may not blit its background, etc.</p>
<p>Try reading &quot;Still plenty of 0s, but you&#8217;re out of 1s&quot; of <a rel="nofollow" target="_new" href="http://www.dansdata.com/io067.htm" rel="nofollow">http://www.dansdata.com/io067.htm</a> &#8211; there are links on how to enlarge the heap. I myself am at a loss of why it happens to me (it only started a few months ago). Not as bad as you, but still.</p>
<p>Anyhow, I remember a popular RPG game that if you alt-tabbed out, would easily leak 500-1000 handles &#8211; you&#8217;d see the handle count rise steadily. The handles it leaked were memory expensive too &#8211; caused the kernel to bloat up more and more until your PC thrashed. It caused the game to eventually crash if you alt-tabbed enough. It was fixed in a patch, though. But the memory leaked would be recovered only by a reboot. Ick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527463">
				<div id="div-comment-527463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527463">
			July 19, 2007 at 1:57 am</a>		</div>

		<p>Worf: I&#8217;ve seen select boxes on IE 6.0 get drawn incorrectly (a 4 instead of the &#8216;open&#8217; arrow, no contents) because there were too many GDI objects. This was because I (mis)used a behaviour to do highlighting on a very big table list.</p>
<p>Possibly some spyware or something might be creating window handles in the background?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-527363">
				<div id="div-comment-527363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527363">
			July 18, 2007 at 7:10 pm</a>		</div>

		<p>&gt; Microsoft should just document their windowless controls library</p>
<p>Microsoft *did* document a windowless control library: Windows Presentation Foundation. What&#8217;s so special about DirectUI? It&#8217;s unmanaged? Seriously, after developing for WPF for any reasonable amount of time, you&#8217;d not *want* to use anything else!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527483">
				<div id="div-comment-527483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GCB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527483">
			July 19, 2007 at 2:36 am</a>		</div>

		<p>Whenever I used windowless techniques, I always got grief from QA that they couldn&#8217;t test using MS-Test, Visual Test, Silk Performer or whatever window handle based test tool of the day they were using. I just don&#8217;t bother anymore to conserve window handles, but I still don&#8217;t think I ever get anywhere near the 10000 limit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527503">
				<div id="div-comment-527503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://runesbike.com/' rel='external nofollow' class='url'>Rune Moberg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527503">
			July 19, 2007 at 7:23 am</a>		</div>

		<p>I am fairly certain I have quipped about this before, but I work on a financial information application, and our users have huge workspaces consisting of many &quot;pages&quot;, each page containing about, say, a dozen windows.</p>
<p>As the user switches pages, we then hide and show windows as needed. Or at least we used to do that. Now we destroy window handles and recreate them at the appropriate moment.</p>
<p>Which saves a bunch of handles and desktop heap resources&#8230; But the result is that we are now doing the window manager&#8217;s job. And since we use the framework of our development tool (Delphi) we get some nice issues where certain controls forget their contents (listbox shows up empty after being recreated) because the framework does not always provide temporary storage for the controls that might show up again.</p>
<p>So now we are doing both the job of the windows manager as well as the framework we&#8217;re building on.</p>
<p>Effectively, who needs an OS? Should we build that as well? :-&gt;</p>
<p>I think we will see larger and larger screens. I have a 30&quot; monitor at home. 23&quot; is quickly moving in as the next default monitor size and I have no problems visualising people sitting with two or three such monitors. The resolution will grow too. More room to fit windows inside.</p>
<p>With 32-bit Windows, 30 instances of IE will give or take a few windows, exhaust the desktop heap size. The 32000 handle limit should suffice for a while, but we will see more windows in the near future for certain.</p>
<p>Oh&#8230; the time it takes to destroy about 20000 window handles and the toll it puts on the OS is very limiting. The user can forget about interacting with task manager for the next minute as everything will freeze hard&#8230;</p>
<p>Maybe this is another area where WPF will shine? Presumably it will offload the window manager?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527543">
				<div id="div-comment-527543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jasonhaley.com/blog/archive/2007/07/19/139775.aspx' rel='external nofollow' class='url'>Jason Haley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527543">
			July 19, 2007 at 9:27 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527683">
				<div id="div-comment-527683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-527683">
			July 19, 2007 at 11:10 am</a>		</div>

		<p>Raymond: technically, anyone can implement DirectUI on their own. In practice, though, only one entity in the world has the luxury of the common controls source code at its disposal, or the luxury of dedicated hooks in OLE Accessibility. I guess what I really meant is I&#8217;d like to see windowless as a standard Common Controls feature</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-528123">
				<div id="div-comment-528123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-528123">
			July 19, 2007 at 5:31 pm</a>		</div>

		<p>Dean &amp; Wolf: &nbsp;Thanks for the info, and from the KB article linked to on that site it does sound like it was a problem with the heap.</p>
<p>Too bad I reinstalled &#8211; I&#8217;m curious now if increasing the heap size would have helped.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xepol odd alt thread-odd thread-alt depth-1" id="comment-528893">
				<div id="div-comment-528893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Xepol' rel='external nofollow' class='url'>Xepol</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-528893">
			July 21, 2007 at 1:15 pm</a>		</div>

		<p>Shortsighted artificial limits. &nbsp;15 bit values in a 32 bit os is just as absurd now as the DC limits in Win 3.1 were.</p>
<p>It&#8217;s called RAM, check into it.</p>
<div class="post">[<i>Yeah, supporting interoperability between 16-bit and 32-bit applications was an absurd short-sighted artificial limit. (PS RAM wasn&#8217;t a factor even in 16-bit Windows. Read the article again.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529153">
				<div id="div-comment-529153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070718-00/?p=25963#comment-529153">
			July 23, 2007 at 12:59 pm</a>		</div>

		<p>Just to clarify for those Firefox (and other Gecko-based browser) users, current versions create native windows (i.e. HWNDs) to optimise certain effects such as scrolling, however I understand that the plan is to internally track dirty areas and such like so that BitBlt can be used for scrolling and so no subwindows will be required.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

