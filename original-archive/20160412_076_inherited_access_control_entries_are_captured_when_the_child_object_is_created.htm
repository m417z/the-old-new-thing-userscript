<html>
<head>
<title>Inherited access control entries are captured when the child object is created</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Inherited access control entries are captured when the child object is created</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 12, 2016 / year-entry #77</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Frozen in time.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
In the discussion of
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2015/10/07/10646148.aspx">
how to change permissions as fast as Explorer does it</a>,
it appears that it was not clear to people how inherited access control
entries work, so there were a lot of suggestions based on faulty mental models.
So let me explain.
</p>
<p>
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2006/08/24/717181.aspx">
Inherited permissions on an object are established when the
object is created</a>.
Once the object has been created,
you can change the permissions of the parent
and it won't have any effect unless you
explicitly ask for the inheritable properties to be
re-propagated to child objects.
(You may recall that
<a HREF="http://blogs.msdn.com/larryosterman/archive/2004/09/01/224051.aspx">
the <code>CREATOR_OWNER</code> SID works in a similar way</a>.)
</p>
<p>
Let's say this again.
Each file has a security descriptor.
To determine whether you can access a file, the only thing that is
consulted is the security descriptor on the file being accessed.
The security descriptors on the parent folders do not enter the picture,
except possibly to determine whether traversal is allowed.&sup1;
</p>
<p>
Now, let's talk about these alternate theories from the comments.
</p>
<p>
"<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2015/10/07/10646148.aspx#10646331">I suspect the <code>false</code> [second parameter to
<code>Object&shy;Security.Set&shy;Access&shy;Rule&shy;Protection</code>]
is the problem</a>."
</p>
<p>
The security descriptor on a file can be marked as "protected".
This means "If somebody changes the security attributes on a parent
folder and tries to propagate inheritable attributes to children,
do not apply the inheritable attributes to me."
You can think of it as an "renounce inheritance" bit
on a security descriptor.
If you set the bit, then you're saying,
"I know my grandmother left me a collection of
<a HREF="http://www.bing.com/images/search?q=animal+shaped+porcelain+creamers">
antique creamers shaped like animals</a>,
but I don't want them."
</p>
<p>
The
<a HREF="https://msdn.microsoft.com/en-us/library/system.security.accesscontrol.objectsecurity.setaccessruleprotection%28v=vs.110%29.aspx">
<code>Object&shy;Security.Set&shy;Access&shy;Rule&shy;Protection</a></code>
method
lets you set or clear the "renounce inheritance" bit,
and if you choose to renounce the inheritance,
you can set
the second parameter to <code>false</code> to say that you want to
renounce the access control
entries that you already inherited.
(Say, because they remind you of grandma's unpleasant smell.)
</p>
<p>
While that last parameter is interesting, it has nothing to do
with the problem at hand,
since that bit controls the security attributes of a single file
and does not perform any propagation.
</p>
<p>
"Does it take Explorer two minutes to change parent directory permissions
when the ACL specifies that the changes are supposed to be inherited from
the parent directory?
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2015/10/07/10646148.aspx#10646341">
That would surprise me</a>.
(Does inheritance work by altering every descendant rather than the
permission check testing ancestors?)"
</p>
<p>
When you change the security attributes of a parent folder,
you are typically asked whether you want to propagate inheritable
attributes to children.
If you say Yes,
then the security attributes of the children are <i>overwritten</i>
with values that are
consistent with the security attributes of the parent.
It is this step (rewriting security descriptors of all children)
that takes a long time.
</p>
<p>
(The Advanced Security Settings dialog assumes you always say Yes,
becaus it goes hunting up the parent tree looking for the source of
your inheritable ACEs,
and
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2015/05/05/10612220.aspx">
it it doesn't find one, it just shrugs</a>.)
</p>
<p>
Walking up the directory tree is a tricky proposition in practice
for a variety of reasons.
First of all, the existence of hard links means that a file can
have multiple parent directories.
Do you have to walk up all of them?
Or only the one that was used to open the file?
(In which case, it means that the effective security attributes
of a file can vary depending on which path you use to open it.)
And what if you open the file
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/02/28/10134679.aspx">
by using its GUID</a> instead of a file name or path?
What is the "parent directory"?
</p>
<p>
Windows takes the position that the security descriptor is an attribute
of the object itself, not its containers.
The container can influence the default security descriptor at the time
a child object is created,
but once that's done, the child object can exercise its own free will
and make its own choices.
</p>
<p>
<b>Bonus chatter</b>:
In practice, you may have a lot of files, but you almost never have
a lot of unique security descriptors.
For example, all the files in a directory typically have the same
security descriptor,
and a directory typically has the same security descriptor as its parent.
Therefore, NTFS keeps
all the security descriptors in a single table,
and
all the files with the same security descriptor share an entry in the
table.
</p>
<p>
&sup1; Security checks on traversal are normally disabled,
so by default, you can access anything whose security descriptor
grants you access, as long as you know its path.
You can take advantage of this:
Create a directory, let's call it <code>Parent</code>,
that denies <i>List Folder Contents</i> to everyone.
Inside this directory, create subdirectories that grant
access only to certain people,
and give the names of those subdirectories to those people.
For example, you might grant Bob read access to the
<code>Manhattan</code> subdirectory.
Bob can <code>cd</code> into <code>Parent\Manhattan</code>
to see what's in it,
but if Bob tries to <code>cd</code> into <code>Parent</code>
and do a <code>dir</code>, he sees nothing.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1233013">
				<div id="div-comment-1233013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291#comment-1233013">
			April 12, 2016 at 7:26 am</a>		</div>

		<p>I don&#8217;t think I&#8217;ve had Explorer ask me about changing down-level permissions unless I check the &#8220;Replace all child object permission entries with inheritable permission entries from this object&#8221; box.  It&#8217;s been my experience that Explorer does try to update down-level inherited permissions, which I like.  I imagine this is what leads people to the incorrect conclusion that inherited permissions are more than they are and then get confused when they discover otherwise.  I know older versions of Explorer would not update inherited permissions when moving files within the same volume and this would bite users.  We&#8217;d get support calls of the type &#8220;I moved files from my home folder into the shared folder and no one can access them&#8221; and we had to tell them &#8220;Don&#8217;t move the files.  Copy, then delete the originals.&#8221;  I was happy when we upgraded to Windows 7 and this was no longer required.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1233022">
				<div id="div-comment-1233022" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291#comment-1233022">
			April 12, 2016 at 8:10 am</a>		</div>

		<p>My understanding of the checkbox was that if checked, Explorer would overwrite ALL permissions from the descendant objects, while if not checked, only those with the INHERITED_ACE flag would be updated.</p>
<p>Do you mean that there is no such behavior, only &#8220;overwrite all&#8221; and &#8220;don&#8217;t touch child elements&#8221;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-1233023">
				<div id="div-comment-1233023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291#comment-1233023">
			April 12, 2016 at 8:40 am</a>		</div>

		<p>@MarcK: &#8220;I don’t think I’ve had Explorer ask me about changing down-level permissions unless I check the “Replace all child object permission entries with inheritable permission entries from this object” box. It’s been my experience that Explorer does try to update down-level inherited permissions, which I like.&#8221;</p>
<p>Yes, I think that&#8217;s what Raymond is saying, and what happens.  When you check the &#8220;Replace&#8230;&#8221; box, Explorer asks &#8220;do you really want to do what you just asked to do?&#8221; (kind of redundantly) and then it does the replacement of the permissions on the children.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1233044">
				<div id="div-comment-1233044" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291#comment-1233044">
			April 12, 2016 at 11:53 am</a>		</div>

		<p>Why does SeChangeNotifyPrivilege incorporate two separate privileges&#8211;the ability to be notified when files/directories change, and traverse checking bypassing?  It would&#8217;ve been nice if disabling traverse checking wouldn&#8217;t mess up other stuff, like Explorer refreshing file lists.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1233215">
				<div id="div-comment-1233215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291#comment-1233215">
			April 14, 2016 at 3:30 am</a>		</div>

		<p>What I don&#8217;t understand is why Explorer insists on &#8220;updating&#8221; down-level permissions when I set a permission of type &#8220;This folder only&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1233485">
				<div id="div-comment-1233485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291#comment-1233485">
			April 15, 2016 at 3:23 am</a>		</div>

		<p>I feel sure there could be a way to optimise shared descriptors so that a leaf subtree (i.e. a subtree where all the descriptors are shared) could share a descriptor that is unique to the subtree, meaning that you could change the permissions on the subtree in one fell swoop just by updating that descriptor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1233587">
				<div id="div-comment-1233587" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">paul page</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291#comment-1233587">
			April 15, 2016 at 1:31 pm</a>		</div>

		<p>This seems like a good spot for some sort of &#8220;renounce your privilege&#8221;  joke.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1244525">
				<div id="div-comment-1244525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160412-00/?p=93291#comment-1244525">
			April 20, 2016 at 4:02 am</a>		</div>

		<p>Speaking of file access rights, what does FILE_READ_EA *actually* mean? I have tried, and failed, to find a Windows API function that would be documented to need FILE_READ_EA access&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

