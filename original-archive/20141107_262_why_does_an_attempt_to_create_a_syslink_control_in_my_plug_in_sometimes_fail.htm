<html>
<head>
<title>Why does an attempt to create a SysLink control in my plug-in sometimes fail?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does an attempt to create a SysLink control in my plug-in sometimes fail?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 7, 2014 / year-entry #263</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20141107-00/?p=43663</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>1</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer had written a plug-in for some application, and they found that their plug-in was unable to create a SysLink control via the Create­Window­ExW function. The same code in a standalone application works fine, but when the code is placed in their plug-in, the code fails. Debugging showed that the call to Init­Common­Controls­Ex succeeded,...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer had written a plug-in for some application, and they found that their plug-in was unable to create a SysLink control via the <code>Create&shy;Window&shy;ExW</code> function. The same code in a standalone application works fine, but when the code is placed in their plug-in, the code fails.</p>
<p> Debugging showed that the call to <code>Init&shy;Common&shy;Controls&shy;Ex</code> succeeded, but the <code>Create&shy;Window&shy;ExW</code> call failed with "Cannot find window class." </p>
<p> The customer is another victim of <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/12/20/10379796.aspx"> not keeping their eye on the activation context</a>. </p>
<p> They attached a manifest to their DLL so that the call to <code>Init&shy;Common&shy;Controls&shy;Ex</code> maps to the version of the common controls library that supports the SysLink control. But they did nothing to ensure that that context was active at the time they called <code>Create&shy;Window&shy;ExW</code>. </p>
<p> The customer's plug-in clearly falls into the case <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb773175%28v=vs.85%29.aspx#mmc"> <i>Adding Visual Style Support to an Extension, Plug-in, MMC Snap-in or a DLL That Is Brought into a Process</i></a>. but they failed to follow the instructions provided therein (which boil down to "use isolation awareness"). </p>
<p> From the symptoms, it appears that the host application for their plug-in does not activate a version-6 common controls manifest at the time it calls into the plug-in, which means that your attempt to create version-6 common controls will fail. </p>
<p> On the other hand, the standalone application probably uses the technique given in <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb773175%28v=vs.85%29.aspx#no_extensions"> <i>Using ComCtl32.dll Version 6 in an Application That Uses Only Standard Extensions</i></a>, which activates the version-6 common controls when the process starts and <i>leaves it active</i> for the duration of the process. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (1)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1161123">
				<div id="div-comment-1161123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141107-00/?p=43663#comment-1161123">
			November 7, 2014 at 7:45 am</a>		</div>

		<p>The way it works is interesting, and should actually be mentioned somewhere.</p>
<p>When you add the define `ISOLATION_AWARE_ENABLED`, then all the important functions in the Windows header header files are replaced with &quot;Isolation Aware&quot; versions.</p>
<p>E.g. `CreateWindowExW` is replaced with `IsolationAwareCreateWindowExW`.</p>
<p>What the IsolationAwareXxxx versions of every function is to basically:</p>
<p> &nbsp; &nbsp;ActivateActCtx(ref cookie);</p>
<p> &nbsp; &nbsp; &nbsp; CreateWindowExW(&#8230;);</p>
<p> &nbsp; &nbsp;DeactivateActCtx(cookie);</p>
<p>And then this `IsolationAwareCreateWindowExW` function is defined to replace the real `CreateWindowExW` function. So that means any call to any function that depends on activation context automatically call ActivateActCtx/DeactivateActCtx for you.</p>
<p>For those of us developing native Windows application not using C/C++ or the Windows header files, this is a useful piece of information.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

