<html>
<head>
<title>How do I set the initial directory of the File Open dialog to a virtual directory?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I set the initial directory of the File Open dialog to a virtual directory?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 19, 2017 / year-entry #141</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Use the IFileDialog::SetDefaultFolder method.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that they had been setting the
<code>lpstrInitialDir</code>
member of the
<code>OPENFILENAME</code>
structure
to
<code>"::{645FF040-5081-101B-9F08-00AA002F954E}"</code>
in order to have the dialog's default directory be the
Recycle Bin.
(I am not making this up.)
They reported that this stopped working in Windows Vista
and wanted to know why,
and what they can do about it.
</p>
<p>
The <code>lpstrInitialDir</code>
is supposed to be the name of a directory.
Virtual folders are not directories.
It so happened that virtual directories were accepted
in Windows XP due to a bug:
The
file dialog uses the
<code>Path&shy;Combine</code> function&sup1;
to combine the current directory with the
<code>lpstrInitialDir</code>.
The
<code>Path&shy;Combine</code>
function checks whether the second
parameter (<code>lpstrInitialDir</code>)
is an absolute or relative path,
and in Windows XP it had a bug that if the
second parameter's
second character was a colon, then it
assumed that the path was absolute.
It did this without verifying that the first character
was a letter.
</p>
<p>
Windows Vista fixed this bug in
the <code>Path&shy;Combine</code> function,
which means that if you passed
an <code>lpstrInitialDir</code> of
<code>"::{...}"</code>,
the function said,
"Oh, you almost fooled me there,
but I'm onto you.
That is not an absolute path.
So I will combine it with the first parameter (the current directory)."
The file dialog then says,
"Let's go to that folder!",
but it can't (because there is no folder called
<code>::{...}</code> in the current directory),
so it falls back to
the Documents folder.
</p>
<p>
That explains why the undefined behavior changed.
But what's the supported way of setting the initial directory
to a virtual directory?
</p>
<p>
You use the
<code>IFile&shy;Dialog</code> interface,
which gives you more control over the file open dialog
than
<code>OPENFILENAME</code> does.
In particular, you can use
the <code>IFile&shy;Dialog::</code><code>Set&shy;Default&shy;Folder</code> method.
</p>
<p>
Here's a Little Program to demonstrate.
Remember that Little Programs do little to no error checking.
Today's smart pointer library is (rolls dice) nothing!
We're going to use raw pointers.
</p>
<pre>
#define STRICT
#define STRICT_TYPED_ITEMIDS
#include &lt;windows.h&gt;
#include &lt;shlobj.h&gt;
#include &lt;knownfolders.h&gt;

int WINAPI WinMain(
    HINSTANCE hinst, HINSTANCE hinstPrev,
    LPSTR lpCmdLine, int nShowCmd)
{
    <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040520-00/?p=39243">CCoInitialize</a> init;

    IFileDialog* pfd;
    CoCreateInstance(CLSID_FileOpenDialog, nullptr,
        CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&amp;pfd));

    IShellItem* psi;
    SHGetKnownFolderItem(FOLDERID_RecycleBinFolder,
        KF_FLAG_DEFAULT, nullptr, IID_PPV_ARGS(&amp;psi));
    pfd-&gt;SetDefaultFolder(psi);
    psi-&gt;Release();

    // ... other initialization goes here ...

    pfd-&gt;Show(nullptr);

    // ... process the results ...

    pfd-&gt;Release();

    return 0;
}
</pre>
<p>
We create the file open dialog and set its default
folder to the Recycle Bin.
In a real program, there would be additional
initialization of the dialog, but in this Little Program,
we'll accept all the other defaults.
We then show the dialog with no owner
(because our program doesn't have a main window).
Observe that the default initial directory is the
Recycle Bin.
</p>
<p>
&sup1;
The <code>Path&shy;Combine</cODE>
function has been superseded by
<a HREF="https://msdn.microsoft.com/library/windows/desktop/hh707085(v=vs.85).aspx">
the
<code>Path&shy;Cch&shy;Combine</code> function</a>
and its friends,
which support NT-style paths and extra-long paths.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1299955">
				<div id="div-comment-1299955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1299955">
			June 19, 2017 at 7:07 am</a>		</div>

		<p>Ok, but why was Recycle Bin the default directory? Was this some kind of advanced file restoration dialog?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1299956">
				<div id="div-comment-1299956" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1299956">
			June 19, 2017 at 7:21 am</a>		</div>

		<p>Hopefully. Might not even need to be that <i>advanced</i>; I could easily imagine a program that stored its data as a series of files and let one delete them within the program easily (something with an interface like an email program, perhaps tracking incoming Widget Orders or To-do List items or whatever). And, to delete it just sends to the built-in Recycle Bin, which seems like perfectly reasonable behavior. Then, rather than having the user dig around in their system&#8217;s Recycle Bin themselves, it offers a handy undelete dialog that opens up the Recycle Bin but filtered to the file type the application uses for its documents.</p>
<p>But since everything&#8217;s handled directly with files, it integrates nicely with backups and people transferring items via email or some other means if needed, too.</p>
<p>I don&#8217;t know anything about this particular program, but just &#8220;I want a file open dialog defaulting to the Recycle Bin&#8221; doesn&#8217;t bring up huge red flags for me, since I can see a use for it. And it&#8217;s not likely something that has a built-in MSDN sample program.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1299966">
				<div id="div-comment-1299966" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kemp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1299966">
			June 19, 2017 at 10:32 am</a>		</div>

		<p>I think I&#8217;m missing a piece of information explaining why the original way worked (and why it working is classed as a bug).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-2 parent" id="comment-1299985">
				<div id="div-comment-1299985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1299985">
			June 19, 2017 at 10:59 am</a>		</div>

		<p>It worked because the old open dialog has very limited PIDL support (CDM_GETFOLDERIDLIST etc.). The initial directory looked like a absolute path (?:* drive root) and got passed directly to shell stuff that parses a path and gives you a PIDL. The shell supports ::{CLSID} paths in certain places and the :: path was parsed successfully into a PIDL and the PIDL got used as the initial directory.</p>
<p>The fact that it worked was an accident and long path fixes in Vista Path* functions probably broke it and so it was less work to say that it is a bug than to add the support back (and document it).</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1299986">
				<div id="div-comment-1299986" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kemp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1299986">
			June 19, 2017 at 11:01 am</a>		</div>

		<p>Ah, ok, so the translation code was there in the back but it just wasn&#8217;t intended to be used through that route. Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1299976">
				<div id="div-comment-1299976" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Topping</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1299976">
			June 19, 2017 at 10:36 am</a>		</div>

		<p>I&#8217;m sure the author chose Recycle Bin as a just an example of a virtual directory to open. It is not a recommendation and nothing was offered pro or con as to whether that is a reasonable thing to do in your own app. Give the guy a break!</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1299996">
				<div id="div-comment-1299996" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1299996">
			June 19, 2017 at 1:11 pm</a>		</div>

		<p>I doubt that.  Raymond explicitly says:</p>
<p>&#8220;A customer reported that they had been setting the lpstrInitialDir member of the OPENFILENAME structure to &#8220;::{645FF040-5081-101B-9F08-00AA002F954E}&#8221; in order to have the dialog&#8217;s default directory be the Recycle Bin.&#8221;</p>
<p>This seems clear that the customer (the one calling for support) has some code that wants a dialog&#8217;s default directory to be the Recycle Bin.   I&#8217;m not sure who you mean by &#8220;author&#8221;; Raymond is the author, and Raymond is not the customer that he mentions.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1300275">
				<div id="div-comment-1300275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1300275">
			June 21, 2017 at 2:14 pm</a>		</div>

		<p>Either that, or the customer was doing something substantially dumber (&#8220;Let&#8217;s show an open file dialog for the Control Panel!&#8221;) and changed it to the Recycle Bin when consulting Microsoft because they did not want to get told &#8220;Don&#8217;t do that.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-odd thread-alt depth-1" id="comment-1300015">
				<div id="div-comment-1300015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170619-00/?p=96425#comment-1300015">
			June 19, 2017 at 6:43 pm</a>		</div>

		<p>One more example on people who (unintentionally ?) rely on bug behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

