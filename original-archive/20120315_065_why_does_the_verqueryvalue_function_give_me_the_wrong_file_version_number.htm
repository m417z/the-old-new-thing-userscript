<html>
<head>
<title>Why does the VerQueryValue function give me the wrong file version number?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does the VerQueryValue function give me the wrong file version number?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 15, 2012 / year-entry #66</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer was writing a test to verify that their patching system was working properly, but they found that even after the patch was installed, a call to VerQueryValue reported that the file was still the original version. Why was the VerQueryValue function reporting the wrong version? Recall that the version resource is, well, a...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer was writing a test to verify that their patching system was working properly, but they found that even after the patch was installed, a call to <code>VerQueryValue</code> reported that the file was still the original version. Why was the <code>VerQueryValue</code> function reporting the wrong version?</p>
<p> Recall that the version resource is, well, a resource. And one of the things that happens with resources is that <a href="http://msdn.microsoft.com/library/dd317717.aspx"> they can get redirected based on the language the user is running</a>. When you ask for the resources of a language-neutral DLL, the loader redirects your request to the appropriate language-specific DLL. That way, if you're running on an English system, the resources come from the DLL with English resources, whereas if you're running on a German system, the resources come from the DLL with German resources. </p>
<p> The customer's patch updated only the language-neutral DLL (since it was a code fix that involved no resource changes). When the <code>GetFileVersionInfo</code> function loaded the DLL and asked for its resources, the loader redirected the request to the English satellite DLL. </p>
<p> To disable this redirection, you can use the <code>GetFileVersionInfo</code> function and don't pass the <code>FILE_VER_GET_LOCALIZED</code> flag or the <code>FILE_VER_GET_NEUTRAL</code> flag. Michael Kaplan <a href="http://blogs.msdn.com/b/michkap/archive/2007/02/22/1738882.aspx"> covered this a few years ago</a>. If you use the plain <code>GetFileVersionInfo</code> function, the version information that comes back is a blend of the language-neutral and the localized information: The binary version information comes from the language-neutral DLL, whereas the string version information comes from the localized DLL. The strings come from the localized DLL because you want the information like <code>FileDescription</code> to be something meaningful to the user. </p>
<p> It does mean, though, that if you are extracting version information for testing and verification purposes, you need to be mindful of where you are getting them from so that you get the values you expect. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-972563">
				<div id="div-comment-972563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-972563">
			March 15, 2012 at 7:06 am</a>		</div>

		<p>GetFileVersionInfo doesn&#39;t take any flags; you meant GetFileVersionInfoEx.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-972573">
				<div id="div-comment-972573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-972573">
			March 15, 2012 at 7:24 am</a>		</div>

		<p>Is there any way that something similar could happen with executables instead of DLLs? &nbsp;I recently filed a bug which I assumed was a bug in the Visual Studio Resource Compiler (<a href="https://connect.microsoft.com/VisualStudio/feedback/details/727306/resource-compiler-cannot-do-bit-shifting-multiplication-or-division" target="_new" rel="nofollow">connect.microsoft.com/&#8230;/resource-compiler-cannot-do-bit-shifting-multiplication-or-division</a>) but apparently turned out to be a bug in Windows.</p>
<p>I&#39;m curious how Explorer is extracting the version information in that case and why it&#39;s getting it wrong, though I doubt I&#39;ll get an answer unless that bug just somehow gets assigned to Raymond.</p>
<div class="post">[<i>The function doesn&#39;t care what the extension is. And the Resource Compiler arithmetic evaluator has always been limited to addition and subtraction. (It&#39;s not a bug; it&#39;s a design limitation.) This used to be documented somewhere but now I can&#39;t find it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-972603">
				<div id="div-comment-972603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-972603">
			March 15, 2012 at 8:25 am</a>		</div>

		<p>The Resource Compiler (rc.exe) is a part of Windows SDK, and according to rc.exe version info (6.1.7600.16385 &#8211; same as Windows 7 RTM), it is indeed a part of Windows :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-972613">
				<div id="div-comment-972613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-972613">
			March 15, 2012 at 11:09 am</a>		</div>

		<p>Now that is interesting. The tools that build Windows are considered internally to be part of Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-972633">
				<div id="div-comment-972633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-972633">
			March 15, 2012 at 12:28 pm</a>		</div>

		<p>[The function doesn&#39;t care what the extension is. -Raymond]</p>
<p>So there&#39;s such a thing as a language-neutral EXE and language-specific EXEs for a specific localized executable? (Honest question, not trying to give you a hard time)</p>
<p>[And the Resource Compiler arithmetic evaluator has always been limited to addition and subtraction. (It&#39;s not a bug; it&#39;s a design limitation.) This used to be documented somewhere but now I can&#39;t find it. -Raymond]</p>
<p>Ok, well even if it&#39;s a design limitation, it should give a reasonable error instead of computing x*y ==&gt; x.</p>
<p>[The Resource Compiler (rc.exe) is a part of Windows SDK, and according to rc.exe version info (6.1.7600.16385 &#8211; same as Windows 7 RTM), it is indeed a part of Windows :) -Anonymous]</p>
<p>I didn&#39;t realize that at the time I filed the bug, though I realize that now. &nbsp;I can&#39;t seem to find any place to file bugs/feedback against Windows &#8212; Microsoft Connect only accepts feedback against certain products.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-972663">
				<div id="div-comment-972663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chentiangemalc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-972663">
			March 15, 2012 at 4:19 pm</a>		</div>

		<p>There&#39;s probably a good reason that feedback is only on paid support calls or selected products. I&#39;m sorry but I deal with all the time people raising issues that are &quot;bugs&quot; in Windows / Office / IE when the real bug is they haven&#39;t read MSDN / TechNet documentation. That is not to say there are valid cases out there; I&#39;m pretty sure there would be overwhelming amount of crap feedback from lazy people who don&#39;t take the time to understand how the product is documented to work. I see it all the time. But I can see it would be prohibitively expensive. That being said there are many people from MS on Twitter or through their blogs will provide excellent &quot;free&quot; support if you&#39;ve done real research and provide something new</p>
<p>&amp; interesting to them, and they&#39;ll raise genuine bugs through their team. I&#39;ve done this many times with great success. The blogs I talk about though are not Old New Thing, but rather the product area specific blogs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-972643">
				<div id="div-comment-972643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-972643">
			March 15, 2012 at 1:04 pm</a>		</div>

		<p>[Ok, well even if it&#39;s a design limitation, it should give a reasonable error instead of computing x*y ==&gt; x.]</p>
<p>Totally agree here. &nbsp;The described behavior sounds like it acts really broken. &nbsp;For example, the compiler&#39;s lexer accepted the syntax without complaining, when the lexical analyzer shouldn&#39;t have even accepted the &quot;*&quot; and &quot;/&quot; symbols in the first place if they weren&#39;t allowed. &nbsp;OK, so you decide to reuse the lexer from the C compiler, which allows those symbols. &nbsp;Fine, but the parser should have thrown it out with an error then. &nbsp;The only reason I can see for not fixing it now is compatibility &#8211; if changing would break some existing RC files that depended on this buggy behavior&#8230; &nbsp;But it could at least emit a warning!</p>
<p>[I can&#39;t seem to find any place to file bugs/feedback against Windows &#8212; Microsoft Connect only accepts feedback against certain products.]</p>
<p>I have had the same problem &#8211; both with Windows and Office. &nbsp;I have found only two choices: (1) pay Microsoft and talk to technical support (heck no I&#39;m not doing that to report YOUR bug!!!), or (2) the only thing I have found after much digging is an anonymous web form that doesn&#39;t even ask for contact information. &nbsp;For all I know, the web form has been silently broken for the past 3 years, or goes into some Microsoft employee&#39;s mailbox who doesn&#39;t work here any more, etc. &nbsp;There&#39;s no real sign of life with it.</p>
<p>Connect is a much better system, in that it provides an organized way for the customer to be sure that (1) Microsoft received the message and a real person reviewed it, (2) Microsoft has a means to respond to the customer in case there are further questions. &nbsp;It also provides a way for many customers to report the same issue and avoid duplicates, via the &quot;upvote&quot; system and comment system.</p>
<p>That tells me that Microsoft isn&#39;t very interested in hearing feedback from customers who would like to see Microsoft products improved (bug fixes and maybe new features) unless those customers pay additional money to Microsoft just for the privilege of giving feedback in a back-and-forth manner. &nbsp;I would like to think that Microsoft cares about their customers who want to see the products improved, but not even showing a willingness to listen to feedback in a constructive manner without the customer ponying up more money doesn&#39;t really inspire confidence.</p>
<p>I&#39;m not asking for free technical support. &nbsp;All I&#39;d like to see is a little respect shown if I spend 30 minutes or an hour of my time putting together a real bug report. &nbsp;And it gives me a way to know if other customers commonly have the same issue, and provide further feedback on it. &nbsp;A simple response message like &quot;thanks for your report, we will look into it&quot; and &quot;we have confirmed this is a bug&quot; or &quot;can&#39;t reproduce&quot; or whatever (like I already see on Connect) would be sufficient, and shows that Microsoft has become aware of the issue. &nbsp;A simple anonymous web form &quot;mailer&quot; does NOT do the job! &nbsp;I think it would provide a direct improvement in the quality of Microsoft&#39;s flagship products if they would just do this simple thing.</p>
<p>Contrast this with the open source world, where a well thought out and written bug report is usually welcomed by the development community. &nbsp;In comparison, the opaqueness/lack of transparency with Microsoft (though it has gotten much better in recent years) drives me nuts sometimes.</p>
<p>OK I apologize and realize this is a bit of a rant not directly related to this blog post because of another commenter who pushed my buttons, but maybe I can hope that some of the employees who work at Microsoft who read this can pass it up the chain&#8230;</p>
<div class="post">[<i>It didn&#39;t compute x*y=x. It computed x*y=&quot;x*y&quot;. Take a closer look at the output. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-972673">
				<div id="div-comment-972673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-972673">
			March 16, 2012 at 7:52 am</a>		</div>

		<p>@chentiangemalc: &nbsp;It&#39;s certainly a valid concern and one I had thought of. &nbsp;But:</p>
<ol>
<li>
<p>&nbsp;How is using an anonymous web form a better solution to this problem than a more engaged site like Connect? &nbsp;I don&#39;t see how it is, unless Microsoft really truly does ignore the entire lot of feedback sent via an anonymous web form like I suspect they might be doing. &nbsp;Sending a short hand-written acknowledgement after reviewing the submission doesn&#39;t cost much. &nbsp;Either they should kill the web form, or kill it and add the products to Connect.</p>
</li>
<li>
<p>&nbsp;With a site like Connect, others can upvote issues that are a real problem. &nbsp;Microsoft can then pay more attention to the most upvoted issues. &nbsp;This would be an actual improvement over the anonymous web form, which provides no such facilities (as far as I know) for handling duplicate issues. &nbsp;These issues are either real bugs, or arguably documentation bugs if such a large mass of people fail to understand something that is by design. &nbsp;Issues that don&#39;t get more attention are more likely to be user error (which the community can point out). &nbsp;But I would caution against completely ignoring submissions that don&#39;t get much attention: I&#39;ve submitted a bug for the .NET StreamReader class, which was acknowledged as a bug. &nbsp;It never received any attention from anyone other than me. &nbsp;But thank goodness it was a bug in the framework and not Win32, or they&#39;d probably never acknowledge the issue and fix it eventually.</p>
</li>
<li>
<p>&nbsp;Incorrectly raising issues that are &quot;bugs&quot; in Windows, etc. would be an issue with Connect for Visual Studio as well. &nbsp;I&#39;ve certainly seen many developers who are too eager to blame someone else and not look inward at their own faults. &nbsp;Yet somehow Visual Studio manages. &nbsp;Why not Windows &amp; Office?</p>
</li>
<li>
<p>&nbsp;Another thing I suspect someone might say is that the support cost would be refunded if it really is a bug. &nbsp;How does this work? &nbsp;It sounds like going to fight something in court where the judge is heavily biased in favor of the police. &nbsp;Even clear proof might not be enough to convince a judge to rule completely in my favor. &nbsp;And I&#39;d imagine with Microsoft support that there is also heavy pressure in favor of NOT granting refunds for bug reporters, for the obvious financial reasons. &nbsp;Why wouldn&#39;t there be? &nbsp;I&#39;m sure there are bean counters to make it so. &nbsp;(&quot;It wasn&#39;t a bug. &nbsp;We think all &#39;buggy&#39; behavior is by design!!&quot;)</p>
</li>
<li>
<p>&nbsp;Again, even mass market open source products like FireFox welcome bug fixes. &nbsp;That said, they make you look for it &#8211; it took 6 clicks to get there from firefox.com: (1) About, (2) Participate, (3) See all the ways you can get involved, (4) Area of Interest, (5) hunt down bugs, (6) learn how to file bugs here. &nbsp;I had to skip numerous pages offering me support, help from the community, ways to help the community, etc. &nbsp;Finally, I arrive at a long page that describes how to write good bug reports with a big bold note at the top to use support options if you need support. &nbsp;Then I have to register. &nbsp;I would imagine this significantly cuts down on the garbage: most users I know who don&#39;t know computers well or are idiots and think everything is a &quot;bug&quot; are not going to find this system. &nbsp;One could argue that Microsoft Connect is similarly buried so that only those with more experience who know to look for such a system will find it.</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-973413">
				<div id="div-comment-973413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120315-00/?p=8093#comment-973413">
			March 19, 2012 at 2:50 pm</a>		</div>

		<p>[It didn&#39;t compute x*y=x. It computed x*y=&quot;x*y&quot;. Take a closer look at the output. -Raymond]</p>
<p>Ok, I did. &nbsp;Using this resource script:</p>
<p>#define MULT_TEST (3*4)</p>
<p>#define DIV_TEST (20/4)</p>
<p>#define LEFT_SHIFT_TEST (16&lt;&lt;1)</p>
<p>#define RIGHT_SHIFT_TEST (16&gt;&gt;1)</p>
<p>VS_VERSION_INFO VERSIONINFO</p>
<p>FILEVERSION MULT_TEST,DIV_TEST,LEFT_SHIFT_TEST,RIGHT_SHIFT_TEST</p>
<p>PRODUCTVERSION 1,0,0,1</p>
<p>FILEFLAGSMASK 0x3fL</p>
<p>#ifdef _DEBUG</p>
<p>FILEFLAGS 0x1L</p>
<p>#else</p>
<p>FILEFLAGS 0x0L</p>
<p>#endif</p>
<p>FILEOS 0x40004L</p>
<p>FILETYPE 0x1L</p>
<p>FILESUBTYPE 0x0L</p>
<p>[&#8230;]</p>
<p>The VS_FIXEDFILEINFO in the compiled .res file looks like this:</p>
<p>&nbsp; &nbsp; &nbsp; dwSignature: 0xfeef04bd</p>
<p>&nbsp; &nbsp;dwStrucVersion: 0x00010000</p>
<p>&nbsp; dwFileVersionMS: 0x00030014</p>
<p>&nbsp; dwFileVersionLS: 0x00100010</p>
<p>dwProductVersionMS: 0x00010000</p>
<p>dwProductVersionLS: 0x00000001</p>
<p>&nbsp; dwFileFlagsMask: 0x0000003f</p>
<p>&nbsp; &nbsp; &nbsp; dwFileFlags: 0x00000000</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dwFileOS: 0x00040004</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;dwFileType: 0x00000001</p>
<p>&nbsp; &nbsp; dwFileSubtype: 0x00000000</p>
<p>&nbsp; &nbsp; &nbsp;dwFileDateMS: 0x00000000</p>
<p>&nbsp; &nbsp; &nbsp;dwFileDateLS: 0x00000000</p>
<p>So it seems to me that the resource compiler is translating 3*4 into 0x0003.</p>
<div class="post">[<i>Oh, I thought you were using it as a resource identifier, not a version number. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

