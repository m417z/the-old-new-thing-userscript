<html>
<head>
<title>How can I tell whether my console program was launched from Explorer or from a command prompt?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I tell whether my console program was launched from Explorer or from a command prompt?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 25, 2016 / year-entry #18</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">That's not actually what you want to know.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
So you have a console program.
This console program could be run by typing its name
at the command prompt,
or it could be run by the user double-clicking it from
Explorer.
And you want to know which case you're in.
</p>
<p>
This is another case of digging into the question to find
the problem.
In this case, the problem is
"Well, if I'm run directly from Explorer,
then when my program exits,
the console is destroyed with it,
and the user can't see the output.
In that case, I want
to prompt the user to hit Enter before the program exits."
</p>
<p>
Okay, so what you really want to know is not whether
you were run from Explorer.
(After all, you would have this problem if the program
were run from Task Manager or some other program launcher.)
What you really want to know is whether the console will
continue to exist after your program exits.
</p>
<p>
For that, you can use <code>Get&shy;Console&shy;Process&shy;List</code>.
</p>
<p>
If your process is the only one attached to the console,
then the console will be destroyed when your process exits.
If there are other processes attached to the console,
then the console will continue to exist (because your program
won't be the last one).
</p>
<pre>
#include &lt;windows.h&gt;
#include &lt;stdio.h&gt;

int __cdecl wmain()
{
    printf("this process = %d\n", GetCurrentProcessId());
    DWORD count = GetConsoleProcessList(nullptr, 0);
    if (count == 1) {
      printf("I'm the last one!\n");
      Sleep(2000);
    } else {
      printf("I'm not the last one!\n");
    }
    return 0;
}
</pre>
<p>
We care only how many processes are in the console process list;
we don't care what they are.
After getting the count, we either declare that we're the last
one (and pause so you can see the message),
or we say that we aren't (and exit immediately).
</p>
<p>
This is accurate as far as it goes: It tells you whether
the console will be destroyed when the process exits.
What it doesn't tell you is whether the other processes
in the process list will also exit when you exit.
For example, if somebody does
</p>
<pre>
start cmd /c scratch.exe
</pre>
<p>
then the program will correctly report that it's not the
last one,
but what it doesn't know is that the <code>cmd.exe</code>
is going to exit as soon as the <code>scratch.exe</code>
program exits.
There's not much you can do to detect this,
because that information is internal to whatever other
process launched your program.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-maurits even thread-even depth-1 parent" id="comment-1224663">
				<div id="div-comment-1224663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224663">
			January 25, 2016 at 7:10 am</a>		</div>

		<p>I suppose &#8220;real&#8221; solutions might include create a double-clickable file batch that included &#8220;pause&#8221; and/or a command-line-typable /nopause switch.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-2 parent" id="comment-1224781">
				<div id="div-comment-1224781" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224781">
			January 26, 2016 at 1:23 am</a>		</div>

		<p>Or a context menu command that reads something like this?<br />
%SystemRoot%\System32\cmd.exe /k &#8220;%1&#8243;&amp;pause</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1224801">
				<div id="div-comment-1224801" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224801">
			January 26, 2016 at 2:18 am</a>		</div>

		<p>If you&#8217;re going to use /k then you hardly need the pause as CMD.EXE will prompt once the command finishes.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1224672">
				<div id="div-comment-1224672" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224672">
			January 25, 2016 at 7:19 am</a>		</div>

		<p>At some point, you have to abdicate responsibility.  If the end user wants to shoot themself in the foot by pulling cmd.exe in where it doesn&#8217;t belong, let them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1224681">
				<div id="div-comment-1224681" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224681">
			January 25, 2016 at 7:43 am</a>		</div>

		<p>And then there&#8217;s redirection.  And a whole bunch more combinations which I worked out, leading to this question: <a href="http://stackoverflow.com/q/4028353/103167" rel="nofollow">http://stackoverflow.com/q/4028353/103167</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1224691">
				<div id="div-comment-1224691" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BZ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224691">
			January 25, 2016 at 8:29 am</a>		</div>

		<p>While the intention here is good, most console apps (on any system) don&#8217;t bother with it on any system (not just in Windows) because there are so many scenarios where you don&#8217;t want to pause (redirection, pipe, etc). That said, I wish Explorer were a bit smarter and did this for you like Visual Studio does. Then again, the same issues come into play for Explorer too.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1224702">
				<div id="div-comment-1224702" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224702">
			January 25, 2016 at 10:10 am</a>		</div>

		<p>@BZ: Visual Studio only does this when you launch without debugging (Ctrl+F5). And contrary to Explorer, Visual Studio knows the type of application (GUI or Console) it&#8217;s launching.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1224731">
				<div id="div-comment-1224731" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken in NH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224731">
			January 25, 2016 at 12:01 pm</a>		</div>

		<p>Yes, the same issues come into play for Explorer also. If Explorer behaved liked VS does, then someone would complain that then they paste a line into Start-&gt;Run expecting the output to be a file containing the redirected results, they get a zombie console window. Or network admins: &#8220;My login scripts litter the screen with a bunch of zombie console windows; how do I get rid of them&#8221;. I believe the correct answer is the current behavior, last program on the console decides whether to turn out the lights or not.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1224741">
				<div id="div-comment-1224741" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://killprog.com' rel='external nofollow' class='url'>Killer{R}</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224741">
			January 25, 2016 at 1:35 pm</a>		</div>

		<p>Your program may spawn another own copy, specifying some information in command line about itself and exit. And that another copy should wait for exit its parent and then check if it last or not and do pause as needed. Sure this doesn&#8217;t cover some edge cases, for example if parent tracks process tree using jobs or stupid process list polling, but I guess this should fix cmd /c.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1224761">
				<div id="div-comment-1224761" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224761">
			January 26, 2016 at 12:35 am</a>		</div>

		<p>At my job, we give candidates a pre-interview homework that involves writing a console program. I deduct points if it includes any kind of attempting to pause before exiting.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-2 parent" id="comment-1224771">
				<div id="div-comment-1224771" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224771">
			January 26, 2016 at 12:56 am</a>		</div>

		<p>Why?  I think it shouldn&#8217;t matter unless your projects involves writting console applications.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1224791">
				<div id="div-comment-1224791" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224791">
			January 26, 2016 at 1:35 am</a>		</div>

		<p>Code that pauses before exiting (a) is non-portable, (b) breaks non-interactive use, (c) is unnecessarily complicated, or (d) suffers from any combination of the above.</p>
<p>Programmers who write code that pauses before exiting a console program will probably struggle in an environment which involves the use of console programs, including but not limited to compilers, linkers, build systems, version control systems and in-house data manipulation tools.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-hikari even depth-4 parent" id="comment-1224813">
				<div id="div-comment-1224813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224813">
			January 26, 2016 at 6:48 am</a>		</div>

		<p>And do you specify any of those as requirements when you set the task?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1224831">
				<div id="div-comment-1224831" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224831">
			January 26, 2016 at 7:16 am</a>		</div>

		<p>Why would you need to? It&#8217;s just a random way of eradicating people from the process, anyone who happens to make it through will have to decide whether they like having a passive aggressive boss.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1224963">
				<div id="div-comment-1224963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224963">
			January 27, 2016 at 12:31 am</a>		</div>

		<p>The purpose of the test task is not to see how a given candidate solves a well-defined ideal spherical exercise in vacuum. It is to see how they react to vague underspecified requirements that are prevalent in the real world.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-4" id="comment-1224901">
				<div id="div-comment-1224901" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224901">
			January 26, 2016 at 11:08 am</a>		</div>

		<p>{{Citation needed}}</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-scott-brickey even thread-even depth-1 parent" id="comment-1224861">
				<div id="div-comment-1224861" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Scott+Brickey' rel='external nofollow' class='url'>Scott Brickey</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224861">
			January 26, 2016 at 8:15 am</a>		</div>

		<p>I recall that there used to be a way to tell WINDOWS to keep console windows open after the app completed&#8230; I&#8217;d used this on many occasions, back before things like PowerShell&#8230; now I can&#8217;t find the option (was pretty sure it used to be in properties of the exe or shortcut or something), maybe it&#8217;s been removed.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1224863">
				<div id="div-comment-1224863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224863">
			January 26, 2016 at 8:52 am</a>		</div>

		<p>You can&#8217;t find the option because it only exists for MS-DOS programs not Win32 console programs. I remember it well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even depth-2" id="comment-1224871">
				<div id="div-comment-1224871" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224871">
			January 26, 2016 at 8:52 am</a>		</div>

		<p>It was a setting available for PIF-based shortcuts.  It wasn&#8217;t carried over into the newer LNK format.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip odd alt depth-2 parent" id="comment-1224911">
				<div id="div-comment-1224911" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224911">
			January 26, 2016 at 1:00 pm</a>		</div>

		<p>It is still possible, but in a more convoluted way now.<br />
C:\Users\xxx&gt;cmd /?<br />
Starts a new instance of the Windows command interpreter</p>
<p>CMD [/A | /U] [/Q] [/D] [/E:ON | /E:OFF] [/F:ON | /F:OFF] [/V:ON | /V:OFF]<br />
    [[/S] [/C | /K] string]</p>
<p>/C      Carries out the command specified by string and then terminates<br />
/K      Carries out the command specified by string but remains</p>
<p>So in order to do it these days, after you create the link to the console program, change the target so that it becomes cmd /k &#8220;&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-3" id="comment-1224921">
				<div id="div-comment-1224921" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1224921">
			January 26, 2016 at 1:06 pm</a>		</div>

		<p>Meh, the comments on this blog seems like they just remove stuff surrounded by less than and greater than symbols, assuming that they are html. The problem is, I normally use those as indicators of it being user input or variable depending on the input.<br />
Well, lets try that again with square brackets.<br />
cmd /k &#8220;[old contents of the target text box]&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-scott-brickey odd alt depth-3" id="comment-1225221">
				<div id="div-comment-1225221" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Scott+Brickey' rel='external nofollow' class='url'>Scott Brickey</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160125-00/?p=92922#comment-1225221">
			January 28, 2016 at 10:10 am</a>		</div>

		<p>Possible, sure&#8230; but to me, the bigger question is how the PIF implementation works&#8230; and how the approaches discussed in article would work (or not)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

