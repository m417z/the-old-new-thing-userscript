<html>
<head>
<title>It rather involved being on the other side of this airtight hatchway</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>It rather involved being on the other side of this airtight hatchway</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 8, 2006 / year-entry #158</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>47</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Not every code injection bug is a security hole. Yes, a code injection bug is a serious one indeed. But it doesn't become a security hole until it actually allows someone to do something they normally wouldn't be able to. For example, suppose there's a bug where if you type a really long file name...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Not every code injection bug is a security hole.</p>
<p> Yes, a code injection bug is a serious one indeed. But it doesn't become a security hole until it actually allows someone to do something they normally wouldn't be able to. </p>
<p> For example, suppose there's a bug where if you type a really long file name into a particular edit control and click "Save", the program overflows a buffer. With enough work, you might be able to turn this into a code injection bug, by entering a carefully-crafted file name. But that's not a security hole yet. All you've found so far is a serious bug. (Yes, it's odd that I'm underplaying a serious bug, but only because I'm comparing it to a security hole.) </p>
<p> Look at what you were able to do: You were able to get a program to execute code of your choosing. Big deal. You can already do that without having to go through all this effort. If you wanted to execute code of your own choosing, then you can just put it in a program and run it! </p>
<dl>
<dt>The hard way</dt>
<dd>
<ol>
<li>Write the code that you want to inject,   compile it to native machine code.     </li>
<li>Analyze the failure, develop a special string whose     binary representation results in the overwriting of a return    address, choosing the value so that it points back into the     stack.     </li>
<li>Write an encoder that takes the code you wrote in step&nbsp;1         and converts it into a string with no embedded zeros.         (Because an embedded zero will be treated as a string terminator.)     </li>
<li>Write a decoder that itself contains no embedded-zeros.     </li>
<li>Append the encoded result from step&nbsp;3 to the decoder you         wrote in step&nbsp;4 and combine it with the binary representation         you developed in step&nbsp;2.     </li>
<li>Type the resulting string into the program.     </li>
<li>Watch your code run.     </li>
</ol>
</dd>
<dt>The easy way</dt>
<dd>
<ol>
<li>Write the code that you want to inject.     (You can use any language, doesn't have to compile to native code.)     </li>
<li>Run it.     </li>
</ol>
</dd>
</dl>
<p> It's like saying that somebody's home windows are insecure because a burglar could get into the house by merely unlocking and opening the windows from the inside. (But if the burglar has to get inside in order to unlock the windows...) </p>
<p> Code injection doesn't become a security hole until you have elevation of privilege. In other words, if attackers gains the ability to do something they normally wouldn't. <a href="http://blogs.msdn.com/oldnewthing/archive/2006/01/13/512503.aspx"> If the attack vector requires setting a registry key</a>, then the attacker must already have obtained the ability to run enough code to set a registry key, in which case they can just forget about "unlocking the window from the inside" and just replace the code that sets the registry with the full-on exploit. The alleged attack vector is a red herring. The burglar is already inside the house. </p>
<p> Or suppose you found a technique to cause an application to log sensitive information, triggered by a setting that only administrators can enable. Therefore, in order to "exploit" this hole, you need to gain administrator privileges, in which case why stop at logging? Since you have administrator privileges, you can just replace the application with a hacked version that does whatever you want. </p>
<p> Of course, code injection can indeed be a security hole if it permits elevation of privilege. For example, if you can inject code into a program running at a different security level, then you have the opportunity to elevate. This is why extreme care must be taken when writing unix root-setuid programs and Windows services: These programs run with elevated privileges and therefore any code injection bug becomes a fatal security hole. </p>
<p> A common starting point from which to evaluate elevation of privilege is the Internet hacker. If some hacker on the Internet can inject code onto your computer, then they have successfully elevated their privileges, because that hacker didn't have the ability to execute arbitrary code on your machine prior to the exploit. Next time, we'll look at some perhaps-unexpected places your program can become vulnerable to an Internet attack, even if you think your program isn't network-facing. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (47)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-378003">
				<div id="div-comment-378003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arthur Dent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378003">
			May 8, 2006 at 10:24 am</a>		</div>

		<p>You know, it&#8217;s at times like this, when I&#8217;m stuck in a Vogon air lock with a man from Betelgeuse, about to die of asphyxiation in deep space, that I really wish I&#8217;d listened to what my mother told me when I was young.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis odd alt thread-odd thread-alt depth-1" id="comment-378023">
				<div id="div-comment-378023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378023">
			May 8, 2006 at 10:37 am</a>		</div>

		<p>Elevation of privilege could be in the same security context as the running program &#8211; consider a kiosk or other locked-down system that doesn&#8217;t allow users at the keyboard to run just any program of their choosing. &nbsp;By injecting code through a text box, an attacker could run arbitrary code &#8211; in the same security context as the original program, yet still an elevation of privilege.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378033">
				<div id="div-comment-378033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ford Prefect</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378033">
			May 8, 2006 at 11:12 am</a>		</div>

		<p>Why? What did she tell you?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378043">
				<div id="div-comment-378043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arthur Dent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378043">
			May 8, 2006 at 11:17 am</a>		</div>

		<p>I don&#8217;t know, I wasn&#8217;t listening.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378063">
				<div id="div-comment-378063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378063">
			May 8, 2006 at 11:31 am</a>		</div>

		<p>Virtually every Windows application is seseptable to code injection:</p>
<p><a rel="nofollow" target="_new" href="http://66.249.93.104/search?q=cache:X74d5VFN0RsJ:security.tombom.co.uk/moreshatter.html+windows+shatter+attack+details&amp;hl=en&amp;gl=uk&amp;ct=clnk&amp;cd=1&amp;client=firefox-a" rel="nofollow">http://66.249.93.104/search?q=cache:X74d5VFN0RsJ:security.tombom.co.uk/moreshatter.html+windows+shatter+attack+details&#038;hl=en&#038;gl=uk&#038;ct=clnk&#038;cd=1&#038;client=firefox-a</a><br />
<br />(Google cache) Original site appears to be down.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378073">
				<div id="div-comment-378073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378073">
			May 8, 2006 at 11:42 am</a>		</div>

		<p>Many of the good guys think that it is hard to come up with code once you have a partial hole like this. &nbsp;It is in fact trivial and there are nice tools out there to do it. &nbsp;Two example sites are <a href="http://www.shellcode.org" rel="nofollow">http://www.shellcode.org</a> and <a href="http://www.metasploit.com" rel="nofollow">http://www.metasploit.com</a>. &nbsp;You just pick the the code you want and they have multiple encoders for you. &nbsp;For example they even have encoders that will let your payload be in a buffer that has toupper() or tolower() called on it! &nbsp;These are the good guy sites! &nbsp;I did see one a while back that had a database of all the DLLs in all the Windows versions and where they were loaded and what opcodes were available. &nbsp;If the only thing you could control was a return address, they had sufficient information for you to pick what you wanted run.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378083">
				<div id="div-comment-378083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378083">
			May 8, 2006 at 11:46 am</a>		</div>

		<blockquote><p>
  &gt; suppose you found a technique to cause an application to log sensitive information, triggered by a setting that only administrators can enable</p>
<p>While it&#8217;s true that you must have gained administrator access and you could run/do anything else you want this scenario is one where you likely wouldn&#8217;t want to. &nbsp;Get access and enable logging, then come back days, weeks, or months later to grab the logged information. &nbsp;</p>
<p>One entry one chance at being caught. &nbsp;If the entry isn&#8217;t caught, but the logging later is, it could be assumed attributed to another (current, prior) individual with admin access and left in place for you. &nbsp;Later you come back and use the same exploit to retrieve the log. &nbsp;</p>
<p>Not so if you take that opportunity to leave rootkits in place or processes that keep sending the logs or other data back to you&#8230; endless opportunities to be caught.</p>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378103">
				<div id="div-comment-378103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mgrier' rel='external nofollow' class='url'>Michael Grier [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378103">
			May 8, 2006 at 12:17 pm</a>		</div>

		<p>Note that Raymond&#8217;s comments and analysis were from an application-centric point of view. &nbsp;If the application is running in the context of the user, it cannot perform an Elevation of Privilege (EOP) attack.</p>
<p>However it can make other attacks which might include revelation of private data, repudiation, etc.</p>
<p>Note that the tables are turned for components. If you&#8217;re a component that&#8217;s used in multiple apps, your EOP potential is the greatest of all the applications which run you. &nbsp;Maybe you were written to run in low-rights IE but who knows when a service running as LocalSystem loads your code for some reason and starts using it?</p>
<p>Unfortunately it looks like addressing the security problem is more like trying to exert control over a chaotic system; you cannot exercise absolute control. &nbsp;Instead you can fix identifiable defects and then have mechanisms in place which systemically address issues by attempting to put bounds on bad behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378113">
				<div id="div-comment-378113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ring Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378113">
			May 8, 2006 at 1:44 pm</a>		</div>

		<p>This post goes a long way in explaining why Microsoft has such a long, puzzling history of shipping boneheaded security holes. Nothing personal, Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378123">
				<div id="div-comment-378123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378123">
			May 8, 2006 at 1:51 pm</a>		</div>

		<p>You don&#8217;t always have the privilege to run arbitrary binaries (you&#8217;ve been in college, right?).</p>
<p>I&#8217;m sorry but this whole article doesn&#8217;t stand if all you&#8217;ve got is such an example to prove your point. It&#8217;s at best misleading.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378133">
				<div id="div-comment-378133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378133">
			May 8, 2006 at 2:48 pm</a>		</div>

		<p>Raymond is technically correct, but I&#8217;m not sure this entry is very helpful to most people. &nbsp;In analyzing security implications of a bug, you have to ask how it can be exploited and by whom. &nbsp;Security researchers spend a lot of time playing hypothetical games in how somebody can use the bug to do something they are not supposed to be able to do.</p>
<p>The problem here is that most developers aren&#8217;t capable of adequately doing this kind of assessment, and can be led astray by naive reasoning. &nbsp;At a deeper level, security problems occur when technology acts in ways different than what a user (or another developer) might expect. &nbsp;Some of the biggest security problems come via social engineering, whereby a user is tricked into causing a payload to execute because what he is doing should not be dangerous in his view of the world.</p>
<p>Think about macro or e-mail script viruses. &nbsp;The virus writers didn&#8217;t need access to users&#8217; machines to spread them. &nbsp;And yet they were devastating in their effect.</p>
<p>When looking at a bug that might not be a security hole, you have to consider a myriad of complicated issues. &nbsp;Can an attacker use this to trick somebody into putting a malformed string into the vulnerable dialog box, and thereby gain execution? &nbsp;Users would tend to think that they don&#8217;t need to be as careful about dialog box inputs as, say, running executables from unknown sources.</p>
<p>There&#8217;s also the issue of several non-vulnerability bugs combining to produce a vulnerability. &nbsp;Sometimes a series of partial breaks, none of which amount to much by themselves, can allow a complete compromise together.</p>
<p>Let&#8217;s be careful with this stuff. &nbsp;In the security world there are far too many major security problems that were initially labelled as non-exploitable bugs. &nbsp;In general, non-exploitability is a very difficult thing to prove.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378143">
				<div id="div-comment-378143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378143">
			May 8, 2006 at 3:09 pm</a>		</div>

		<p>I second everything in KB&#8217;s post.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378153">
				<div id="div-comment-378153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MichaelGiagnocavo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378153">
			May 8, 2006 at 3:33 pm</a>		</div>

		<p>In a very limited scope, it might not be a security problem by some definition. But suppose the user is running on a system with Software Restriction Policies in place &#8212; certainly then it would be a security problem. </p>
<p>Also, many parameters can be controlled by attackers. For instance, the Save Dialog. If an attacker made a filename that made code execute, then placed this file in a shared directory, a user could &quot;save&quot; to that file, thus triggering the injection. </p>
<p>Seriously, by that definition, you could come to the conclusion that most of IE&#8217;s security holes weren&#8217;t holes &#8212; they all ran in the user&#8217;s context. This narrow definition only works if you assume that there&#8217;s zero outside influence in any of the data leading to the hole. And in many apps, those places that aren&#8217;t affected by data at all are probably few.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-378163">
				<div id="div-comment-378163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378163">
			May 8, 2006 at 3:42 pm</a>		</div>

		<p>If a file name can cause a buffer overflow, then that&#8217;s elevation since the person who created the file has gained privileges they didn&#8217;t have before. That will be the topic for tomorrow.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378173">
				<div id="div-comment-378173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Swaim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378173">
			May 8, 2006 at 4:16 pm</a>		</div>

		<p>[begin quote]Seriously, by that definition, you could come to the conclusion that most of IE&#8217;s security holes weren&#8217;t holes &#8212; they all ran in the user&#8217;s context. [end quote]</p>
<p>Which user? IEs holes generally aren&#8217;t exploitable by the guy sitting at the console. But they are exploitable by the web site operator. That&#8217;s the user that Raymond&#8217;s talking about.<br />
<br />Likewise, if I send you an email virus, it results in a privilige escalation for me, because I can now access your address book and do other nefarious things on your computer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378053">
				<div id="div-comment-378053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://about:blank' rel='external nofollow' class='url'>Kristof</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378053">
			May 8, 2006 at 11:21 am</a>		</div>

		<p>I&#8217;ve heard this argument many times when people are suggesting to punt a bug. Unfortunately, the fact that *you* can&#8217;t think of a way of exploiting the coding injection to elevate privilege doesn&#8217;t mean that some other clever person will find some combination of components that assume good behavior of your component. This is especially true in the case of a reusable component (such as the example edit control), since it is possible that someone will reuse this control in a context where they allow untrusted data to be stuck into the edit control.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378183">
				<div id="div-comment-378183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378183">
			May 8, 2006 at 6:29 pm</a>		</div>

		<p>I&#8217;m surprised you downplay the importance of running code of your choosing on a computer (code injection) regardless of priviledge level.<br />
<br /> You say that you can simply compile a program and run it, but you are forgetting that very few systems are configured to allow you to do that without very explicit permission to do so (via an installer).<br />
<br /> It&#8217;s pretty well spelled out in a book published by Microsoft press (called Secure Code, I believe?). They say: &quot;If a bad guy runs his code on your computer, it&#8217;s not your computer anymore&quot;. Along with (10?) other things like &quot;If I bad guy can physically access your computer, it&#8217;s not your computer anymore&quot;.<br />
<br /> In its simplest form, code injection is allowing a login capability to a computer which you should not have access to. It in effect bypasses Access control checks, and completely obliterates who knows how many layers of external security.<br />
<br /> Aside from that, I personally do not believe that there are any OSs out there which aren&#8217;t vulnerable in some obscure way to a rootkit. And all you need to deploy a rootkit, is a code injection bug.<br />
<br /> Priviledge elevation is a serious bug, but code injection is in my books the wildcard of bugs.</p>
<p> my 2 cents.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-378193">
				<div id="div-comment-378193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378193">
			May 8, 2006 at 6:42 pm</a>		</div>

		<p>There is code injection that leads to elevation and code injection that doesn&#8217;t. Clearly, code injection that leads to elevation is worse than code injection that doesn&#8217;t. Does this constitute &quot;downplaying&quot; the second case?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-378223">
				<div id="div-comment-378223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378223">
			May 8, 2006 at 7:21 pm</a>		</div>

		<blockquote><p>
  If a file name can cause a buffer overflow, then that&#8217;s elevation since the person who created the file has gained privileges they didn&#8217;t have before</p>
<p>hmm&#8230; Content-Disposition?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-378233">
				<div id="div-comment-378233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378233">
			May 8, 2006 at 7:23 pm</a>		</div>

		<p>Yes, injecting code into a machine that the attacker don&#8217;t have access to is an elevation of privilege, but that&#8217;s not what I&#8217;m talking about here. What I&#8217;m talking about here is an attacker attacking himself. Gaining the privilege you already have is not elevation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378243">
				<div id="div-comment-378243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ugh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378243">
			May 8, 2006 at 7:55 pm</a>		</div>

		<p>Raymond, how can you be sure of the privlidges the attacker is interested in?</p>
<p>Maybe it&#8217;s the right to send network traffic &#8211; a privlidge that (some) firewalls selectively grant to processes. It&#8217;s not a priv in the traditional sense of security contexts.</p>
<p>Trying to say a bug isn&#8217;t a problem unless Condition X holds is just inviting somebody to make X true, and also giving lazy programmers an excuse to write holes.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-378263">
				<div id="div-comment-378263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378263">
			May 8, 2006 at 8:13 pm</a>		</div>

		<p>I hardly intended to give people excuses to write holes. Not all holes are equal, in the same way not all bugs are equal and not all 911 calls are equal. That doesn&#8217;t mean you have an excuse to write bugs or ignore 911 calls either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378273">
				<div id="div-comment-378273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378273">
			May 8, 2006 at 8:26 pm</a>		</div>

		<p>Hmm,</p>
<p> I retract my last post. I think I didn&#8217;t take into account your point that gaining access to a computer you don&#8217;t have access to is a priviledge escalation.</p>
<p> just to make it clear though, I&#8217;m not trying to flame or anything. I&#8217;m just exposing my personal point of view that code injections are more serious than priviledge elevation in a purely abstract way. (even though, exactly as you point out, this might not be the case on a per case basis)</p>
<p> I personally believe this for the following very abstract reason: possible attacks all have a &#8216;vector space&#8217; they live in. A space of actions and commands that a user can invoke. This vector space of actions navigates the user in a set of finite states. For example, if all you had as a vector space were the commands &quot;File-&gt;Open&quot;, &quot;File-&gt;Print&quot; and &quot;File-&gt;Close&quot; there would be no vector for writing.<br />
<br /> Anyways, the point is that a code injection will instantly obliterate any analysis done on the system and open the vector space to be every running instruction on your processor (within priviledge). This effectively short-circuits all FSA assumptions/analysis we&#8217;ve made. I find this much more troublesome a thought than knowing that my program is running along smoothly in a state that is well known, even though it may have an elevated priviledge.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378283">
				<div id="div-comment-378283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lucas (not George)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378283">
			May 8, 2006 at 8:37 pm</a>		</div>

		<p>I think I understand Raymond point of view, but anyone who has the minimum interest on security know that as soon as code can be executed by someone on your machine you&#8217;re dead.<br />
<br />I remember that was exactly Microsoft excuse some time ago for many security problems (or why they didn&#8217;t consider them to be be a high priority). They did retracted from that point of view (or at least, PR got some lights in security), so it seems a bit odd to see that point of view here.</p>
<p>As already mentioned there is the kiosk case, or just simple &quot;fullscreen&quot; programs running on a PC with no quit command.<br />
<br />Remember the first IE versions? You could bypass the &quot;kiosk&quot; mode by using the Load/save common control (too much Explorer power in there).</p>
<p>Another much more dangerous case (in my point of view) is denial of services. Any competent &quot;hacker&quot; (using the media/movies definition) will know some form of denial of service if it can execute user code on the system. From here I can imagine some arp poisening (I&#8217;m just guessing a laptop added to the local network &#8211; easier if wifi envolved) and eventualy bad things to the local network environment.</p>
<p>My point is that spam and child pornography are enough for a local network to be considered seriously compromised and from the point you can inject code those are easy to do (and let those credit card numbers theft for the movies, because they are not needed for enough serious damages).</p>
<p>As a side note, I believe this is a point of view many people forget (and no *nix fanatic thinks of).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378323">
				<div id="div-comment-378323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378323">
			May 8, 2006 at 9:21 pm</a>		</div>

		<p>Actually, not just load/save on IE, netscape as well. It was a problem of Windows, not IE.</p>
<p>I remember we used it on our library PCs to gain access so we could install anything we want. Granted that was not a Windows NT machine, so there was no inherent access control, but still a security breach.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378333">
				<div id="div-comment-378333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378333">
			May 8, 2006 at 9:23 pm</a>		</div>

		<p>Actually, not just load/save on IE, netscape as well. It was a problem of Windows, not IE.</p>
<p>I remember we used it on our library PCs to gain access so we could install anything we want. Granted that was not a Windows NT machine, so there was no inherent access control, but still a security breach.</p>
<p>So I&#8217;d rather not make the optimistic claim about &quot;code injection could be harmless&quot;. You never know how your software is going to be deployed, so it&#8217;s useless from a software developer point of view anyway. By saying so you&#8217;d give people a false sense of security. I just fail to see the point of this article.</p>
<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378343">
				<div id="div-comment-378343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378343">
			May 8, 2006 at 9:34 pm</a>		</div>

		<p>Still, it&#8217;s possible to chain attacks together. &nbsp;Perhaps there&#8217;s a hole which doesn&#8217;t let you do anything except write a registry key somewhere. &nbsp;That&#8217;s still an elevation-of-privilege attack, of course, but not an &quot;execute any code&quot; attack. &nbsp;It doesn&#8217;t even have to be a buffer overrun, it just needs to have poor validation.</p>
<p>Attackers can then use that seemingly-less-serious hole to activate another exploit, eventually getting themselves to arbitrary code execution (and pwn1ng j00r b0x).</p>
<p>Any hole is a serious hole.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378353">
				<div id="div-comment-378353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">glob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378353">
			May 8, 2006 at 9:53 pm</a>		</div>

		<p>&quot;This is why extreme care must be taken when writing unix root-setuid programs and Windows services&quot;</p>
<p>damm straight .. the amount of services that have a UI yet run as SYSTEM scares me.</p>
<p>never underestimate the ability of a developer to undermine security for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378363">
				<div id="div-comment-378363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378363">
			May 8, 2006 at 9:58 pm</a>		</div>

		<p>An answer to a question:</p>
<p>&gt; Code injection doesn&#8217;t become a security<br />
<br />&gt; hole until you have elevation of privilege.</p>
<p>A question:</p>
<p>&gt; Clearly, code injection that leads to<br />
<br />&gt; elevation is worse than code injection that<br />
<br />&gt; doesn&#8217;t. Does this constitute &quot;downplaying&quot;<br />
<br />&gt; the second case?</p>
<p>Further answer:</p>
<p>I think you did downplay it too much. &nbsp;You started with an example of a person hacking themselves when they knew that they were hacking themselves. &nbsp;Sure it&#8217;s fair to downplay this. &nbsp;But this does not extend to a case where a person sort of participates in hacking themselves when they don&#8217;t know that they&#8217;re sort of participating in hacking themselves. &nbsp;The latter case is a security problem even though it doesn&#8217;t involve elevation of privilege.</p>
<p>By the way a burglary that leaves a window unlocked, just like a Trojan installing a backdoor or a rootkit, isn&#8217;t rare in real life. &nbsp;If the victim doesn&#8217;t notice that they&#8217;ve been burglarized then they might bring home some valuables the next day. &nbsp;Or the burglar will find it easier to make repeat visits in search of valuables. &nbsp;Or the burglar who doesn&#8217;t find what they were looking for will give up with their original plan and plant some forged evidence that will get the innocent victim convicted of a crime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378373">
				<div id="div-comment-378373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378373">
			May 8, 2006 at 11:01 pm</a>		</div>

		<p>yes, this post does show a strange amount of ignorance over the fact that it&#8217;s pretty common to chain &#8216;bugs&#8217; into a complete exploit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378393">
				<div id="div-comment-378393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kuwanger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378393">
			May 9, 2006 at 12:06 am</a>		</div>

		<p>I have a question, then. &nbsp;Is it privilege escalation if one is able to use this code injection to circumvent hardware DRM? &nbsp;Or does that just fall back into merely a violation of any security policy in place? &nbsp;I&#8217;d guess it&#8217;s privilege escalation as with hardware DRM, it&#8217;s never the hardware owner who has full privilege over the hardware. &nbsp;Afterall, a large intent of hardware DRM is to prevent the user from being able to &quot;attack&quot; the executing code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378213">
				<div id="div-comment-378213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378213">
			May 8, 2006 at 7:16 pm</a>		</div>

		<p> Well, I was merely remarking on the 4th paragraph, where you said that you can already do such a thing (injection) by running your own program.<br />
<br /> My point is that in the rare scenario that you have a computer under your discression (your laptop, desktop, or even a shell account on some server), it&#8217;s true that it&#8217;s not a big deal to be able to inject code.<br />
<br /> But for the rest of the cases, injecting code onto a machine you do not otherwise have access to is a huge deal, even if you can only do things that are of reduced priviledge level and perfectly &#8216;legal&#8217; under the credentials of the user &#8211; which are by definition not you, since you are a third party injecting code into their program.<br />
<br /> Example: imagine a bank that has a LAN with semi sensitive information on their intraweb (like tomorrow&#8217;s keycodes for the front door). Every employee checks on the intranet every evening. Accessing that page doesn&#8217;t need any special credential or priviledge, since from the intranet, it is legally accessible to everyone. Inejcting code onto a machine inside their intranet could lead to a serious compromise.<br />
<br /> Ok ok. that example is a bad one (people should have some sort of authentication), but my point remains the same. It is not just an assumption that foreign code cannot be executed on a given system, it is part of a security policy in place. And a code injection bug effectively overrides an entire security policy. That&#8217;s bad. In my opinion much worse than a priviledge elevation bug.</p>
<p> Here&#8217;s another example: if you have an app that just sets the system clock time. The fact that this application has a priviledge elevation bug is relatively benign, given that the app will still continue to do what it&#8217;s supposed to do &#8211; with the only caveat that maybe you shouldn&#8217;t be allowed to do it at all.<br />
<br /> Same for a web browser (or even Word), priviledge elevation might allow you to actually view files that you don&#8217;t have access to.<br />
<br /> What you *won&#8217;t* be able to do, unless you have a code injection tool, or a very &#8216;loose&#8217; tool like notepad, is do anything to actually (subtly) destabilize the system. I mean, how much damage can you do &#8211; short of just ham fistedly erasing important files &#8211; to a system using word?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378403">
				<div id="div-comment-378403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brodie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378403">
			May 9, 2006 at 3:01 am</a>		</div>

		<p>Mark Russinovich (of sysinternals fame) just recently made a post about gaining escalated privileges from limited user. Quite an interesting investigation.<br />
<br /><a rel="nofollow" target="_new" href="http://www.sysinternals.com/blog/2006/05/power-in-power-users.html" rel="nofollow">http://www.sysinternals.com/blog/2006/05/power-in-power-users.html</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378253">
				<div id="div-comment-378253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378253">
			May 8, 2006 at 8:08 pm</a>		</div>

		<p>It&#8217;s a good point, and I agree that code injecting into an app you are running yourself is not a big deal.<br />
<br /> But as &quot;Ugh&quot; pointed out, this *can* be a big deal for a machine running as a kiosk (for network reasons among other).</p>
<p> Imagine if you could inject some code into an ATM (bank) machine. That could be potentially devestating.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378423">
				<div id="div-comment-378423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">security hole = exploit</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378423">
			May 9, 2006 at 6:19 am</a>		</div>

		<p>According to microsoft a security hole isn&#8217;t a security hole before anyone exploit it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378443">
				<div id="div-comment-378443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miles Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378443">
			May 9, 2006 at 9:21 am</a>		</div>

		<p>The only practical use for this that I can see is to hide the code from future maintainence programmers or code review. There are probably better, easier ways, to obfuscate your code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-378453">
				<div id="div-comment-378453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378453">
			May 9, 2006 at 10:02 am</a>		</div>

		<p>Brodie: Not limited users, power users. &nbsp;The Power Users group has been deprecated for a very long time for precisely this reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-378543">
				<div id="div-comment-378543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MichaelGiagnocavo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378543">
			May 9, 2006 at 10:58 am</a>		</div>

		<p>Mike Swain: I understand Raymond&#8217;s point, and in a very limited context, it&#8217;s understandable. But my point is that almost nothing these days is just restricted to a user sitting at a console. For instance, filenames, etc. are often controlled by external users. There&#8217;s a LOT of data that is controlled by external users. In fact, I guess one could argue that all input can be played with from the outside&#8230;</p>
<p>For instance, suppose there&#8217;s a bug in MSN Messenger where if you type in &quot;Foo&quot; as your username, it deletes all files in My Documents. That&#8217;s hardly an escalation because you could just go and delete everything in My Documents. However, if an attacker can entice someone to set that as their username (&quot;d00d chng your nick to Foo lol&quot;), then they&#8217;ve been successful in their attack, since the victim has an expectation that entering a username should not modify his files. Same thinking that opening a document should not run code, or typing in wierd strings into random dialogs shouldn&#8217;t run code, etc.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378853">
				<div id="div-comment-378853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378853">
			May 9, 2006 at 6:52 pm</a>		</div>

		<p>Indeed concon isn&#8217;t an escalation problem. Neither is rm -rf *. The escalation problem there is the user.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-379013">
				<div id="div-comment-379013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-379013">
			May 10, 2006 at 4:57 am</a>		</div>

		<p>Managing a Citrix server is already a pain, but this article doesn&#8217;t show any pity at all. Instead it reads (to me) that Microsoft is just not interested in these application servers, where users are not trusted at all, and therefore should never be able to run their own code. It is difficult enough already.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-378943">
				<div id="div-comment-378943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">farmer joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-378943">
			May 10, 2006 at 12:29 am</a>		</div>

		<p>Raymond, I do understand your point, but it is rather academic, uninteresting, and at the worst dangerous if some naive developers take it as anything greater.</p>
<p>The kiosk example that Aaron gave is a good one. &nbsp;If I am able to walk up to an internet kiosk, put in my $2 for a few minutes access, type a URL into IE that overflows and launches a worm the likes the planet has never seen before, I reckon it&#8217;s a pretty major security hole. &nbsp;Even if someone can&#8217;t remotely use this exploit. &nbsp;Your argument makes a little sense when it&#8217;s in the context of me sitting at home on my own PC typing in a specially crafted URL, but once I&#8217;ve mastered the URL and can launch it from whatever PC I like there is a problem.</p>
<p>*** It&#8217;s all about context, and that context changes outside the control of the people who wrote the original application. ***</p>
<p>I don&#8217;t follow your filename comment either. &nbsp;You mentioned someone who writes the file, but the file doesn&#8217;t need to exist at all or even be a valid filename if it is about overflowing a dialog box buffer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-379523">
				<div id="div-comment-379523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-379523">
			May 10, 2006 at 7:42 pm</a>		</div>

		<p>Proof yet again that most of the readers of this blog don&#8217;t read what Raymond says.</p>
<p>&#8216;Let&#8217;s have a go at Raymond for what I think he thinks, as opposed to what he actually says.&#8217;</p>
<p>I love a good straw man in the morning!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-379583">
				<div id="div-comment-379583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">farmer joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-379583">
			May 10, 2006 at 10:25 pm</a>		</div>

		<p>Matthew, I believe I do understand the point Raymond is making, but the counterpoint that several of us are making is that when the context is shifted from a machine where you have Administrator privileges to some other very restrictive environment then some &quot;plain old bug&quot; becomes an elevation of privilege.</p>
<p>What I mean by his point is very academic and uninteresting is that it is similar to going to the trouble of arguing that guns are not always dangerous because people with no arms have difficulty firing them. &nbsp;Sure there are situations where buffer overflow bug#9999 does not give anymore access to the system than is already granted but since a change in context can change that then it is a security hole. &nbsp;If Windows 2003 Server had a hardcoded Administrator account with known username and password it is a security hole plain and simple regardless of whether the bank using it has it behind a firewall or not. &nbsp;The reason being that you have to think beyond the details of your own system and think about where it could be deployed. &nbsp;While I appreciate the point Raymond is making I find it smells of &quot;well it works on my machine&quot; &#8212; and I realise that that is not at all what he is saying, but it doesn&#8217;t matter because that is how it sounds and I know some developers are likely to take it as such and treat it as gospel. &nbsp;This is why I said it is dangerous.</p>
<p>I&#8217;d like to add that I&#8217;m not &quot;yet again&quot; misreading Raymond and flaming him for it. &nbsp;I&#8217;ve not taken issue with anything he has said in the past.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-379623">
				<div id="div-comment-379623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ugh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-379623">
			May 11, 2006 at 12:02 am</a>		</div>

		<p>OK, Raymond, I know you didn&#8217;t intended to give anyone excuses&#8230;</p>
<p>Lazy programmers are perfectly capable of finding excuses on their own.</p>
<p>;=)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393583">
				<div id="div-comment-393583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ha.ckers.org/blog/20060620/looking-glasses-hacking-layers-2-3-via-web-applications/' rel='external nofollow' class='url'>ha.ckers.org security lab - Archive &raquo; Looking glasses - hacking layers 2-3 via web applications</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-393583">
			June 20, 2006 at 6:20 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://ha.ckers.org/blog/20060620/looking-glasses-hacking-layers-2-3-via-web-applications/" rel="nofollow">http://ha.ckers.org/blog/20060620/looking-glasses-hacking-layers-2-3-via-web-applications/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-522783">
				<div id="div-comment-522783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://doubt.pernick.org/2007/07/06/WindowsSecurityBoundaries.aspx' rel='external nofollow' class='url'>Doubt's Log</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-522783">
			July 6, 2007 at 6:04 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585943">
				<div id="div-comment-585943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://actors.247blogging.info/?p=3955' rel='external nofollow' class='url'>Actors and Actresses &raquo; Archive du blog &raquo; The Old New Thing : It rather involved being on the other side of this &#8230;</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283#comment-585943">
			January 4, 2008 at 2:29 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://actors.247blogging.info/?p=3955" rel="nofollow">http://actors.247blogging.info/?p=3955</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

