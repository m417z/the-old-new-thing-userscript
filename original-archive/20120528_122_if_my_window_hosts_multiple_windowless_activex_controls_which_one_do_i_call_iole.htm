<html>
<head>
<title>If my window hosts multiple windowless ActiveX controls, which one do I call IOleInPlaceActiveObject::TranslateAccelerator and IOleInPlaceObjectWindowless::OnWindowMessage on?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If my window hosts multiple windowless ActiveX controls, which one do I call IOleInPlaceActiveObject::TranslateAccelerator and IOleInPlaceObjectWindowless::OnWindowMessage on?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 28, 2012 / year-entry #123</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Farproc asks how one goes about hosting two windowless ActiveX controls in a single window. In particular, "none of the documentation explains how to choose which control to send IOle≠In≠Place≠Active≠Object::Translate≠Accelerator and IOle≠In≠Place≠Object≠Windowless::On≠Window≠Message on?" Actually, the documentation does say. The documentation for IOle≠In≠Place≠Active≠Object::Translate≠Accelerator says, "Active in-place objects must always be given the first chance at...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter Farproc asks how one goes about hosting two windowless ActiveX controls in a single window. In particular, "<a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/20/10040074.aspx#10040752">none of the documentation explains how to choose which control to send <code>IOle&shy;In&shy;Place&shy;Active&shy;Object::<wbr>Translate&shy;Accelerator</wbr></code> and <code>IOle&shy;In&shy;Place&shy;Object&shy;Windowless::<wbr>On&shy;Window&shy;Message</wbr></code> on?</a>"</p>
<p> Actually, the documentation does say. </p>
<p> The documentation for <a href="http://msdn.microsoft.com/en-us/library/ms693360(VS.85).aspx"> <code>IOle&shy;In&shy;Place&shy;Active&shy;Object::<wbr>Translate&shy;Accelerator</wbr></code></a> says, "Active in-place objects must always be given the first chance at translating accelerator keystrokes." So you pass the message to the active in-place object. Your window may host multiple windowless ActiveX controls, but at most one of them is the active object at a time. And most of the time, none of them will be active. For example, in Word, most of the time the insertion point is in the text part of the document. Only occasionally do you activate an in-place object by, say, double-clicking on an embedded Excel spreadsheet, at which point Excel <a href="http://msdn.microsoft.com/en-us/library/ms683898(VS.85).aspx"> adds its menu items to your menu bar</a> and basically takes over your application window for a while. </p>
<p> Here's an example of Windows&nbsp;95's Wordpad hosting Paint as an in-place active object. </p>
<table border="0">
<tr>
<td>     <img src="http://www.opendylan.org/documentation/opendylan/interop2/in27ima4.gif" width="441" height="294"> </td>
</tr>
<tr>
<td align="center">Source: <a href="http://www.opendylan.org/documentation/opendylan/interop2/inte_270.htm"> 2.1.6 OLE/COM example: using compound documents</a>     </td>
</tr>
</table>
<p> If you have an in-place active object, then it's the one that gets the <code>IOle&shy;In&shy;Place&shy;Active&shy;Object::<wbr>Translate&shy;Accelerator</wbr></code> If, as is usually the case, you don't have an in-place active object, then nobody's <code>IOle&shy;In&shy;Place&shy;Active&shy;Object::<wbr>Translate&shy;Accelerator</wbr></code> gets called because they aren't the in-place active object. (It's right there in the interface name.) </p>
<p> For <a href="http://msdn.microsoft.com/en-us/library/ms693783(VS.85).aspx"> <code>IOle&shy;In&shy;Place&shy;Object&shy;Windowless::<wbr>On&shy;Window&shy;Message</wbr></code></a>, the documentation is even more explicit. It contains pretty much a checklist of what you need to do. </p>
<blockquote class="q"><p>  For the following messages, the container should first dispatch the message to the windowless object that has captured the mouse, if any. Otherwise, the container should dispatch the message to the windowless object under the mouse cursor. If there is no such object, the container is free to process the message itself: </p>
<ul>
<li>WM_MOUSEMOVE </li>
<li>WM_SETCURSOR </li>
<li>WM_XBUTTONDOWN </li>
<li>WM_XBUTTONUP </li>
<li>WM_XBUTTONDBLCLK </li>
</ul>
<p> The container should dispatch the message to the windowless object with the keyboard focus for the following messages: </p>
<ul>
<li>WM_CANCELMODE </li>
<li>WM_CHAR </li>
<li>WM_DEADCHAR </li>
<li>WM_HELP </li>
<li>WM_IMExxx </li>
<li>WM_KEYDOWN </li>
<li>WM_KEYUP </li>
<li>WM_SYSDEADCHAR </li>
<li>WM_SYSKEYDOWN </li>
<li>WM_SYSKEYUP </li>
</ul>
<p> For all other messages, the container should process the message on its own. </p>
</blockquote>
<p> There it is, plain as day. </p>
<p> Farproc's last question was "how to track or set 'focus' if there is at least one windowless control." </p>
<p> Um, in a variable? </p>
<p> I was kind of confused by this question because it's part of the deal that when you use windowless controls, you don't have the window manager to take care of keeping track of which sub-object has focus. That now becomes your job. </p>
<p> The user clicked on an object. I guess that's the focus object now. Oh wait, now the user hit the left arrow. I guess the object to the left of that object has focus now. It's just like any other control with windowless sub-components, like list boxes. You have to keep track yourself of the currently-selected item and other properties which the window manager normally does for you. If you don't have any windows, then there is nothing for the window manager to manage. From the window manager's point of view, focus is on your container. You then have to manage focus within your window yourself by keeping track of which of your sub-objects is the focus object. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-987803">
				<div id="div-comment-987803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987803">
			May 28, 2012 at 7:15 am</a>		</div>

		<p>Woha! Mark this date, 28/5/2012, in your calendars. It&#39;s historical: the first time Raymond has posted a picture in his blog!</p>
<p>To stay in topic, most of what is told in this post is common sense, and it&#39;s summed up in the last paragraph: if you don&#39;t use the window manager, you can&#39;t use it (welcome to Tautology Club!). I understand there are places where windowless controls are needed (i.e.: when you have to show controls inside other application&#39;s documents, or when you can&#39;t create windows for some other reason), but I have never understood using them as primary controls, given the extra work needed for them to work (and the possible incompatibilities with accessibility software).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987813">
				<div id="div-comment-987813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987813">
			May 28, 2012 at 9:35 am</a>		</div>

		<p>the first rule of tautology club is the first rule of tautology club</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987823">
				<div id="div-comment-987823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcos Mart&#237;nez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987823">
			May 28, 2012 at 10:05 am</a>		</div>

		<p>@Antonio Rodr√≠guez, Raymond has posted several pictures to date.</p>
<p>Btw, he has hotlinked something hosted in other server. They may replace it with a Goatse. I&#39;d do it. And it would be very funny. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987833">
				<div id="div-comment-987833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987833">
			May 28, 2012 at 11:43 am</a>		</div>

		<p>@Marcos: that&#39;s just juvenile. Replacing it with Ubuntu screenshots would be better. Actually, replacing it with screenshots of Ubuntu hosting Wordpad hosting Paint would be even better &#8212; but I don&#39;t know if Wine can make it that far yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987843">
				<div id="div-comment-987843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987843">
			May 28, 2012 at 12:43 pm</a>		</div>

		<p>@Marcos: I&#39;ve been reading this blog daily for about 8 years and this is indeed the first picture I can remember. Everything else were clever CSS or (IIRC) SVG tricks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987853">
				<div id="div-comment-987853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Marcos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987853">
			May 28, 2012 at 12:43 pm</a>		</div>

		<p>@Marcos: I&#39;ve been reading this blog daily for about 8 years and this is indeed the first picture I can remember. Everything else were clever CSS or (IIRC) SVG tricks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987863">
				<div id="div-comment-987863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987863">
			May 28, 2012 at 12:52 pm</a>		</div>

		<p>i guess the confusion in the documentation is that you don&#39;t give the &quot;Active in-place object&quot; first chance to translate accelerators, you give the &quot;active in-place object&quot; first chance.</p>
<p>Someone (e.g. me) might might be read documentation as , &quot;ActiveX in-place objects must always&#8230;&quot;</p>
<p>&quot;Active&quot; doesn&#39;t mean &quot;ActiveX/COM&quot;, it means &quot;has input focus&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987873">
				<div id="div-comment-987873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987873">
			May 28, 2012 at 1:41 pm</a>		</div>

		<p>8 years isn&#39;t long enough :P Raymond has indeed posted pictures before: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2003/09/10/54831.aspx" rel="nofollow">blogs.msdn.com/&#8230;/54831.aspx</a></p>
<p>Back on topic: in-place active objects were always touted as a pretty big deal and I could see how they would be useful, but I don&#39;t think I&#39;ve ever truly encountered any real life situation where OLE/COM was used to truly host an application, UI and all, in another. As much as they seem useful, they also seem confusing. Are there many people who used this functionality? Or are there many, less obvious ways in which this was used? Browser plugins seem the closest to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987883">
				<div id="div-comment-987883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987883">
			May 28, 2012 at 4:41 pm</a>		</div>

		<p>@Steven Damn I also couldn&#39;t remember that post, my memory is getting hazy :p</p>
<p>Wrt in-pace active objects: Doesn&#39;t word support this for excel tables? I dimly remember this, although I didn&#39;t find it ever especially useful</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987893">
				<div id="div-comment-987893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987893">
			May 28, 2012 at 5:47 pm</a>		</div>

		<p>I&#39;ve used OLE many-a-time to make small changes to Visio documents embedded in Word documents, but for real editing I reckon it&#39;s easier to launch full-blown Visio (Visio Object-&gt;Open) and then have the changes applied back to the document when exiting). ps: This language, &#39;Dylan&#39;, sounds like the way of the future :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987913">
				<div id="div-comment-987913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987913">
			May 29, 2012 at 5:12 am</a>		</div>

		<p>@Steven Don</p>
<p>The biggest one that I know of is Internet Explorer. I&#39;m not talking about the ActiveX controls here, but these are examples of an inplace object and having their complete ui hosted. But Internet Explorer is one very big host around the Web Browser control. Office too supports OLE in that you can embed other Office application&#39;s document types (it has been so long since I had to do it myself since I usually only use Word for typing documentation these days). Not only that, it should be possible to embed other document types into it, like PDF.</p>
<p>As far as people using this functionality. Well, I think these days it has dropped off, but I&#39;m not sure how much support OLE had in the first place. OLE could be rather awkward to use from C++ anyway. However, there are still lots of places in Windows that relies on it.</p>
<p>Anyway, just remember that embeding could be rather seamless depending on how much work was put into the host application, so it is actually rather difficult to know exactly how many applications fully use it, but every time you see someone use the web browser control, then that is one more at least.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987933">
				<div id="div-comment-987933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kog999</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-987933">
			May 29, 2012 at 6:20 am</a>		</div>

		<p>@Steven Don</p>
<p>Thanks for linking to that other post. i&#39;m gonna at it to my mental collection of Raymond Quotes.</p>
<p>Why do some people call the taskbar the &quot;tray&quot;?</p>
<p>Because they&#39;re wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-988583">
				<div id="div-comment-988583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-988583">
			May 31, 2012 at 10:26 pm</a>		</div>

		<p>The problem is, the documentation that exists for OLE sometimes uses the phrase &quot;the windowless object with the keyboard focus&quot; and sometimes refers to the &quot;Active object&quot; &#8211; without ever making it explicit that the in-place-active-object is defined as the object-with-keyboard-focus.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-988803">
				<div id="div-comment-988803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-988803">
			June 3, 2012 at 12:52 am</a>		</div>

		<p>@Marcel: Raymond didn&#39;t use the standard SVG, he used VML, which is one of the deprecated non-standard technologies IE6 became infamous for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-988823">
				<div id="div-comment-988823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120528-00/?p=7523#comment-988823">
			June 3, 2012 at 10:54 am</a>		</div>

		<p>VML was originally supposed to be standard and directly competed with SVG (which was missing many things back then). Result is known&#8230; So it wasn&#39;t nonstandard technology, but was made so by W3C.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

