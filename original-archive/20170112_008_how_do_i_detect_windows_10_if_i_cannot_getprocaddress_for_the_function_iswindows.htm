<html>
<head>
<title>How do I detect Windows 10 if I cannot GetProcAddress for the function IsWindows10OrGreater?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I detect Windows 10 if I cannot GetProcAddress for the function IsWindows10OrGreater?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 12, 2017 / year-entry #9</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>44</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Just like in a cheesy movie, the answer was inside you all along.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to use the handy functions provided
in the <code>Version&shy;Helpers.h</code> header file,
like
<code>Is&shy;Windows&shy;10&shy;Or&shy;Greater</code>,
while maintaining the same source code for both
Windows 7 and Windows 10 targets.
Their plan was to <code>Load&shy;Library</code>
for <code>kernel32.dll</code>,
and then
<code>Get&shy;Proc&shy;Address</code> for
<code>Is&shy;Windows&shy;10&shy;Or&shy;Greater</code>,
but they found that the
<code>Get&shy;Proc&shy;Address</code> call
always failed,
even on Windows 10.
They looked in <code>kernelbase.dll</code> and
<code>ntdll.dll</code>; no luck there either.
How is it possible that Windows 10 doesn't know whether it
is Windows 10?
</p>
<p>
The customer investigated further and found that
when their test program called
<code>Is&shy;Windows&shy;10&shy;Or&shy;Greater</code>,
there was no call to <code>Load&shy;Library</code> at all!
</p>
<pre>
0:000&gt; k
# ChildEBP RetAddr  
00 0133f9fc 00c01806 ntdll!VerSetConditionMask+0x14
01 0133fc2c 00c01739 Test!IsWindowsVersionOrGreater+0xa6 
02 0133fd0c 00c01a33 Test!IsWindows10OrGreater+0x29
03 0133fe10 00c022be Test!main+0x23
04 0133fe24 00c02120 Test!invoke_main+0x1e
05 0133fe7c 00c01fbd Test!__scrt_common_main_seh+0x150
06 0133fe84 00c022d8 Test!__scrt_common_main+0xd
07 0133fe8c 77a962c4 Test!mainCRTStartup+0x8
08 0133fea0 77bd0609 KERNEL32!BaseThreadInitThunk+0x24
09 0133fee8 77bd05d4 ntdll!__RtlUserThreadStart+0x2f
0a 0133fef8 00000000 ntdll!_RtlUserThreadStart+0x1b
</pre>
<p>
The customer wanted to know how to call
functions like
<code>Is&shy;Windows&shy;10&shy;Or&shy;Greater</code>
dynamically.
</p>
<p>
The reason the customer cannot find the function
<code>Is&shy;Windows&shy;10&shy;Or&shy;Greater</code>
in <code>kernel32.dll</code> or any other DLL is simple:
<a HREF="http://tvtropes.org/pmwiki/pmwiki.php/main/itwaswithyouallalong">
The function was inside you all along</a>.
</p>
<p>
The functions in the <code>Version&shy;Helpers.h</code> header
file are all inline functions.
They are not exported anywhere.
These functions do the grunt work of figuring out the
operating system so you don't have to write the
version detection code yourself
(and invariable
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040213-00/?p=40633">
mess up</a>)
by building the appropriate query and calling
<code>Verify&shy;Version&shy;Info</code>,
which has been available since Windows 2000
(possibly longer).
</p>
<p>
If you think about it, the answer must be like that,
for how could <code>kernel32.dll</code>
export all of these specific version-checking functions?
The Windows 7 version of <code>kernel32.dll</code> would have
to be clairvoyant
and have exports for all of these functions like
<code>Is&shy;Windows&shy;10&shy;Or&shy;Greater</code>,
which would be quite a feat.
Presumably the implementations would
simply be hard-coded to return either
<code>TRUE</code> or <code>FALSE</code>, as appropriate.
(I guess you could imagine that each version of Windows
exports only the functions for which it returns <code>TRUE</code>,
and the absence of the function implies that the
corresponding version is not installed.)
</p>
<p>
So just go ahead and use the functions in
<code>Version&shy;Helpers.h</code>.
They will always work and give you an answer.
(Well, unless you're targeting systems earlier
than Windows 2000,
but if you're doing that, then you probably aren't
too interested in version detection
since your customer that is still running Windows NT 4.0
is unlikely ever to upgrade.)
</p>
<p>
<b>Bonus chatter</b>:
Note that the operating system version check does raise
its own question:
"Why are you doing an operating system version check at all?"
Because that sort of thing gives the application compatibility
team the heebie-jeebies.
We asked, but the customer never did answer that question.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (44)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1279665">
				<div id="div-comment-1279665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Diack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279665">
			January 12, 2017 at 7:12 am</a>		</div>

		<p>A &#8220;unapproved&#8221; Quick and dirty version is to use RtlGetVersion (which is only ever lied to, if the customer has explicitly shimmed the application). (Waits for Raymond to slap me!). Note Windows versions earlier than 2000 don&#8217;t have RtlGetVersion, so there&#8217;ll you need to use GetVersionEx&#8230;..</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1280095">
				<div id="div-comment-1280095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://twitter.com/TheWack0lian' rel='external nofollow' class='url'>slipstream/RoL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1280095">
			January 14, 2017 at 3:47 am</a>		</div>

		<p>Incorrect. RtlGetVersion is present in NT 4 (at least), GetVersionEx is just a simple wrapper around it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-odd thread-alt depth-1 parent" id="comment-1279675">
				<div id="div-comment-1279675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279675">
			January 12, 2017 at 7:12 am</a>		</div>

		<p>&gt;&#8221;Why are you doing an operating system version check at all?&#8221;</p>
<p>Are you suggesting that Windows 10 had no new APIs since, say, Windows 7? Or that developers shouldn&#8217;t take advantage of new APIs and OS features when they can?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1279685">
				<div id="div-comment-1279685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279685">
			January 12, 2017 at 7:19 am</a>		</div>

		<p>1) What if whatever you&#8217;re looking for is later backported to Windows 7?<br />
2) What if whatever you&#8217;re looking for disappears in a later update to Windows 10?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-3" id="comment-1279705">
				<div id="div-comment-1279705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279705">
			January 12, 2017 at 7:25 am</a>		</div>

		<p>For 2, this is your own fault.<br />
The type of function that can vanish in later versions of Windows are explicitly documented as such.<br />
Functionality normally has support that lasts a really long time. As an example, the original registry functions are still exported for backwards compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt depth-3 parent" id="comment-1279715">
				<div id="div-comment-1279715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279715">
			January 12, 2017 at 7:28 am</a>		</div>

		<p>1) Presumably you&#8217;ve provided an alternate (maybe less efficient/fast/optimized) way to handle the function on older systems that lack the new feature. Your code isn&#8217;t broken, and you can always update your app if you desire (or your customer base has sufficient leverage).</p>
<p>2) That is always a risk no matter what system you are on. But if MS is actively promoting these new APIs, you should be able to make some reasonable assumptions about availability.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1279725">
				<div id="div-comment-1279725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279725">
			January 12, 2017 at 8:05 am</a>		</div>

		<p>The point is you should be checking for features no versions.</p>
<p>You want to know &#8220;Can I do this?&#8221; so ask &#8220;Can I do this?&#8221; not &#8220;Are you one of the things that I know can do this?&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1279745">
				<div id="div-comment-1279745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279745">
			January 12, 2017 at 8:30 am</a>		</div>

		<p>Yes. Brian&#8217;s and Darren&#8217;s comments both apply, but if Brian&#8217;s goal is to take advantage of specific features (and, of course, provide substitutes if they&#8217;re unavailable), then the check must be made for the feature, not for the version number.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1280035">
				<div id="div-comment-1280035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zenith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1280035">
			January 13, 2017 at 1:18 pm</a>		</div>

		<p>Telling people to check for features is as useless as telling people to make a business plan.  Because the question that immediately follows (&#8220;how?&#8221;) is answered with &#8220;lol idunno&#8221; if at all.  Beyond Kernel32&#8217;s IsProcessorFeaturePresent(), what other feature checks are there?  We can&#8217;t even check for the presence of certain applications because the Programs list is full of arbitrary information written by installers themselves.  That&#8217;s why we&#8217;re so often forced to fall back on version checks like this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-5" id="comment-1280045">
				<div id="div-comment-1280045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1280045">
			January 13, 2017 at 2:02 pm</a>		</div>

		<p>If you want to know if a function exists, then use GetProcAddress. If you want to know whether a COM interface exists, use QueryInterface.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1280186">
				<div id="div-comment-1280186" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zenith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1280186">
			January 17, 2017 at 5:59 am</a>		</div>

		<p>And if the function acts differently or supports different flags in different versions?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1280335">
				<div id="div-comment-1280335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harald van Dijk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1280335">
			January 17, 2017 at 11:01 pm</a>		</div>

		<p>To deal with functions that work differently across OS versions, simply call them and see what happens. If a flag was added to Windows 10 that didn&#8217;t exist in earlier versions: if the flag gets ignored, detect that the call gives a &#8220;wrong&#8221; result. If the function will return an error code saying the flag is invalid, that&#8217;s even easier to detect.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip even thread-even depth-1" id="comment-1279695">
				<div id="div-comment-1279695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279695">
			January 12, 2017 at 7:20 am</a>		</div>

		<p>&#8216;Note that the operating system version check does raise its own question: &#8220;Why are you doing an operating system version check at all?&#8221;&#8216;<br />
This depends on the situation, if there was a feature added to a version and never backported, like UMS or some of the features added to Direct3D/Direct2D in 8.1, then it is often easier but just as accurate to just check before hand. You can then use this to make the code neater in some cases without having conditionals everywhere.<br />
Of course, I understand that for the D3D case it is also possible just create the D3D device and then query for ID3D11Device2.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1 parent" id="comment-1279735">
				<div id="div-comment-1279735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279735">
			January 12, 2017 at 8:13 am</a>		</div>

		<p>For some time I imagined it could be possible to create a system for stubs in import libraries which, according to, say, flags on the .def file, would return different values/error conditions if the function isn&#8217;t found (some flag would mean &#8220;return E_NOTIMPL&#8221;, some &#8220;always TRUE&#8221;, &#8220;always FALSE&#8221;, etc.; plus a flag on whether to call SetLastError() with ERROR_SUCCESS, ERROR_NOT_IMPLEMENTED or not at all).</p>
<p><b>Bonus chatter:</b> I&#8217;ve put a check for Windows Vista in my code, in order to know whether my program could use task dialogs for some choices or should roll its own instead. And since it was a C# program, I actually translated the code of IsWindowsVistaOrGreater() for that.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1279955">
				<div id="div-comment-1279955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279955">
			January 13, 2017 at 8:17 am</a>		</div>

		<p>You basically want delay-loading to resolve to an application-provided fallback function if one is provided, and call the delay-load error handler only if resolution fails and no fallback is provided?</p>
<p>A good idea, but not quite so easy, because the delay-load error handling scheme has the opportunity to say &#8220;look in a DLL found in this other path for those functions instead&#8221;.  Should that handler still run if there&#8217;s a fallback?</p>
<p>I&#8217;m sure all the details could be worked out eventually.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1279755">
				<div id="div-comment-1279755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279755">
			January 12, 2017 at 9:58 am</a>		</div>

		<p>Is there a function named &#8220;IsWindows10OrGreater&#8221; in the Windows 7 codebase?  I would not expect such a thing!  How can they use the same codebase then?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1279885">
				<div id="div-comment-1279885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279885">
			January 13, 2017 at 12:52 am</a>		</div>

		<p>A guessplanation:<br />
&#8211; IsWindows10OrGreater does not &#8216;exist in Windows&#8217;, not even in Windows 10, but in the source code you get &#8220;for free&#8221; with Visual Studio and other development environments.<br />
&#8211; IsWindows10OrGreater internally calls Verify­Version­Info, a function that exists in all Windowses we care about.<br />
&#8211; When compiling, the name IsWindows10OrGreater is replaced by a direct call to Verify­Version­Info. The program distributed to the users therefore contains no reference to IsWindows10OrGreater, but rather something like &#8216;if (getVersion() &gt;= 10)&#8217; (actually, not 10, but let&#8217;s not make things as complicated as they are).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1279975">
				<div id="div-comment-1279975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279975">
			January 13, 2017 at 9:04 am</a>		</div>

		<p>Thanks&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-odd thread-alt depth-1" id="comment-1279765">
				<div id="div-comment-1279765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279765">
			January 12, 2017 at 11:02 am</a>		</div>

		<p>Verify­Version­Info was added in a NT 4 service pack but the implementation is buggy and slightly different from later versions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1279775">
				<div id="div-comment-1279775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Uranium</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279775">
			January 12, 2017 at 11:13 am</a>		</div>

		<p>&gt; &#8220;Why are you doing an operating system version check at all?&#8221;</p>
<p>Well&#8230; This is a bit of a stretch, but one reason might be to find out what the actual meaning of WTS_SESSIONSTATE_LOCK/WTS_SESSIONSTATE_UNLOCK is on the OS. On Windows 7 the meaning is reversed: <a href="https://msdn.microsoft.com/en-us/library/ee621019(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/ee621019(v=vs.85)</a>.aspx</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1279785">
				<div id="div-comment-1279785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279785">
			January 12, 2017 at 1:01 pm</a>		</div>

		<p>&gt;  &#8220;Why are you doing an operating system version check at all?&#8221;</p>
<p>Maybe you&#8217;re writing one of those &#8220;Win+Pause isn&#8217;t fancy enough for me&#8221; applications (i.e. a program that tells you various things about your computer including the OS version).  In that case, though, you probably just want a human-readable string instead of an &#8220;Are we Windows 10 yet?&#8221; boolean.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1279795">
				<div id="div-comment-1279795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279795">
			January 12, 2017 at 1:54 pm</a>		</div>

		<p>Indeed. What exactly are we supposed to do when trying to collect metrics about which OS versions our users are using?<br />
For example, how do we decide when we can drop support for Windows XP?</p>
<p>Aside from that, when a customer calls us and says &#8220;X doesn&#8217;t work right&#8221;, one of the rather useful things to know is what version of Windows they are running. Can&#8217;t ask them, they don&#8217;t understand the question.<br />
&#8211; Perhaps I made a mistake in feature checking and try to use a feature that definitely can&#8217;t exist in Win 8.0. Logging the result of my broken feature check is never going to find that bug.</p>
<p>So, what&#8217;s the replacement for GetVersion? I have not been able to find that in MSDN.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-3 parent" id="comment-1279815">
				<div id="div-comment-1279815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279815">
			January 12, 2017 at 2:24 pm</a>		</div>

		<p>Telemetry is a good reason to get the version. But that&#8217;s not the same as using the version to alter program behavior. That&#8217;s why we asked what the customer was using the function for. And if you wanted it for telemetry purposes, you wouldn&#8217;t use IsWindows10OrGreater anyway.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1279835">
				<div id="div-comment-1279835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marco Burato</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279835">
			January 12, 2017 at 3:02 pm</a>		</div>

		<p>So, what is one supposed to do in this case? Last time I checked, GetVersion lies on Windows 10 (why?).</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1279855">
				<div id="div-comment-1279855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279855">
			January 12, 2017 at 5:45 pm</a>		</div>

		<p>I report the exact version number of kernel32.dll</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1279965">
				<div id="div-comment-1279965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279965">
			January 13, 2017 at 9:00 am</a>		</div>

		<p>Because, as far as I can tell, the app isn&#8217;t manifested for Win10</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1279845">
				<div id="div-comment-1279845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Diack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279845">
			January 12, 2017 at 3:03 pm</a>		</div>

		<p>See my original post, you can use RtlGetVersion on Windows 2000 and later to get the OS version, which is always accurate and true (even on Windows 10, unless the user has actively shimmed (e.g. via Application Compatibility Toolkit)) even for all Windows 10 builds. This is what I&#8217;ve used in my own apps to dump/log version details for bug reporting details / logging details etc.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt depth-2 parent" id="comment-1279805">
				<div id="div-comment-1279805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279805">
			January 12, 2017 at 1:56 pm</a>		</div>

		<p>Win+Pause &#8211; you learn something new everyday&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1279915">
				<div id="div-comment-1279915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279915">
			January 13, 2017 at 5:20 am</a>		</div>

		<p>I always knew it as &#8220;Win+Break&#8221;, though I&#8217;m not sure why as the key is certainly known as Pause when unshifted. Maybe just because it&#8217;s funny to think of &#8220;Windows Breaking&#8221; or the like.</p>
<p>I think I must have learned it as that from some documentation somewhere in Windows&#8217;s built-in help. The first KB article I found on Windows shortcut keys (<a href="https://support.microsoft.com/en-us/help/126449/keyboard-shortcuts-for-windows" rel="nofollow">https://support.microsoft.com/en-us/help/126449/keyboard-shortcuts-for-windows</a>) calls it &#8220;Windows Logo+Break&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1279825">
				<div id="div-comment-1279825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279825">
			January 12, 2017 at 2:56 pm</a>		</div>

		<p>A problem with VersionHelpers.h is that you still can&#8217;t detect Windows 10 if you don&#8217;t have the Windows 10 GUID in your manifest.  We&#8217;ve had to use RtlGetVersion, carefully, because of this problem.  We are scared to use the Windows 10 GUID in the manifest because it could change the behavior of some function in the API and subtly break our decade-old product.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fredericmagnyf even depth-2" id="comment-1279886">
				<div id="div-comment-1279886" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279886">
			January 13, 2017 at 7:11 am</a>		</div>

		<p>Then you &#8220;half-support&#8221; Windows 10? Like, you want your program to reap some benefits of Windows 10 when present, but without actually supporting Windows 10?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1279865">
				<div id="div-comment-1279865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279865">
			January 12, 2017 at 10:08 pm</a>		</div>

		<p>We get the version of the OS to see if we support it. Our product may work on your OS, but if we don&#8217;t support your OS you cannot ask us for free help with problems. We like to tell the customer this in advance, so they know what to expect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1279875">
				<div id="div-comment-1279875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Crowther</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279875">
			January 12, 2017 at 11:48 pm</a>		</div>

		<p>The only reason we ever want to know what the OS and service pack level are is so that we can put it in a log file, because support like to know what the client actually has (because our clients never do).  Which mostly means I just want a string.  Preferably an unlocalised one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1279895">
				<div id="div-comment-1279895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279895">
			January 13, 2017 at 12:53 am</a>		</div>

		<p>Once I had to know which OS version I&#8217;m running, in order to use DXWND (third-party software that hooks into processes and modify their behavior and environment), so an old game (Total Annihilation) would have true fullscreen under Windows 8 and higher.</p>
<p>It wasn&#8217;t needed (even harmful) to use DXWND for this game on Windows 7 and lower, so that&#8217;s why I had to use OSVersion (nuget package) to know how to launch the game.</p>
<p>What gives me the heebie-jeebies is that a lot of old games have a broken fullscreen mode since Windows 8 (that is the game is in fullscreen, but you can still see the window chrome around it as long as the game runs. And of course the game doesn&#8217;t use all the screen anymore.). If that&#8217;s broken, what else is or wlll break ?</p>
<p>Windows 9X emulator are still very limited (namely DOSBox-X and PCem), so that&#8217;s why I&#8217;m using wrappers such as DDRawCompat or dgVoodoo or nGlide, and/or DXWND, and/or compatibilty options, but sometimes I wonder if all that will be for naugh once Windows 10 Update + 1 lands&#8230;</p>
<p>I wonder what change in DWM broke all those Direct3D 5/6/7 games&#8230; (non-full list : Resident Evil 2, Drakan, Dino Crisis, Metal Gear Solid, Total Annihilation, Hogs of War, &#8230;)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1279905">
				<div id="div-comment-1279905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279905">
			January 13, 2017 at 1:03 am</a>		</div>

		<p>s/OSVersion/OSInfo, my bad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1279935">
				<div id="div-comment-1279935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279935">
			January 13, 2017 at 7:25 am</a>		</div>

		<p>Huh, I didn&#8217;t know that.  That&#8217;s actually kind of funny, because I had the exact opposite experience with another legacy game: Diablo 2.   It required all kinds of annoying tweaking to get D2 to work in Windows 7.   It worked out of the box for me in Windows 8.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1279876">
				<div id="div-comment-1279876" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Haim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279876">
			January 13, 2017 at 5:25 am</a>		</div>

		<p>Why are you doing an operating system version check at all?&#8221;</p>
<p>well that&#8217;s a question I did not expected from Raymond..<br />
If we won&#8217;t check the OS version because it&#8217;s the &#8220;idomatic&#8221; thing to do, we&#8217;ll be limiting ourselves to the lowest common API available, which these days is XP. so no SRW locks, Condition Variables, non-crappy threadpool and pretty much everything which was introduced in windows vista. </p>
<p>you want to use the latest features your OS provides. sometimes it requires to check the OS version and make the program take strategy based on that.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-jeremytais odd alt depth-2" id="comment-1279896">
				<div id="div-comment-1279896" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279896">
			January 13, 2017 at 7:27 am</a>		</div>

		<p>I would argue in 2017, the lowest common API would be Windows 7 not Windows XP.  I know marketing screamed when R&amp;D pulled the plug on XP support two years ago on our main product and it turns out exactly nobody cared.</p>
<p>However, Raymond isn&#8217;t saying don&#8217;t use the API functions introduced in Windows 8/10 if they are available, the point is that you DON&#8217;T use an OS version check to determine if the API is available.  If you are using the Windows 7 lowest common denominator but want to optionally use higher version API&#8217;s if available, you are going to be doing stuff like LoadLibrary/GetProcAddress anyway, for which you will have to write error handling code.  Just use the error handling code there and don&#8217;t worry about the actual OS version.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1279945">
				<div id="div-comment-1279945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279945">
			January 13, 2017 at 7:37 am</a>		</div>

		<p>That&#8217;s not how you&#8217;re supposed to do this. If you want to know if you can use some feature, ask for that feature.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1279925">
				<div id="div-comment-1279925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1279925">
			January 13, 2017 at 7:17 am</a>		</div>

		<p>Sometimes I just want to report the operating system version my customer is using, for diagnostics or analytics.  Which is a lot harder to do now, thanks to the app compat team having heebie-jeebies and adding manifest-base behavior.  Requiring my older software versions to be clairvoyant with its manifest declarations, or to use more annoying methods of retrieving the real OS version&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1280136">
				<div id="div-comment-1280136" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Styles</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1280136">
			January 16, 2017 at 6:09 am</a>		</div>

		<p>Yes indeed. Surely this is the obvious and a perfectly reasonable use case?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1280785">
				<div id="div-comment-1280785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Ransom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1280785">
			January 20, 2017 at 2:23 pm</a>		</div>

		<p>Too bad this forum doesn&#8217;t have a +1 button. Consider this declaration of support my +1.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1280776">
				<div id="div-comment-1280776" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Ransom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1280776">
			January 20, 2017 at 2:21 pm</a>		</div>

		<p>Does anybody remember why there&#8217;s no Windows 9? It&#8217;s because too many programs did a version check and failed when the version started with &#8216;9&#8217;, assuming it was Windows 95 or Windows 98.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1281096">
				<div id="div-comment-1281096" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170112-00/?p=95175#comment-1281096">
			January 24, 2017 at 12:38 am</a>		</div>

		<p>That&#8217;s only a rumor.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

