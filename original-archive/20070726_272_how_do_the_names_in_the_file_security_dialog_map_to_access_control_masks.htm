<html>
<head>
<title>How do the names in the file security dialog map to access control masks?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do the names in the file security dialog map to access control masks?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 26, 2007 / year-entry #273</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When you call up the file security dialog, you'll see options like "Full Control" and "Read and Execute". That's really nice as friendly names go, but when you're digging into the security descriptor, you may need to know what those permissions really map to when it comes down to bits. First, the summary attributes: Friendly...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>When you call up the file security dialog, you'll see options like "Full Control" and "Read and Execute". That's really nice as friendly names go, but when you're digging into the security descriptor, you may need to know what those permissions really map to when it comes down to bits.</p>
<p> First, the summary attributes: </p>
<table border="1">
<tr>
<th>Friendly name</th>
<th>Access mask</th>
<th>Inheritance</th>
</tr>
<tr>
<td valign="BASELINE">Full control</td>
<td valign="BASELINE"><code>FILE_ALL_ACCESS</code></td>
<td valign="BASELINE"><code>CONTAINER_INHERIT_ACE&nbsp;+ OBJECT_INHERIT_ACE</code></td>
</tr>
<tr>
<td valign="BASELINE">Modify</td>
<td valign="BASELINE"><code>FILE_GENERIC_READ&nbsp;| FILE_GENERIC_WRITE&nbsp;|     FILE_GENERIC_EXECUTE&nbsp;| DELETE</code></td>
<td valign="BASELINE"><code>CONTAINER_INHERIT_ACE&nbsp;+ OBJECT_INHERIT_ACE</code></td>
</tr>
<tr>
<td valign="BASELINE">Read and execute</td>
<td valign="BASELINE"><code>FILE_GENERIC_READ&nbsp;| FILE_GENERIC_EXECUTE</code></td>
<td valign="BASELINE"><code>CONTAINER_INHERIT_ACE&nbsp;+ OBJECT_INHERIT_ACE</code></td>
</tr>
<tr>
<td valign="BASELINE">List folder contents</td>
<td valign="BASELINE"><code>FILE_GENERIC_READ&nbsp;| FILE_GENERIC_EXECUTE</code></td>
<td valign="BASELINE"><code>CONTAINER_INHERIT_ACE</code></td>
</tr>
<tr>
<td valign="BASELINE">Read</td>
<td valign="BASELINE"><code>FILE_GENERIC_READ</code></td>
<td valign="BASELINE"><code>CONTAINER_INHERIT_ACE&nbsp;+ OBJECT_INHERIT_ACE</code></td>
</tr>
<tr>
<td valign="BASELINE">Write</td>
<td valign="BASELINE"><code>FILE_GENERIC_WRITE &amp; ~READ_CONTROL</code></td>
<td valign="BASELINE"><code>CONTAINER_INHERIT_ACE&nbsp;+ OBJECT_INHERIT_ACE</code></td>
</tr>
</table>
<p> If you go to the Advanced view, then you get much more precise control: </p>
<table border="1">
<tr>
<th>Friendly name</th>
<th>Access mask</th>
</tr>
<tr>
<td valign="BASELINE">Traverse Folder&nbsp;/ Execute File</td>
<td valign="BASELINE"><code>FILE_TRAVERSE == FILE_EXECUTE</code></td>
</tr>
<tr>
<td valign="BASELINE">List Folder&nbsp;/ Read Data</td>
<td valign="BASELINE"><code>FILE_LIST_DIRECTORY == FILE_READ_DATA</code></td>
</tr>
<tr>
<td valign="BASELINE">Read Attributes</td>
<td valign="BASELINE"><code>FILE_READ_ATTRIBUTES</code></td>
</tr>
<tr>
<td valign="BASELINE">Read Extended Attriibutes</td>
<td valign="BASELINE"><code>FILE_READ_EA</code></td>
</tr>
<tr>
<td valign="BASELINE">Create Files&nbsp;/ Write Data</td>
<td valign="BASELINE"><code>FILE_ADD_FILE == FILE_WRITE_DATA</code></td>
</tr>
<tr>
<td valign="BASELINE">Create Folders&nbsp;/ Append Data</td>
<td valign="BASELINE"><code>FILE_ADD_SUBDIRECTORY == FILE_APPEND_DATA</code></td>
</tr>
<tr>
<td valign="BASELINE">Write Attributes</td>
<td valign="BASELINE"><code>FILE_WRITE_ATTRIBUTES</code></td>
</tr>
<tr>
<td valign="BASELINE">Write Extended Attributes</td>
<td valign="BASELINE"><code>FILE_WRITE_EA</code></td>
</tr>
<tr>
<td valign="BASELINE">Delete Subfolders and Files</td>
<td valign="BASELINE"><code>FILE_DELETE_CHILD</code></td>
</tr>
<tr>
<td valign="BASELINE">Delete</td>
<td valign="BASELINE"><code>FILE_DELETE</code></td>
</tr>
<tr>
<td valign="BASELINE">Read Permissions</td>
<td valign="BASELINE"><code>READ_CONTROL</code></td>
</tr>
<tr>
<td valign="BASELINE">Change Permissions</td>
<td valign="BASELINE"><code>WRITE_DAC</code></td>
</tr>
<tr>
<td valign="BASELINE">Take Ownership</td>
<td valign="BASELINE"><code>WRITE_OWNER</code></td>
</tr>
</table>
<p> (In the Advanced view, you control inheritance from the "Apply to" drop-down combo box.) </p>
<p> Note that the "Delete Subfolders and Files" and "Delete" attributes together determine whether you can delete a file or subdirectory: You can delete an item either if you have <code>DELETE</code> permission on the item <strong>or</strong> if you have <code>DELETE_CHILD</code> permission on its parent. This "combo" allows you to set up a directory where everybody can create files and can delete files that they have created, while still retaining the ability as the directory's owner to delete any file in it. You do this by granting yourself <code>DELETE_CHILD</code> permission on the directory and granting <code>DELETE</code> to <code>CREATOR_OWNER</code> as an inheritable attribute. Since you have <code>DELETE_CHILD</code> permission, you can delete anything in the directory. And since the creator/owner has <code>DELETE</code> permission, people can delete the files that they themselves created. </p>
<p> [Update 2pm: INHERIT_ONLY_ACE should be OBJECT_INHERIT_ACE.] </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-530753">
				<div id="div-comment-530753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-530753">
			July 26, 2007 at 10:52 am</a>		</div>

		<p>Brilliant! I was actually looking for exactly this information a while back and ended up giving up and just cobbling together something that covered the simple cases. Thanks Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-530813">
				<div id="div-comment-530813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesNT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-530813">
			July 26, 2007 at 1:12 pm</a>		</div>

		<p>This will prove very useful to me as well. &nbsp;Thank you, Mr. Chen.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-530863">
				<div id="div-comment-530863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-530863">
			July 26, 2007 at 3:07 pm</a>		</div>

		<p>The WinXP &quot;Help and Support Center&quot; has a topic on Permissions that has links with similar descriptions (but still not nearly as detailed as what Raymond provided here) of the meanings of the terms used in the security dialog for all types of objects, including:</p>
<p>&nbsp;&#8211; file &amp; folders (what Raymond described above)</p>
<p>&nbsp;&#8211; Shares</p>
<p>&nbsp;&#8211; Registry keys</p>
<p>&nbsp;&#8211; Services</p>
<p>&nbsp;&#8211; Printers</p>
<p>&nbsp;&#8211; Term Serv connections</p>
<p>&nbsp;&#8211; Group policy objects</p>
<p>&nbsp;&#8211; WMI objects</p>
<p>Even though the descriptions in WinXP help don&#8217;t go to the level of detail saying which Win32 identifiers map to the permissions in the UI, they do get detailed enough that you can usually figure out the mappings.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-530953">
				<div id="div-comment-530953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Lebedinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-530953">
			July 26, 2007 at 7:04 pm</a>		</div>

		<blockquote><p>
  Purpose: Having a common &#8216;temp&#8217; directory that anybody can write to and in which one can only read/modify/delete his/her files.
</p></blockquote>
<p>%windir%temp already works like this. It gives create file rights to BUILTINUsers and full control to creator/owner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-530973">
				<div id="div-comment-530973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-530973">
			July 26, 2007 at 9:31 pm</a>		</div>

		<p>Although it&#8217;s probably not shell related, I&#8217;d be more interested to know how GENERIC_READ and GENERIC_WRITE permissions map to ACLs. &nbsp;From what little research I&#8217;ve done, it appears that various subsystems (object manager, file system, etc) have tables that map the GENERIC_XXX to specific permissions, but I haven&#8217;t been able to find all the mappings.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-530983">
				<div id="div-comment-530983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Prem</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-530983">
			July 27, 2007 at 12:40 am</a>		</div>

		<p>I believe this &quot;owner can delete&quot; concept doesn&#8217;t entierly apply. If a user creates a subdirectory and denies permission to the directory, the owner can&#8217;t delete the directory and the files beneath it. Is there any workaround for this?</p>
<p>Say if I want to implement a directory where any user can create/delete files but I have full access to the files/folders underneath. Assuming I don&#8217;t have admin rights..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-530943">
				<div id="div-comment-530943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-530943">
			July 26, 2007 at 6:38 pm</a>		</div>

		<p>*Thanks* a lot Raymond!</p>
<p>With that info, I managed, at last, to do what I always wanted: create a common temp directory for all users! Previously, I relied on the fact that there was always a program with a open temp file to deny me the temp directory deletion (I have a script to delete its content that does a &quot;rd /s&quot;)</p>
<p>Now I truly don&#8217;t have the right to delete it.</p>
<p>For anybody who&#8217;s interested, and for my future use I&#8217;m sure, here is the purpose and how to do it:</p>
<p>Purpose:</p>
<p>Having a common &#8216;temp&#8217; directory that anybody can write to and in which one can only read/modify/delete his/her files.</p>
<p>I set it up so that administrator is also impacted, so you will have to have another special account+ACL if you want to easily clean it.</p>
<p>In my example, the temp directory in question will be C:temp</p>
<p>How to do it:</p>
<p>&#8211; On the parent of the &#8216;temp&#8217; directory (C:), remove the &quot;Delete subfolders &amp; file&quot; permission from the users you want this method to apply. In my case, since &quot;Users&quot; only have Read/Execute permission on C:, this means that I only remove this permissions from the Administrators group(*).</p>
<p>&#8211; Still on the parent (C:), add a new ACL for &quot;CREATOR&quot; that will apply only to contained files and subfolders. For this ACL, only set the &quot;Delete&quot; permission.</p>
<p>&#8211; Create the temp directory.</p>
<p>&#8211; Remove the ACL inheritance </p>
<p>&#8211; Make effective the following permissions:</p>
<p> &nbsp;&#8211; Admin group/This folder only: full control minus delete and delete children</p>
<p> &nbsp;&#8211; Users group/This folder only: read/execute plus file and folders creation</p>
<p> &nbsp;&#8211; CREATOR/This folder and everything inside: full control</p>
<p>I hope I didn&#8217;t forget anything. Anybody, please feel free to correct me if this method is wrong in any way and thanks again Raymond!</p>
<p>(*) I had previously removed my administrator login name from the list on C: since its right do not, in my opinion, need to be explicitely specified as they are not different from those of the group Administrators&#8230; I thought it was a duplicate entry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-531013">
				<div id="div-comment-531013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-531013">
			July 27, 2007 at 8:30 am</a>		</div>

		<p>&quot;Say if I want to implement a directory where any user can create/delete files but I have full access to the files/folders underneath. Assuming I don&#8217;t have admin rights..&quot;</p>
<p>If you don&#8217;t grant the WRITE_DAC permission on child objects that should do it, shouldn&#8217;t it? Since they won&#8217;t be able to alter the permission, you&#8217;ll always have access.</p>
<p>Alternatively you could give the account that needs to delete them the Take Ownership permission, though that&#8217;s a little heavy handed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-531523">
				<div id="div-comment-531523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-531523">
			July 28, 2007 at 8:27 am</a>		</div>

		<blockquote><p>
  &gt;Nawak:</p>
<p>  &gt; Purpose: Having a common &#8216;temp&#8217; directory that anybody can write to and in which one can only read/modify/delete his/her files.</p>
<p>  Pavel:</p>
<p>  %windir%temp already works like this. It gives create file rights to BUILTINUsers and full control to creator/owner.
</p></blockquote>
<p>Well, mine doesn&#8217;t work like this. I don&#8217;t remember messing with its permissions but maybe I did. Mine is setup so that Users have Read/Execution access to c:windowstemp. So they cannot create files in it but they can read Admin&#8217;s temp files! Looking at how stupid that situation is, I clearly must have done something wrong in the past&#8230;</p>
<p>If I look at one of my newer PC, the situation is different, much closer to what I wanted, except that while Users can create files and have directory traversal permission, they can&#8217;t list its files, which disables my &quot;rd /s&quot; temp cleaning solution. The other problem is that Admins can read &amp; delete Users&#8217; files, but I can understand that my personal preference is not the default :)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

