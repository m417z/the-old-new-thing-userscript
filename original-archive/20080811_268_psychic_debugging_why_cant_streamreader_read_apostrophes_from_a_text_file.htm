<html>
<head>
<title>Psychic debugging: Why can't StreamReader read apostrophes from a text file?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Psychic debugging: Why can&#8217;t StreamReader read apostrophes from a text file?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 11, 2008 / year-entry #269</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>24</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">As is customary, the first day of CLR Week is a warm-up. Actually, today's question is a BCL question, not a CLR question, but only the nitpickers will bother to notice. Can somebody explain why StreamReader can&rsquo;t read apostrophes? I have a text file, and I read from it the way you would expect: StreamReader...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
As is customary, the first day of CLR Week is a warm-up.
Actually, today's question is a BCL question, not a CLR question,
but only the nitpickers will bother to notice.
</p>
<blockquote CLASS=q>
<p>
Can somebody explain why StreamReader can&rsquo;t read apostrophes?
I have a text file, and I read from it the way you would expect:
</p>
<pre>
StreamReader sr = new StreamReader("myfile.txt");
Console.WriteLine(sr.ReadToEnd());
sr.Close();
</pre>
<p>
I expect this to print the contents of the file
to the console, and it does&mdash;almost.
Everything looks great except that all the apostrophes are gone!
</p>
</blockquote>
<p>
You don't have to have very strong psychic powers to figure this one out.
</p>
<p>
Here's a hint: In some versions of this question,
the problem is with accented letters.
</p>
<p>
Your first psychic conclusion is that the text file is probably an ANSI
text file.
But
<a HREF="http://msdn2.microsoft.com/en-us/library/system.io.streamreader.aspx">
StreamReader defaults to UTF-8</a>, not ANSI.
One version of this question actually came right out and asked,
"Why can't StreamReader read apostrophes from my ANSI text file?"
The alternate version of the
question already contains a false hidden assumption:
StreamReader can't read apostrophes from an ANSI text file
because StreamReader (by default) doesn't read ANSI text files at all!
</p>
<p>
<p>
But that shouldn't be a factor, since the apostrophe is encoded
the same in ANSI and UTF-8, right?
</p>
<p>
That's your second clue.
Only the apostrophe is affected.
What's so special about the apostrophe?
(The bonus hint should tip you off:
What's so special about accented letters?
What property do they share with the apostrophe?)
</p>
<p>
There are apostrophes and there are apostrophes,
and it's those "weird" apostrophes that are the issue here.
Code points
U+2018&nbsp;(&lsquo;) and
U+2019&nbsp;(&rsquo;)
occupy positions 0x91 and 0x92, respectively,
in code page 1252,
and these "weird" apostrophes are all illegal lead bytes in
UTF-8 encoding.
And the default behavior for the
<a HREF="http://msdn2.microsoft.com/en-us/library/system.text.utf8encoding.aspx">
Encoding.UTF8Encoding</a>
encoding is to ignore invalid byte sequences.
Note that StreamReader does not raise an exception when incorrectly-encoded
text is encountered.
It just ignores the bad byte and continues as best it can,
following
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2007/07/03/3665338.aspx#3672697">
Burak's advice</a>.
</p>
<p>
Result:
StreamReader appears to ignore apostrophes and accented letters.
</p>
<p>
There are therefore multiple issues here.
First,
you may want to look at why
your ANSI text file is using those weird apostrophes.
Maybe it's intentional, but I suspect it isn't.
Second, if you're going to be reading ANSI text,
you can't use a default StreamReader, since a default StreamReader
doesn't read ANSI text.
You need to set the encoding to <code>System.Text.Encoding.Default</code>
if you want to read ANSI text.
And third, why are you using ANSI text in the first place?
ANSI text files are not universally transportable, since the ANSI code
page changes from system to system.
Shouldn't you be using UTF-8 text files in the first place?
</p>
<p>
At any rate, the solution is to decide on an encoding and to specify
that encoding when creating the StreamReader.
</p>
<p>
This exercise is just another variation on
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/03/08/389527.aspx">
Keep your eye on the code page</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-655613">
				<div id="div-comment-655613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655613">
			August 11, 2008 at 10:07 am</a>		</div>

		<p>So, to summarize, the default encoding for a StreamReader is not Encoding.Default.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamescurran odd alt thread-odd thread-alt depth-1" id="comment-655633">
				<div id="div-comment-655633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Garry Trinder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655633">
			August 11, 2008 at 11:13 am</a>		</div>

		<blockquote><p>
  &gt; First, you may want to look at why your ANSI text file is using those weird apostrophes.
</p></blockquote>
<p>Ok, using My psychic debugging abilities, I&#8217;d say it was probably originally written using MSWord.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655643">
				<div id="div-comment-655643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gav</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655643">
			August 11, 2008 at 12:10 pm</a>		</div>

		<p>Thanks for fixing a bug that was confusing me! Or at least pointing me in the right direction&#8230; I was receiving ASCII character streams over a network (its an old protocol) and outputting to a rich text box.</p>
<p>Unfortunately the streams contained user input which included accented characters and I was using ASCIIEncoding.Default.GetString() on them, which gave me a nice long string of nonsense. Changing that to Encoding.UTF8.GetString() has fixed it completely :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-nathan_works odd alt thread-odd thread-alt depth-1" id="comment-655663">
				<div id="div-comment-655663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/nathan_works' rel='external nofollow' class='url'>nathan_works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655663">
			August 11, 2008 at 12:17 pm</a>		</div>

		<p>Yay for character map to help me out, since I was wondering what a normal apostrophe is.. Turns out, it&#8217;s 0x0027 (I think). Looking up the ones Raymond gave lists them as &quot;(left|right) single quotation marks,&quot; not exactly apostrophes.</p>
<p>(And I think James might be onto the real culprit here, too..)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655673">
				<div id="div-comment-655673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655673">
			August 11, 2008 at 12:55 pm</a>		</div>

		<p>it&#8217;s only 0x0027 in UTF-16, IIRC. &nbsp;UTF-8 and ANSI is 0x27.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-655693">
				<div id="div-comment-655693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655693">
			August 11, 2008 at 2:41 pm</a>		</div>

		<p>Look out&#8230; the pedants are back.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655703">
				<div id="div-comment-655703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655703">
			August 11, 2008 at 2:51 pm</a>		</div>

		<p>Definitely Word, or Outlook with Word as editor. It is quite difficult to completely disable this behavior as well &#8211; even if you disable &quot;smart quotes&quot;, autocorrect auto-text replacements have them too (for example dont-&gt;don’t), so you have to go through all of them and change as well. And there are a lot.</p>
<p>I also noticed that Raymond&#8217;s writing is devoid of these wierd quotes (it&#8217;s, &quot;weird&quot;), while the quote from the customr has them (can’t, does—almost).</p>
<p>And on the same note, more than once I&#8217;ve caught these chars in interpreted text, such as &quot;smart-quotes&quot; for parameters with space, and em-dashes for command-line options. Presumably these commandline samples were copied into Word and mutilated there. Note that the difference is invisible in the default console font.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-655713">
				<div id="div-comment-655713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jondr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655713">
			August 11, 2008 at 2:56 pm</a>		</div>

		<p>There are beaucoup academics and wanna-bes who intentionally use ` and &#8220; to begin single and double quotes, and end with &#8216; and &#8221;. &nbsp;This is so weird. It is not only StreamReader that gets baffled at this.</p>
<p>(Maybe it is the AR in them that really must want the slants on the opening quotes. Or they want to pretend to &quot;have been there&quot; before the shift key was invented.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655733">
				<div id="div-comment-655733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Poochner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655733">
			August 11, 2008 at 3:58 pm</a>		</div>

		<p>jondr: I think that is related to TeX / LaTeX markup. &nbsp;Some journals require submissions to be in some dialect of this (the American Mathematical Society publications, do IIRC). &nbsp;Yeah, it seems odd, but it&#8217;s an easy way to express typesetting information using only a standard US keyboard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-655623">
				<div id="div-comment-655623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655623">
			August 11, 2008 at 10:24 am</a>		</div>

		<p>mikeb &gt; The default encoding for a StreamReader is not the *system* default. It is the *internet* default. (UTF-8 has been adopted as IETF STD 63[0])</p>
<p>To summarise, the default system encoding is not the default internet encoding.</p>
<p>Unfortunately, it is impossible to make the default system encoding the default internet encoding, as MS doesn&#8217;t support UTF-8 as an &quot;ANSI&quot;/&quot;OEM&quot; multibyte codepage, and has no plans to try to. :(</p>
<p>(At least, according to public statements made by some of its prominent bloggers, it has no plans to try to.)</p>
<p>[0] <a rel="nofollow" target="_new" href="http://www.ietf.org/rfc/rfc3629.txt" rel="nofollow">http://www.ietf.org/rfc/rfc3629.txt</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655773">
				<div id="div-comment-655773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655773">
			August 11, 2008 at 7:25 pm</a>		</div>

		<blockquote><p>
  it&#8217;s only 0x0027 in UTF-16, IIRC. &nbsp;UTF-8 and ANSI is 0x27.
</p></blockquote>
<p>Am I laughing inappropriately at this comment?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-655783">
				<div id="div-comment-655783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655783">
			August 11, 2008 at 7:57 pm</a>		</div>

		<p>I don&#8217;t mind straight apostrophes. &nbsp;What bugs me is curly apostrophes that go the wrong way &#8211; get a deal on our ‘08 Cadillacs! (’Tisn’t ‘08; ’tis ’08.)</p>
<p>Adding link as a public service:</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Apostrophe#Entering_typographic_apostrophes" rel="nofollow">http://en.wikipedia.org/wiki/Apostrophe#Entering_typographic_apostrophes</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655803">
				<div id="div-comment-655803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655803">
			August 11, 2008 at 8:48 pm</a>		</div>

		<p>This is why the naming of the Encoding.Default property bugs me. &nbsp;It would have been better had it been called CurrentAnsi or something (since it&#8217;s not necessarily even the &quot;system ANSI&quot; codepage, as programs like AppLocale can modify it).</p>
<p>Still, guess it&#8217;s too late to change it now. &nbsp;(Where&#8217;s that time machine?) :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 odd alt thread-odd thread-alt depth-1" id="comment-655813">
				<div id="div-comment-655813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655813">
			August 11, 2008 at 9:34 pm</a>		</div>

		<p>@Maurits: typing 8217 (yes, I know it&#8217;s 0x2019 in hexadecimal) on the numeric pad while holding down the Alt key (as per wikipedia) only works in RichEdit controls on my system. In Edit controls I get a down-arrow (↓). CharMap (sorry, Raymond!) tells me to type Alt+0146 for the Right Single Quotation Mark (’). I&#8217;d consider editing the page, but I&#8217;ll leave it to the experts.</p>
<p>And just to show that I can pick nits with the best of them:</p>
<p>The numeric value of the Apostrophy character in ANSI is actually 39, the same as in both UTF-8 and UTF-16. The &quot;0x&quot; notation for hexadecimal numbers is platform independent, and thus 0x27 is equal to 0x0027 and even to 0x00000027, regardless of endianness. (Similarly, in base 10, 0039 &nbsp;is equal to 39, but we don&#8217;t usually bother with the leading zeros in real life.)</p>
<p>So you&#8217;re both correct. But, as Napoleon (the porcine one) might say: &quot;All statements are correct, but some are more correct than others.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655823">
				<div id="div-comment-655823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655823">
			August 12, 2008 at 1:35 am</a>		</div>

		<p>@jondr: Ah, but backtick (`) is 0x60 &#8211; legal UTF-8. And it better be, because it&#8217;s necessary especially on UNIX-like systems (probably why UTF-8 is default &#8211; i18n for free in filenames with zero code changes (only two illegal characters &#8211; NUL, and slash (/)).</p>
<p>But for documentation, that&#8217;s a TeX thing (pity everyone&#8217;s moving away from the nice look that is TeX&#8230; but writing in Word is &quot;easier&quot; but typesetting is a pain.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-655793">
				<div id="div-comment-655793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655793">
			August 11, 2008 at 8:24 pm</a>		</div>

		<p>&gt;it&#8217;s only 0x0027 in UTF-16, IIRC. &nbsp;UTF-8 and ANSI is 0x27.</p>
<p>*buzzer*</p>
<p>Sorry, the correct answer is that it&#8217;s only 00 27 in UTF-16 BE. &nbsp;In UTF-16 LE it&#8217;s 27 00.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655833">
				<div id="div-comment-655833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo@nevali.net' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655833">
			August 12, 2008 at 3:26 am</a>		</div>

		<p>Those “weird apostrophes”&#160;(or rather: single quotation marks) will crop up as a result of pretty much anybody who cares about typography, has copied &amp; pasted text from a web page or Word document or e-mail where ‘smart quotes’ have been used, or from anything written by anybody on a Mac who has Alt(+Shift)+] muscle-memoried (on Mac OS X, Alt(+Shift)+[ is double-quotation-marks and Alt(+Shift)+] is single-quotation-marks).</p>
<p>I must confess I&#8217;ve never really understood why, when NT was heralded as being entirely Unicode-savvy (which of course has been carried through to Vista, and beyond), a UTF-8 multibyte codepage was never introduced.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-655843">
				<div id="div-comment-655843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Lard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655843">
			August 12, 2008 at 8:03 am</a>		</div>

		<blockquote><p>
  Look out&#8230; the pedants are back.
</p></blockquote>
<p>When did we^Wthey leave?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655863">
				<div id="div-comment-655863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-655863">
			August 12, 2008 at 9:00 am</a>		</div>

		<p>People who &quot;care about typography&quot; shouldn&#8217;t be pasting their type into plain-text files and expecting them to come out properly. &nbsp;Do they think that the boldface text and bulleted lists are also going to be fine?</p>
<p>And I got a good laugh out of the complaint that &quot;a UTF-8 multibyte codepage was never introduced.&quot; &nbsp;I don&#8217;t even know where to begin.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-656003">
				<div id="div-comment-656003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-656003">
			August 12, 2008 at 11:09 am</a>		</div>

		<p>Is there such a thing as &quot;ANSI&quot; text? &nbsp;I presume you mean &quot;ASCII&quot;.</p>
<p>Does that qualify as a nitpick?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000300008195987d even thread-even depth-1" id="comment-656063">
				<div id="div-comment-656063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Spire' rel='external nofollow' class='url'>Spire</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-656063">
			August 12, 2008 at 12:48 pm</a>		</div>

		<p>ASCII is a 7-bit encoding. The term &quot;ANSI&quot;, as commonly used in Windows, refers to an 8-bit superset of ASCII in which the other 128 characters vary depending on the code page in use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-656143">
				<div id="div-comment-656143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-656143">
			August 12, 2008 at 1:52 pm</a>		</div>

		<blockquote><p>
  &gt; Is there such a thing as &quot;ANSI&quot; text? &nbsp;I presume you mean &quot;ASCII&quot;. &lt;&lt;
</p></blockquote>
<p>ANSI means: &quot;That thing that isn&#8217;t Unicode&quot; (<a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/10/27/485595.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/10/27/485595.aspx</a>).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-656863">
				<div id="div-comment-656863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-656863">
			August 13, 2008 at 3:37 pm</a>		</div>

		<p>This blog, found by chance, saved my life&#8230; well&#8230;maybe not my life&#8230; but days of debugging possibly.</p>
<p>Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-658093">
				<div id="div-comment-658093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.asvguy.com' rel='external nofollow' class='url'>Burak KALAYCI</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080811-01/?p=21283#comment-658093">
			August 18, 2008 at 1:09 am</a>		</div>

		<p>My advice stands.</p>
<p>Exceptions should be for exceptional cases, not expected errors. Of course, a function should and should be able to return error/warning conditions and it should be checked by the programmer.</p>
<p>In this respect, I see that UTF8Encoding can be configured to throw on errors, and so, no it does not follow my advice, strictly speaking. Actually, in that case, I don&#8217;t agree with the default behavior.</p>
<p>ASCIIEncoding does not provide error detection. Does not make sense to me. You may say don&#8217;t use it, but if it&#8217;s there, it shouldn&#8217;t be half baked IMHO.</p>
<p>Reading an ANSI file with UTF8 encoding can throw errors, but reading the same file with ASCII encoding can&#8217;t! (As far as I understand it, reading on MSDN, I don&#8217;t use .Net).</p>
<p>Anyway, I&#8217;d have ASCIIEncoding return errors, including suggestive warnings if a BOM is found. That would conform to my advice. Exceptions would be reserved for file i/o errors etc.</p>
<p>On the other hand, this is .Net. A scripting language, managed, most .Net users won&#8217;t even know about memory management, considerable some won&#8217;t know about code pages and god knows how many does RTFM&#8230; Design philosophy for .Net shouldn&#8217;t expect them to check for errors, or, turn on error detection manually.</p>
<p>In summary, my UTF8Encoding would return errors/warnings -not as exceptions, and I&#8217;d check the success of any operation. There would be exceptions for exceptional, unexpected cases. For a .Net class library class, it would return all errors as exceptions and error detection will be present for all encodings and turned on by default.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

