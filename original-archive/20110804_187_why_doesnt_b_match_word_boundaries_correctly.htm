<html>
<head>
<title>Why doesn't b match word boundaries correctly?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why doesn&#8217;t b match word boundaries correctly?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 4, 2011 / year-entry #188</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>21</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A colleague of mine was having trouble getting the \b metacharacter in a regular expression to work. Of course, when somebody asks a question like that, you first have to establish what their definition of "work" is. Fortunately, he provided some examples: Regex.IsMatch("foo", @"\b" + @"foo" + @"\b") true Regex.IsMatch("%1&#8243; , @"\b" + @"%1&#8243;  +...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A colleague of mine was having trouble getting the <code>\b</code> metacharacter in a regular expression to work. Of course, when somebody asks a question like that, you first have to establish what their definition of "work" is. Fortunately, he provided some examples:</p>
<table border="1" bordercolor="black" style="border-collapse: collapse" cellpadding="3">
<tr>
<td><code>Regex.IsMatch("foo", @"\b" + @"foo" + @"\b")</code></td>
<td>true</td>
</tr>
<tr>
<td><code>Regex.IsMatch("%1" , @"\b" + @"%1"&nbsp; + @"\b")</code></td>
<td>false</td>
</tr>
<tr>
<td><code>Regex.IsMatch("%1" , @"\b" + @"\%1" + @"\b")</code></td>
<td>false</td>
</tr>
<tr>
<td><code>Regex.IsMatch("%1" , @"\b" + @"\%1" + @"\b")</code></td>
<td>false</td>
</tr>
<tr>
<td><code>Regex.IsMatch("%1" , @"..")</code></td>
<td>true</td>
</tr>
<tr>
<td><code>Regex.IsMatch("%1" , @"%1")</code></td>
<td>true</td>
</tr>
</table>
<p> "The last two entries are just sanity checks to make sure I didn't make some stupid mistake like passing the parameters in the wrong order. I want to search for a string that contains <tt>%1</tt> with word boundaries on either side, something I would normally use <tt>\b</tt> for. Is there something special about the % character? Notice that the match succeeds when I look for the word <tt>foo</tt>." </p>
<p> Everything is working as it should. Recall that the <tt>\b</tt> metacharacter matches when there is a <tt>\w</tt> on one side and a <tt>\W</tt> on the other, where the beginning and end of the string are treated as if they were <tt>\W</tt>. </p>
<p> The string <tt>%1</tt> therefore breaks down as </p>
<table border="1" bordercolor="gray" style="border-collapse: collapse" cellpadding="3">
<tr>
<td align="right">virtual <tt>\W</tt></td>
<td>&nbsp;beginning of string</td>
</tr>
<tr>
<td align="right"><tt>\W</tt></td>
<td>&nbsp;% is not an alphanumeric or _</td>
</tr>
<tr>
<td align="right"><tt>\w</tt></td>
<td>&nbsp;1 is a digit</td>
</tr>
<tr>
<td align="right">virtual <tt>\W</tt></td>
<td>&nbsp;end of string</td>
</tr>
</table>
<p> The only points where <tt>\b</tt> would match are immediately before and after the 1, since those are the transition points between <tt>\w</tt> and <tt>\W</tt> and vice versa. In particular, the location immediately before the percent sign does not match since it is <a href="http://blogs.msdn.com/oldnewthing/archive/2009/09/23/9898231.aspx"> surrounded</a> by <tt>\W</tt> on both sides. </p>
<p> My colleague responded, "D'oh! I keep forgetting that % won't act like a <tt>\w</tt> just because I want it to." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-928803">
				<div id="div-comment-928803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928803">
			August 4, 2011 at 7:10 am</a>		</div>

		<p>When grepping, I prefer to use the &lt; and &gt; symbols instead of b, which match word boundaries at the start and end of a word respectively, but it seems like C# doesn&#39;t provide those.</p>
<p>Also of note: b is interpreted as the backspace character (U+0008) when inside a character class, but as a word boundary when outside of a character class.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928813">
				<div id="div-comment-928813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Toddsa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928813">
			August 4, 2011 at 7:48 am</a>		</div>

		<p>I have a love  hate relationship with regex. I love it, but damn do I not have a gotcha moment almost every time I need a complex match. But then again I do not tend to use regex with great frequency.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928823">
				<div id="div-comment-928823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928823">
			August 4, 2011 at 7:52 am</a>		</div>

		<p>Am I right that the correct regex he wanted was @&quot;B%1b&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928833">
				<div id="div-comment-928833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928833">
			August 4, 2011 at 7:53 am</a>		</div>

		<p>Regex is something I have never been able to wrap my head around. &nbsp;It was designed, and it&#39;s understood, by people whose brains work differently than mine. &nbsp;Not better or worse, just differently. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes even thread-even depth-1" id="comment-928843">
				<div id="div-comment-928843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928843">
			August 4, 2011 at 8:25 am</a>		</div>

		<p>Regular expressions can be a very useful tool. In simple matches or one-off scripts it can be a life saver. I wish a curse upon any developer who uses a complicated expression without at least a dozen comment lines above to explain its purpose.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928873">
				<div id="div-comment-928873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928873">
			August 4, 2011 at 9:00 am</a>		</div>

		<p>In your 6-item table, the 3rd and 4th items appear to be exact duplicates. Was that intended?</p>
<div class="post">[<i>Probably not, but I can&#39;t tell whether it was a duplicate in the original mesasge or a duplicate I introduced (since I don&#39;t have the original message any more &#8211; didn&#39;t realize there would be a quiz two years later). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928893">
				<div id="div-comment-928893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928893">
			August 4, 2011 at 9:55 am</a>		</div>

		<p>You really ought to tag this one &quot;And Now They Have Two Problems&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928903">
				<div id="div-comment-928903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928903">
			August 4, 2011 at 10:14 am</a>		</div>

		<p>@David Walker: I&#39;m with you. Add in the fact that most of the things that people use RegEx for (validating URLs or emails) are difficult-to-impossible to do correctly in RegEx, and I tend to just avoid it altogether.</p>
<p>(The really sad part is how few developers actually care whether their email validator follows the RFC specs or not&#8230; but that&#39;s another story.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-928913">
				<div id="div-comment-928913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928913">
			August 4, 2011 at 10:47 am</a>		</div>

		<blockquote><p>
  Am I right that the correct regex he wanted was @&quot;B%1b&quot;?
</p></blockquote>
<p>Probably, but it depends what the developer really wants.</p>
<p>Yes, B is the opposite of b (at least in .NET regular expressions.)</p>
<p>You probably wouldn&#39;t want to match %%1 though, which is batchese for a literal %1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928933">
				<div id="div-comment-928933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Krunch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928933">
			August 4, 2011 at 10:55 am</a>		</div>

		<p>This may be closer to what the requester wanted:</p>
<blockquote><p>
  [^%w]%1b
</p></blockquote>
<p>Or even</p>
<blockquote><p>
  [^%w]%1[^%w]
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-928953">
				<div id="div-comment-928953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928953">
			August 4, 2011 at 11:02 am</a>		</div>

		<p>You probably /would/ want to match %%%1 though. &nbsp;This doesn&#39;t really look like a job for regular expressions; Environment.ExpandEnvironmentVariables might be better suited.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928983">
				<div id="div-comment-928983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928983">
			August 4, 2011 at 3:39 pm</a>		</div>

		<p>The most useful I&#39;ve found regex is for capturing repeating patterns.</p>
<p>Given most text or html with repeating patterns it&#39;s very easy to write a regex to pull out the data you want and then you&#39;ve cleaned your input and have a tabular output.</p>
<p>Think web scrape or log file parsing.</p>
<p>I have a tool just for this which I use to clean text and export into excel.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-928993">
				<div id="div-comment-928993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928993">
			August 4, 2011 at 4:33 pm</a>		</div>

		<p>@Krunch don&#39;t forget the beginning and end of the string (or line):</p>
<p>(^|[^%w])%1([^%w]|$)</p>
<p>It would be really cool if you could define your own character classes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-928943">
				<div id="div-comment-928943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-928943">
			August 4, 2011 at 10:55 am</a>		</div>

		<p>&gt; I can&#39;t tell whether it was a duplicate in the original mesasge or a duplicate I introduced</p>
<p>It doesn&#39;t matter *why* they&#39;re dressed as a tiger &#8211; have they got my leg?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929043">
				<div id="div-comment-929043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-929043">
			August 4, 2011 at 6:49 pm</a>		</div>

		<blockquote><p>
  @&quot;B%1b&quot;
</p></blockquote>
<p>I&#39;ll probably just test it twice, first with @&quot;/s%1s/&quot; and if it don&#39;t match, test with StartWith() and EndWith() respectively.</p>
<p>RegEx is too difficult for me to get correctly. I&#39;ll just use it within the extent of what I can understand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929003">
				<div id="div-comment-929003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-929003">
			August 4, 2011 at 4:57 pm</a>		</div>

		<p>@Toddsa </p>
<p>&#8211; I think *everyone* has a love/hate relationship with regexes. They&#39;re a stupendously powerful tool, but they&#39;re also a real headache to work with.</p>
<p>The trick is often to know when to use them, and when not to. They&#39;re often used when a simple (if slightly longer) combination of indexOf/substring would be cleaner. But conversely, you also see people doing everything they can to avoid using them &#8211; ending up with pages of complicated text parsing code that could have been done much more easily with a regex or two.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929053">
				<div id="div-comment-929053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-929053">
			August 5, 2011 at 4:32 am</a>		</div>

		<p>For those that don&#39;t know, Mason Wheelers comment was referring to a quote from Jamie Zawinski (developer on Mozilla/Netscape, XEMacs, and XScreenSaver) who said:</p>
<p>&quot;Some people, when confronted with a problem, think &#39;I know, I&#39;ll use regular expressions.&#39; Now they have two problems.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929063">
				<div id="div-comment-929063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/bombsoft_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>bombsoft@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-929063">
			August 5, 2011 at 5:12 am</a>		</div>

		<p>I&#39;ve heard someone say the Regex is really a Write Only language &#8211; a sufficently complicated one is too hard to be read back and understood(!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929073">
				<div id="div-comment-929073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/bombsoft_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>bombsoft@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-929073">
			August 5, 2011 at 5:13 am</a>		</div>

		<p>Also, isn&#39;t Raymond ignoring the first 2 rules of the internet?</p>
<p>Do not talk about b</p>
<p>Do NOT talk about b</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929083">
				<div id="div-comment-929083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-929083">
			August 5, 2011 at 5:42 am</a>		</div>

		<p>Michael Kaplan covered this same topic some time ago. <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/michkap/archive/2008/11/10/9056364.aspx" rel="nofollow">blogs.msdn.com/&#8230;/9056364.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929193">
				<div id="div-comment-929193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110804-00/?p=9973#comment-929193">
			August 8, 2011 at 12:45 am</a>		</div>

		<p>@Joseph Koss: didn&#39;t Zawinski actually say awk and not regular expressions?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

