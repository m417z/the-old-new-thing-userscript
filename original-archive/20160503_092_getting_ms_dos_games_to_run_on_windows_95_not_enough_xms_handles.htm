<html>
<head>
<title>Getting MS-DOS games to run on Windows 95: Not enough XMS handles</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Getting MS-DOS games to run on Windows 95: Not enough XMS handles</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 3, 2016 / year-entry #93</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Of course I got it, right?</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A report arrived on an MS-DOS game that crashed
after you go through some preliminary game steps
and then attempt a planetary landing.
When you do this, the program blows up
and starts corrupting memory.
</p>
<p>
Debugging the game revealed that 
performing a planetary landing causes the
application to allocate some more XMS memory,
and this happens to be its 32nd request for XMS memory.
When run from a custom-made MS-DOS boot disk,
this 32nd request succeeds,
because <code>HIMEM.SYS</code>,
the default MS-DOS XMS driver,
gives you 32 handles.
But when run under Windows 95,
the 32nd call to allocate XMS memory fails.
</p>
<p>
Windows 95 could have been extra awesome,
like it was with EMM memory,
and offer a large number of handles.
But it was also constrained by the MS-DOS XMS driver
that it tries to take over from.
If any MS-DOS drivers had allocated XMS memory
from the MS-DOS XMS driver,
then Windows 95 needs to respect those allocations
when those drivers try to use that memory
after the transition to 32-bit mode.
</p>
<p>
Those drivers don't even realize that the operating
system changed out from under them.
They allocated an XMS handle from one driver
(<code>HIMEM.SYS</code>),
then passed it to another driver
(Windows 95's MS-DOS emulator),
and the handle <i>still worked</i>.
</p>
<p>
The way this worked is that when a request to
access XMS memory occurs,
the Windows 95 XMS driver first checks if it is
a handle that it knows about.
If so, then it services the request.
if not, then the Windows 95 XMS driver passes
the XMS handle through to the MS-DOS driver
to see if that driver recognizes it.
</p>
<p>
In order for this trick to work,
Windows 95's XMS driver must not generate
an XMS handle that happens to match a handle
that was produced by the MS-DOS XMS driver.
But how do you make sure that you don't
generate a number that is different from
an unknown set of numbers?
</p>
<p>
Here's the trick:
One of the things that Windows 95 does when it
starts up is allocate zero bytes of
XMS memory from the MS-DOS XMS driver
until it reports "no more handles".
All of those handles that came out
are now known to be different from any
handles that the MS-DOS XMS driver handed
to any 16-bit device driver.
When an MS-DOS application asks for some
XMS memory,
Windows 95 hands out one of those "known
not to be a global handle" handles.
</p>
<p>
What this means is that Windows 95
won't be able to give out
any more XMS handles than the MS-DOS XMS
driver did.
On the other hand, each virtual machine gets its own
set of handles,
so it's not like there are 32 handles total.
Rather,
the calculation goes like this:
If MS-DOS device drivers had allocated <var>N</var>
XMS handles prior to the transition to 32-bit mode,
then those handles are global.
The remaining 32 &minus; <var>N</var> handles are local.
</p>
<p>
Okay, back to our story.
</p>
<p>
The deal is that
for some reason I have long forgotten,
the value of <var>N</var> was 1,
which meant that each MS-DOS virtual machine
could allocate 31 more handles before it ran out.
</p>
<p>
Okay, so the game tries to allocate its 32nd handle,
and the call fails.
How does this lead to the program blowing up
and corrupting memory?
</p>
<p>
The game had a helper library that provided
a C interface to the ugly assembly-language-based
XMS interface.
The function to allocate a block of XMS memory
returned the memory block handle on success,
or zero on failure.
</p>
<p>
The program evidently never checked whether the
call actually succeeded.
It just assumed that the call succeeded,
and used zero as the handle.
</p>
<p>
The excitement comes into play when the program
tries to use that XMS memory handle.
XMS has a single function for transferring memory,
and the source and destination could be an
XMS handle or conventional memory.
(Technically, you could set both the source and
destination to be conventional memory,
but there'd be no need for that in practice,
because you already can transfer that memory yourself
without needing the help of the XMS driver.
In practice, therefore, at least the source or the
destination, and possibly both, will be an XMS handle.)
</p>
<p>
And the way you specified that the source or
destination is conventional memory rather than
an XMS handle is to set the corresponding
<i>handle</i> field to zero.
</p>
<p>
Since the program never checked whether its XMS
allocation succeeded,
its attempt to copy memory into the XMS memory
block that it just "allocated"
actually copied memory into conventional memory.
And since it's going to start by copying into
the start of the XMS memory block (offset zero),
what it actually ended up doing was copying
into the start of conventional memory
(<code>0000:0000</code>),
which is the hardware interrupt table.
</p>
<p>
Scrambling the hardware interrupt table is a
great way to blow up your system.
</p>
<p>
I marked the game as requiring MS-DOS mode
with a custom configuration that
set <code>/NUMHANDLES=64</code>,
ensuring that the game got all the handles
it needed and then some.
I made a note of the problem,
and the plan was that if more games appeared
with the same problem,
then maybe we would take a closer look at what
we could do to get the program running
under Windows 95 instead of requiring MS-DOS mode.
</p>
<p>
It turns out that
no other games were found that had this problem.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1246665">
				<div id="div-comment-1246665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246665">
			May 3, 2016 at 7:16 am</a>		</div>

		<p>It&#8217;s really something that at the time, the number of available games was low enough that to a first approximation, you could just test them all out and debug them all.</p>
<p>How much game (or other application) testing is done for new versions of Windows nowadays? Presumably major current titles get tested to some degree, but I imagine it can&#8217;t be anywhere near the percentage of titles that got tested for Windows 95.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1246815">
				<div id="div-comment-1246815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246815">
			May 3, 2016 at 3:58 pm</a>		</div>

		<p>It&#8217;s not like the old days where patching the actual games was almost impossible, so I suspect the work is mostly left to the game publishers these days&#8230; they&#8217;re the ones with the buggy code, and if they *can* fix it, then Microsoft shouldn&#8217;t be cramming workarounds for buggy apps into Windows&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1247225">
				<div id="div-comment-1247225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1247225">
			May 5, 2016 at 7:08 am</a>		</div>

		<p>These days aren&#8217;t much different than the old days.  Many games tend to be abandoned fairly quickly after the peak sales period ends.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1246835">
				<div id="div-comment-1246835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246835">
			May 3, 2016 at 4:32 pm</a>		</div>

		<p>At the time, DOS/Windows was in the process of surpassing the Apple II as the platform with more software available. I&#8217;m not sure, but I recall a number in the low hundred of thousands of titles. In any case, it was definitely not possible to test them all.</p>
<p>On the other hand, Raymond has told this story of a program manager from the Windows 95 team who went to a computer store and bought one copy of each title they had. The idea was to make sure the most popular software titles for DOS and Windows 3.x ran without problem in Windows 95, debug the problems and try to make them work, and only discard them if the fix wasn&#8217;t possible or feasible. So I guess they faced this impossible task in a very pragmatic way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1247406">
				<div id="div-comment-1247406" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1247406">
			May 5, 2016 at 10:12 am</a>		</div>

		<p>&gt;It‚Äôs really something that at the time, the number of available games was low enough that to a first approximation,<br />
&gt; you could just test them all out and debug them all.</p>
<p>Windows 95 betas were available to MSDN and TechNet subscribers back when it was called Chicago. Microsoft were not the only people testing it. I didn&#8217;t personally run any of the Windows 95 betas as I went from MSDOS to OS/2 Warp but I ran a Windows 98 beta for a short while.</p>
<p>&gt;How much game (or other application) testing is done for new versions of Windows nowadays?</p>
<p>Windows 7, 8 and 10 betas have all been made available to the public in one form or other. I&#8217;m not saying they&#8217;ve outsourced all their testing, but there is no way that they can test more internally than can be tested externally.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1246675">
				<div id="div-comment-1246675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246675">
			May 3, 2016 at 7:55 am</a>		</div>

		<p>Why couldn&#8217;t Windows 95 &#8220;suck the brains out&#8221; of the MS-DOS XMS driver like it did for the other stuff?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1246686">
				<div id="div-comment-1246686" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246686">
			May 3, 2016 at 8:53 am</a>		</div>

		<p>No clue, but œà debugging tells me that 31 handles were more than enough for anyone, so it was deemed to be more trouble than it&#8217;s worth, especially given that other applications would likely handle the 0 correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1246715">
				<div id="div-comment-1246715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246715">
			May 3, 2016 at 9:15 am</a>		</div>

		<p>My psychic debugging skills tells me that at least one other XMS driver exists that Window didn&#8217;t learn about.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1246776">
				<div id="div-comment-1246776" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246776">
			May 3, 2016 at 11:48 am</a>		</div>

		<p>What surprises me is that Windows 95 didn&#8217;t just ship with an XMS driver and demand that only its own be used to start. Oh well.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1247155">
				<div id="div-comment-1247155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1247155">
			May 5, 2016 at 5:07 am</a>		</div>

		<p>Demanding a game uses the Windows 95 XMS driver rather than the one it was actually built to use isn&#8217;t going to be a good way of getting compatibility with existing software. Can you really see the company behind this game bothering to update and release a new version just to get Win95 compatibility when as far as they were concerned a boot-disk was a viable solution.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1247415">
				<div id="div-comment-1247415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1247415">
			May 5, 2016 at 10:23 am</a>		</div>

		<p>He wasn&#8217;t demanding the game used the HIMEM.SYS bundled with Windows 95, rather that Windows 95 should have demanded that it run with the HIMEM.SYS that was bundled and then it could have worked round the issue of avoiding already allocated handles in a different way. So the user could run the game under Windows 95 if they chose to.</p>
<p>It may have been because other memory managers were popular at the time and Microsoft were really struggling with anti-trust lawsuits. Or it might have been because the designers came up with the solution and thought it was good enough and didn&#8217;t expect any problems. Personally I&#8217;d have hoped for more awesomeness, but there are always constraints.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1246775">
				<div id="div-comment-1246775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246775">
			May 3, 2016 at 11:10 am</a>		</div>

		<p>&#8220;But how do you make sure that you don‚Äôt generate a number that is different from&#8221;<br />
I think that should read:<br />
&#8220;But how do you make sure that you don‚Äôt generate a number that is equal to&#8221;<br />
or &#8220;But how do you make sure that you generate a number that is different from&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1246785">
				<div id="div-comment-1246785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246785">
			May 3, 2016 at 11:58 am</a>		</div>

		<p>Was the boot disk the game publisher&#8217;s recommended fix? :D</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1246825">
				<div id="div-comment-1246825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246825">
			May 3, 2016 at 4:22 pm</a>		</div>

		<p>Yes, at that time, most game publishers recommended using a boot disk to run their games if you had memory problems. Many people had lots of drivers and TSRs installed in DOS, and didn&#8217;t use MemMaker or QEMM to move them above the 640 KB barrier, so many times they ended with a lot less than 600 KB of free RAM, sometimes near 500 KB. And many games didn&#8217;t run with less than 590 KB of free conventional memory. MemMaker and QEMM were relatively difficult to install or tune up (specially when you had an incompatible driver or TSR), but creating a boot disk with the SYS command was easy and fool-proof.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1246856">
				<div id="div-comment-1246856" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kme</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1246856">
			May 3, 2016 at 9:40 pm</a>		</div>

		<p>It seems like this means that the game would have failed under MSDOS if any driver had allocated an XMS handle before the game was started, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1247085">
				<div id="div-comment-1247085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephen E.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1247085">
			May 4, 2016 at 2:10 pm</a>		</div>

		<p>I bet the actual number of handles to set was 40.</p>
<p><a href="https://support.microsoft.com/en-us/kb/132994" rel="nofollow">https://support.microsoft.com/en-us/kb/132994</a></p>
<p>I&#8217;ve never even heard of that game.  No wonder, with that kind of programming talent.</p>
<p>I looked at the I-Q list and found that Lemmings wouldn&#8217;t run under Windows 95.  I remember that I got it to work in OS/2.  Har har.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1247125">
				<div id="div-comment-1247125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1247125">
			May 4, 2016 at 9:52 pm</a>		</div>

		<p>I assume 40 is &#8220;the 32 it needs, plus the one that is already assigned, plus a safety margin in case some others were allocated before Windows started&#8221;. But a higher number would also work, of course.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1247196">
				<div id="div-comment-1247196" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160503-00/?p=93397#comment-1247196">
			May 5, 2016 at 6:23 am</a>		</div>

		<p>Thanks for that nostalgic link to the games list. I&#8217;ve never seen it before! I like how one of my favourite games of all time (R-Z list) doesn&#8217;t even bother with an explanation of why it doesn&#8217;t run in Windows 95. It just says &#8220;The  requires MS-DOS mode.&#8221;. Damn that guardian.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

