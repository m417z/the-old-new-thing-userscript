<html>
<head>
<title>If strncpy is so dangerous, why does Visual Studio 2005 still support it?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If strncpy is so dangerous, why does Visual Studio 2005 still support it?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 2, 2005 / year-entry #137</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>45</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In response to the news that strncpy is so dangerous, at least one person has called for Visual Studio to revoke support for such a dangerous function, considering the continued support for the function grounds for holding the compiler manufacturer liable for any defects in programs compiled with that compiler. Well, for one thing, while...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>In response to the news that <a href="http://weblogs.asp.net/oldnewthing/archive/2005/01/07/348437.aspx"> <code>strncpy</code> is so dangerous</a>, at least one person has called for Visual Studio to <a href="http://www.arstdesign.com/BBS/BulletinBoard.php?qs_id=2221"> revoke support for such a dangerous function</a>, considering the continued support for the function grounds for holding the compiler manufacturer liable for any defects in programs compiled with that compiler.</p>
<p> Well, for one thing, while it's true that <code>strncpy</code> is dangerous if used improperly, it is still a valid function, and my original discussion explained the history behind <code>strncpy</code> and the very specific scenario in which it is still useful. It just so happens that most people don't use the function in the manner it was intended, but instead treat it as a sort of "copy string with a character limit" function, which it isn't really. </p>
<p> For another thing, just because something is dangerous doesn't mean it shouldn't be supported.  Pointers and casts are dangerous, but I don't see them disappearing from C or C++ any time soon. </p>
<p> Third, support for <code>strncpy</code> is mandated by the C standard. If you removed it, you couldn't call yourself a C compiler any more. (Not to mention breaking compatibility with existing source code that uses the <code>strncpy</code> function.  How would you like it if you bought a so-called C compiler and found that it couldn't compile a large class of valid C programs?) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (45)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-279173">
				<div id="div-comment-279173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279173">
			June 2, 2005 at 9:28 am</a>		</div>

		<p>I read that guys blog about how Visual Studio should stop supporting the function.<br />
<br />He&#8217;s just a negative loser from what i can make of most of his posts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279183">
				<div id="div-comment-279183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279183">
			June 2, 2005 at 9:47 am</a>		</div>

		<p>Why is it that more and more people what to replace Talent with Liability on someone else?<br />
<br />(I&#8217;m refering to the statement he made saying that MS is liable for any and all problems caused by strncpy).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279193">
				<div id="div-comment-279193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.uesp.net' rel='external nofollow' class='url'>Daveh</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279193">
			June 2, 2005 at 10:08 am</a>		</div>

		<p>Rather than remove strncpy, could this (and other frequently abused functions) be added as a new class of warnings?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279203">
				<div id="div-comment-279203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279203">
			June 2, 2005 at 10:14 am</a>		</div>

		<p>I think many of these unsafe string functions actually are deprecated if you use the strsafe.h header that comes with the Windows Platform SDK.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279213">
				<div id="div-comment-279213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Munge</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279213">
			June 2, 2005 at 10:20 am</a>		</div>

		<p>How would you like it if you were forced to download a so-called browser, and found it couldn&#8217;t render a large class of valid HTML, let alone CSS?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279223">
				<div id="div-comment-279223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yaytay</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279223">
			June 2, 2005 at 10:32 am</a>		</div>

		<p>&quot;I think many of these unsafe string functions actually are deprecated if you use the strsafe.h header that comes with the Windows Platform SDK.&quot;</p>
<p>They are &#8211; which leads to a whole pile of other things in SDK header files falling over.<br />
<br />ATL seems particularly vulnerable.</p>
<p>I do wish the SDK header files were cleaner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279243">
				<div id="div-comment-279243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David LeBlanc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279243">
			June 2, 2005 at 11:40 am</a>		</div>

		<p>What&#8217;s really dangerous is developers who are ignorant of the APIs they use. Other than educating them (preferred), I don&#8217;t see much that can be done about that. The new safer CRT stuff and strsafe.h can all be used to create overflows if you mess up your math (shameless plug &#8211; search on SafeInt and read up on that).</p>
<p>I don&#8217;t like strncpy semantics, but there are other functions I can use, and there is std::basic_string, so IMNSHO, get over it.</p>
<p>There&#8217;s also:<br />
<br />#define strncpy DoNotUseStrncpyEver</p>
<p>geez&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279253">
				<div id="div-comment-279253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephane Rodriguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279253">
			June 2, 2005 at 11:42 am</a>		</div>

		<p>Raymond,</p>
<p>Looks like developers commenting here are not ready with the implications of servicing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279263">
				<div id="div-comment-279263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://david.acz.org/' rel='external nofollow' class='url'>David Phillips</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279263">
			June 2, 2005 at 12:10 pm</a>		</div>

		<p>How about adding strlcpy / strlcat?  Based on code I read, they do what many people think strncpy / strncat do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279273">
				<div id="div-comment-279273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alyosha`</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279273">
			June 2, 2005 at 12:14 pm</a>		</div>

		<p>Personally, I think Whidbey should pull support for any arrays of char or wchar, outside of the std::basic_string.  (Backcompat be damned!)</p>
<p>Arrays are evil.  strncpy is just a symptom of the underlying disease.  :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279283">
				<div id="div-comment-279283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew Kimpton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279283">
			June 2, 2005 at 1:24 pm</a>		</div>

		<p>VS .Net 2005 mark a lot of functions (such as sprintf, wcscpy &#8211; and I think strncpy) as deprecated, and output warnings to that effect. Now if you treat warnings as errors (I think there&#8217;s a switch for that) wouldn&#8217;t that be the same as removing the function ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279303">
				<div id="div-comment-279303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dufftech.net' rel='external nofollow' class='url'>Brian Duffy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279303">
			June 2, 2005 at 2:19 pm</a>		</div>

		<p>This sort of thinking is the ultimate example of the nanny-state point of view.</p>
<p>My car, if operated properly, is a safe, cheap and reliable way to travel. If operated by someone crazy, stupid, drunk or ignorant enough, it becomes a tool of death &amp; destruction.</p>
<p>The idea of banning functions or assigning legal liability to compiler vendors for whatever the security nazi&#8217;s deem &quot;unsafe&quot; is fundamentally flawed and creates a dreadful precedent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-279313">
				<div id="div-comment-279313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279313">
			June 2, 2005 at 2:20 pm</a>		</div>

		<p>Yeah, strncpy is dangerous.  So is a Hole Hawg:<br />
<br /><a rel="nofollow" target="_new" href="http://www.totalgrandrental.com/images/Hole%20Hawg.jpg" rel="nofollow">http://www.totalgrandrental.com/images/Hole%20Hawg.jpg</a></p>
<p>But it&#8217;s fast and it works.  In particular, it doesn&#8217;t have to check EVERY SINGLE BYTE to see if it&#8217;s a null.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279323">
				<div id="div-comment-279323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom_Seddon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279323">
			June 2, 2005 at 3:02 pm</a>		</div>

		<p>Well, actually it does, because it has to zero-pad the dest if the source is shorter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-279343">
				<div id="div-comment-279343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279343">
			June 2, 2005 at 4:11 pm</a>		</div>

		<p>Yup, you&#8217;re right &#8211; I guess I was thinking of memcpy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279353">
				<div id="div-comment-279353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279353">
			June 2, 2005 at 4:27 pm</a>		</div>

		<blockquote><p>
  &gt; How about adding strlcpy / strlcat? Based on code I read, they do what many people think strncpy / strncat do.</p>
<p>what about using lstrcpyn() &#8211; a WIN API?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279363">
				<div id="div-comment-279363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279363">
			June 2, 2005 at 4:27 pm</a>		</div>

		<blockquote><p>
  &gt; How about adding strlcpy / strlcat? Based on code I read, they do what many people think strncpy / strncat do.</p>
<p>what about using lstrcpyn() &#8211; a WIN API?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279233">
				<div id="div-comment-279233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279233">
			June 2, 2005 at 10:36 am</a>		</div>

		<p>Munge, who forces you to download and install Internet Explorer updates?</p>
<p>You dont *need* to install the patches if you dont want to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279403">
				<div id="div-comment-279403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279403">
			June 2, 2005 at 6:45 pm</a>		</div>

		<p>Gentlemen, the time has come for a serious discussion on whether or not to continue using C for serious programming projects. As I will explain, I feel that C needs to be retired, much the same way that Fortran, Cobol and PERL have been. Furthermore, allow me to be so bold as to suggest a superior replacement to this outdated language.</p>
<p>To give you a little background on this subject, I was recently asked to develop a client/server project on a Unix platform for a Fortune 500 company. While I&#8217;ve never coded in C before I have coded in VB for fifteen years, and in Java for over ten, I was stunned to see how poorly C fared compared to these two, more low-level languages.</p>
<p>C&#8217;s biggest difficulty, as we all know, is the fact that it is by far one of the slowest languages in existance, especially when compared to more modern languages such as Java and C#. Although the reasons for this are varied, the main reasons seems to be the way C requires a programmer to laboriously work with chunks of memory.</p>
<p>Requiring a programmer to manipulate blocks of memory is a tedious way to program. This was satisfactory back in the early days of coding, but then again, so were punchcards. By using what are called &quot;pointers&quot; a C programmer is basically requiring the computer to do three sets of work rather than one. The first time requires the computer to duplicate whatever is stored in the memory space &quot;pointed to&quot; by the pointer. The second time requires it to perform the needed operation on this space. Finally the computer must delete the duplicate set and set the values of the original accordingly.</p>
<p>Clearly this is a horrendous use of resources and the chief reason why C is so slow. When one looks at a more modern (and a more serious) programming language like Java, C# or &#8211; even better &#8211; Visual Basic that lacks such archaic coding styles, one will also note a serious speed increase over C.</p>
<p>So what does this mean for the programming community? I think clearly that C needs to be abandonded. There are two candidates that would be a suitable replacement for it. Those are Java and Visual Basic.</p>
<p>Having programmed in both for many years, I believe that VB has the edge. Not only is it slightly faster than Java its also much easier to code in. I found C to be confusing, frightening and intimidating with its non-GUI-based coding style. Furthermore, I like to see the source code of the projects I work with. Java&#8217;s source seems to be under the monopolistic thumb of Sun much the way that GCC is obscured from us by the marketing people at the FSF. Microsoft&#8217;s &quot;shared source&quot; under which Visual Basic is released definately seems to be the most fair and reasonable of all the licenses in existance, with none of the harsh restrictions of the BSD license. It also lacks the GPLs requirement that anything coded with its tools becomes property of the<br />
<br />FSF.</p>
<p>I hope to see a switch from C to VB very soon. I&#8217;ve already spoken with various luminaries in the C coding world and most are eager to begin to transition. Having just gotten off the phone with Mr. Marc Lucovsky, I can say that he is quite thrilled with the speed increases that will occur when the Linux kernel is completely rewritten in Visual<br />
<br />Basic. Jim Gray plans to support this, and hopes that the great cheese himself, Dave Cutler, won&#8217;t object to renaming Linux to VB/Linux. Although not a C coder himself, I&#8217;m told that Microsoft&#8217;s very own Robert Scooby will support this on his web site. Finally,<br />
<br />Dennis Ritchie is excited about the switch!</p>
<p>Thank you for your time. Happy coding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279413">
				<div id="div-comment-279413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279413">
			June 2, 2005 at 7:35 pm</a>		</div>

		<p>Um, wow.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279423">
				<div id="div-comment-279423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279423">
			June 2, 2005 at 8:38 pm</a>		</div>

		<p>Note: the above, long diatribe about higher level languages is parody. (And not written by me).</p>
<p>And damn good parody it is too.</p>
<p>My take on this whole debate:</p>
<p>Enough of my C++ code is breaking with VS 2005 anyway. Don&#8217;t break more than you have to; I don&#8217;t have time right now to get rid of every last strcpy/strncpy call in my code &#8211; and I know that it causes problems. </p>
<p>I do, however, want the benefits of profiler-guided optimization, the more immediate UI for debugger support, the better minidump support, etc etc, so I want to move to VS 2005 &#8211; and the sooner the better. </p>
<p>Don&#8217;t make my life more difficult because there&#8217;s a &quot;right way&quot; of doing things. Get it through your thick skulls that the right way often falls foul of schedule and time pressure. A lot of us have to support 10 year old code &#8211; and yes, we&#8217;d love to rewrite it all, but frankly that&#8217;s not going to happen in 9 out of 10 cases. If you&#8217;re willing to work for me for free to rid my code of all its strcpy usage so that this feature can go through, but if you&#8217;re just going to bitch that it should be removed because it&#8217;s &quot;dangerous&quot;, then not only are you singing to the choir, but you obviously have your priorities screwed on wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279453">
				<div id="div-comment-279453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279453">
			June 2, 2005 at 9:11 pm</a>		</div>

		<blockquote><p>
  Third, support for strncpy is mandated by<br />
  <br />&gt; the C standard.</p>
<p>True.</p>
<p>&gt; If you removed it, you couldn&#8217;t call<br />
  <br />&gt; yourself a C compiler any more.</p>
<p>Actually you could, for several reasons.</p>
<p>1.  Some famous tools don&#8217;t properly compile a program that declares some perfectly valid identifier names, names which the standard doesn&#8217;t reserve to the implementation.  Yet those tools call themselves C compilers.</p>
<p>2.  Some famous tools don&#8217;t issue diagnostics for programs that contain obvious syntax errors, when the person put a &quot;-D&#8230;.&quot; option on the command line to invoke the compiler to change the meaning of the program.  Yet those tools call themselves C compilers.  Everyone accepts this because the tool is just obeying what the person asked for with the &quot;-D&quot; option, but pedantically it&#8217;s not exactly a C compiler any more.</p>
<p>3.  The thing really can be a C compiler that compiles one program meeting the limits section, and that one program doesn&#8217;t have to be one that uses strncpy.</p>
<p>4.  The standard only constrains implementations that conform to the standard.  The standard doesn&#8217;t constrain implementations that don&#8217;t conform to the standard, for example implementations that predefine <strong>STDC</strong> to be 1 (or other value if you prefer) while not otherwise conforming to the standard.</p>
<p>OK, enough nits.</p>
<p>Everyone knew that gets() shouldn&#8217;t have been included in the standard.  Not only was it dangerous, but it was just about the easiest thing to migrate away from, using fgets() instead.  But it was standardized because it already existed.</p>
<p>Yup, C is as dangerous as assembly language, because C was intended to be a substitute for assembly language.  It&#8217;s not C&#8217;s fault that C was hijacked for other uses, it&#8217;s the fault of the hijackers.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279463">
				<div id="div-comment-279463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Pryhodko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279463">
			June 2, 2005 at 9:20 pm</a>		</div>

		<blockquote><p>
  Gentlemen, the time has come for a serious discussion on whether or not&#8230;.</p>
<p>:))))) I was crying like a child reading it. I hope this is a joke. Can&#8217;t believe that somebody could write this stupidity seriously.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279473">
				<div id="div-comment-279473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279473">
			June 2, 2005 at 10:56 pm</a>		</div>

		<p>I think we should ban integers.  All those integer overflow bugs would go away instantly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279503">
				<div id="div-comment-279503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">carlso</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279503">
			June 3, 2005 at 12:55 am</a>		</div>

		<p>If you abolish strncpy, then the terrorists have won.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279513">
				<div id="div-comment-279513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sebastian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279513">
			June 3, 2005 at 2:56 am</a>		</div>

		<p>&quot;&#8230;considering the continued support for the function grounds for holding the compiler manufacturer liable for any defects in programs compiled with that compiler.&quot;</p>
<p>Great news. Finally I can release a buggy library and blame the compiler!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279523">
				<div id="div-comment-279523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mastropaolo.com' rel='external nofollow' class='url'>Purplet [italy]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279523">
			June 3, 2005 at 3:28 am</a>		</div>

		<p>To me the best solution is issue a level 1 warning or even an error which may be disabled toggling the right switch.</p>
<p>gcc issues a warning for gets() and I think this is a fine approach.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279533">
				<div id="div-comment-279533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279533">
			June 3, 2005 at 3:33 am</a>		</div>

		<blockquote><p>
  &gt;&gt;<br />
  <br />:))))) I was crying like a child reading it. I hope this is a joke. Can&#8217;t believe that somebody could write this stupidity seriously.<br />
  <br />&lt;&lt;&lt;</p>
<p>It&#8217;s a modern classic usenet troll. On 27 Apr 2002 &#8216;Egg Troll&#8217; cross posted it to comp.lang.java, comp.lang.c, comp.lang.c++, comp.lang.basic.visual and comp.os.linux.advocacy. Despite the clue in the poster&#8217;s name and the obvious nonsense in the troll itself, it still managed to spark off a healthy flame war between the &#8216;Java is faster than C&#8217; and &#8216;Real programmers use C&#8217; crowd. Not to mention all the standard usenet MS/Linux/Open Source/GPL flames and accusations. Excellent stuff. </p>
<p>Google Groups URL:<br />
  <br /><a rel="nofollow" target="_new" href="http://tinyurl.com/dyszs" rel="nofollow">http://tinyurl.com/dyszs</a>
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279433">
				<div id="div-comment-279433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279433">
			June 2, 2005 at 8:40 pm</a>		</div>

		<p>Sorry &#8211; should have said:<br />
<br />If you&#8217;re willing to work for me for free to rid my code of all its strcpy usage so that this feature can go through, ***then go right ahead.***</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279553">
				<div id="div-comment-279553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Phill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279553">
			June 3, 2005 at 7:35 am</a>		</div>

		<p>While AC&#8217;s comments are obviously a joke and quite humourous as well, I&#8217;ve often thought that C as a language is too complicated and low level for many types of applications.<br />
<br />Sure, if you are writing a device driver or a system kernel or similar then you require the extra speed and power of a language like C.<br />
<br />If however, you are writing a vanilla desktop application, why write in a language like C where you are open to buffer overruns, memory leaks etc.? This is where languages like Java and C# excel (and to a much lesser extent VB). Now in the early days Java was way too clunky and AWT was horrible (with Swing being a small improvement) but nowadays for the majority of applications that users use and the computers they use them on languages like C# and Java are a great, safe option that avoid crazy low-level functions like this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279563">
				<div id="div-comment-279563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mattel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279563">
			June 3, 2005 at 7:45 am</a>		</div>

		<p>This post made me so angry I just had to respond immediately.</p>
<p>&gt;&gt; Gentlemen, the time has come for a serious discussion on whether or not to continue using C for serious programming projects. As I will explain, I feel that C needs to be retired, much the same way that Fortran, Cobol and PERL have been. </p>
<p>All those languages are still in everyday use.</p>
<p>&gt;&gt; While I&#8217;ve never coded in C before I have coded in VB for fifteen years, and in Java for over ten, I was stunned to see how poorly C fared compared to these two, more low-level languages.</p>
<p>C itself hasn&#8217;t been here for 15 years, let alone VB.</p>
<p>&gt;&gt; Jim Gray plans to support this</p>
<p>Mr Gray only really programs in SQL, which is a language with which you can create database programs.</p>
<p>&gt;&gt; Dave Cutler, won&#8217;t object to renaming Linux to VB/Linux. </p>
<p>The name Linux is patented by the Free Software Foundation, and they would not allow this even if it weren&#8217;t such an absurd proposition.</p>
<p>&gt;&gt; Clearly this is a horrendous use of resources and the chief reason why C is so slow. When one looks at a more modern (and a more serious) programming language like Java, C# or &#8211; even better &#8211; Visual Basic that lacks such archaic coding styles, one will also note a serious speed increase over C.</p>
<p>Java.net <em>is</em> fast, but that is because it gives every program a virtual machine to play with. C would be just as fast if it had a quantum computer too.</p>
<p>&gt;&gt; By using what are called &quot;pointers&quot; a C programmer is basically requiring the computer to do three sets of work rather than one. The first time requires the computer to duplicate whatever is stored in the memory space &quot;pointed to&quot; by the pointer. The second time requires it to perform the needed operation on this space. Finally the computer must delete the duplicate set and set the values of the original accordingly.</p>
<p>The big advantage of pointers is they gives you far greater control of how to use your memory. In particular, they let you do something called Object Orientated Programming. So for instance, if you wanted to build a database of customers for your local hospital, you could assign a object to each person. (Of course, care has to be taken not to typecast. And this method is only applicable to males, because women are not objects).</p>
<p>&gt;&gt; So what does this mean for the programming community? I think clearly that C needs to be abandonded. There are two candidates that would be a suitable replacement for it. Those are Java and Visual Basic.</p>
<p>But C has the added bonus of giving you free entry to any library whose name ends with h, although unfortunately there aren&#8217;t many places like this in the US. </p>
<p>Trash like this really makes my blood boil!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279583">
				<div id="div-comment-279583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279583">
			June 3, 2005 at 9:13 am</a>		</div>

		<p>I will admit I thought it was real.  However, I have seen stuff like that posted before in all seriousness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279663">
				<div id="div-comment-279663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Good Point</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279663">
			June 3, 2005 at 10:52 am</a>		</div>

		<p>Or to put it another way, if you make strncpy illegal only the criminals will use strncpy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279673">
				<div id="div-comment-279673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael J.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279673">
			June 3, 2005 at 11:02 am</a>		</div>

		<blockquote><p>
  Gentlemen, the time has come for a serious<br />
  <br />&gt; discussion on whether or not to continue<br />
  <br />&gt; using C for serious programming projects<br />
  <br />&gt; &#8230; skipped &#8230;</p>
<p>A nice one, good setup.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279543">
				<div id="div-comment-279543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spaces.msn.com/member/andyandyx' rel='external nofollow' class='url'>Andreas Haeber</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279543">
			June 3, 2005 at 4:52 am</a>		</div>

		<p>&quot;To me the best solution is issue a level 1 warning or even an error which may be disabled toggling the right switch.&quot;<br />
<br />Good, then you&#8217;re gonna like Microsoft&#8217;s solution(*)</p>
<p>You get a level 1 warning, which you may treat as an error if you want to.</p>
<p>Pragma ignore the deprecation warning and you won&#8217;t be disturbed by this :)</p>
<p>* This is based on beta information(download the public VC++ Express and see for yourself). May change when released (hope not).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-279723">
				<div id="div-comment-279723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">amotif</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279723">
			June 3, 2005 at 1:08 pm</a>		</div>

		<p>Okay, then, just remove pointer arithmetic and we won&#8217;t eat the fluffy bunny for dinner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-279833">
				<div id="div-comment-279833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Derek Hunter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-279833">
			June 3, 2005 at 6:52 pm</a>		</div>

		<p>I must say the quality of the trolling here is quite amusing. The one by Mattel had me rolling my eyes before it got so ridiculous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-280003">
				<div id="div-comment-280003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-280003">
			June 5, 2005 at 2:38 pm</a>		</div>

		<p>It&#8217;s weird, why don&#8217;t people realize that you&#8217;re totally allowed to write your own string functions in C.  You can even write a strncpy function that always null terminates the string, you just have to give it a different name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-280033">
				<div id="div-comment-280033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-280033">
			June 5, 2005 at 7:58 pm</a>		</div>

		<p>Sunday, June 05, 2005 2:38 PM by Matt</p>
<p>&gt; You can even write a strncpy function that<br />
<br />&gt; always null terminates the string, you just<br />
<br />&gt; have to give it a different name. </p>
<p>No you don&#8217;t.  If you use a freestanding implementation, you can write any kind of function you want and you can call it strncpy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-280043">
				<div id="div-comment-280043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://muro.slovenskoo.com' rel='external nofollow' class='url'>muro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-280043">
			June 6, 2005 at 2:58 am</a>		</div>

		<p>Loser. I hate this &quot;I am stupid but its somebody else fault&quot; attitude. Reminds me of all the famous american court decissions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-280393">
				<div id="div-comment-280393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-280393">
			June 7, 2005 at 9:00 am</a>		</div>

		<p>You mean silly court cases like the coffee spill case and McDonalds?  I would read about the case a little more before you go off thinking it was a silly case.  McDonalds could have gotten off with just paying the woman $20,000 to cover her medical expenses from the third degree burns causes by the near boiling water. </p>
<p>But no, they got silly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-280853">
				<div id="div-comment-280853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-280853">
			June 8, 2005 at 7:25 am</a>		</div>

		<blockquote><p>
  Sunday, June 05, 2005 7:58 PM by Norman Diamond<br />
  <br />&gt; Sunday, June 05, 2005 2:38 PM by Matt<br />
  <br />&gt;<br />
  <br />&gt; &gt; You can even write a strncpy function that<br />
  <br />&gt; &gt; always null terminates the string, you just<br />
  <br />&gt; &gt; have to give it a different name.<br />
  <br />&gt;<br />
  <br />&gt; No you don&#8217;t. If you use a freestanding<br />
  <br />&gt; implementation, you can write any kind of<br />
  <br />&gt; function you want and you can call it<br />
  <br />&gt; strncpy. </p>
<p>Yeah, but only an idiot would do that.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-281343">
				<div id="div-comment-281343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-281343">
			June 8, 2005 at 8:44 pm</a>		</div>

		<p>Wednesday, June 08, 2005 7:25 AM by Matt<br />
<br />&gt; Sunday, June 05, 2005 7:58 PM by Norman Diamond<br />
<br />&gt;&gt; Sunday, June 05, 2005 2:38 PM by Matt<br />
<br />&gt;&gt;&gt;<br />
<br />&gt;&gt;&gt; You can even write a strncpy function that<br />
<br />&gt;&gt;&gt; always null terminates the string, you just<br />
<br />&gt;&gt;&gt; have to give it a different name.<br />
<br />&gt;&gt;<br />
<br />&gt;&gt; No you don&#8217;t. If you use a freestanding<br />
<br />&gt;&gt; implementation, you can write any kind of<br />
<br />&gt;&gt; function you want and you can call it<br />
<br />&gt;&gt; strncpy.<br />
<br />&gt;<br />
<br />&gt; Yeah, but only an idiot would do that. </p>
<p>Of course.  I was replying to the &quot;you just have to give it a different name&quot; part of your posting, which is a completely separate issue from common sense ^_^</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-281373">
				<div id="div-comment-281373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-281373">
			June 9, 2005 at 4:21 am</a>		</div>

		<p>Cleverness is useful, and it might be handy for someone to write a new strncpy function (like if they were working code that was isolated from /everything/), but cleverness for cleverness&#8217; sake is a stupidity and I feel it needs to be opposed.  There&#8217;s way too much cleverness in the world as far as I&#8217;m concerned. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-282233">
				<div id="div-comment-282233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lucas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050602-33/?p=35463#comment-282233">
			June 11, 2005 at 3:06 am</a>		</div>

		<p>Am I the only one who actualy have read the &quot;manual&quot; page for strncpy and take it&#8217;s behaviour into account when using it?<br />
<br />I like to have all warnings turned on when compiling (well, when using 3rd party stupid libs, I lower the setting), but if it&#8217;s true MSVC will have a warning for strncpy, that one seems pretty silly.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

