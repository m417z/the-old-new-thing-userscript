<html>
<head>
<title>How can I use WS_CLIP­CHILDREN and still be able to draw a control with a transparent background?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I use <CODE>WS_</CODE><CODE>CLIP&shy;CHILDREN</CODE> and still be able to draw a control with a transparent background?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 5, 2018 / year-entry #226</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Removing all the barriers to painting, perhaps too many.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was using an MFC <code>CHtmlDialog</code> as a child
dialog and found that they needed to add the
<code>WS_</code><code>CLIP&shy;CHILDREN</code> style to ensure
that the contents appeared on the screen; otherwise,
the parent dialog would paint its background over the child dialog,
and the child dialog would consequently appear to vanish.
</p>
<p>
On the other hand, they also had some transparent image controls
on the parent dialog,
and adding the
<code>WS_</code><code>CLIP&shy;CHILDREN</code> style prevented
those controls from drawing transparently,
meaning that instead of having the parent dialog's background show
through, it just used a black background.
</p>
<p>
How can they get the best of both worlds,
with
<code>WS_</code><code>CLIP&shy;CHILDREN</code> style applying
to some child controls but not others?
</p>
<p>
The controls that need the background to show through
can ask the parent dialog to draw its background.
They can do this the same way standard controls do it,
by sending a <code>WM_</code><code>CTL&shy;COLOR&shy;xxx</code>
message to the parent to request the background brush
and text colors.
Of course, since it's an image control, the text
colors aren't interesting.
</p>
<pre>
 case WM_PAINT:
 {
  PAINTSTRUCT ps;
  HDC hdc = BeginPaint(hwnd, &amp;ps);

  <font COLOR=blue>HBRUSH hbrBackground = (HBRUSH)
        SendMessage(GetParent(hwnd), WM_CTLCOLORSTATIC,
              (WPARAM)hdc, (LPARAM)hwnd);

  FillRect(hdc, &amp;ps.rcPaint, hbrBackground);</font>

  DrawTheImage(...);

  EndPaint(hwnd, &amp;ps);
  return 0;
 }
</pre>
<p>
This technique assumes that the parent dialog responds
to
<code>WM_</code><code>CTL&shy;COLOR&shy;xxx</code> messages.
If the parent dialog has standard colors, then the
<code>Def&shy;Window&shy;Proc</code> function will return
standard colors, and everything will work out.
But if the parent dialog uses custom colors, it will have
to add additional message handlers for these messages.
</p>
<p>
Alternatively, the image controls could render its background
by forwarding the <code>WM_</code><code>ERASE&shy;BKGND</code> message
to its parent.
Since the child and parent have different coordinates, you'll have
to do some coordinate manipulation to get the parent to receive
a device context whose origin is what it expects.
</p>
<pre>
 case WM_ERASEBKGND:
 {
  HDC hdc = (HDC)wParam;

  HWND hwndParent = GetParent(hwnd);

  POINT ptOffset{};
  MapWindowPoints(hwnd, hwndParent, &amp;ptOffset, 1);
  OffsetWindowOrgEx(hdc, ptOffset.x, ptOffset.y, &amp;ptOrig);
  LRESULT lres = SendMessage(hwndParent, WM_ERASEBKGND, wParam, lParam);
  SetWindowOrgEx(hdc, ptOrig.x, ptOrig.y, nullptr);
  return lres;
 }
</pre>
<p>
Note that neither of these techniques actually draw the
control transparently.
Rather, they attempt to simulate the effect by asking the parent
to draw its background into the control.
It also means that if the parent draws something interesting in its
<code>WM_</code><code>PAINT</code> handler,
it won't show up in the "background" of the control.
</p>
<p>
Nevertheless, this usually works well enough for most purposes.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1366035">
				<div id="div-comment-1366035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tbodt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905#comment-1366035">
			October 5, 2018 at 7:40 am</a>		</div>

		<p>There&#8217;s a :w at the end of the second paragraph&#8230;Raymond is using vim? :P</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1366045">
				<div id="div-comment-1366045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905#comment-1366045">
			October 5, 2018 at 8:22 am</a>		</div>

		<p>vim is too complicated. I use an even older version.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1366335">
				<div id="div-comment-1366335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hyperman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905#comment-1366335">
			October 7, 2018 at 12:09 pm</a>		</div>

		<p>Now I am curious.  edlin?  TECO?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-4" id="comment-1366405">
				<div id="div-comment-1366405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905#comment-1366405">
			October 8, 2018 at 2:50 am</a>		</div>

		<p>Any chance it&#8217;s plain &#8220;vi&#8221; in WSL?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1366065">
				<div id="div-comment-1366065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905#comment-1366065">
			October 5, 2018 at 8:30 am</a>		</div>

		<p>I am puzzled. I have a dialog box that draws its background image as foreground content in WM_PAINT and a checkbox control on it that is partially transparent by setting WS_EX_TRANSPARENT. Yet it draws correctly.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1366125">
				<div id="div-comment-1366125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905#comment-1366125">
			October 5, 2018 at 9:25 am</a>		</div>

		<p>Because that uses a different technique entirely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1366325">
				<div id="div-comment-1366325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905#comment-1366325">
			October 6, 2018 at 11:21 pm</a>		</div>

		<p>Thanks for the refresher, I always assumed WS_EX_TRANSPARENT is to let drag &amp; drop operations fall through (child) windows &#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1366375">
				<div id="div-comment-1366375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181005-00/?p=99905#comment-1366375">
			October 7, 2018 at 11:56 pm</a>		</div>

		<p>Notice to myself: CWP_SKIPTRANSPARENT passed to ChildWindowFromPointEx() seems to check for WS_EX_TRANSPARENT &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

