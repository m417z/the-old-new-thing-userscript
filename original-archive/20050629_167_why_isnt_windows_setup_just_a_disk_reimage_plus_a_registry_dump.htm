<html>
<head>
<title>Why isn't Windows Setup just a disk reimage plus a registry dump?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why isn&#8217;t Windows Setup just a disk reimage plus a registry dump?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 29, 2005 / year-entry #168</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>21</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Why can't all the registry key needed by Windows Setup be precomputed and splorted at one go? One reason is that Windows Setup can be customized via a so-called "unattend file", which means that a lot of the work cannot be precalculated. Some settings also have cascade effects on other settings. Also, the model for...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://blogs.msdn.com/oldnewthing/archive/2005/01/27/361595.aspx#363056"> Why can't all the registry key needed by Windows Setup be precomputed and splorted at one go?</a> One reason is that Windows Setup can be customized via a so-called "<a href="http://support.microsoft.com/kb/155197">unattend file</a>", which means that a lot of the work cannot be precalculated. Some settings also have cascade effects on other settings.</p>
<p> Also, the model for component registration is to make each component <a href="http://msdn.microsoft.com/library/en-us/com/htm/cmf_d2l_3cmq.asp"> responsible for its own registration</a>, which can in turn be context-sensitive: "If the system has configuration x, then do y else z". Internet Explorer's component registration for example contains many conditional sections based on the installation configuration specified in the unattend file and the even fancier Winbom.ini file used by <a href="http://www.microsoft.com/technet/prodtechnol/winxppro/deploy/introductoin.mspx"> Sysprep-based deployment</a> (which is used by computer manufacturers and large corporations). </p>
<p> Making each component responsible for its own registration reduces entanglements between components but also means that "global optimizations" such as precalculating the registry cannot be done. Engineering is about tradeoffs and this is one of them: Maintainability vs. speed. </p>
<p> (Of course, there are sections of the registry that are not context-sensitive, and those to some degree have already been gathered together for block copying onto the machine during Windows Setup. Look at the <code>HIVExxx.INF</code> files on your Windows&nbsp;XP CD.) </p>
<p> That said, it appears that <a href="http://www.winsupersite.com/showcase/longhorn_setup.asp"> Longhorn setup is moving towards the "disk image" model</a>. I wish them luck. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-287543">
				<div id="div-comment-287543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">FlorianW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287543">
			June 29, 2005 at 10:08 am</a>		</div>

		<p>I would be very disappointed, if Longhorn setup would not based on Windows-Installer:-)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-287553">
				<div id="div-comment-287553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://troy-phillips.blogspot.com' rel='external nofollow' class='url'>Troy Phillips</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287553">
			June 29, 2005 at 10:10 am</a>		</div>

		<p>The Windows Installer team has been trying to avoid the use of the DllSelfRegister as far I understand. From <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/en-us/msi/setup/selfreg_table.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/msi/setup/selfreg_table.asp</a>, &quot;Installation package authors are strongly advised against using self registration.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-larryosterman even thread-even depth-1" id="comment-287563">
				<div id="div-comment-287563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287563">
			June 29, 2005 at 10:13 am</a>		</div>

		<p>Longhorn setup CANNOT be based on the windows installer, frankly, OS setup is too complicated for the windows installer.  As a simple example, how do you repartition a disk using the windows installer?</p>
<p>And it&#8217;s my understanding that self registration is out for Longhorn.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-287593">
				<div id="div-comment-287593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas Haeber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287593">
			June 29, 2005 at 10:55 am</a>		</div>

		<p>Ah, but that is easy to handle: Write a custom extension for MSI which starts diskpart.exe and let the user figure out the rest :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-287633">
				<div id="div-comment-287633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287633">
			June 29, 2005 at 12:11 pm</a>		</div>

		<p>Yes, but in order for Windows Installer to run, Windows must be running.</p>
<p>Setup contains just the bare essentials of Windows; probably not a robust enough environment for Windows Installer.  (Although it does present a rather amusing chicken and the egg problem.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-287643">
				<div id="div-comment-287643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287643">
			June 29, 2005 at 12:46 pm</a>		</div>

		<p>Guys, I think he was joking about the windows installer. Hence the smiley face at the end.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-287653">
				<div id="div-comment-287653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.thespoke.net/MyBlog/travisowens/MyBlog.aspx' rel='external nofollow' class='url'>Travis Owens</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287653">
			June 29, 2005 at 12:50 pm</a>		</div>

		<p>While I can&#8217;t find a url, I recall in early 2004 that somebody at MS saying they planned on using an image to install Longhorn and applying specific drivers &amp; settings after the fact.  I also remember them claiming Longhorn would install in &quot;15mins or less&quot; because of this fact.</p>
<p>Although there hasn&#8217;t been any evidence of this fact yet, I sure hope MS sticks with their original idea/plan.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-287693">
				<div id="div-comment-287693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BlackTigerX</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287693">
			June 29, 2005 at 4:38 pm</a>		</div>

		<p>and why is the winsupersite.com written using ASP?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-287733">
				<div id="div-comment-287733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287733">
			June 29, 2005 at 6:27 pm</a>		</div>

		<p>Nice, now I&#8217;ve heard the first time for Winbom.ini, but there is actually a page in technet that mentions it:</p>
<p><a rel="nofollow" target="_new" href="http://www.microsoft.com/technet/prodtechnol/winxppro/deploy/factorymode.mspx" rel="nofollow">http://www.microsoft.com/technet/prodtechnol/winxppro/deploy/factorymode.mspx</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-287663">
				<div id="div-comment-287663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287663">
			June 29, 2005 at 1:05 pm</a>		</div>

		<p>Matt: Windows *can* boot fully-featured (well, enough-featured &#8211; no swap file) from a CD-ROM. There&#8217;s even an OEM tool based on it, called Windows Preinstallation Environment, but since in Windows XP and later it&#8217;s a native kernel feature (/minint kernel switch), anyone can make their own with just the original Windows files and a lot of patience (or more likely a tool such as BartPE &#8211; or even more likely by downloading one of the illegal pre-made images). Great as recovery disks too, I&#8217;m surprised the emergency repair console isn&#8217;t based on that</p>
<p>Anyway. Windows Installer could well be used to build *the image*, since almost all (minus custom actions) of the setup process is under its full control, so it can &quot;install&quot; the files to a log of operations</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mgrier even thread-even depth-1" id="comment-287673">
				<div id="div-comment-287673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MGrier' rel='external nofollow' class='url'>MGrier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287673">
			June 29, 2005 at 1:58 pm</a>		</div>

		<p>Raymond has asked me to post about this in the past and maybe I&#8217;ll do a series on LH OS installation technology after I&#8217;m done my series on the DLL loader.</p>
<p>First thing to note is that when you purchase a system from a large OEM, you generally get a box where you plug it in, it shows you some &quot;friendly&quot; UI to get you going and then you&#8217;re done.  The *VAST* majority of coppies of Windows are deployed using this technique.</p>
<p>The technical challenges are issues around data that really has to be machine specific.  e.g. the machine SID, local account SIDs (since they&#8217;re derived from the machine SID) and network connectoid GUIDs (these are just the standard examples we use for points of reference).  There&#8217;s a tool in the OPK (OEM preinstall kit I believe) call sysprep which removes all the system specific data (&quot;genericize&quot;) so that OEMs can make disk images (or even send the disk images off to disk manufactures who then deliver pallets of drives with the images already on them).  When the system boots for the first time, sysprep &quot;specialization&quot; occurs which fixes up all the per-machine stuff, runs the happy UI and then you&#8217;re all set.</p>
<p>I won&#8217;t go on further and instead will take this as a refcount on blogging more about all this stuff and what we&#8217;re doing here for Longhorn.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-287803">
				<div id="div-comment-287803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287803">
			June 29, 2005 at 11:00 pm</a>		</div>

		<blockquote><p>
  Sysprep-based deployment</p>
<p>When the mouse cursor hovered over that link, I was anticipating a 404 error.  But no, the link is correct.  Of course, no one really needs a spelling checker in naming links.</p>
<p>Wednesday, June 29, 2005 12:50 PM by Travis Owens<br />
  <br />&gt; I also remember them claiming Longhorn would<br />
  <br />&gt; install in &quot;15mins or less&quot; because of this<br />
  <br />&gt; fact.</p>
<p>Who needs that?  I still have a copy that installs in 10 minutes.</p>
<p>After some number of experiments I figured out that I want to turn off hard disk indexing.  Longhorn&#8217;s estimate for how long it would take to apply the new attributes was a bit longer than 10 minutes.  It posted a dialog box saying &quot;44930 Days and 9 hours Remaining&quot;.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-287823">
				<div id="div-comment-287823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://getwired.blogspot.com' rel='external nofollow' class='url'>Wes Miller</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287823">
			June 29, 2005 at 11:35 pm</a>		</div>

		<p>KJK::Hyperion:</p>
<p>&quot;Great as recovery disks too, I&#8217;m surprised the emergency repair console isn&#8217;t based on that&quot;</p>
<p>Chicken and egg. The Recovery Console (AKA Command Console) isn&#8217;t based upon WinPE because, well, it predates it by an entire version of Windows. The CMDCONS was a new feature of Windows 2000. WinPE was totally new for Windows XP &#8211; and rewriting the Recovery Console was never in the cards for Whistler (Windows XP/Windows Server 2003).</p>
<p>BTW, the /MiniNT flag means that it is in WinPE mode. WinPE was known as MiniNT during development. BartPE is simply a reverse engineered version of WinPE (with admittedly a more extensible builder.</p>
<p>Also of note, MSIExec (the Windows Installer) has never been a component of WinPE. While it would conceptually have been possible to install Windows via an MSI, IMHO it would have made a very complicated task even more complicated, and still really not have met the needs of OEMs and customers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-287863">
				<div id="div-comment-287863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Bryant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287863">
			June 30, 2005 at 9:30 am</a>		</div>

		<blockquote><p>
  Engineering is about tradeoffs and this is one of them: Maintainability vs. speed<br />
  <br />I would call it Configurability vs. speed, but anyway components registering themselves is the crux of the architectural mistake that Windows made. A service should not have an awareness or expectation of the world above it.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-288043">
				<div id="div-comment-288043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://http' rel='external nofollow' class='url'>Wes Miller</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-288043">
			June 30, 2005 at 4:30 pm</a>		</div>

		<p>KJK::Hyperion:<br />
<br />Since ERD 2002, ERD has used WinPE as it&#8217;s infrastructure. Previous to that, the versions that supported booting from CD basically used the same boot code path that setup would have when you el-torito booted a Windows CD.</p>
<p>FWIW, the MiniNT flag passed in at boot time is used pervasively through Windows&#8230; Lots of things were special cased to be able to run Win32 from CD</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-288053">
				<div id="div-comment-288053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://getwired.blogspot.com' rel='external nofollow' class='url'>Wes Miller</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-288053">
			June 30, 2005 at 4:37 pm</a>		</div>

		<p>I should also add there is no fake page file used for ERD (or WinPE. The only time a pagefile is ever created with WinPE is on a hard-disk boot with low memory&#8230; and no RAM-disk driver was used for pre-WinPE versions of ERD, nor is one used for WinPE (unless you manually create one for scratch space using a non-included driver, or boot to one, using the latest version of WinPE).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-287953">
				<div id="div-comment-287953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-287953">
			June 30, 2005 at 1:06 pm</a>		</div>

		<p>Wes: Russinovich has made live CDs out of Windows 2000 for years (see his ERD Commander product)</p>
<p>The trick appeared to be using the setup CD boot loader to detect boot devices, pre-load their drivers and build a volatile SYSTEM hive, and probably (but I&#8217;m speculating, I didn&#8217;t check) a RAM disk driver to 1) make NtInitializeRegistry succeed despite no writable media (setup CD and repair console have no Win32 in them, so they only need the SYSTEM hive &#8211; but Win32 support is what makes WinPE *usable*) and 2) make the silly memory manager happy with a fake swap file</p>
<p>It seems to me this is, on the long run, way less painful than rewriting an user environment from scratch (broken, at it)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-288593">
				<div id="div-comment-288593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-288593">
			July 3, 2005 at 1:46 pm</a>		</div>

		<p>I wonder how much faster the current setup process would run if NT had an option to agressively cache disk and registry I/O?  Let&#8217;s say I don&#8217;t care about disk/registry integrity if the power goes out or the system bugchecks, since I&#8217;ll just restart the install from the beginning.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-288623">
				<div id="div-comment-288623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-288623">
			July 3, 2005 at 4:21 pm</a>		</div>

		<p>Wes:</p>
<p>WinPE (or booting an NT based Windows completely from CD-ROM) was NOT totally new with XP.<br />
<br />Embedded NT exists far longer, and I&#8217;ve setup CDs (called Server Start) for Siemens Primergy&#8217;s which boot into NT4 and start a GUI where you can prepare the installation. The oldest are about 7 years old!</p>
<p>Stefan</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-288673">
				<div id="div-comment-288673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-288673">
			July 3, 2005 at 9:39 pm</a>		</div>

		<p>Sunday, July 03, 2005 1:46 PM by John<br />
<br />&gt; Let&#8217;s say I don&#8217;t care about disk/registry<br />
<br />&gt; integrity if the power goes out or the<br />
<br />&gt; system bugchecks, since I&#8217;ll just restart<br />
<br />&gt; the install from the beginning.</p>
<p>And your restarted install will bugcheck at the same place.<br />
<br />And your restarted install will bugcheck at the same place.<br />
<br />And your restarted install will bugcheck at the same place.<br />
<br />Sometimes you DO want a reinstall to be able to detect which detection attempt to avoid repeating.</p>
<p>Though you do have a point.  In Linux installers that I&#8217;ve used during the past 3 years or so, if an automated install fails, then you can choose to restart a manual install and you can decide which risky detections to try and which to skip.  (Of course manual installs pretty much always had this kind of capability with some degree or other of cumbersomeness, but automated installers sometimes optimistically forgot to say how to access the manual installer.  This has improved.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-288723">
				<div id="div-comment-288723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://getwired.blogspot.com' rel='external nofollow' class='url'>Wes Miller</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050629-11/?p=35163#comment-288723">
			July 3, 2005 at 11:24 pm</a>		</div>

		<p>True enough, NT 4 Embedded did indeed exist first. But an important aspect that differentiates WinPE (which itself was new for XP) from either NT Embedded or Windows XP Embedded when booted from CD is that the CD is exactly that, a CD. No write filter to cache writes and fib to the OS that writes happened. In the case of XP and NT Embedded, you must use a write filter when running from CD.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

