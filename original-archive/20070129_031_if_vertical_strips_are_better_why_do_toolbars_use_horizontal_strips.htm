<html>
<head>
<title>If vertical strips are better, why do toolbars use horizontal strips?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If vertical strips are better, why do toolbars use horizontal strips?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 29, 2007 / year-entry #32</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If vertical strips are better, why do toolbars use horizontal strips? An early version of the toolbar control first made its appearance in Windows 3.0, and in those days, screen resolutions were low and toolbar buttons were small. Horizontal or vertical didn't really matter. Ten bitmaps, each 16 × 16, at 4-bit color, comes out to...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>If <a href="http://blogs.msdn.com/oldnewthing/archive/2005/08/05/448073.aspx"> vertical strips are better</a>, <a href="http://blogs.msdn.com/oldnewthing/archive/2005/08/05/448073.aspx#448127"> why do toolbars use horizontal strips</a>?</p>
<p> An early version of the toolbar control first made its appearance in Windows&nbsp;3.0, and in those days, screen resolutions were low and toolbar buttons were small. Horizontal or vertical didn't really matter. Ten bitmaps, each 16 &times; 16, at 4-bit color, comes out to one kilobyte, much less than even a single 4KB page. (And what's this paging nonsense anyway? We're talking 16-bit Windows here!) </p>
<p> When this code was ported to 32-bit Windows for Windows&nbsp;95, the existing bitmap format was preserved in order to retain compatibility with the 16-bit clients of the toolbar control. Windows&nbsp;95 included both the 16-bit and 32-bit versions of the common controls library, and they both built out of the same sources, with a little <code>#ifdef WIN32</code> action here and there to deal with the places where 16/32 source code compatibility didn't quite cover everything. The early prototypes of the Windows&nbsp;95 shell were written in this mixed 16/32 model, so that the same program could be compiled either as a 16-bit program or a 32-bit program. The 16-bit version was used in the earlier builds because the 32-bit kernel, GDI, and USER were all being developed in parallel. The 16-bit version went out in the builds, and the 32-bit version was used by the development team as a proving ground for Windows&nbsp;95's 32-bit computing environment. When the 32-bit environment was declared "good enough to self-host", the switch was thrown, and the 32-bit shell went into the builds instead of the 16-bit shell. </p>
<p> All this is a long way of saying that source code compatibility between 16-bit code and 32-bit code was very important, not only within the Windows&nbsp;95 shell team, but throughout the Windows&nbsp;95 product, so that teams could port their 16-bit components to 32-bit in a gradual and evolutionary manner. If you were to introduce gratuitous subtle differences (like the orientation of bitmap strips in toolbars), you wouldn't make many friends. They would port their program to 32-bit Windows and the toolbars would all come out funny. "But it works fine when I compile it as 16-bit. Must be a bug in Windows&nbsp;95. I'll wait for the next build and try again." </p>
<p> With the introduction of version&nbsp;4.70 of the common controls, the internal structure of the toolbars changed, and the bitmaps came to be <a href="http://msdn.microsoft.com/library/en-us/shellcc/platform/commctls/toolbar/messages/tb_setimagelist.asp"> stored as imagelists</a> rather than as raw bitmaps. Imagelists store their images in a vertical strip, so once again all is well with the world. </p>
<p> "Why not add a <code>TB_ADDVERTICALBITMAP</code> message?" </p>
<p> Well, for one thing, you're looking for inefficiency at the wrong level. All that happens with the bitmap is that it gets stuffed into an imagelist. Nobody actually draws out of it, so there's no point in optimize it for drawing. </p>
<p> And for another thing, you're looking for inefficiency at the wrong level. If this even shows up on your performance traces, it means that you're spending your time loading images into toolbars. Isn't that a bigger cause for concern, that you're spending so much of your time setting up toolbars? Shouldn't you be spending your time doing productive work? </p>
<p> (<a href="http://blogs.msdn.com/oldnewthing/archive/2006/01/06/510066.aspx#510111">Imagelists? Use your imagination</a>.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-466083">
				<div id="div-comment-466083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466083">
			January 29, 2007 at 11:29 am</a>		</div>

		<p>The term &quot;self-host&quot; seems to be unique to Microsoft. &nbsp;Can you give a definition for those of us on the outside and the recently-initiated?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-466093">
				<div id="div-comment-466093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">HitScan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466093">
			January 29, 2007 at 11:43 am</a>		</div>

		<p>Adrian: Self-host is more commonly used with a compiler. i.e. a C compiler that is complete enough that it can compile it&#8217;s own C source code.</p>
<p>I&#8217;m not 100% certain what they meant by Explorer self-&#8220;hosting&#8221;, but it basically meant that it was working well enough in 32-bit mode that they could leave behind the 16-bit helper code.</p>
<div class="post">[<i>To self-host an operating system means to use that operating system to develop itself. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-466103">
				<div id="div-comment-466103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466103">
			January 29, 2007 at 11:48 am</a>		</div>

		<p>We&#8217;ve always used the term &quot;self-host&quot; as &quot;being good enough to have on your primary machine&quot;. Perhaps they mean that it&#8217;s good enough to use as their operating system on their primary machine at that point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-benkaras odd alt thread-odd thread-alt depth-1" id="comment-466133">
				<div id="div-comment-466133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">benkaras</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466133">
			January 29, 2007 at 1:40 pm</a>		</div>

		<p>There is a level of inefficiency that you are forgetting about: &nbsp;The artist. &nbsp;</p>
<p>An artist wants to draw all the artwork and just hand it off to the development team. &nbsp;But now they must ask, &quot;Is this for an imagelist or a toolbar?&quot; &nbsp;Then the artist heads back to the office and arranges the images vertically or horizontally as appropriate. &nbsp;A simple flag would cut this step out of the development process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-466153">
				<div id="div-comment-466153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Southpaw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466153">
			January 29, 2007 at 2:33 pm</a>		</div>

		<p>Interesting how there is no mention of how Vertical tool bars went with the OS2 License. The MS contract with IBM is the real reason MS couldn&#8217;t use vertical tool bars in Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-466183">
				<div id="div-comment-466183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466183">
			January 29, 2007 at 4:49 pm</a>		</div>

		<p>Southpaw: nice conspiracy theory, but Raymond is talking about the bitmaps which contain the button-face images, and whether they&#8217;re like a compact camera filmstrip (horizontal), or a movie filmstrip (vertical). You can orient the resulting toolbar either way.</p>
<p>benkaras: it&#8217;s not exactly hard to write a program that converts from one to the other &#8211; I did it myself when Raymond published the original articles. There was no appreciable difference in performance between the two approaches, in my scenario, so to avoid the code churn, I backed out the change. Might be worth another look now I know that BitBlt recolours monochrome bitmaps when blitting to a colour DC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-466203">
				<div id="div-comment-466203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://db48x.net/' rel='external nofollow' class='url'>db48x</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466203">
			January 30, 2007 at 3:50 am</a>		</div>

		<p>Actually, the best solution in a situation like that is for the artist to produce one image for each button, and have the build process assemble them into a combined image. Doing that lets you change the format of the combined image if you need to. Still, in general the largest benefit comes from combining the images, and there&#8217;s essentially no performance difference between different ways of combining those images. (Animations show the difference better than toolbars)</p>
<p>Also, scripting languages like perl or python are quite a bit better than they used to be, so &nbsp;today it&#8217;s a lot easier to whip up a little script do do that sort of thing than it used to be.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-466343">
				<div id="div-comment-466343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Starfish</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466343">
			January 30, 2007 at 1:53 pm</a>		</div>

		<p>Not much imagination is needed anymore &#8211; as there&#8217;s no compelling reason to change the initial orientation (it barely matters performance-wise), it seems obvious to keep the format already in use and save many developers from headaches.</p>
<p>*dons &#8216;dunce&#8217; cap</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-466393">
				<div id="div-comment-466393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466393">
			January 30, 2007 at 2:25 pm</a>		</div>

		<p>To Selfhost &#8211; To use your under-development product for production uses.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-466553">
				<div id="div-comment-466553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466553">
			January 30, 2007 at 11:27 pm</a>		</div>

		<p>&quot;Windows 95 included both the 16-bit and 32-bit versions of the common controls library, and they both built out of the same sources, with a little #ifdef WIN32 action here and there to deal with the places where 16/32 source code compatibility didn&#8217;t quite cover everything.&quot;</p>
<p>So that is why the 16-bit version of the common control library were updated to support the new common controls in Windows 95, yet this fact were undocumented!</p>
<p>You should blog more about the early builds of Windows 95, such as builds 58 and 73. I wonder what version of Visual C++ was these builds built with. WinSock support, Win32 support, Shell namespace, and so on&#8230; Does this web page recall any memories of these builds?</p>
<p><a rel="nofollow" target="_new" href="http://toastytech.com/guis/c73.html" rel="nofollow">http://toastytech.com/guis/c73.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-466563">
				<div id="div-comment-466563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-466563">
			January 30, 2007 at 11:28 pm</a>		</div>

		<p>&quot;Windows 95 included both the 16-bit and 32-bit versions of the common controls library, and they both built out of the same sources, with a little #ifdef WIN32 action here and there to deal with the places where 16/32 source code compatibility didn&#8217;t quite cover everything.&quot;</p>
<p>So that is why the 16-bit version of the common control library were updated to support the new common controls in Windows 95, yet this fact were undocumented!</p>
<p>You should blog more about the early builds of Windows 95, such as builds 58 and 73. I wonder what version of Visual C++ was these builds built with. WinSock support, Win32 support, Shell namespace, and so on&#8230; And perticularly about why the networking support in these builds were the same as WFW 3.11&#8217;s networking support. Does this web page recall any memories of these builds?</p>
<p><a rel="nofollow" target="_new" href="http://toastytech.com/guis/c73.html" rel="nofollow">http://toastytech.com/guis/c73.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-468383">
				<div id="div-comment-468383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070129-02/?p=28233#comment-468383">
			February 4, 2007 at 4:00 pm</a>		</div>

		<p>Reading this, I wondered why you didn&#8217;t prototype the Windows 95 shell on Windows NT; this would have saved maintaining a 16-bit version. &nbsp;But it&#8217;s clear from the previous comment that early Windows 95 development must have predated the first release of Windows NT in early 1993, although it seems that betas of NT might have been available?</p>
<p>I second Yuhong Bao&#8217;s suggestion: a post on the history of Windows 95 development with the dates of key milestones and how it related to NT development (if at all) would be interesting.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

