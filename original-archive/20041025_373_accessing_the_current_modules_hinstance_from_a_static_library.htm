<html>
<head>
<title>Accessing the current module's HINSTANCE from a static library</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Accessing the current module&#8217;s HINSTANCE from a static library</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 25, 2004 / year-entry #374</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>21</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you're writing a static library, you may have need to access the HINSTANCE of the module that you have been linked into. You could require that the module that links you in pass the HINSTANCE to a special initialization function, but odds are that people will forget to do this. If you are using...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
If you're writing a static library, you may have need to access
the <code>HINSTANCE</code> of the module that you have been
linked into.
You could require that the module that links you in pass the
<code>HINSTANCE</code> to a special initialization function,
but odds are that people will forget to do this.
</p>
<p>
If you are using a Microsoft linker, you can take advantage of
a pseudovariable which the linker provides.
</p>
<pre>
EXTERN_C IMAGE_DOS_HEADER __ImageBase;
#define HINST_THISCOMPONENT ((HINSTANCE)&amp;__ImageBase)
</pre>
<p>
The pseudovariable <code>__ImageBase</code>
represents the DOS header of the module, which happens to
be what a Win32 module begins with.
In other words, it's the base address of the module.
And the module base address is the same as its <code>HINSTANCE</code>.
</p>
<p>
So there's your <code>HINSTANCE</code>.
</p>
<p>
[Raymond is currently on vacation; this message was pre-recorded.]</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-220633">
				<div id="div-comment-220633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220633">
			October 25, 2004 at 7:27 am</a>		</div>

		<p>That&#8217;s very cool. Is this actually documented somewhere though? I searched google and all I got were 4 hits on the web and 3 in groups.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220643">
				<div id="div-comment-220643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220643">
			October 25, 2004 at 7:37 am</a>		</div>

		<p>And speaking of which, what do you think about the alternate technique using VirtualQuery (I can&#8217;t foresee why it could possibly fail):</p>
<p><a target="_new" href="http://www.codeguru.com/Cpp/W-P/dll/tips/article.php/c3635/" rel="nofollow">http://www.codeguru.com/Cpp/W-P/dll/tips/article.php/c3635/</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220653">
				<div id="div-comment-220653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220653">
			October 25, 2004 at 7:51 am</a>		</div>

		<p>I&#8217;m surprised you&#8217;re advocating this (though I don&#8217;t know of an alternative &#8211; the only thing that springs to mind is GetModuleHandle, but if memory serves that&#8217;s different) &#8211; purely because I would have thought this would be an &#8216;implementation detail&#8217;, and so have severe compatibility implications.</p>
<p>But, as you&#8217;ve demonstrated on countless occasions, that&#8217;s something Microsoft prefers to deal with than let developers do&#8230; ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220663">
				<div id="div-comment-220663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220663">
			October 25, 2004 at 7:57 am</a>		</div>

		<p>Does this code work for all versions of Windows? </p>
<p>I found this article, which implies it only works on new linkers</p>
<p><a target="_new" href="http://www.codeguru.com/Cpp/W-P/dll/tips/article.php/c3635/" rel="nofollow">http://www.codeguru.com/Cpp/W-P/dll/tips/article.php/c3635/</a></p>
<p>Will ( HINSTANCE == HMODULE == base of process address ) space stay true in future versions of windows, or is it possible it may change?</p>
<p>Couldn&#8217;t you use GetModuleHandle(NULL) ? It looks like the only downside is that you can&#8217;t run on Win16, which I can live with.</p>
<p>Oh, and if you have a HWND from the application, you can always get the HINSTANCE with GetWindowLongPtr</p>
<p>GetWindowLongPtr( hwndApp, GWLP_HINSTANCE )<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220673">
				<div id="div-comment-220673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220673">
			October 25, 2004 at 8:08 am</a>		</div>

		<p>GetModuleHandle(NULL) is not the current module; it&#8217;s the exe module.  If your code is statically linked into a DLL, this gets you the wrong handle.</p>
<p>The GetWindowLongPtr trick assumes that the app passed its own instance handle to CreateWindow. Very high likelihood but not foolproof. (It might be say a common dialog box, whose instance handle is comdlg32.dll.)</p>
<p>I always figured there should be a way to do the hinstance-as-base-address thingie, since the base address gets relocated with the rest of the DLL. A relocatable reference to an address at rva=0 should have done the trick, and with this pseudo-variable, it has been formalized.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220683">
				<div id="div-comment-220683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220683">
			October 25, 2004 at 8:22 am</a>		</div>

		<p>Well, that begs the questions: what version of the Linker was this introduced with. And, where are its friends? That is, are there other interesting linker pseudovariables?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220693">
				<div id="div-comment-220693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mfink</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220693">
			October 25, 2004 at 8:23 am</a>		</div>

		<p>The method shown won&#8217;t work on Pocket PCs, since the instance handle isn&#8217;t the same as the base address. I guess it is a pointer to a system internal structure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220703">
				<div id="div-comment-220703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.virtualdub.org/' rel='external nofollow' class='url'>Phaeron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220703">
			October 25, 2004 at 8:43 am</a>		</div>

		<p>I&#8217;m surprised no one has mentioned the official way to do this yet: GetModuleHandleEx(GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS, &amp;pObjectInModule, &amp;handle). It requires XP or 2003, though; if it isn&#8217;t available I use the VirtualQuery() trick with my own function pointer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220713">
				<div id="div-comment-220713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.die.de/blogs/aw/' rel='external nofollow' class='url'>Andreas W&#246;lfer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220713">
			October 25, 2004 at 9:25 am</a>		</div>

		<p>Thanks!</p>
<p>Just like Chris, i&#8217;d like to know if there are any other (pseudo)variables like that. Can&#8217;t seem to find any documentation on that&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220723">
				<div id="div-comment-220723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mgrier' rel='external nofollow' class='url'>Michael Grier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220723">
			October 25, 2004 at 9:36 am</a>		</div>

		<p>This /is/ linker specific.</p>
<p>The VirtualQuery() and base address == module handle assumption is unfortunately burned in too many places for it to ever be changed.</p>
<p>Re: GetModuleHandleEx():</p>
<p>Note that there&#8217;s a bug in this on XP RTM that messes up the loader&#8217;s DLL load ref counts.  I think it&#8217;s fixed even in SP1.  I&#8217;ll check with the guy who did it and write back later&#8230;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220753">
				<div id="div-comment-220753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.whirlingdervishes.com' rel='external nofollow' class='url'>Henk Devos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220753">
			October 25, 2004 at 10:19 am</a>		</div>

		<p>I am really surprised that you write something like this.<br />
<br />When we say anything like it, your reaction is always something like: This is not documented, it may not be true in future Windows version, your software will be broken, etc. etc., in short don&#8217;t do it.<br />
<br />What is different here?<br />
<br />How do we know which undocumented and implementation-dependent features we should be using and which ones not?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220763">
				<div id="div-comment-220763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220763">
			October 25, 2004 at 11:04 am</a>		</div>

		<p>Henk, as Raymonds weblog basically proves, its safe to abuse anything thats easilly abusable, as you can be sure enough other developers ARE abusing it to guarantee its future abusability.</p>
<p>er. Im sure theres a better way of phrasing that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220773">
				<div id="div-comment-220773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.smackfu.com' rel='external nofollow' class='url'>Scott</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220773">
			October 25, 2004 at 11:24 am</a>		</div>

		<p>Although it&#8217;s also been shown that unless you have a popular application, they probably won&#8217;t turn on the compatibility shim for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220803">
				<div id="div-comment-220803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220803">
			October 25, 2004 at 2:28 pm</a>		</div>

		<p>I&#8217;ve always wondered what the difference is between an HINSTANCE and an HMODULE.  They both seem to be base addresses and the Win32 API sometimes seems to use them interchangeably.  Is there a distinction or is this just some historical accident?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220813">
				<div id="div-comment-220813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason M.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220813">
			October 25, 2004 at 2:31 pm</a>		</div>

		<p>Adrian:</p>
<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/06/14/155107.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/06/14/155107.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220843">
				<div id="div-comment-220843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220843">
			October 25, 2004 at 4:00 pm</a>		</div>

		<p>Re: GetModuleHandleEx(). The bug is actually in one of the internal helper functions used by GetModuleHandleEx() and it happens only if you pass a flag to that internal helper that GetModuleHandleEx() doesn&#8217;t pass, so GetModuleHandleEx() itself is safe. (Other callers of that internal helper are at risk though.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220853">
				<div id="div-comment-220853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-220853">
			October 25, 2004 at 4:03 pm</a>		</div>

		<p>&quot;This is not documented&#8230;&quot;</p>
<p>HINSTANCE = base address is documented</p>
<p><a target="_new" href="http://msdn.microsoft.com/library/en-us/dllproc/base/dllmain.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/dllproc/base/dllmain.asp</a> &#8211; &quot;Handle to the DLL module. The value is the base address of the DLL.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-227573">
				<div id="div-comment-227573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-227573">
			November 18, 2004 at 1:58 pm</a>		</div>

		<p>This trick does not seem to work on a Managed C++ dll.  The linker generates the dll, but the CLR later refuses to load the assembly.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-227613">
				<div id="div-comment-227613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-227613">
			November 18, 2004 at 4:02 pm</a>		</div>

		<p>Forget my last comment. It was something else.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-516633">
				<div id="div-comment-516633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.csdn.net/godwater8/archive/2007/06/19/1658382.aspx' rel='external nofollow' class='url'>仙水</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-516633">
			June 19, 2007 at 6:50 am</a>		</div>

		<p>Accessing the current module&#8217;s HINSTANCE from a static library</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576783">
				<div id="div-comment-576783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.m-ri.de/index.php/2007/12/12/die-unsitte-immer-getmodulehandlenull-fuer-hinstance-in-createwindow-und-registerclass-zu-verwenden/' rel='external nofollow' class='url'>Martin&#8217;s Blog &raquo; Die Unsitte immer GetModuleHandle(NULL) f??r hInstance in CreateWindow und RegisterClass zu verwenden</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483#comment-576783">
			December 12, 2007 at 1:36 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blog.m-ri.de/index.php/2007/12/12/die-unsitte-immer-getmodulehandlenull-fuer-hinstance-in-createwindow-und-registerclass-zu-verwenden/" rel="nofollow">http://blog.m-ri.de/index.php/2007/12/12/die-unsitte-immer-getmodulehandlenull-fuer-hinstance-in-createwindow-und-registerclass-zu-verwenden/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

