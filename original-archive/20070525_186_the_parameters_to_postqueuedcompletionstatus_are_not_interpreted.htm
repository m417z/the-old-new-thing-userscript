<html>
<head>
<title>The parameters to PostQueuedCompletionStatus are not interpreted</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The parameters to PostQueuedCompletionStatus are not interpreted</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 25, 2007 / year-entry #187</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070525-00/?p=26693</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Larry Osterman mentioned this almost in passing quite a while ago, that the parameters to PostQueuedCompletionStatus are not interpreted by the operating system. Well, obviously the first parameter, the handle to the completion port, is interpreted as the handle to the completion port. But the other parameters, dwNumberOfBytesTransferred, dwCompletionKey, and lpOverlapped are not interpreted at...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://blogs.msdn.com/larryosterman/"> Larry Osterman</a> mentioned this almost in passing quite a while ago, that <a href="http://blogs.msdn.com/larryosterman/archive/2004/03/29/101329.aspx"> the parameters to <code>PostQueuedCompletionStatus</code> are not interpreted</a> by the operating system. Well, obviously the first parameter, the handle to the completion port, is interpreted as the handle to the completion port. But the other parameters, <code>dwNumberOfBytesTransferred</code>, <code>dwCompletionKey</code>, and <code>lpOverlapped</code> are not interpreted at all. Even though they have names, the names don't mean anything. Whatever values you pass for those three parameters merely pop out of <code>GetQueuedCompletionStatus</code> when the notification packet makes it to the head of the queue.</p>
<p> Why do the parameters have names if the names don't mean anything? </p>
<p> Because the operating system itself will post notifications to the completion port if you ask it to, and in that case, the values returned by the <code>GetQueuedCompletionStatus</code> function really mean something related to their names. For example, if you issued an asynchronous read to a file that is associated with a completion port, then the <code>dwNumberOfBytesTransferred</code> really is the number of bytes transferred, the <code>dwCompletionKey</code> really is the completion key that you associated with the file handle when you called <code>CreateIoCompletionPort</code>, and the <code>lpOverlapped</code> really is the pointer to the <code>OVERLAPPED</code> structure that you originally issued the read request against. </p>
<p> But if you call <code>PostQueuedCompletionStatus</code> manually, then you can choose any values you want. Of course, if you're going to mix operating system-generated completion port activity with manually-generated completion port activity, it would be in your best interest to use the <code>dwCompletionKey</code> (or if you're really clever, the <code>lpOverlapped</code>) in a consistent manner so that you can tell whether a notification came from the I/O subsystem or was one you generated manually. </p>
<p> But it's up to you. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-508463">
				<div id="div-comment-508463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070525-00/?p=26693#comment-508463">
			May 25, 2007 at 7:25 pm</a>		</div>

		<p>Ray, is there a, uh, deeper motivation for today&#8217;s entry ? Or was this (next?) &nbsp;in your &#8216;list of articles I plan on writing&#8217; ?</p>
<div class=post>[<i>Somebody asked about it, so I figured I&#8217;d answer. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-508473">
				<div id="div-comment-508473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yoni</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070525-00/?p=26693#comment-508473">
			May 25, 2007 at 7:35 pm</a>		</div>

		<p>You know, while programming in Win32, I&#8217;ve come across many cases where it seemed as if a certain interface&#8217;s design is influenced directly by another part of the operating system. Sure, the UI team, the kernel team, and the Internet Explorer team are all working on the OS together. But sometimes it feels like I&#8217;m disadvantaged that they can have such a direct effect on each other, and I can&#8217;t add functions to kernel32 as I wish.</p>
<p>GetQueuedCompletionStatus could easily have had 1 extra ULONG_PTR-sized parameter, like most callback mechanisms do. But it has 3, because in the part of the operating system that sometimes posts queued completion status, this way is more convenient.</p>
<p>Just my ranting&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-508513">
				<div id="div-comment-508513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070525-00/?p=26693#comment-508513">
			May 26, 2007 at 6:10 am</a>		</div>

		<p>I&#8217;m happy so long as there is at least one void* (or equivalent typedef such as ULONG_PTR) argument that we can specify. If there&#8217;s more than one then it doesn&#8217;t get in the way. If there are zero, however, then things are painful.</p>
<p>I recently had to use the EnumSystemCodePages API which calls your callback function with just a string. What should&#8217;ve been 5 lines of code turned into a wrapper class with critical sections that enumerated into a static vector and then copied the results to the calling thread&#8217;s vector. It&#8217;s strange that there isn&#8217;t an EnumSystemCodePagesEx which fixes the obvious mistake. I guess the API doesn&#8217;t get used enough to warrant it or something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-508633">
				<div id="div-comment-508633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070525-00/?p=26693#comment-508633">
			May 28, 2007 at 10:53 am</a>		</div>

		<p>Leo: you can use TLS when you have no other way of passing data to a synchronous callback</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-509013">
				<div id="div-comment-509013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://kbupdate.info/' rel='external nofollow' class='url'>kb</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070525-00/?p=26693#comment-509013">
			May 29, 2007 at 3:30 pm</a>		</div>

		<p>Is there a way to query the number of items currently waiting in the queue?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-509103">
				<div id="div-comment-509103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070525-00/?p=26693#comment-509103">
			May 29, 2007 at 4:46 pm</a>		</div>

		<p>kb &#8212; No, since as soon as the query function returns, the data is old and probably invalid.</p>
<p>Any thread can post to the queue, and any thread (in theory anyway) can read from the queue. &nbsp;So the thread that asks the size of the queue may be running concurrently with threads that are modifying its size.</p>
<p>The only possible good reason for asking the queue how large it is (that I can think of) is if you need to know when it&#8217;s empty to know when your work is done. &nbsp;You&#8217;d have to be sure to post all the items to it before you start asking its length, though.</p>
<p>But that problem is (IMO) better solved by having a single &quot;end of queue&quot; item that gets posted to the queue at the end, and then having the worker thread(s) signal a &quot;work finished&quot; event when they pull this item off. &nbsp;The thread interested in the queue&#8217;s state can wait on this event. &nbsp;(Then you don&#8217;t care how often the queue&#8217;s count goes to zero, either: you won&#8217;t get signaled until the last item is consumed.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

