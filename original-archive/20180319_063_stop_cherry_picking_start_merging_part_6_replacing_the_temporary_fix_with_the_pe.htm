<html>
<head>
<title>Stop cherry-picking, start merging, Part 6: Replacing the temporary fix with the permanent fix</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Stop cherry-picking, start merging, Part 6: Replacing the temporary fix with the permanent fix</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 19, 2018 / year-entry #63</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Advanced merge base tricks.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20180316-00/?p=98255">
Continuing</a>
our exploration of using merges as a replacement for
cherry-picking, 
here's another scenario you can now solve:
</p>
<p>
<b>How do I make a change in the master branch that will
be automatically reverted when the feature branch merges in?</b>
</p>
<p>
For this scenario, you have a starting commit A
from which you create a feature branch.
Both the master branch and feature branch add additional
commits M1 and F1, respectively,
and then you discover a problem that is common
to both branches.
You want to apply a temporary fix to the master branch
while you work on a permanent fix in the feature branch.
How do you arrange so that the temporary fix in the master
branch will be reverted automatically when the permanent
fix merges in?
</p>
<p>
Okay, first the thing that doesn't work:
Make the temporary fix in the master branch, cherry-pick it into
the feature branch, and then revert it in the feature branch.
This doesn't work because you have essentially created
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20180313-00/?p=98225">
the ABA problem</a>.
</p>
<p>
One way to solve this problem is to use the patch branch technique
to apply the temporary fix to both branches,
and then immediately revert it in the feature branch.
This is basically explicitly creating an ABA situation, but doing so
in a way that will cause the A to be the winner during the eventual merge.
</p>
<p>
Another way to solve the problem is to skip the patch+revert step
and replace it with an ignore (which is basically what the patch+revert is).
Create the patch branch as usual, merge it into the master branch as usual,
but instead of performing a normal merge into the feature branch,
ignore the change.
</p>
<svg width="0" height="0">
 <defs>
  <marker id="arrowhead" markerWidth="5" markerHeight="5" refX="-2" refY="0"
    viewBox="-6 -6 12 12" orient="auto">
    <polygon points="-2,0 -5,5 5,0 -5,-5" fill="black" stroke="black"
      stroke-dasharray="1 0" />
  </marker>
  <path id="larr" d="M20,10 L3,10" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="larr3" d="M98,10 L3,10" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="nwarr" d="M20,20 L3,3" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="swarr" d="M20,2 L3,17" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="swarr3" d="M98,2 L6,57" stroke="black"
   marker-end="url(#arrowhead)" />
 </defs>
</svg>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M2</td>
<td>&nbsp;</td>
<td>master</td>
</tr>
<tr>
<td>apple</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
</tr>
<tr>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">A</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">P</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>patch</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F2</td>
<td>&nbsp;</td>
<td>feature</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
</table>
<p>
We create a patch branch from the common commit A
and apply the temporary fix to it (changing <code>apple</code>
to <code>berry</code>), producing commit P.
We merge that branch into the master branch (producing commit M2
with the temporary fix),
and we also merge it into the feature branch with <code>-s ours</code>
to indicate that we don't want any code changes from this merge;
we are creating it only for bookkeeping purposes.
The line remains <code>apple</code> in the feature branch,
so that you can continue debugging the problem and developing
a permanent fix.
</p>
<p>
When the two branches merge, the patch branch will be used as
the merge base, and relative to that choice of merge base,
the master branch didn't change anything, whereas the feature
branch "changed" it to <code>apple</code>.
The merge will therefore change the line back to <code>apple</code>.
Presumably you won't perform this merge until you have a
permanent fix in the feature branch!
</p>
<p>
If you use an online service to manage your pull requests,
and that online service doesn't provide a way to override the
merge algorithm,
then you can use the pre-merge technique described earlier.
</p>
<p>
<b>What if I already made a change in the master branch that I want to
be automatically reverted when the feature branch merges in?</b>
Can I create a patch branch retroactively?
</p>
<p>
Yes, you can still create a patch branch retroactively,
using the same technique we have been using throughout this series.
Create a patch branch with a copy of the temporary fix,
merge it into the master branch (where it will do nothing
because the temporary fix is already in the master branch),
and also merge it into the feature branch with <code>-s ours</code>
to indicate that you want no code change, just bookkeeping.
</p>
<p>
We continue with another question
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275">
next time</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20180319-00/?p=98265#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://blogs.msdn.microsoft.com/oldnewthing/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="4" aria-required="true"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required='true' required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required='true' required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" /></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit btn btn-default" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='98265' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="3887da2a54" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="198"/></p>			</form>
			</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1330055">
				<div id="div-comment-1330055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265#comment-1330055">
			March 19, 2018 at 11:43 am</a>		</div>

		<p>Perhaps this series should have been entitled &#8220;stop using Git.&#8221;</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265&#038;replytocom=1330055#respond' onclick='return addComment.moveForm( "div-comment-1330055", "1330055", "respond", "98265" )' aria-label='Reply to Peter'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1330065">
				<div id="div-comment-1330065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265#comment-1330065">
			March 19, 2018 at 11:50 am</a>		</div>

		<p>Why? I think it&#8217;s awesome how powerful it is. But, of course, with great power comes great responsibility. Use it wisely. You CAN shoot yourself in the foot with it.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265&#038;replytocom=1330065#respond' onclick='return addComment.moveForm( "div-comment-1330065", "1330065", "respond", "98265" )' aria-label='Reply to Vilx-'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1330075">
				<div id="div-comment-1330075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265#comment-1330075">
			March 19, 2018 at 3:29 pm</a>		</div>

		<p>The only &#8220;stop using&#8221; title that is plausible is &#8220;stop using git cherry-pick&#8221;. Of the list of problems a source control could have, having a feature that is a bad idea to use is among the least vexing. I can point a worse finger at TFS, at SVN, at StarTeam, and I believe at Mercurial.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265&#038;replytocom=1330075#respond' onclick='return addComment.moveForm( "div-comment-1330075", "1330075", "respond", "98265" )' aria-label='Reply to Joshua'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1330195">
				<div id="div-comment-1330195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265#comment-1330195">
			March 20, 2018 at 3:16 pm</a>		</div>

		<p>And Perforce has a lot of fundamental flaws that cause irrecoverable data loss in normal use, and hides project history from you.<br />
Not to mention its behaviour depends on whether it&#8217;s hosted on a Windows or Linux server. There&#8217;s some really nasty limitations if on a Windows one &#8211; it&#8217;s not even possible to change Filename Capitalisation!</p>
<p>I&#8217;ll take git over any of the above options.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265&#038;replytocom=1330195#respond' onclick='return addComment.moveForm( "div-comment-1330195", "1330195", "respond", "98265" )' aria-label='Reply to Richard'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even depth-3" id="comment-1330215">
				<div id="div-comment-1330215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265#comment-1330215">
			March 20, 2018 at 9:41 pm</a>		</div>

		<p>No, cherry-pick is an essential feature. </p>
<p><i>Create a patch branch with a copy of the temporary fix</i>, which Raymond recommends above, is obtained via cherry-pick.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265&#038;replytocom=1330215#respond' onclick='return addComment.moveForm( "div-comment-1330215", "1330215", "respond", "98265" )' aria-label='Reply to Alex Cohn'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1330095">
				<div id="div-comment-1330095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265#comment-1330095">
			March 20, 2018 at 2:35 am</a>		</div>

		<p>I won&#8217;t trade Git for anything.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265&#038;replytocom=1330095#respond' onclick='return addComment.moveForm( "div-comment-1330095", "1330095", "respond", "98265" )' aria-label='Reply to xcomcmdr'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1330185">
				<div id="div-comment-1330185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Craig</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265#comment-1330185">
			March 20, 2018 at 3:15 pm</a>		</div>

		<p>I would trade git for literally anything else.  It baffles me how it ever became the de facto standard.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265&#038;replytocom=1330185#respond' onclick='return addComment.moveForm( "div-comment-1330185", "1330185", "respond", "98265" )' aria-label='Reply to Craig'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1330225">
				<div id="div-comment-1330225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265#comment-1330225">
			March 21, 2018 at 1:47 am</a>		</div>

		<p>Why ?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265&#038;replytocom=1330225#respond' onclick='return addComment.moveForm( "div-comment-1330225", "1330225", "respond", "98265" )' aria-label='Reply to xcomcmdr'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

