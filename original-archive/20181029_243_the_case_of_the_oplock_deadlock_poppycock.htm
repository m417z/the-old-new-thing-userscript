<html>
<head>
<title>The case of the oplock deadlock poppycock</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The case of the oplock deadlock poppycock</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 29, 2018 / year-entry #243</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>16</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Call Sherlock.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that their application would sometimes hang
trying to open a file.
The call to <code>Create&shy;File</code> would simply hang,
rather than failing with
<code>ERROR_</code><code>SHARING_</code><code>VIOLATION</code>
or some other error code.
</p>
<p>
One case where a <code>Create&shy;File</code> can hang is
when there is an oplock on the file that needs to be broken.
</p>
<p>
Explorer takes an oplock on files when generating thumbnails.
This allow Explorer to be notified when another application
wants access to the file in a manner that conflicts with the
the thumbnail extractor, so it can abandon the thumbnail
operation and close the file, thereby permitting the other
application's <code>Create&shy;File</code> call to succeed.
If Explorer hadn't used an oplock, then an application
that wants to access the file would get an immediate
sharing violation.
</p>
<p>
The thread that owns the oplock is stuck here:
</p>
<pre>
kernel32!CreateFileW+0x379
ole32!CFileStream::Init_OpenOrCreate+0x10d
ole32!CFileStream::InitWorker+0xb5
ole32!DfFromName+0x8f
ole32!DfOpenDocfile+0x1f2
ole32!DfOpenStorageEx+0x183
ole32!StgOpenStorageEx+0x9d
contoso!DllUnregisterServer+0xa9c0
SHELL32!CIconAndThumbnailOplockWrapper::Extract+0x14
SHELL32!CShellItem::_GetThumbnail+0x6f
... and so on ...
</pre>
<p>
The shell took an oplock on the file and then
called the thumbnail provider to extract the thumbnail.
The thumbnail provider called back into
<code>Stg&shy;Open&shy;Storage&shy;Ex</code>,
presumably to open the file in order to get the thumbnail.
But that open call also hung.
</p>
<p>
The thumbnail extractor passed these
flags to
<code>Stg&shy;Open&shy;Storage&shy;Ex</code>:
</p>
<ul>
<li><code>STGM_</code><code>READ&shy;WRITE</code></li>
<li><code>STGM_</code><code>SHARE_</code><code>DENY_</code><code>WRITE</code></li>
<li><code>STGM_</code><code>TRANSACTED</code></li>
</ul>
<p>
The interesting flag here is
<code>STGM_</code><code>READ&shy;WRITE</code>.
The oplock takes read access with deny-write,
and the attempt to open the file for writing
conflicts with the oplock.
This causes the
<code>Create&shy;File</code> to block
waiting for the oplock to be released.
But the oplock can't be released until the thumbnail
extraction is complete.
Deadlock.
</p>
<p>
The customer confirmed that changing
<code>STGM_</code><code>READ&shy;WRITE</code>
to
<code>STGM_</code><code>READ</code>
fixes the problem.
"But they say that they need write access."
</p>
<p>
We never did learn why the customer requires write access
in order to extract a thumbnail from a file.
I mean, does that mean that they cannot extract thumbnails
from read-only files, or from CD-ROM drives?
</p>
<p>
We strongly encouraged them to find a way to extract
thumbnails that doesn't require write access.
But if that is impossible for some reason,
they can work around it by indicating that their
thumbnail extractor is not compatible with oplocks.
</p>
<pre>
[HKEY_CLASSES_ROOT\CLSID\{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}]
NoOplock=REG_DWORD:1
</pre>
<p>
<strike>For apps packaged with the Desktop Bridge,
you can make
<a HREF="https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/element-desktop2-desktoppreviewhandler">
this declaration in your manifest</a></strike>:
</p>
<pre>
<strike>&lt;desktop2:DesktopPreviewHandler ... NoOplock="true"/&gt;</strike>
</pre>
<p>
Correction: The declaration above is for preview handlers,
not thumbnail handlers.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1368955">
				<div id="div-comment-1368955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1368955">
			October 29, 2018 at 7:36 am</a>		</div>

		<p>When you said &#8220;The thumbnail extractor passed these flags to Stg­Open­Storage­Ex&#8221;, I thought it was Exlorer&#8217;s thumbnail extractor we were talking about (&#8220;Explorer takes an oplock on files when generating thumbnails&#8221;).  But apparently the user&#8217;s program also extracts thumbnails itself, passing those weird flags, right?  That part was confusing.  </p>
<p>And yes, you shouldn&#8217;t need read-write to extract thumbnails.  I&#8217;m not even sure that DenyWrite is necessary (as long as the file has a thumbnail in it, an application could change part of a file without affecting the thumbnail). </p>
<p>Does every program that wants thumbnails need to extract its own?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1369025">
				<div id="div-comment-1369025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369025">
			October 29, 2018 at 3:22 pm</a>		</div>

		<p>Explorer&#8217;s thumbnail extractor infrastructure takes an oplock, and then loads and calls the registered thumbnail extractor to do the work of extracting the thumbnail. The thumbnail extractor decided to call StgOpenStorageEx with the specified flags.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1369035">
				<div id="div-comment-1369035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R P (MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369035">
			October 29, 2018 at 3:25 pm</a>		</div>

		<p>The thumbnail extractor is an in-proc COM object loaded by Explorer when it needs to render the thumbnail of a file of one of the types for which that COM object is registered. Windows provides thumbnail extractors for many common file types, but if you want thumbnails for a proprietary file type to appear in Explorer, you need to provide the code to create them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1369055">
				<div id="div-comment-1369055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369055">
			October 29, 2018 at 3:28 pm</a>		</div>

		<p>Explorer has a thumbnail extracting infrastructure that loads and calls extractors. Explorer itself doesn&#8217;t know how to extract thumbnails; it relies on the extractors to do that. It&#8217;s not like Explorer knows how to parse Contoso Deluxe files. The program probably isn&#8217;t doing anything explicit to extract thumbnails; it just created a File Open dialog, and the File Open dialog triggered the thumbnail extraction.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1369115">
				<div id="div-comment-1369115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369115">
			October 30, 2018 at 7:26 am</a>		</div>

		<p>Now I get it; thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1 parent" id="comment-1368965">
				<div id="div-comment-1368965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1368965">
			October 29, 2018 at 8:22 am</a>		</div>

		<p>So the call stack is actually:</p>
<p>&#8230;<br />
ole32!StgOpenStorageEx+0x9d (Shell)<br />
&#8230;<br />
SHELL32!CIconAndThumbnailOplockWrapper::Extract<br />
&#8230;<br />
customer!ThumbnailProviderImplementation<br />
ole32!StgOpenStorageEx+0x9d (Customer asking for write access, the deadlock)</p>
<p>and the customer is using IInitializeWithFile instead of the recommended IInitializeWithStream?</p>
<p>There are some image formats that store a thumbnail inside so maybe that&#8217;s why they want write access? The shell already caches thumbnails so there should be little to gain by doing this.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1368985">
				<div id="div-comment-1368985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1368985">
			October 29, 2018 at 9:51 am</a>		</div>

		<p>I strongly suspect this &#8220;need&#8221; falls into the same category as the developer who &#8220;needs&#8221; to call GC.Collect(), or TerminateThread(), or numerous other functions that you generally don&#8217;t need.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1369045">
				<div id="div-comment-1369045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369045">
			October 29, 2018 at 3:25 pm</a>		</div>

		<p>Okay, so it looks like you&#8217;re drawing the callback with the oldest call at the top. In which case it&#8217;s</p>
<p>shell32!ThumbnailExtractorThreadProc (shell background thread)<br />
…<br />
shell32!CIconAndThumbnailOplockWrapper::Extract<br />
…<br />
customer!ThumbnailProviderImplementation<br />
ole32!StgOpenStorageEx+0x9d (Customer asking for write access, the deadlock)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even depth-2" id="comment-1369085">
				<div id="div-comment-1369085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369085">
			October 29, 2018 at 6:45 pm</a>		</div>

		<p>I think you&#8217;re right that their code is attempting to store the generated thumbnail in the file.</p>
<p>I saw some sample code on Chinese programming forum that do this, and while some of the comments in code are Chinese, some others are in English, hinting the code is copied from elsewhere.</p>
<p>To be fair, that code fragment correctly named something like &#8220;how to generate thumbnail and update it in the file&#8221;. Probably the &#8220;But they say that they need write access.&#8221; people just copy the code on web in their thumbnail provider.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1368975">
				<div id="div-comment-1368975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>GL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1368975">
			October 29, 2018 at 9:50 am</a>		</div>

		<p>I thought <code>desktop2:DesktopPreviewHandler</code> was for preview handlers, not thumbnail extractors?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1369015">
				<div id="div-comment-1369015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369015">
			October 29, 2018 at 3:18 pm</a>		</div>

		<p>Oops, I think you&#8217;re right. I don&#8217;t see a NoOplock option for ThumbnailHandler, alas.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1368995">
				<div id="div-comment-1368995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1368995">
			October 29, 2018 at 10:07 am</a>		</div>

		<p>poppycock &#8211; now there&#8217;s a word that doesn&#8217;t get used enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1369005">
				<div id="div-comment-1369005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369005">
			October 29, 2018 at 12:17 pm</a>		</div>

		<p>I could <em>imagine</em> somebody trying to do something clever and store a cached thumbnail within the file (or maybe within an Alternate Data Stream, to be <em>really</em> clever.) Does seem a bit odd, though.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1369075">
				<div id="div-comment-1369075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://www.hazelnutsoftware.co.uk' rel='external nofollow' class='url'>Electron Shepherd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369075">
			October 29, 2018 at 3:34 pm</a>		</div>

		<p>I can envisage situations where that&#8217;s a good thing to do. A graphics package might want to generate thumbnails of a large image at all the commonly supported resolutions once, and then hand a suitable small image back to the thumbnail handler when asked, rather than loading a potentially many-megabyte image into memory from disk, and doing lots of processing on it, just to generate a thumbnail on demand.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse even thread-odd thread-alt depth-1" id="comment-1369095">
				<div id="div-comment-1369095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369095">
			October 29, 2018 at 7:38 pm</a>		</div>

		<p>It would be a horrible hack, but I guess there could be an option to make a temporary copy of the file in question for the extractor. This solution should start at the -1000 point mark though because it&#8217;s a solution to a problem that shouldn&#8217;t exist in the first place!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maximilien-noal odd alt thread-even depth-1" id="comment-1369105">
				<div id="div-comment-1369105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maximilien+Noal' rel='external nofollow' class='url'>Maximilien Noal</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181029-00/?p=100075#comment-1369105">
			October 30, 2018 at 6:17 am</a>		</div>

		<p>&gt; CD-ROM drives? </p>
<p>What&#8217;s that ?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

