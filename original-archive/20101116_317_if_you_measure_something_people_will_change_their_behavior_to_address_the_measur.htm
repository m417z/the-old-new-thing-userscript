<html>
<head>
<title>If you measure something, people will change their behavior to address the measurement and not the thing the measurement is intended to measure</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If you measure something, people will change their behavior to address the measurement and not the thing the measurement is intended to measure</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 16, 2010 / year-entry #318</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>27</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">We all know that once you start measuring something, people will change the way they behave. We hope that the change is for the better, but that's not always the case, and that's especially true if you are using the metrics as a proxy for something else: People will manipulate the metric without necessarily affecting...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>We all know that <a href="http://blogs.msdn.com/b/oldnewthing/archive/2009/05/06/9590004.aspx"> once you start measuring something, people will change the way they behave</a>. We hope that the change is for the better, but that's not always the case, and that's especially true if you are using the metrics as a proxy for something else: People will manipulate the metric without necessarily affecting the thing that your metric is trying to measure.</p>
<p> I was reminded of this topic when I read a story in <a href="http://thedailywtf.com/"> The Daily WTF</a> of <a href="http://thedailywtf.com/Articles/Productivity-20.aspx"> a manager who equated number of checkins with productivity</a>. </p>
<p> One metric that nearly all software products use to gauge productivity and product progress is the number of bugs outstanding and the number of bugs fixed. Of course, not all bugs are created equal: Some are trivial to fix; others are substantial. But if you believe that the difficulty distribution of bugs, while not uniform, is at least unbiased, then the number of bugs is roughly proportional to the amount of work. The bug count is just a rough guide, of course. Everybody works together, with programmers promising not to manipulate the metrics, and managers promising not to misinterpret them. </p>
<p> At least that's how it's supposed to work. </p>
<p> (All that text up to this point is useless. When you're telling a story, you have to include a lot of useless text in order to motivate or set the scene for the actual story that comes up next or just to make the story sound like an actual story instead of just a sequence of events. What amazes me is that so many people seem to focus on the "literary throat-clearing" and miss the actual story!) </p>
<p> A friend of mine told me about a project from many years (and jobs) ago. Things were pretty hectic, people were working late, it was a stressful time. The bug statistics were gathered by an automated process that ran at 4am, and every day, management would use those statistics as one factor in assessing the state of the project. </p>
<p> My friend was wrapping up another late night at the office after polishing off a few bugs, and as a final gesture, re-ran the bug query to enjoy the satisfaction of seeing the number of bugs go down. </p>
<p> Except it went up. </p>
<p> What happened is that another member of the project was also working late, and that other member had a slightly different routine for wrapping up at the end of the day: Run the query and look at the number next to your name. If it is higher than you would like, then take some of your bugs and transfer them to the other members of the team. Choose a victim, add a comment like "I think this is a problem with the XYZ module" (where XYZ is the module the victim is responsible for), and reassign the bug to your victim. It helps if you choose victims who already have a lot of bugs, so they might not even notice that you slipped them another one. </p>
<p> By following this simple nightly routine, you get management off your case for having too many outstanding bugs. In fact, they might even praise you for your diligence, since you never seem to be behind on your work. </p>
<p> Of course, management looks at these manipulated numbers and gets a false impression of the state of the project. But if you're not one of those "team player" types, then that won't matter to you. </p>
<p> And if that describes you, then I don't want you working on my project. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (27)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-874543">
				<div id="div-comment-874543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sunil Joshi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874543">
			November 16, 2010 at 7:27 am</a>		</div>

		<p>In Economics, this is called Goodhart&#39;s Law.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874553">
				<div id="div-comment-874553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874553">
			November 16, 2010 at 7:42 am</a>		</div>

		<p>I think that useless part is called an exposition.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874563">
				<div id="div-comment-874563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">story of my life</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874563">
			November 16, 2010 at 7:47 am</a>		</div>

		<p>Bugs which boss is responsible for: customer is wrong, the app should behave strange and look ugly. &lt;close &amp; dismiss&gt;</p>
<p>My bugs: customer is right, i should really change whole architecture. again. &lt;work day &amp; night&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874573">
				<div id="div-comment-874573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua Ganes</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874573">
			November 16, 2010 at 7:48 am</a>		</div>

		<p>I totally agree. This sounds a lot like a Joel Spolsky article on a similar topic. If you want a false sense of productivity, just provide a well-defined set of metrics to judge by. The developers will quickly learn to maximize the metrics, even at the cost of actual productive work. The way to get what you really want is to build a team of reliable people and instill a common ideal of workmanship, quality, and teamwork among them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874593">
				<div id="div-comment-874593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874593">
			November 16, 2010 at 7:55 am</a>		</div>

		<p>In the example given, part of the problem is that programmers are expected to work together as a team, but are judged individually. Perhaps one should count the total number of bugs at each severity level &amp; show a bar graph over time of those counts. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874603">
				<div id="div-comment-874603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874603">
			November 16, 2010 at 8:09 am</a>		</div>

		<p>I think it describes some people I&#39;ve worked with. &nbsp;I do a lot of installation work, and one particular developer would bounce most bugs my way because &quot;it could be the install!&quot; &nbsp;Of course, many of them turned out to be application bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874613">
				<div id="div-comment-874613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874613">
			November 16, 2010 at 8:13 am</a>		</div>

		<p>@John: yep, looks like my installer is causing bugs alright. It&#39;s installing the application&#39;s buggy code. :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874633">
				<div id="div-comment-874633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874633">
			November 16, 2010 at 8:17 am</a>		</div>

		<p>If I caught him at that, my response would be to code an autojob that sent bugs assigned to me after 4:30PM back to the previous owner (use snapshot if necessary). It would run at 4:30PM to snapshot, then 3AM to assign.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874643">
				<div id="div-comment-874643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PatH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874643">
			November 16, 2010 at 8:28 am</a>		</div>

		<p>Bug collection method and data reporting was faulty. Should have caught the inordinate amount of bug shifting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874653">
				<div id="div-comment-874653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874653">
			November 16, 2010 at 8:33 am</a>		</div>

		<p>@PatH</p>
<p>It just wasn&#39;t designed with cheating programmers in mind. You don&#39;t want to have cheaters in your team.</p>
<p>But even without cheaters the metric is stupid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874663">
				<div id="div-comment-874663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874663">
			November 16, 2010 at 8:57 am</a>		</div>

		<p>Metrics like bug counts, line counts, and even checkin counts don&#39;t find good or average programmers, but they do often highlight slackers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874673">
				<div id="div-comment-874673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874673">
			November 16, 2010 at 9:13 am</a>		</div>

		<p>Analagous gameable metrics for the QA types are count of bugs filed or fixed (the former is merely a nuisance for the developer, the latter will have QA in your face all the time) and number of test cases written.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874683">
				<div id="div-comment-874683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kog999</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874683">
			November 16, 2010 at 10:57 am</a>		</div>

		<p>I used to work in retail non commission and management would measure the &quot;Attachment Rates&quot; of accessories and warranties. so if you sold $10,000 in product and $1,000 of it was from warranties you would have an attachment rate of 10%. Guess what happened when someone wanted to buy a $2,000 TV with no warranty or accessories. I would try to either internally lose the sale or pass it off to someone else. and good luck if they needed to apply for credit to make the purchase.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874693">
				<div id="div-comment-874693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874693">
			November 16, 2010 at 11:18 am</a>		</div>

		<p>Seems like a pretty foolish strategy, not to mention futile. &nbsp;The bug recipients would pick up on the pattern quickly and there&#39;s a perfect paper trail in the defect tracking system documenting the developer&#39;s bad behavior. &nbsp;In any case, the bugs would eventually boomerang if they were genuinely in the code owned by the bad developer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874723">
				<div id="div-comment-874723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">T.C.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874723">
			November 16, 2010 at 12:35 pm</a>		</div>

		<p>You don&#39;t need to be particularly malicious to be perversely motivated by bug counting. A couple of years ago the Dev Manager of the team I was in challenged everybody to fix more bugs than him in a given week as an attempt to drive numbers down. The Dev Lead accepted the bet and raised it for his own team. Nobody (that I was aware of) tried to cheat the system, yet I noticed a small increase in the sloppiness of the work done that week, developers were not as through in their work and rushed to get fixes in. Until then my feature team had been following the practice of writing new unit-tests to expose some of the bugs found at higher levels by hand. We used these tests to exercise fixes and prevent regressions in that area. Well, this practice was the first thing to fly out of the window under the pressure to fix more bugs quicker. It wasn&#39;t cheating, and it wasn&#39;t malicious, for the unit-tests were not a requirement to claim a bug fix, just part of that team&#39;s own philosophy, yet they contributed to better code in the longer run. As a result, the quality of the code went a little down, and the rate of regressions went at little up, but by the time these problems showed up everybody was happy with how quick we were fixing bugs, and god knows we had to fix them quick as they were turning in pretty fast. By then nobody would remember that these problems were partially a consequence of a culture that rewards corrective repair over preventive action &#8212; you don&#39;t get to claim the bugs you never had to fix in your code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874733">
				<div id="div-comment-874733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kog999</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874733">
			November 16, 2010 at 1:08 pm</a>		</div>

		<p>&quot;In any case, the bugs would eventually boomerang if they were genuinely in the code owned by the bad developer.&quot;</p>
<p>So long as it boomerange&#39;s away when your manager is looking and boomerang&#39;s back when he is not this is not a problem. Most managers relying on metrics are less then attentive to their staffs daily work and check the numbers a given number of times a week/day/month. So if you know your manager runs his status report at 4 P.M. on Friday, you ship it to somoneone else and when it comes back to you on monday you&#39;ve got all week to fix it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874743">
				<div id="div-comment-874743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Sutherland</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874743">
			November 16, 2010 at 1:40 pm</a>		</div>

		<p>I&#39;m reminded of a few similar stories &#8211; the company which rewarded testers for finding bugs (so the testers befriended developers, who would then insert trivial &#39;bugs&#39; to be found) and developers (who then got rewarded for &#39;fixing&#39; the trivial &#39;bugs&#39; they had inserted for their tester friends to find) &#8230; and the tale of the developer who re-wrote a large and complex graphics routine to be much more straightforward, shaving two thousand lines of code off the total source size. Then comes time to record the company&#39;s chosen metric: &quot;lines of code contributed&quot;. After a little thought, he put in &quot;-2000&quot;. I wonder what kind of bonus that cost him&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874763">
				<div id="div-comment-874763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874763">
			November 16, 2010 at 1:54 pm</a>		</div>

		<p>@James Sutherland:</p>
<p>Maybe the developer can claim the negative LOC like carbon credits and use them towards any particularly sloppy code that he generates in the next year :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874773">
				<div id="div-comment-874773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874773">
			November 16, 2010 at 2:13 pm</a>		</div>

		<p>@James</p>
<p>I know that last story. The epilogue is that was the last time they measured his productivity by lines of code. (He had been complaining about it for awhile).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874783">
				<div id="div-comment-874783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874783">
			November 16, 2010 at 2:24 pm</a>		</div>

		<p>Here&#39;s a link to the story about the -2000 lines of code, good old Bill Atkinson when he was working on QuickDraw for the original Macintosh:</p>
<p><a rel="nofollow" target="_new" href="http://www.folklore.org/StoryView.py?story=Negative_2000_Lines_Of_Code.txt" rel="nofollow">http://www.folklore.org/StoryView.py</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874793">
				<div id="div-comment-874793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dalek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874793">
			November 16, 2010 at 7:53 pm</a>		</div>

		<p>15 years and four days ago:</p>
<p><a rel="nofollow" target="_new" href="http://dilbert.com/strips/comic/1995-11-13/" rel="nofollow">dilbert.com/&#8230;/1995-11-13</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874803">
				<div id="div-comment-874803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874803">
			November 16, 2010 at 8:57 pm</a>		</div>

		<p>dalek: That&#39;s probably just a coincidence. I&#39;m sure Raymond put today&#39;s article in the queue before that Dilbert was published.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874813">
				<div id="div-comment-874813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874813">
			November 16, 2010 at 11:03 pm</a>		</div>

		<p>At work we have a little list of open, waiting for info, next sp statistics for bugs and incidents. We all try our best to keep the numbers low, as they are just totals. So shifting bugs around won&#39;t help anyone (and also, once you are done with your own bugs, you are expected to help others fix theirs, so shifting won&#39;t help you much).</p>
<p>ps @Gabe: I think he put it in the queue before Dilbert even existed :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874823">
				<div id="div-comment-874823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874823">
			November 17, 2010 at 4:38 am</a>		</div>

		<p>@James Sutherland: I did the same, also for graphics. 9000 -&gt; 4500 LOC. Fortunately, my company didn&#39;t use inane measuring methods.</p>
<p>(20 posts before the &quot;minivan&quot; Dilbert cartoon. I wondered how long it would take)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874933">
				<div id="div-comment-874933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-874933">
			November 17, 2010 at 10:53 am</a>		</div>

		<p>I had a similar problem a few years ago, except it occured around 5pm on Fridays&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875083">
				<div id="div-comment-875083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grumpy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-875083">
			November 18, 2010 at 2:51 am</a>		</div>

		<p>Brillant! Real manglement potential there. No wonder a lot of software sucks (including the stuff I&#39;m chained to at the moment). Down, not across&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-875253">
				<div id="div-comment-875253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101116-00/?p=12273#comment-875253">
			November 18, 2010 at 8:37 am</a>		</div>

		<p>You know the admin abuse on Wikipedia and Wikipedia Review? A lesson to learn fron that is that the number of edits don&#39;t measure the competence of an editor either.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

