<html>
<head>
<title>How can I generate a stack backtrace that is independent of ASLR?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I generate a stack backtrace that is independent of ASLR?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 25, 2016 / year-entry #110</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Use module offsets rather than absolute addresses.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
When you capture a stack backtrace with
<a HREF="https://msdn.microsoft.com/library/windows/desktop/bb204633(v=vs.85).aspx">
the
<code>Capture&shy;Stack&shy;Backtrace</code> function</a>,
the addresses returned are absolute addresses.
If you're capturing these values for future correlation,
then saving the raw addresses is not interesting
because there's no guarantee that the modules in your process
will be loaded at the same address every time.
And indeed, with address space layout randomization (ASLR),
they will almost certainly <i>not</i> be loaded at the same
address each time.
</p>
<p>
So how do you save this backtrace in a way that lets you recognize
it if it happens again?
</p>
<p>
For each address in the stack backtrace,
convert it to a module and an offset.
You can use the <code>Get&shy;Module&shy;Handle&shy;Ex</code> function
to obtain the handle to the enclosing module.
This is useful for two things:
</p>
<ol>
<li>You can call <code>Get&shy;Module&shy;File&shy;Name</code>
    to get the name of the module.
    You probably want to save only the file name portion and remove
    the directory, because the directory can vary from machine to machine.</p>
<li>You can subtract the module handle from the raw pointer,
    resulting in an offset.
</ol>
<p>
This combination of module and offset is independent of ASLR,
in the sense that if ASLR loads the module at another address,
the offset of the function in the backtrace will remain the same.
And from the module and offset,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653">
you can reconstruct the original stack backtrace</a>.
</p>
<p>
You can feed the module name and offset into a hash function
if you want to generate a signatore for the stack trace.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-raykoopa even thread-even depth-1 parent" id="comment-1250515">
				<div id="div-comment-1250515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ray+Koopa' rel='external nofollow' class='url'>Ray Koopa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250515">
			May 25, 2016 at 7:56 am</a>		</div>

		<p>I often read the title of your articles and think &#8220;Damn, yeah, I wonder how ( / why) this is done, probably complicated stuffs&#8230;&#8221;, and at the end I&#8217;m like &#8220;Oh well, that was logical and really easy!&#8221; =)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1250577">
				<div id="div-comment-1250577" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250577">
			May 25, 2016 at 5:12 pm</a>		</div>

		<p>Just apply Occam&#8217;s razor. I&#8217;m on the other end: I assume things have the simplest (and most boring) explanation, and I&#8217;m usually right. Specially with Raymond&#8217;s articles.<br />
For example: keeping an API undocumented frees the OS developers from, well, documenting it and maintaining back compatibility, so what&#8217;s the need of a conspiracy theory to explain it being undocumented? Of course, &#8220;Microsoft hurts competence by using internal APIs&#8221; makes a great headline. But it doesn&#8217;t make much sense if you stop to think about it.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1250525">
				<div id="div-comment-1250525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tautvydas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250525">
			May 25, 2016 at 7:56 am</a>		</div>

		<p>Unfortunately, Get­Module­Handle­Ex is not allowed on Windows Store. Fortunately for our use case, we only care about functions from our own DLLs, so we link them with &#8220;/MAP&#8221; option, then after linking we parse the map file to get the list of function addresses in our modules and then at runtime subtract the __ImageBase (thanks to <a href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483</a>) of our DLL from address returned by RtlCaptureStackBackTrace and do a binary search on the list of functions we got the from the map file to find which function/module it was. It&#8217;s not perfect, but works well enough for our purposes.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1251575">
				<div id="div-comment-1251575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1251575">
			June 7, 2016 at 10:16 am</a>		</div>

		<p>Scan backwards from any allowed function in kernel32.dll to find kernel32.dll&#8217;s load address and call GetProcAddress() for the one you want.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1250536">
				<div id="div-comment-1250536" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250536">
			May 25, 2016 at 9:56 am</a>		</div>

		<p>Something implied above but not explicitly stated is that the delta between any symbol and the base address of a module is a constant.  Modules are always contiguous blocks of memory, and when relocating them, the entire block is shifted.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1250555">
				<div id="div-comment-1250555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250555">
			May 25, 2016 at 12:55 pm</a>		</div>

		<p>Indeed &#8211; nothing else could work considering that constants inside of modules ate are often addressed via relative offsets to the instruction pointer. </p>
<p>If you could separately relocate posts you&#8217;d have to fix up those offsets which might be impossible because the distance might be too large to be encoded in the same slave as before.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-3 parent" id="comment-1250565">
				<div id="div-comment-1250565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250565">
			May 25, 2016 at 3:33 pm</a>		</div>

		<p>Did you write that on a phone or tablet? Some of the words are&#8230; interesting.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1250566">
				<div id="div-comment-1250566" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ElectronShepherd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250566">
			May 25, 2016 at 3:53 pm</a>		</div>

		<p>Not everyone is a native English speaker &#8211; it might be that Voo is using machine translation to read the post (or, as is very common, their language knowledge is good enough to read and understand text, but not to write it), and is using machine translation from his/her native language to post a reply.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1250975">
				<div id="div-comment-1250975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kemp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250975">
			June 1, 2016 at 9:06 am</a>		</div>

		<p>It looks like typos/autocorrect issues to me. For example, are -&gt; ate is an easy typo to do, but a very unlikely choice for a translation program. The overall quality of the text is also far higher than I&#8217;d expect from the typical translation programs. If we assume a swipe style mobile keyboard then &#8220;slave&#8221; is very likely to be &#8220;space&#8221;. Not sure what &#8220;posts&#8221; is, possibly &#8220;parts&#8221; except that o is quite far away from a.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1250575">
				<div id="div-comment-1250575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160525-00/?p=93516#comment-1250575">
			May 25, 2016 at 4:10 pm</a>		</div>

		<p>VirtualQuery/GetMappedFileName will do same but will not stuck if some other thread hanging inside loader lock waiting you..</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

