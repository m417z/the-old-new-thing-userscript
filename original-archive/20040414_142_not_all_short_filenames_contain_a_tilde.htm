<html>
<head>
<title>Not all short filenames contain a tilde</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Not all short filenames contain a tilde</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 14, 2004 / year-entry #143</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>50</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">I'm sure everybody has seen the autogenerated short names for long file names. For the long name "Long name for file.txt", you might get "LONGNA~1.TXT" or possibly "LO18C9~1.TXT" if there are a lot of collisions. What you may not know is that sometimes there is no tilde at all! Each filesystem decides how it wants...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>I'm sure everybody has seen the autogenerated short names for  long file names.  For the long name "Long name for file.txt",  you might get "LONGNA~1.TXT" or possibly  "LO18C9~1.TXT" if there are a lot of collisions.</p>
<p>  What you may not know is that sometimes there is no tilde at all!  </p>
<p>  Each filesystem decides how it wants to implement short filenames.  Windows 95 uses the "~n" method exclusively.  Windows NT adds  the hexadecimal hash overflow technique.  But some filesystems  (like Novell) just truncate the name.  "Long name for file.txt"  on a Novell server will come out to just "LONGNAME.TXT".  </p>
<p>  So don't assume that all short names contain tildes.  They don't.  This means no cheating on skipping a call to  <a href="http://msdn.microsoft.com/library/en-us/fileio/base/getlongpathname.asp">  GetLongFileName</a> if you don't see any tildes,  since your optimization is invalid on Novell networks.  </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (50)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-163103">
				<div id="div-comment-163103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Sheppard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163103">
			April 14, 2004 at 7:04 am</a>		</div>

		<p>Novell still has networks? :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163113">
				<div id="div-comment-163113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://glob.com.au' rel='external nofollow' class='url'>byron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163113">
			April 14, 2004 at 7:09 am</a>		</div>

		<p>i&#8217;ve had to do plenty of workarounds due to some assumptions that were broken by novell.</p>
<p>eg.  don&#8217;t assume that every non-root directory will contain &quot;.&quot; and &quot;..&quot;.  not so in novell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163133">
				<div id="div-comment-163133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163133">
			April 14, 2004 at 7:49 am</a>		</div>

		<p>&quot;i&#8217;ve had to do plenty of workarounds due to some assumptions that were broken by novell.&quot;</p>
<p> I have to ask, is this really a situation where novell has assumed the wrong thing?  I assume the ~ thing is a byproduct of the long filename support, but do the docs say that you can expect a ~ or not, if not then I don&#8217;t see why this is particularly wrong.</p>
<p>Relying on things like a tilde appearing in a filename or not, would generally make me itch &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163153">
				<div id="div-comment-163153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://glob.com.au' rel='external nofollow' class='url'>byron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163153">
			April 14, 2004 at 8:40 am</a>		</div>

		<p>&quot;is this really a situation where novell has assumed the wrong thing&quot;</p>
<p>no, i mean there were assumptions made by developers working on code that i&#8217;ve inherited.  the developers had made assumptions which were not wise, given novell doesn&#8217;t work the same as windows.  novell isn&#8217;t wrong, just different.</p>
<p>i guess i should of worded that sentance as:</p>
<p>&quot;i&#8217;ve had to do plenty of workarounds due to some poor assumptions made by prior developers that were broken by novell&#8217;s implementation.&quot;</p>
<p>&quot;.. would generally make me itch&quot;</p>
<p>indeed.  the specific case we had was window&#8217;s directoryExists function always returned false when pointed at some particular version of samba&#8217;s shares. of course a major client had that version of samba and couldn&#8217;t upgrade.</p>
<p>so the code was changed to do a findFirst against anyFile, on the assumption that every directory has &#8216;.&#8217; and &#8216;..&#8217;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163173">
				<div id="div-comment-163173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://absoblogginlutely.net' rel='external nofollow' class='url'>Andy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163173">
			April 14, 2004 at 9:58 am</a>		</div>

		<p>Long file names will contain a tilde for the first 9999 files with the same stem ie longfi~1 longfi~2. after that it seems to start randomizing the end bit. I know as I spent four days on a training course watching the machine slowly make files starting at longfilename1 through to longfilename10000000000 to see how far it would get. After all there would seem to be a (theoretical) limit to the number of files in a directory and i was curious to see what happened. The only thing that happened was that the process of making a file took longer and longer and longer as the number of files increased. Sometimes it would take 15 or so minutes to write one file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163203">
				<div id="div-comment-163203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc Wallace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163203">
			April 14, 2004 at 10:31 am</a>		</div>

		<p>I believe there was also a setting in Win95 where you could control how long filenames were converted into 8.3 &#8212; whether Windows would use the ~n format, or use a kind of truncation.</p>
<p>The truncation did some sort of incrementing, so &quot;filename1.txt&quot; would become &quot;filename.txt&quot;, and &quot;filename2.txt&quot; would then be either &quot;filenamf.txt&quot; or &quot;filenam2.txt&quot;.</p>
<p>Ah, here we go.  Create a DWORD at<br />
<br />HKLMSystemCurrentControlSetControlFileSystemNameNumericTail and set it to 0.  (1 or missing means it uses tildes).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163223">
				<div id="div-comment-163223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dumb User</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163223">
			April 14, 2004 at 11:00 am</a>		</div>

		<p>I have a quick question, I don&#8217;t quite understand how you have a Novell file system on a windows machine, since isn&#8217;t this call platform specific?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163243">
				<div id="div-comment-163243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163243">
			April 14, 2004 at 12:13 pm</a>		</div>

		<p>Novell provides network file servers. You can access Novell file servers from a Windows client. </p>
<p>Wildcards match both the long and short name. The short name of &quot;foo.html&quot; is (say) &quot;foo~1.htm&quot; which matches *.htm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163293">
				<div id="div-comment-163293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jpayne@NOSPAM.dsl.pipex.com' rel='external nofollow' class='url'>Jonathan Payne</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163293">
			April 14, 2004 at 12:46 pm</a>		</div>

		<p>(Sorry this is off topic but it kind of relates to Anonymous Coward’s post)</p>
<p>One thing I am not so keen on Windows XP is the automagic deleting of HTML because the operating system is too broken to do the right thing (OK, maybe not so fair but this bug really annoyed me at the time).</p>
<p>I saved one of my web pages in IE using the &quot;Web Page, Complete&quot; option so I could edit it.  I spent an hour or so editing the HTML file and then, just before uploading the file, I deleted the folder IE had created at the same time as making the file.  Guess what happened&#8230;&#8230; Windows decided that the folder and the file were somehow linked and deleted both.  As I had the recycle bin turned off, I lost all my work.</p>
<p>You can see this effect by saving any web page in IE and using the &quot;Web page, complete&quot; option and then deleting only the file or only the folder.  Note that Explorer is kind enough to warn you if you rename the folder but happily deletes the folder without asking.</p>
<p>I am guessing that when this &#8216;feature&#8217; was designated this way because someone thought that most users would only remember to delete the file or the folder but not both.  I think the correct solution would be for IE not to link the files in this way or to put the HTML and associated files into a folder and associate the folder with the HTML or to store web pages in a single file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163303">
				<div id="div-comment-163303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163303">
			April 14, 2004 at 1:02 pm</a>		</div>

		<p>You can save in &quot;Web Archive, single file&quot; format if you want everything bundled into a single file. </p>
<p>Connected files are a feature invented by Office. You can disable them via a system policy if you don&#8217;t like them.</p>
<p>Unclear what you mean &quot;put the HTML and associated files into a folder and associate the folder with the HTML&quot; &#8211; that&#8217;s what happened. &quot;Foo_files&quot; is assocated with &quot;foo.htm&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163313">
				<div id="div-comment-163313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.johntopley.com' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163313">
			April 14, 2004 at 1:35 pm</a>		</div>

		<p>You can also disable them within Folder Options in Windows Explorer. There are three settings for &quot;Managing pairs of Web pages and folders&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163463">
				<div id="div-comment-163463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163463">
			April 14, 2004 at 5:12 pm</a>		</div>

		<blockquote><p>
  For the long name &quot;Long name for file.txt&quot;,<br />
  <br />&gt; you might get &quot;LONGNA~1.TXT&quot; or<br />
  <br />&gt; possibly &quot;LO18C9~1.TXT&quot;</p>
<p>Do you know why Windows 98 is unaware of that fact?  The Scandisk command of Windows 98 diagnoses cases such as &quot;LO18C9~1.TXT&quot;, saying that the short filename is broken and offering to repair it.</p>
<p>The Scandisk command of Windows 98 is still vitally important.  After a blue screen, if you boot Windows 98 and let it run Scandisk, it writes a log file on the C: partition listing all of the files that it deletes.  Then you can know which files you&#8217;d better restore from backup.  But after a blue screen, if you boot Windows 2000 or XP, Chkdsk only displays a list of files on the screen, scrolling faster than could possibly be read, scrolling faster than can be copied down with pen and paper.  Windows 2000 and XP know that you don&#8217;t need the list of files it&#8217;s deleting, they know you don&#8217;t want to restore them from backups.</p>
<p>One time Windows 2000 deleted about 20,000 files that way during boot.  The reason I had an estimate was that I had done an anti-virus scan a day or so before the blue screen and it reported the number of files scanned.  During boot, although the scrolling was too fast to read, I noticed that a ton of them were in the Temporary Internet Files folder.  (But does this mean 100% of them were?  I doubt it, I think some important files probably got deleted too.)  After it finished booting, I took a look at the Temporary Internet Files folder and it was empty, so that yielded an estimate that a few thousand files had gone away.  Then I ran an anti-virus scan again and the number of files scanned was about 20,000 less than the previous day&#8217;s scan.  Since that time, on any dual-boot machine, I never let Windows 2000 or XP run Chkdsk during boot, I always reboot to Windows 98 and run Scandisk there.  (As for non-dual-boot machines, well, sigh.  But I&#8217;d better not have an external drive connected during boot time.)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163483">
				<div id="div-comment-163483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163483">
			April 14, 2004 at 5:15 pm</a>		</div>

		<p>Because for Windows 98, LO18C9~1.TXT is a corrupted short file name. Win98 would have use LONGNA~1.TXT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163513">
				<div id="div-comment-163513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163513">
			April 14, 2004 at 5:23 pm</a>		</div>

		<p>Check out <a target="_new" href="http://support.microsoft.com/?kbid=164351" rel="nofollow">http://support.microsoft.com/?kbid=164351</a> for how the command prompt handles extensions of more than 3 characters. (The article says it applies to NT 4, so I&#8217;m not sure about 2000/XP, but it&#8217;s worth reading anyway.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163233">
				<div id="div-comment-163233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163233">
			April 14, 2004 at 12:08 pm</a>		</div>

		<p>A fun thing that happened to me.  My directory had a whole bunch of *.htm files, generated by a help system.  I placed in my own files index.html, others ending in .html etc.  I wanted to delete the *.htm files, and did the obvious thing:</p>
<p>del *.htm</p>
<p>It deleted all the htm &lt;b&gt;AND&lt;/b&gt; html files.  This is on XP with NTFS.</p>
<p>The moral of the story is that only the first 3 characters of the extension matter if you only specify the first three.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163543">
				<div id="div-comment-163543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163543">
			April 14, 2004 at 8:46 pm</a>		</div>

		<p>4/14/2004 5:15 PM Raymond Chen:</p>
<p>&gt; Because for Windows 98, LO18C9~1.TXT is a<br />
<br />&gt; corrupted short file name.</p>
<p>I asked why Windows 98 thinks that.</p>
<p>&gt; Win98 would have use LONGNA~1.TXT.</p>
<p>Even if, as you said in the base note,<br />
<br />&gt; or possibly &quot;LO18C9~1.TXT&quot; if there are a<br />
<br />&gt; lot of collisions.<br />
<br />?  Surely collisions were a known situation while Windows 98 was being developed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163563">
				<div id="div-comment-163563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163563">
			April 14, 2004 at 9:09 pm</a>		</div>

		<p>Windows 98 just uses larger and larger numbers (e.g., LO~18512.TXT). It never uses LOxxxx~1.TXT notation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163583">
				<div id="div-comment-163583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mgrier' rel='external nofollow' class='url'>You don't need Novell to get this...</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163583">
			April 14, 2004 at 9:46 pm</a>		</div>

		<p>Actually each filesystem is free to choose (or not choose!) a short file name with whatever algorithm it likes.  The only criteria is that it&#8217;s a unique name.</p>
<p>All the Microsoft filesystems that ship in the box happen to use a common code library often called &quot;fsrtl&quot; which gives common behavior.</p>
<p>To some degree, the code reuse is problematic because people end up not seeing the potential variances frequently enough.</p>
<p>Also note that on FAT the way that filename comparisons are done is different than on NTFS (since the short filenames are actually in the OEM code page) so you might even get wackier unexpected matches.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163633">
				<div id="div-comment-163633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jpayne@NOSPAM.dsl.pipex.com' rel='external nofollow' class='url'>Jonathan Payne</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163633">
			April 15, 2004 at 12:39 am</a>		</div>

		<blockquote><p>
  Unclear what you mean &quot;put the HTML and associated files&#8230;.</p>
<p>I was trying to suggest a system where IE put all the files in a folder and then changed the open action of the folder to display the HTML page in that folder rather than showing the folder contents.  I realize that this would be a slight change to how Explorer works but it would be nowhere near as bad as implicitly linking files and folders.</p>
<p>I am still not clear why Windows goes to the effort of warning me if I try and rename one of these linked files but will delete data without asking.</p>
<p>If Microsoft really wants to break the whole selection metaphor (where context menus and keyboard UI work on the selected file), they could at least go to the effort of fixing the menu items and status bar text to reflect the change (so for the &quot;Delete&quot; menu item the status bar could read &quot;Delete selected item and other implicitly linked items that you have no way of knowing about&quot; instead of the misleading &quot;Deletes the selected item&quot;).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163643">
				<div id="div-comment-163643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163643">
			April 15, 2004 at 12:42 am</a>		</div>

		<p> On this subject, is it likely that the short name hackery will be removed in future versions of Windows? Or are we stuck with it forever as a &#8216;backward compatability&#8217; issue (I wonder what the oldest code is in Windows that is there solely for compat reasons?).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163653">
				<div id="div-comment-163653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Kadlec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163653">
			April 15, 2004 at 3:52 am</a>		</div>

		<p>As Marc Wallace has reminded, it is not true that &quot;Windows 95 uses the &quot;~n&quot; method exclusively&quot; (if you create the key in the registry, W9x do not use ~1 if the truncated filename is unique, although I&#8217;ll make a small correction: when you create filename2.txt after filename1.txt is already there, the name does not get shortened to filenamf.txt, but to filena~1.txt). That setting is great and I think that it would be better if such behaviour would have been default. (I use that for a long time.)<br />
<br />But, I have to say that this option is probably just a hack that has not been much tested. If you create &quot;a file with a long name.txt&quot;, you get afilewit.txt, which is great. But if you then try to copy a file named afilewit.txt into that directory, you will overwrite the file with the shortened name&#8230; WHY? (Because of that, I often have problems when unpacking a zip file that contains e.g. inttypes.m4 and inttypes-priv.m4, because the behaviour depends on the order in which the files are stored in the zip file.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163593">
				<div id="div-comment-163593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163593">
			April 14, 2004 at 10:38 pm</a>		</div>

		<p>&gt;Wildcards match both the long<br />
<br />&gt;and short name. The short name<br />
<br />&gt;of &quot;foo.html&quot; is (say)<br />
<br />&gt;&quot;foo~1.htm&quot; which matches *.htm</p>
<p>Yes, I understood why it is happening (after having lost several hours work).  I also happened to write an SMB/CIFS server about a decade ago.  It took no less than 4 rewrites of the functions to list a directory.  The Samba folks got so frustrated they actually wrote a tool that sends requests to multiple servers and then compares the results (the servers would be NT4, 95, 98, 2K etc).</p>
<p>It is just *VERY* annoying that a workaround for a filesystems from 20 years ago deletes my files now that are not stored on that filesystem.</p>
<p>I also can&#8217;t see any wildcard that does match only the htm files.  For example:</p>
<p>   del &quot;*.htm &quot;</p>
<p>(Note space on end).  That still lists htm and html.<br />
<br />Even the non-obvious (to people who haven&#8217;t written an SMB server :-) pattern:</p>
<p>   del ?????????????.htm</p>
<p>That doesn&#8217;t work despite there being more wildcard characters than in a short name.</p>
<p>Since our server ran on Unix, we couldn&#8217;t store a short name along with a long name.  We used ~ followed by base36 [a-z0-9] encoded checksum of the full name, with administrator selectable number of digits.</p>
<p>I think Samba in the end resorted to a database.  This is the only possibility if directories can grow to contain a large number of files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163613">
				<div id="div-comment-163613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163613">
			April 14, 2004 at 10:49 pm</a>		</div>

		<p>The whole wildcard story is made triply complicated by all the backward compatibility requirements.  For example &quot;*.*&quot; matches all files, even ones that don&#8217;t have a dot in their names.  Why?  Because everybody expects &quot;*.*&quot; to match all files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163673">
				<div id="div-comment-163673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163673">
			April 15, 2004 at 7:16 am</a>		</div>

		<p>Why does it overwrite afilewit.txt?  Because yo told it to!  You said &quot;take this file called alfilewit.txt and copy it to that place, overwriting any existing file with the same name&quot; and it so happens that there is one, namely afilewit.txt itself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163703">
				<div id="div-comment-163703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163703">
			April 15, 2004 at 7:33 am</a>		</div>

		<p> Raymond, no offnse intended but does that not strike you as kind of lame?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163733">
				<div id="div-comment-163733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Kadlec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163733">
			April 15, 2004 at 7:45 am</a>		</div>

		<p>Yes, you are almost right. But it is obviously not desirable. I haven&#8217;t told it to &quot;create file.txt, copy another file to file.txt&quot;. I told it to &quot;create some_long_name.txt, copy another file to file.txt&quot;. The fact that meanwhile, some other file.txt (which is in fact some sort of internal representation of &quot;some_long_name.txt&quot;) has appeared, should not be a thing I have to know and watch for.<br />
<br />(AFAIK the same behaviour happens with the ~n convention, the only difference in the far smaller probability of a normal file named hombre~1.txt)<br />
<br />Well, I presume this problem was one of the reasons the ~1 convention was chosen in favor of the more logical plain name shortening.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163743">
				<div id="div-comment-163743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Kadlec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163743">
			April 15, 2004 at 7:46 am</a>		</div>

		<p>My reply was obviously meant to Raymond, not Mat, who was just a little bit faster. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163803">
				<div id="div-comment-163803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163803">
			April 15, 2004 at 8:03 am</a>		</div>

		<p>The problem is that every file has two names, a long and short (ignoring disabled short names), and both are the name of the file. If somebody says &quot;Create a file called alongnam.txt, overwriting any existing one&quot; then lo and behold there is one. It may not be the one you intended, but the OS isn&#8217;t good at reading minds. Maybe you aren&#8217;t LFN-enabled and all you see are short file names. </p>
<p>Yes the behavior is pretty lame, but the alternative is breaking compatibility with programs that do not support LFNs. </p>
<p>So why have short names at all? HPFS tried that: It didn&#8217;t have short names. If a file had a long name, then SFN apps could not access it. This turned out to have been an obstacle to adoption, since almost no programs were LFN-enabled at the time. Your backup program couldn&#8217;t back up LFN files, for example.</p>
<p>Even worse, a file management progam might try to delete all the files in a directory and then try to delete the directory, but it would fail because there were LFNs in the directory that it couldn&#8217;t see. This drove me so batty that I simply stopped using LFNs on my OS/2 machine altogether.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163823">
				<div id="div-comment-163823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163823">
			April 15, 2004 at 8:11 am</a>		</div>

		<p> I guess Microsofts view on Backward Compat is another issue entirely, but I live in hope that one day we might loose some of the old cruft (sorry).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163883">
				<div id="div-comment-163883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163883">
			April 15, 2004 at 8:28 am</a>		</div>

		<p> I guess it&#8217;s made slightly worse by the un-guessability of some of the API. What I mean is that there is so much (many sp?) API and being fairly new to Windows I have quite a tough time looking for a call that suits my purpose (and isn&#8217;t documented in petzold).</p>
<p>In fact most of the time I have to translate into English and search google for hints, although in some cases it IS possible to make a reasonable guess.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-164243">
				<div id="div-comment-164243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mailto:pdh@utter.chaos.org.uk' rel='external nofollow' class='url'>Peter Hartley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164243">
			April 15, 2004 at 2:31 pm</a>		</div>

		<p>You get a second helping of all this woe if you try and read Unicode filenames from an ANSI application. A filename consisting of three Kanji characters comes back from the directory listing as &quot;???&quot;. But if you open &quot;???&quot; then it successfully opens it. (It&#8217;s not doing wildcard expansion &#8212; &quot;???&quot; won&#8217;t open a file called &quot;abc&quot;.) If there are two Kanji filenames, directory enumeration says &quot;???&quot; twice, but both attempts to open &quot;???&quot; get the same (arbitrary) one of them. This is a Bad Thing for, say, a backup application.</p>
<p>While you&#8217;ve got to hope that no-one&#8217;s still writing code that assumes filenames are representable in 8.3, plenty of people (not least the 95/98/ME crowd) are still writing code that assumes filenames are representable in 8-bit characters. People whinged about the Linux filesystem being retrospectively declared to be UTF-8, but that certainly makes things less weird for unaware programs than a heterogeneous mix of ANSI and Unicode filenames does.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-163723">
				<div id="div-comment-163723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk/blog.htm' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163723">
			April 15, 2004 at 7:44 am</a>		</div>

		<p>But the first file is *not* called afilewit.txt &#8212; that&#8217;s just a truncated version of its name.</p>
<p>Quite frankly, the whole 8.3 thing causes no end of problems; why they bothered with this shortening business I&#8217;ll never know.  If you insist on using apps that don&#8217;t work with long filenames, don&#8217;t give your files long names!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-163853">
				<div id="div-comment-163853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-163853">
			April 15, 2004 at 8:20 am</a>		</div>

		<p>The problem with cruft is that NEW programs rely on old cruft.  For example, this comment from Todor indicates that he&#8217;s *relying on the cruft in a new program*.</p>
<p><a target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2003/11/03/55532.aspx#72702" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2003/11/03/55532.aspx#72702</a></p>
<p>This makes it very hard to get rid of cruft.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164273">
				<div id="div-comment-164273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164273">
			April 15, 2004 at 5:59 pm</a>		</div>

		<p>4/15/2004 8:03 AM Raymond Chen:</p>
<p>&gt; The problem is that every file has two<br />
<br />&gt; names, a long and short (ignoring disabled<br />
<br />&gt; short names),</p>
<p>The main problem under discussion here is that MOST files have two names, a long and a short (ignoring disabled short names).  A different problem is that there are exceptions:  some files don&#8217;t have two names (even when short names are not disabled).  It does not really help to misstate the main problem.</p>
<p>4/15/2004 2:31 PM Peter Hartley:</p>
<p>&gt; You get a second helping of all this woe if<br />
<br />&gt; you try and read Unicode filenames from an<br />
<br />&gt; ANSI application.</p>
<p>But this happens all the time, in normal daily use (actually in normal minutely use if permitted to abuse English this way).  So I will try to make some guesses about what you write next, but the underlying cause is not what you seem to think it is.</p>
<p>&gt; A filename consisting of three Kanji<br />
<br />&gt; characters comes back from the directory<br />
<br />&gt; listing as &quot;???&quot;.</p>
<p>Actually it comes back as the three Kanji characters.  Exceptions are if you&#8217;re using a non-Japanese version of Windows NT4 or ME or 98, in which case Windows Explorer displayed black rectangles but not &quot;???&quot;.  If you&#8217;re using a non-Japanese version of Windows 2000 or XP or 2003 and didn&#8217;t install Japanese fonts, hmm, I guess that might display &quot;???&quot; but I don&#8217;t remember if I tried it.</p>
<p>&gt; But if you open &quot;???&quot; then it successfully<br />
<br />&gt; opens it.</p>
<p>OK then, you&#8217;re not using Windows NT4 or 98 or ME, I guess you&#8217;re using 2000 or XP or 2003 and you only neglected to install fonts.</p>
<p>&gt; (It&#8217;s not doing wildcard expansion &#8212; &quot;???&quot;<br />
<br />&gt; won&#8217;t open a file called &quot;abc&quot;.)</p>
<p>This is a lot harder to guess.  If it were a directory name, typing &quot;???&quot; into Windows Explorer&#8217;s address bar would fail to open the directory but would say that your site is undisplayable due to a DNS failure.  But you didn&#8217;t say directory, you said file.  Anyway, I don&#8217;t think Windows Explorer expands wildcards in its address bar.</p>
<p>So, are you using a command prompt instead?  Did a command-line &quot;DIR&quot; command display question marks?  If so, then we&#8217;re probably back to the situation of not having installed or not having selected a suitable font for your command prompt window.  But if you type question marks into a command prompt, then they sure should get expanded as wildcards.  &quot;???&quot; sure should match a file called &quot;abc&quot;.</p>
<p>So you&#8217;re not talking about Windows Explorer and you&#8217;re not talking about a command prompt, so what application are you talking about?</p>
<p>&gt; If there are two Kanji filenames, directory<br />
<br />&gt; enumeration says &quot;???&quot; twice, but both<br />
<br />&gt; attempts to open &quot;???&quot; get the same<br />
<br />&gt; (arbitrary) one of them.</p>
<p>I haven&#8217;t seen this problem with Kanji filenames, nor with non-displayable filenames, but I&#8217;ve seen it with CD-ROMs.  If a CD-ROM folder contains two perfectly valid files with two perfectly valid filenames, then an attempt to open the second one might get the first one instead.  For example:<br />
<br />ABCDEFGH.txt<br />
<br />ABCDEFGHI.txt<br />
<br />Trying to open ABCDEFGHI.txt got ABCDEFGH.txt instead.</p>
<p>&gt; This is a Bad Thing for, say, a backup<br />
<br />&gt; application.</p>
<p>Yup.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-164313">
				<div id="div-comment-164313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164313">
			April 15, 2004 at 6:13 pm</a>		</div>

		<p>So the conclusion is that basically nothing you can make non-LFN-enabled backup programs completely happy. The issue then is which makes them least unhappy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164253">
				<div id="div-comment-164253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164253">
			April 15, 2004 at 3:41 pm</a>		</div>

		<p>The wildcard situation is actually more complicated than first appears.  When talking to an SMB server, *.* is converted into ????????.???.  IIRC even * is converted to that pattern.  I suspect that the internals of the various versions of Windows do all sorts of conversions like that before presenting the names to the local and/or remote filesystems.</p>
<p>That demonstrates a rule of programming.  Be very careful about throwing away what the original user input you received was, especially if it is going to be flowed through several layers of libraries/abstractions.</p>
<p>Many times people write code that &quot;normalises&quot; incoming information, but in doing so throw away important parts of it.  Later calls and further away abstractions can&#8217;t guess what was there originally, and you end up with a fun backwards compatibility problem, combined with what many will consider arbitrary/broken behaviour.</p>
<p>Personally I do think UNIX got it right by leaving the applications and their libraries to deal with issues of case, encoding, wildcards etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-164423">
				<div id="div-comment-164423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164423">
			April 15, 2004 at 11:34 pm</a>		</div>

		<p>4/15/2004 6:13 PM Raymond Chen:</p>
<p>&gt; So the conclusion is that basically nothing<br />
<br />&gt; you can make non-LFN-enabled backup programs<br />
<br />&gt; completely happy.</p>
<p>Well, if Windows Explorer is an example of a non-LFN-enabled backup program then you&#8217;re right.</p>
<p>(If the meaning is unclear, then delete the word &quot;backup&quot;.  If Windows Explorer is an example of a non-LFN-enabled program then you&#8217;re still right.  It isn&#8217;t necessary to argue whether Windows Explorer is reasonable to use for making backups or not, even though that&#8217;s what I use for copying files to external hard drives when it will let me.)</p>
<p>Anyway Mr. Hartley&#8217;s problem remains unclear to me, and I stated why.  Mr. Chen, you don&#8217;t have to worry about that.  I notice you didn&#8217;t comment on the correction to your statement that &quot;every&quot; file has two names.  By the way when I got hit by that, the application wasn&#8217;t a backup program.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164363">
				<div id="div-comment-164363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164363">
			April 15, 2004 at 9:04 pm</a>		</div>

		<p>AC: Unix does the wrong thing with wildcards.  Try &quot;echo *&quot; on both Windows/DOS and Unix.  Windows gives you * back, Unix gives you a list of files.  This is particularly annoying if hundreds of files match your pattern.</p>
<p>Of course it depends on your shell for Unix, but if it doesn&#8217;t do this none of the regular utilities will work.  :6</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-164383">
				<div id="div-comment-164383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164383">
			April 15, 2004 at 10:18 pm</a>		</div>

		<p>Both Unix and Windows shells have rules about evaluation.  On Unix shells, the rules are clear and consistent in that things outside any form of quoting are evaluated, inside double quotes environment variables are evaluated and inside single quotes nothing is evaluated.  For your example, echo &quot;*&quot; or echo &#8216;*&#8217; will do the trick.</p>
<p>The Windows shell is a mess.  Here is an example:</p>
<p>C:&gt;echo %a%<br />
<br />%a%</p>
<p>C:&gt;set a=foo</p>
<p>C:&gt;echo %a%<br />
<br />foo</p>
<p>C:&gt;echo %%a%%<br />
<br />%foo%</p>
<p>C:&gt;echo &quot;%a%&quot;<br />
<br />&quot;foo&quot;</p>
<p>C:&gt;echo &quot;%%a%%&quot;<br />
<br />&quot;%foo%&quot;</p>
<p>C:&gt;echo &#8216;%a%&#8217;<br />
<br />&#8216;foo&#8217;</p>
<p>I have no idea how to make it output the literal string %a%</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164593">
				<div id="div-comment-164593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164593">
			April 16, 2004 at 2:09 pm</a>		</div>

		<p>echo ^%a^%</p>
<p>But that&#8217;s just a matter of taste.  How do you get it to echo &#8216;foo&#8217; on unix?  echo &#8216;$a&#8217;  (granted,  is a more uniform choice for an escape char, but not really an option under Windows)</p>
<p>The wildcard thing is really bad, what if you WANT to have it match hundreds of files?  You&#8217;d better hope the shell can handle really long lines, and that the program doesn&#8217;t interpret file names differently based on their position in the argument list.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-164693">
				<div id="div-comment-164693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Kadlec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164693">
			April 17, 2004 at 11:13 am</a>		</div>

		<p>There is always some &quot;what if you want&#8230;&quot;. In Unix, the rules are very clear and consistent. If you want some special behaviour, noone prevents you from using either some custom wildcards, or quoting the params.<br />
<br />Note that even the order in which the files are listed in the * expansion is defined (ASCIIbetical), so that a UNIX-enabled program which has problems because of shell expansion is probably written by someone who just ignores known facts.<br />
<br />But as you have said, it&#8217;s just a matter of taste &#8212; both ways have their pros and cons&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164713">
				<div id="div-comment-164713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Kadlec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164713">
			April 17, 2004 at 1:45 pm</a>		</div>

		<p>Well, I am afraid your example is not the best one. :-) In fact, this deficiency in Unix-style expansions is so obvious that there <em>is</em> a rename tool on Linux (whereas a single-file renaming is done using the mv command), which is able to do all those tricks. (Like &quot;rename .htm .html *.htm&quot;.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-164703">
				<div id="div-comment-164703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164703">
			April 17, 2004 at 11:34 am</a>		</div>

		<p>It is also normal for Windows programs to not be able cope with multiple files specified on the command line.  For example &quot;notepad file1.txt file2.txt&quot; doesn&#8217;t open notepad on two files.  It instead tries to open one file named &quot;file1.txt file2.txt&quot;.</p>
<p>There is exactly one place I like the Windows wilcard convention.  Try to do this on Unix:  rename *.log *.txt</p>
<p>Surprisingly, even &quot;ren *.htm *.html&quot; works correctly, as does the reverse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164733">
				<div id="div-comment-164733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-164733">
			April 17, 2004 at 7:35 pm</a>		</div>

		<p>I think my point was that Unix does *not* pass input on verbatim to the program.  The hacks to get around this have been slightly more uniform than those to get around DOS weirdness, but it was still not the best choice.</p>
<p>Multiple files is a matter for the application rather than the shell, but you can easily (erm&#8230; or not) fix that deficiency in the shell:  &quot;for %i in (file1.txt file2.txt) do notepad %i&quot;  Notepad&#8217;s an SDI app anyway&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165043">
				<div id="div-comment-165043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-165043">
			April 19, 2004 at 11:51 am</a>		</div>

		<p>Well, Unix shells *do* pass input on verbatim to the program if the user does desire this. But the you have to rely on the program to know how to handle * as it&#8217;s input. Same is under DOS, just that you will have to follow the clear rules of the shell to call &gt;foo &#8216;*'&lt; instead of &gt;foo *&lt;. </p>
<p>The ren *.log *.txt example is a nice one where under  Unix you would need an extra tool like mmv in order to do that (i.e. if you don&#8217;t want to type something like: bash$ for file in *.log ; do mv $file ${file/%.log/.txt} ; done). But that is not so different from DOS, either, as the &quot;ren&quot; command also has to have the logic to interpret parameters &quot;*.log *.txt&quot; built in, doesn&#8217;t it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165053">
				<div id="div-comment-165053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-165053">
			April 19, 2004 at 11:54 am</a>		</div>

		<p>I wouldn&#8217;t exactly call the rename command intuitive (and I have been using Unix since 1989).  Also note that it replaces the *first* occurrence of the pattern mentioned. That would cause grief if files had double extensions, or if the final wildcard didn&#8217;t match the first argument (eg if it was index.* instead of *.htm).</p>
<p>As for notepad being SDI etc, it does quite happily accept multiple files via drag and drop (but only displays the first).  Arguably the command line behaviour should be the same, although I susupect it is a the way it is to cater for people who didn&#8217;t bother to quote the command line arguments.</p>
<p>I also found this KB article about being able to force &quot;correct&quot; matching for long extensions.  I believe it is implemented by putting a tilde in the extension.  The article says it is for NT4.  I haven&#8217;t tried it on XP.</p>
<p><a target="_new" href="http://support.microsoft.com/default.aspx?scid=kb;en-us;164351" rel="nofollow">http://support.microsoft.com/default.aspx?scid=kb;en-us;164351</a></p>
<p>And another note on renames, the SMB protocol supports a rename request, including wildcards.  We had a really hard time trying to figure out the correct semantics.  Think of things like *foo* to *foo, ????foo? to *.foo, *.foo to bar.* etc (and don&#8217;t forget to mix in long and short names).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165383">
				<div id="div-comment-165383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Kadlec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-165383">
			April 20, 2004 at 6:29 am</a>		</div>

		<p>Yeah, non-trivial renaming is probably done using a special program in some programming language. :-)<br />
<br />Actually, the best tool for renaming I use is the rename function of Total Commander. Well, you can&#8217;t use REs (yet), but its capabilities like &quot;[N3-4][N1-5]&quot; are well enough for most of my needs&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-174323">
				<div id="div-comment-174323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Diego</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-174323">
			May 14, 2004 at 12:35 pm</a>		</div>

		<p>Can I expect ALL short names to be EXACTLY 8 chars long (with an optional extension of 3 chars)?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-174333">
				<div id="div-comment-174333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-174333">
			May 14, 2004 at 12:46 pm</a>		</div>

		<p>Nope. No such guarantee.  And I can even name a scenario where it happens, but I&#8217;m not going to say what it is because my point is that you can&#8217;t make any assumptions, not to list specifically all the exceptions. (Otherwise people will be tempted to make assumptions and just check for the exceptions.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-192023">
				<div id="div-comment-192023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040414-00/?p=39813#comment-192023">
			July 8, 2004 at 1:07 am</a>		</div>

		<p>Commenting closes after two weeks.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

