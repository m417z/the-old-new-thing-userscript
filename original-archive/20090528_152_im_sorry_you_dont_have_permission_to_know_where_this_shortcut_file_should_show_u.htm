<html>
<head>
<title>I'm sorry, you don't have permission to know where this shortcut file should show up in the Explorer window</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>I&#8217;m sorry, you don&#8217;t have permission to know where this shortcut file should show up in the Explorer window</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 28, 2009 / year-entry #153</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>26</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Gabe suggested that the shortcut file should contain a bit that indicates whether the target of the shortcut is a folder, so that shortcuts to folders can sort with real folders. "That would allow them to sort properly without doing any additional work beyond that required to see its icon." (Commenter Josh agreed that...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter Gabe suggested that <a href="http://blogs.msdn.com/oldnewthing/archive/2007/09/27/5155193.aspx#5172306"> the shortcut file should contain a bit that indicates whether the target of the shortcut is a folder, so that shortcuts to folders can sort with real folders</a>. "That would allow them to sort properly without doing any additional work beyond that required to see its icon." (Commenter Josh agreed that "<a href="http://blogs.msdn.com/oldnewthing/archive/2007/09/27/5155193.aspx#5170147">The performance reason doesn't really apply here, since explorer is already looking at the target to get the icon</a>," rejecting commenter AndyC's argument that <a href="http://blogs.msdn.com/oldnewthing/archive/2007/09/27/5155193.aspx#5169910"> performance may have been a concern</a>.)</p>
<p> Well, first of all, shortcuts do remember whether the target is a file or a folder, or at least whether it was a file or folder at the time the shortcut was created: <code>IShellLink::GetIDList</code> + <code>IShellFolder::GetAttributesOf</code> tells you this and more about the shortcut target. </p>
<p> But saying that this isn't more work than what's necessary to see the icon misses a few points about file icons: First, you can't sort by icon, so <a href="http://blogs.msdn.com/oldnewthing/archive/2007/09/27/5155193.aspx#5173353"> the consequences of getting the wrong icon (or never getting the icon at all) are purely visual</a>. What? Never getting the icon at all? Well, yes, if <a href="http://blogs.msdn.com/oldnewthing/archive/2005/11/28/497442.aspx"> the file has been archived to tape</a>, Explorer <a href="http://blogs.msdn.com/oldnewthing/archive/2009/04/15/9549682.aspx#9551272"> won't bother recalling the file just to get its icon</a> and will instead just use its generic type icon, or if there is no generic type icon, a generic document icon. After all, you don't want viewing a folder in Explorer to recall all the files from tape. That sort of defeats the purpose of archiving the files to tape. </p>
<p> Even if Explorer decides to get the icon, it performs that operation at low priority and in the background. By comparison, you don't want to decide where the item should appear in the list as a low priority background task. If you do, then you either show nothing until all the sort information is ready (in other words, show nothing for a very long time, possibly forever if the file has been archived to tape), or you show everything, but <a href="http://blogs.msdn.com/oldnewthing/archive/2007/09/27/5155193.aspx#5173353"> move items around as better information arrives</a>. Neither is a particularly pleasant experience for the user. </p>
<p> What's more, it means that where an item sorts depends on who asks. If you don't have read permission on the shortcut file, then you don't have enough permission to find out whether it's a shortcut to a folder or not, and then Explorer has to decide where "don't know" files go. Do they go with the non-folders by default? Do you create a third "don't know" category? No matter what you choose, the result is that the location of the file changes depending on who asks. "Hey, where did that shortcut file go? Oh, there it is. What's it doing over there? Computers are so hard to use." </p>
<p> Commenter Leo Davidson noted that <a href="http://blogs.msdn.com/oldnewthing/archive/2007/09/27/5155193.aspx#5172837"> determining whether the target of a shortcut is a file or folder is cheap if the target is a local hard drive that is not spun down</a>, but that's an awful lot of <i>if</i>s. Does this mean that you sort shortcuts to local hard drives that are not spun down differently from shortcuts to network drives or shortcuts to drives that are spun down? Won't users find this confusing? "Hey, where did that shortcut file go? Oh, there it is. What's it doing over there? Why does this shortcut file show up half of the time in one location and half of the time in that other location? Computers are so hard to use." </p>
<p> Now, even if it's a shortcut and the target is on a local hard drive that has not spun down, that still doesn't mean that you can determine whether or not it is a file or a folder: The target may no longer exist. The act of resolving a broken shortcut is deferred until shortcut is launched, a form of lazy evaluation which avoids having to undertake an expensive search operation until the result is actually needed. If you want to sort shortcuts based on the attributes of the target, you'd have to resolve all the broken shortcuts to see where the target moved to and whether it's a file or a folder. </p>
<p> Now, you might decide that broken shortcuts are already broken, so who cares what happens? But there are scenarios where <i>almost all shortcuts are broken</i> and the user relies on the resolution process to fix them up. <a href="http://blogs.msdn.com/oldnewthing/archive/2005/06/30/434209.aspx"> But you knew this already</a>. If the Start menu profile roams from one machine to another, the shortcuts are all broken, but when the user decides to launch the shortcut, the resolution process patches them up so they launch the correct program; it just takes a little longer the first time. </p>
<p> I suspect that when Leo Davidson runs the program which sorts shortcuts to folders along with the folders and includes the shortcut target in the column description with "<a href="http://blogs.msdn.com/oldnewthing/archive/2007/09/27/5155193.aspx#5172200">no noticeable effect on performance</a>", he doesn't try running it against a server halfway around the world with a 500ms ping time. If you have a folder with 100 shortcuts over a network with 500ms latency, it'll take you nearly a minute just to sort the items. It'll be even worse if you have a folder full of files which have been archived to tape. Maybe that scenario isn't important to him, but it's important to a lot of people. In fact, one might say that the Explorer folks don't pay <i>enough</i> attention to these scenarios, because at every release of Windows, you can count on those people submitting streams of complaints that the most recent version of Explorer sucks even more on their international corporate network, and then the Explorer team has to do a little redesign work to get things to suck less. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (26)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-739843">
				<div id="div-comment-739843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-739843">
			May 28, 2009 at 10:33 am</a>		</div>

		<p>Forget about offline files on tapes. I really suspect this feature was not used in more than a couple deployments. I suspect it&#8217;s still being used by blogs.msdn.com, though. This is where it seems to keep its databases.</p>
<p>Windows 7 is phasing out tape support. Ther is no offline file support anymore in Win2008 R2.</p>
<p>Windows 9x used to have shelliconcache file to avoid reading icons all the time. Unfortunately, it was implemented very poorly and was getting corrupted very often. Mutexes, anyone?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-739853">
				<div id="div-comment-739853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-739853">
			May 28, 2009 at 10:33 am</a>		</div>

		<p>The second paragraph says that shortcuts remember whether the target is a file or a folder, so Explorer really could sort based on this information.</p>
<p>All the remaining of the post seems to address the comparison with icons and the fetching of a unstored information, which, while interesting, was not the original question&#8230;</p>
<p>Only the bit about the rights to read the shortcut to get the isFolder bit would be relevant to the original question. But it&#8217;s a problem coming from the implementation of links as regular files read by explorer instead of files interpreted by the filesystem. Being regular files and being on an ACL-able filesystem, the abstraction of representing the linked object as the object has to break somewhere. And it breaks because Explorer is subject to ACL (whereas a kernel implementation wouldn&#8217;t).</p>
<p>(Sorry if that&#8217;s a multiple post, I couldn&#8217;t tell whether the last submits worked)</p>
<div class=post>[<i>&#8220;&#8230;so Explorer really could sort based on this information&#8221;: Please re-read paragraph 4. Consider the case where you&#8217;re viewing a folder on a server halfway around the world with a 500ms ping time. And shortcuts are files (as opposed to file system &#8220;special objects&#8221;) for reasons I explained <a href="http://www.microsoft.com/technet/technetmag/issues/2006/09/WindowsConfidential/" rel="nofollow">some years ago</a>. And using kernel to bypass the ACL means that you are asking for a security vulnerability as a feature. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-nathan_works even thread-even depth-1" id="comment-739873">
				<div id="div-comment-739873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/nathan_works' rel='external nofollow' class='url'>nathan_works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-739873">
			May 28, 2009 at 12:00 pm</a>		</div>

		<p>Files on a network with 500ms access time.. The bane of my current existence.. I can&#8217;t blame MSFT for crappy networks..</p>
<p>I still dislike the &quot;system freeze&quot; while explorer tries to probe the network drive whenever it opens.. &nbsp;And worse when some logon script maps one of those drives. I got tricky to fix that via the .hosts file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-739893">
				<div id="div-comment-739893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-739893">
			May 28, 2009 at 12:37 pm</a>		</div>

		<p>When I said that kernel could bypass ACL, I was talking about the filesystem code residing in kernel space, which reads the NTFS partition as raw data and present it as a generic filesystem entity to the kernel. It wasn&#8217;t really a bypass but a part of its normal operation with another property to report to the generic filesystem layer. I did not intend to make the kernel operate on files/links when ACLs say it shouldn&#8217;t, I wanted to compare two implementations of links, a user-one and a kernel-one.</p>
<p>About the remote folder, of course if the query for the isFolderBit makes a round trip each time, then it will be problematic. But not knowing the protocol used when mounting a disk, I assumed this info could be sent alongside the dates, sizes &amp; co, and then it would be the local network driver that would really be queried by the IShell interface.</p>
<p>I didn&#8217;t realise that this method also required the links to be real filesystem objects.</p>
<p>My post was only to give another point of view of the problem which, for me, really boils down to &#8220;Shortcuts are sorted with files because they are files and presenting meta-information about the linked object need read rights on the links, rights which are not always available&#8221;</p>
<p>I may be mistaken but if that specific implementation went away, all other problems would disappear as well, that&#8217;s why I chose to identify it as the root cause.</p>
<p>Of course, the requirements you listed in your old article forbid another implementation anyway.</p>
<div class=post>[<i>If kernel also respects the ACL, then what&#8217;s the point? Both user mode and kernel mode respect the ACL, so moving the call to kernel mode doesn&#8217;t change anything. Oh, and we saw what happens if you decide to <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/30/564809.aspx" rel="nofollow">modify a file system enumeration function to return more information than it did before</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-739913">
				<div id="div-comment-739913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-739913">
			May 28, 2009 at 12:45 pm</a>		</div>

		<p>Why not make the directory bit part of the filename, then? Use .lnk for a link to a file and .lnf to a link to a folder.</p>
<p>Of course there would be no easy way to enforce that the .lnf files really point to folders and such, but it would be useful for sorting &#8212; just like how .scr files are really just regular EXEs with a different extension to allow the screensaver dialog to find them.</p>
<div class=post>[<i>If you change a shortcut&#8217;s properties, does that mean the file has to be renamed? And why should the code that creates a shortcut care about what file extension it needs to put on the file? (And what about shortcuts that aren&#8217;t saved in files at all?) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson odd alt thread-odd thread-alt depth-1" id="comment-739943">
				<div id="div-comment-739943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-739943">
			May 28, 2009 at 2:01 pm</a>		</div>

		<p>You&#8217;re right, I rarely encounter shortcuts pointing at slow network drives. If I did I&#8217;d probably turn the option off in the program I use. (FWIW, the option is off by default.)</p>
<p>It&#8217;s one of those options which is really great for 99% of people and terrible for 1%.</p>
<p>(Whether that sort of option/feature makes sense for Explorer is another thing. Perhaps not. The program I&#8217;m using, though&#8230; well the reason for using it is all options and things it does that Explorer doesn&#8217;t do.)</p>
<p>The program I use can also displays a column showing the target of each shortcut (or NTFS link, etc.) which I find very handy. Even though that is calculated on a background thread (like the icons) I still turn that particular column off (or rather don&#8217;t turn on) for network drives. That&#8217;s more because of the other (more network-demanding) things that populate the same column than the shortcuts themselves.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-739963">
				<div id="div-comment-739963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-739963">
			May 28, 2009 at 2:36 pm</a>		</div>

		<p>I see that we are not understanding each other Raymond&#8230;</p>
<p>I&#8217;ll try one last time but if we still don&#8217;t manage to do it, I&#8217;ll give up as it wasn&#8217;t really that important.</p>
<p>As a user-mode application, explorer is limited by the ACL on a file (enforced by the kernel, more precisely the generic filesystem code) and therefore cannot read links if the ACL do not permit it.</p>
<p>In the kernel, the filesystem does not check the ACL of the items in a directory before returning meta-information about these items. It&#8217;s not part of the normal operation of listing a directory&#8217;s content. On my machine I can know the modification time of a folder/file for which the administrator has denied me of every rights. A kernel mode implementation of links could add another property to filesystem object (or another subtype) such as link-to-file or link-to-directory. I didn&#8217;t say it would be a good idea btw, just that as a kernel mode code, this new property could live without ACL restrictions like isfile/dir, dates and sizes are now. (The term &#8220;bypass&#8221; was wrong of course, sometimes I struggle with words&#8230;)</p>
<p>Way to digress on a side remark :)</p>
<div class=post>[<i>Promoting the value into metadata (that has weaker ACLs) creates other issues: How do you keep the metadata in sync with the shortcut file? Do you trust the application that created the shortcut to set the metadata attribute correctly? What are the consequences of being lied to? Do you have a potential security hole where a bad file can sneak through because the security layer checks one flag while the execution engine checks the other? And (of course) how do you get all file system providers to support your new metadata? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-739993">
				<div id="div-comment-739993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-739993">
			May 28, 2009 at 3:07 pm</a>		</div>

		<blockquote><p>
  &gt; On my machine I can know the modification time of a folder/file for which the administrator has denied me of every rights.
</p></blockquote>
<p>Because you have rights for the parent folder, and that information is stored there.</p>
<p>No magic to see.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-740013">
				<div id="div-comment-740013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob Green</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740013">
			May 28, 2009 at 3:22 pm</a>		</div>

		<p>[If kernel also respects the ACL, then what&#8217;s the point? Both user mode and kernel mode respect the ACL, so moving the call to kernel mode doesn&#8217;t change anything. Oh, and we saw what happens if you decide to modify a file system enumeration function to return more information than it did before. -Raymond]</p>
<p>What was the actual outcome that Vista did?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-740023">
				<div id="div-comment-740023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740023">
			May 28, 2009 at 4:09 pm</a>		</div>

		<p>Aren&#8217;t links to folders already folders containing a link on WinXP?</p>
<p>Another solution would be simply using a different fileextension.</p>
<p>Both solutions can solve the ordering problem. And both have the same disadvantage: links to folders and normal links have a completely different type.</p>
<p>But I&#8217;m not sure if that different ordering is actually desireable. Links are already problematic from a security point of view, and this one might make it even worse.</p>
<p>And it might be yet another leaky abstraction. And IMO the recent versions of windows already have too many of these .</p>
<div class=post>[<i>&#8220;Aren&#8217;t links to folders already folders containing a link on WinXP?&#8221; Um, no, they&#8217;re just .lnk files. Try it. You&#8217;re thinking of shell junction points. -Ryamond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-740083">
				<div id="div-comment-740083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.ryjones.org/' rel='external nofollow' class='url'>Ry Jones</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740083">
			May 28, 2009 at 5:57 pm</a>		</div>

		<p>This reminds me of The Website is Down, <a rel="nofollow" target="_new" href="http://www.thewebsiteisdown.com/" rel="nofollow">http://www.thewebsiteisdown.com/</a>, and the plugin it inspired (that I can&#8217;t link to or my comment gets blocked) at arrange by pen is dot com.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson odd alt thread-odd thread-alt depth-1" id="comment-740153">
				<div id="div-comment-740153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740153">
			May 28, 2009 at 8:27 pm</a>		</div>

		<p>Thinking some more about this:</p>
<p>Why would someone have a shortcut to a drive that was so slow that just checking whether one item is a file or a folder takes an irritating amount of time?</p>
<p>If accessing the folder is that painful then it&#8217;s presumably a folder you would avoid accessing wherever possible and thus not something you&#8217;d be likely to want a shortcut to in a folder you did visit frequently.</p>
<p>Similarly, I don&#8217;t see many people creating shortcuts to folders on CD drives, except for brief periods where they&#8217;re using the drives (and where the OS should be able to cache the folder information like it should cache the drive&#8217;s icon.</p>
<p>So IMO we&#8217;re comparing the theoretical irritation of close to zero people (who create shortcuts to slow things) with the actual irritation of at least some people (who want shortcuts to folders to sort with folders).</p>
<p>If the first group is non-empty then I imagine they&#8217;d be happy enough if the Shell simply avoided the check with network/removable drives and sorted those shortcuts as it does now.</p>
<p>That&#8217;s my take on it, anyway.</p>
<div class=post>[<i>It&#8217;s common to have shortcuts to slow media: &#8220;My Network Places&#8221;. But that&#8217;s not the point here. The issue isn&#8217;t a shortcut to slow media; it&#8217;s a shortcut <u>on</u> slow media. Consider opening \remoteserverstandardresources which is filled with shortcuts to all the documents, applications, etc. that your employees need to use. You don&#8217;t want to have to wait 30 minutes for this folder to open. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-740183">
				<div id="div-comment-740183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nathanosullivan.com/blog/life/avoiding-the-complexity-spiral/' rel='external nofollow' class='url'>Nathan&#8217;s Blog &raquo; Blog Archive &raquo; Avoiding the Complexity Spiral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740183">
			May 28, 2009 at 10:39 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://nathanosullivan.com/blog/life/avoiding-the-complexity-spiral/" rel="nofollow">http://nathanosullivan.com/blog/life/avoiding-the-complexity-spiral/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-740113">
				<div id="div-comment-740113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.shog9.com/' rel='external nofollow' class='url'>Shog9</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740113">
			May 28, 2009 at 6:19 pm</a>		</div>

		<p>Wow&#8230; To everyone suggestion increasingly more complex / fragile ways to implement this: apart from a few Start menu links and that weird thing in Network Places, who uses shortcuts for folders? They don&#8217;t work like symlinks unless programs (like Explorer) go out of their way to handle them, and even then it&#8217;s not quite right. Whereas, hard links (reparse points) have been supported since Win2k, and with Vista you can even have real symlinks that *still* don&#8217;t require applications to do anything special under normal conditions. </p>
<p>Why go to *any* effort to pile any more functionality onto a little hack introduced a decade and a half ago for the shell? Use the features built in to the file system, watch how everything works properly, get on with your life.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson even thread-even depth-1" id="comment-740123">
				<div id="div-comment-740123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740123">
			May 28, 2009 at 6:46 pm</a>		</div>

		<p>Shog9, until Vista using hardlinks was asking to accidentally delete half your data. The Shell didn&#8217;t know a junction/link from a real folder and deleting either would delete the contents of both (instead of removing the junction/link or asking what you want to do). Vista&#8217;s shell improved things there, probably because Vista is the first version of Windows to use junctions/links in places users actually see.</p>
<p>You couldn&#8217;t use junctions/links in some situations with network drives until Vista&#8217;s softlinks were added, either.</p>
<p>Junctions/links don&#8217;t work on FAT.</p>
<p>Junctions will still cause problems with some tools which don&#8217;t understand them and have unintended behaviour when they encounter them. (OTOH, with a shortcut an application either sees it as a simple file or it has been explicitly coded to handle shortcuts and should do the right thing.)</p>
<p>If all you want is something you can double-click on in one place and be taken to another place, why *not* use a shortcut? (Except for the fact it ends up sorted with the files. :) ) We&#8217;re not talking about something you can use as the input path to a command-line program &#8212; obviously junctions/links are better for that &#8212; we&#8217;re just talking about a shortcut for the user when they are browsing.</p>
<p>I don&#8217;t have thousands of folder shortcuts but I do have a few in certain places and they&#8217;re very handy for jumping between related folders. They&#8217;re much easier to create and delete, and less risk to have around, than junctions/links.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-740223">
				<div id="div-comment-740223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740223">
			May 29, 2009 at 3:01 am</a>		</div>

		<p>I use shortcuts to slow media: I have a home computer and a laptop. The laptop has a shortcut to \homecomputershare so I access stuff from there. When I had XP on the (previous) laptop, I had the shortcut on the desktop. But then, every time I&#8217;d place a JPG there and try to view it, Explorer would try to enumerate all shortcuts and hang until resolved. I had to move the shortcut into a folder to avoid that.</p>
<p>As for implementation: I&#8217;m surprised no-one suggested adding a bit in the .lnk itself of whether it links to a folder or file. That way retrieving the data would not incur any performance penalty. Of course, there&#8217;s the problem of what happened if a file turns into a folder, but I can&#8217;t think of any realistic situation where that happens.</p>
<p>But I also think that the whole thing is not important enough to invest engineering time in.</p>
<div class=post>[<i>See paragraph 2. Shortcuts do have a bit that say whether the target is a folder or a file. But in order to get it, you have to open the file and read its contents. Opening files and reading their contents is expensive. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-740233">
				<div id="div-comment-740233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740233">
			May 29, 2009 at 3:02 am</a>		</div>

		<p>&quot;[If you change a shortcut&#8217;s properties, does that mean the file has to be renamed? And why should the code that creates a shortcut care about what file extension it needs to put on the file? (And what about shortcuts that aren&#8217;t saved in files at all?) -Raymond]&quot;</p>
<p>I would bet that it&#8217;s rare that somebody would change a shortcut to a file to a folder or vice-versa. Should that happen, the only problem is that it gets sorted wrong.</p>
<p>Obviously some code cares enough to generate the .lnk extension. Although it might be a bit more work, it wouldn&#8217;t have been that much more had it been the standard fom the beginning.</p>
<p>And of course shortcuts that aren&#8217;t saved in files don&#8217;t have filenames. Hopefully whatever mechanism keeps track of them could somehow also keep track of whether they&#8217;re a folder proxy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-740243">
				<div id="div-comment-740243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jotalog.blogspot.com' rel='external nofollow' class='url'>djeidot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740243">
			May 29, 2009 at 5:21 am</a>		</div>

		<p>I also can&#8217;t see what&#8217;s the big deal with this. It&#8217;s just a bit that you set or unset (or a filename extension change). You don&#8217;t have to sync the shortcut with the target. You don&#8217;t have to worry about ACL. You just set the bit when you create the shortcut and you&#8217;re done.</p>
<p>It is only for sorting purposes, after all (isn&#8217;t it?)</p>
<p>You worry about assuring that the shortcut is always &#8220;right&#8221; in terms of determining if the target is a file or folder. But you also talk about broken shortcuts, or shortcuts with the wrong icon, and I don&#8217;t see you worried about that. What&#8217;s the difference?</p>
<p>Just as you do with broken shortcuts or wrong icons, when the user launches the shortcut you simply update the file/folder bit.</p>
<div class=post>[<i>The difference is that under the current model, a broken shortcut still sorts in the same location after you fix it. This is important when you have common scenarios where shortcuts spend a lot of their time broken (see paragraph 8). As for &#8220;It&#8217;s only for sorting purposes after all&#8221;, imagine if you couldn&#8217;t find something because it got sorted in the wrong place. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson even thread-even depth-1" id="comment-740253">
				<div id="div-comment-740253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740253">
			May 29, 2009 at 5:47 am</a>		</div>

		<p>[It&#8217;s common to have shortcuts to slow media: &#8220;My Network Places&#8221;. But that&#8217;s not the point here. The issue isn&#8217;t a shortcut to slow media; it&#8217;s a shortcut on slow media. Consider opening \remoteserverstandardresources which is filled with shortcuts to all the documents, applications, etc. that your employees need to use. You don&#8217;t want to have to wait 30 minutes for this folder to open. -Raymond]</p>
<p>If it takes 30 minutes to open that folder when doing one extra GetFileAttributes, plus a ~1KB file read, per shortcut then I&#8217;d wager it already take 10-20 minutes to open the same folder under the current system. That use-case is already broken &amp; unlikely to be used in the real world and it doesn&#8217;t seem worth making compromises over it.</p>
<p>If it is a real issue you could always disable the sorting for shortcuts on or pointing to network folders. Maybe it&#8217;s better to sort them wrong all the time, though. IMO the pathological cases are unlikely to exist in the first place, though.</p>
<div class=post>[<i>Consider a server with a 500ms ping and a directory with 1200 shortcuts. Enumerating the contents of the directory takes 7 seconds (open + <a href="http://blogs.msdn.com/oldnewthing/archive/2006/04/06/569873.aspx" rel="nofollow">12 enumerations</a> + close). Opening each shortcut to see whether it points to a file or folder takes 30 minutes (1200 * (open + read + close)). If you think this is an unlikely scenario, you need to spend more time on global corporate networks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-740273">
				<div id="div-comment-740273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740273">
			May 29, 2009 at 6:59 am</a>		</div>

		<p>This explains why I always create Folder Shortcuts (which consist of a folder, desktop.ini and target.lnk) when I want a shortcut to a folder. You can expand them in Explorer view as if they were a real folder. I can never remember how to create them though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-740293">
				<div id="div-comment-740293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasonhaley.com/blog/post/2009/05/29/Interesting-Finds-May-29-2009.aspx' rel='external nofollow' class='url'>Jason Haley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740293">
			May 29, 2009 at 9:42 am</a>		</div>

		<p>Interesting Finds: May 29, 2009</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-740363">
				<div id="div-comment-740363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 43759</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740363">
			May 29, 2009 at 11:28 am</a>		</div>

		<p>@Rob Green</p>
<p>Looks like, &quot;&#8230;the solution that was settled on was simply to stop using &#8216;fast mode&#8217; queries for anything other than local devices.&quot;</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2007/02/01/1573160.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/02/01/1573160.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-740403">
				<div id="div-comment-740403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740403">
			May 29, 2009 at 12:02 pm</a>		</div>

		<p>You see these kind of comments a lot on Slashdot, too&#8211; it&#8217;s really sad (to me) how many programmers, Windows or Linux, really have absolutely no experience with network administration on large networks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson odd alt thread-odd thread-alt depth-1" id="comment-740413">
				<div id="div-comment-740413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740413">
			May 29, 2009 at 12:16 pm</a>		</div>

		<p>&#8220;Consider a server with a 500ms ping and a directory with 1200 shortcuts. Enumerating the contents of the directory takes 7 seconds&#8221;</p>
<p>Fair point, I was assuming Explorer would be getting back more information per file that just what the enum returns, but that&#8217;s probably not true as the enum struct contains the data commonly shown in Explorer. The enum avoids much of the round-trip overheads and doesn&#8217;t impose per-file overheads which are costly on a high latency network.</p>
<p>However, I have spent many years with global corporate networks and the main thing I remember is that people avoid using any drive which is that slow *at all*, except when they really have to share data with people in other locations. Everywhere I&#8217;ve worked, people have had local drives (or ones on a fast network; e.g. London &lt;-&gt; New York) for day-to-day use and only used the slow ones when they really had to. The slow network drives are *already* basically unusable for most tasks.</p>
<p>So I still feel that the pathological case is incredibly unlikely. Why would someone create 1200 shortcuts on a server that slow? Perhaps someone who it wasn&#8217;t slow for, but after creating them, if it caused problems, they could just delete them. They&#8217;re a nice-to-have not a necessity. Of course, so is the sorting option I advocate. If the argument is that it&#8217;s better to avoid causing a problem to people in a situation, however unlikely, rather than to provide a nice-to-have option to a few other people, then fair enough.</p>
<p>You could still disable the functionality for shortcuts on, or pointing to, network paths. Perhaps you wouldn&#8217;t want them to be sorted differently depending on device type, but it wouldn&#8217;t bother me as a trade-off.</p>
<p>Or you could cache the &#8220;is a directory&#8221; flag in the shortcuts (which would almost always be correct and when wrong the mis-sorting would be no more wrong, misleading or problematic than the other cached or background-populated information being wrong for a shortcut).</p>
<div class=post>[<i>The folder isn&#8217;t slow &#8211; it comes up in 7 seconds. (And there are some companies which disallow access to local drives; you are <u>forced</u> to use the network. Because network drives are backed up and have security auditing.) And as I noted in paragraph 2, the &#8220;is a folder&#8221; bit is already cached in the shortcut. The cost is reading the shortcut. Mis-sorting is far worse than stale background information. If an item is mis-sorted <u>you can&#8217;t find it</u>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson even thread-even depth-1" id="comment-740553">
				<div id="div-comment-740553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-740553">
			May 30, 2009 at 7:37 am</a>		</div>

		<p>&quot;The folder isn&#8217;t slow &#8211; it comes up in 7 seconds.&quot;</p>
<p>Seven seconds isn&#8217;t what I&#8217;d call fast. Faster than 30 seconds, sure, but still slow.</p>
<p>The network drive is slow or else it wouldn&#8217;t have come up in this discussion.</p>
<p>Maybe it could be considered &quot;not so slow it&#8217;s unusable&quot; if the only thing people ever do to the drive is read directory listings off of it and read/write individual files once or twice a day. I&#8217;d still call that slow, and something people would avoid, and certainly not something any sane company would make people use for their intraday work files.</p>
<p>&quot;And there are some companies which disallow access to local drives; you are forced to use the network.&quot;</p>
<p>I&#8217;m well aware of that, but I can&#8217;t imagine any companies would force you to use a network drive which was so slow that reading 1KB files was an issue. People are given fast/local network drives to store their things because they simply cannot work properly if their files are stored on a drive which is so slow that every file read takes seconds.</p>
<p>In my experience (~10 years working for global investment banks), slow network drives are only used for sharing data between locations, not for any individual&#8217;s personal work area. Where collaboration is required people work on things on a more local server and then copy the results to the distant server.</p>
<p>More to the point, I cannot imagine anyone putting 1200 shortcuts into a *flat* folder structure. In the unlikely event that someone did, they&#8217;d see the problem even on a fairly fast network drive (or they&#8217;d get complaints from a remote office about how long that folder took to read) and they&#8217;d then do the obvious thing and organise the shortcuts into a tree structure. Which any sane person would do anyway as having to find things within 1200 shortcuts is no shortcut at all.</p>
<p>&quot;Mis-sorting is far worse than stale background information. If an item is mis-sorted you can&#8217;t find it.&quot;</p>
<p>It&#8217;s just a broken shortcut at that stage. Hardly the end of the world. People have been dealing with them &#8212; ones whose target doesn&#8217;t even exist anymore &#8212; since Win95.</p>
<p>Honestly, if feels like you&#8217;ve chosen a position &#8212; keep the status quo &#8212; and are looking for reasons to back it up. Easy thing to fall into, and I do it frequently myself. </p>
<p>Proposed ideas need to be challenged, for sure, but you seem to be concentrating on the &quot;why can&#8217;t we do this?&quot; rather than the &quot;how can we do this?&quot; That&#8217;s fine if the feature is impossible to implement well, but your arguments against it seem to require unrealistic, pathological cases which are already stupid things to do now, like creating 1200 shortcuts in one place on a slow network drive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymuos odd alt thread-odd thread-alt depth-1" id="comment-741033">
				<div id="div-comment-741033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Anonymuos' rel='external nofollow' class='url'>Anonymuos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090528-00/?p=18123#comment-741033">
			June 2, 2009 at 4:29 am</a>		</div>

		<p>One might say that the Explorer folks don&#8217;t pay enough attention to these scenarios, because at every release of Windows, you can count on those people submitting streams of complaints that the most recent version of Explorer sucks even more on their international corporate network, and then the Explorer team has to do a little redesign work to get things to suck less.</p>
<p>That&#8217;s the truth, nothing but the real bare truth. Explorer is a disaster than have made Vista and Windows 7 a disaster.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

