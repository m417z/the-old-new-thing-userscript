<html>
<head>
<title>Adding a Ctrl+arrow accelerator for moving the trackbar by just one unit, part 1: Initial plunge</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Adding a <KBD>Ctrl</KBD>+arrow accelerator for moving the trackbar by just one unit, part 1: Initial plunge</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 23, 2018 / year-entry #239</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The obvious thing starts to get out of hand.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
When you create a
<a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/bb760149(v=vs.85).aspx">
trackbar common control</a>,
you can specify how far the arrow keys will change the trackbar position
(default: 1 unit)
and how far the <kbd>PgUp</kbd> and
<kbd>PgDn</kbd> keys will change the trackbar position
(default: one fifth of the range).
</p>
<p>
If you change the default distance for the arrow keys
to, say, five units, then you probably want to add
a keyboard accelerator for moving by just one units,
so that somebody can use <code>PgUp</code> and
<code>PgDn</code> to get in the general area they want to be,
then the arrow keys to get close,
and then finally the <kbd>Ctrl</kbd>+arrow keys
to get the exact value.
</p>
<p>
Take
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20030723-00/?p=43073">
the scratch program</a>
and make the following changes:
</p>
<pre>
<font COLOR=blue>#include &lt;strsafe.h&gt;</font>

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
 <font COLOR=blue>g_hwndChild = CreateWindow(TRACKBAR_CLASS, TEXT(""),
    WS_CHILD | WS_VISIBLE,
    0, 0, 100, 100,
    hwnd, (HMENU)100, g_hinst, 0);

  SendMessage(g_hwndChild, TBM_SETLINESIZE, 0, 5);
  SendMessage(g_hwndChild, TBM_SETPAGESIZE, 0, 20);</font>

  return TRUE;
}
</pre>
<p>
We start by creating a trackbar control and setting the line
size to 5 units and page size to 20 units.
</p>
<pre>
<font COLOR=blue>void OnHScroll(HWND hwnd, HWND hwndCtl, UINT code, int pos)
{
 if (hwndCtl == g_hwndChild) {
  TCHAR buf[128];
  pos = (int)SendMessage(hwndCtl, TBM_GETPOS, 0, 0);
  StringCchPrintf(buf, ARRAYSIZE(buf), TEXT("pos = %d"), pos);
  SetWindowText(hwnd, buf);
 }
}

    HANDLE_MSG(hwnd, WM_HSCROLL, OnHScroll);</font>
</pre>
<p>
And we respond to the <code>WM_</code><code>HSCROLL</code>
message by displaying the trackbar's new position.
</p>
<p>
If you run this program, you'll see a happy trackbar,
and you can use the keyboard to move the thumb by 20 units
(with <code>PgUp</code> and <code>PgDn</code>),
or by 5 units
(with the left and right arrow keys).
But there's no way to move the thumb by just one unit.
</p>
<p>
Let's fix that.
</p>
<p>
But how?
</p>
<p>
The first thing that comes to mind is to subclass the trackbar
control and add a new keyboard accelerator.
So let's do that.
</p>
<pre>
<font COLOR=blue>LRESULT CALLBACK TrackbarKeyProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam,
    UINT_PTR uIdSubclass, DWORD_PTR dwRefData)
{
 if (uMsg == WM_KEYDOWN &amp;&amp; GetKeyState(VK_CONTROL) &lt; 0) {
  int delta = 0;
  if (wParam == VK_LEFT) {
   delta = -1;
  } else if (wParam == VK_RIGHT) {
   delta = +1;
  }

  if (delta) {
   auto pos = SendMessage(hwnd, TBM_GETPOS, 0, 0);
   pos += delta;
   SendMessage(hwnd, TBM_SETPOS, TRUE, pos);
   FORWARD_WM_HSCROLL(GetParent(hwnd), hwnd,
    delta &lt; 0 ? TB_LINEUP : TB_LINEDOWN, 0, SendMessage);
   return 0;
  }
 }
 return DefSubclassProc(hwnd, uMsg, wParam, lParam);
}</font>

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
 g_hwndChild = CreateWindow(TRACKBAR_CLASS, TEXT(""),
    WS_CHILD | WS_VISIBLE, 0, 0, 100, 100,
    hwnd, (HMENU)100, g_hinst, 0);

  SendMessage(g_hwndChild, TBM_SETLINESIZE, 0, 5);
  SendMessage(g_hwndChild, TBM_SETPAGESIZE, 0, 20);

  <font COLOR=blue>SetWindowSubclass(g_hwndChild, TrackbarKeyProc, 0, 0);</font>
  return TRUE;
}

void
OnDestroy(HWND hwnd)
{
  <font COLOR=blue>RemoveWindowSubclass(g_hwndChild, TrackbarKeyProc, 0);</font>
  PostQuitMessage(0);
}
</pre>
<p>
With this version, you can hold the <kbd>Ctrl</kbd>
key when pressing the left or right arrow keys,
and the position will change by just one unit.
</p>
<p>
Mission accomplished?
</p>
<p>
Not quite. There's still a lot of stuff missing.
You may not notice it right away, but you will eventually,
probably when one of your customers reports a problem
that makes you have to scramble a fix.
</p>
<p>
For example, this code doesn't manage keyboard focus indicators.
Let's fix that.
</p>
<pre>
LRESULT CALLBACK TrackbarKeyProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam,
    UINT_PTR uIdSubclass, DWORD_PTR dwRefData)
{
 if (uMsg == WM_KEYDOWN &amp;&amp; GetKeyState(VK_CONTROL) &lt; 0) {
  ...
  if (delta) {
   ...
   FORWARD_WM_HSCROLL(GetParent(hwnd), hwnd,
    delta &lt; 0 ? TB_LINEUP : TB_LINEDOWN, 0, SendMessage);
   <font COLOR=blue>SendMessage(hwnd, WM_CHANGEUISTATE,
    MAKELONG(UIS_CLEAR, UISF_HIDEFOCUS), 0);</font>
   return 0;
  }
 }
 return DefSubclassProc(hwnd, uMsg, wParam, lParam);
}
</pre>
<p>
Next, this version doesn't support vertical trackbars at all.
If you add the <code>TBS_</code><code>VERT</code> style to the
<code>Create&shy;Window</code> call,
you'll have a vertical scroll bar, and
we haven't been doing anything with the up and down arrows.
</p>
<p>
In related news,
the trackbar allows you to use the up and down arrows
to change the position of horizontal scroll bars.
The up arrow behaves like the right arrow,
and the down arrow behaves like the left arrow.
Maybe you have customers who rely on this behavior,
say, because that's what their accessibility tool uses.
</p>
<p>
Fortunately, one set of changes covers both of these issues.
</p>
<pre>
LRESULT CALLBACK TrackbarKeyProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam,
    UINT_PTR uIdSubclass, DWORD_PTR dwRefData)
{
 if (uMsg == WM_KEYDOWN &amp;&amp; GetKeyState(VK_CONTROL) &lt; 0) {
  int delta = 0;
  if (wParam == VK_LEFT <font COLOR=blue>|| wParam == VK_UP</font>) {
   delta = -1;
  } else if (wParam == VK_RIGHT <font COLOR=blue>|| wParam == VK_DOWN</font>) {
   delta = +1;
  }
  ...
 }
 return DefSubclassProc(hwnd, uMsg, wParam, lParam);
}
</pre>
<p>
But wait, there's also the
<code>TBS_</code><code>DOWN&shy;IS&shy;LEFT</code> style
that changes the mapping between vertical and horizontal.
If the style is set, then the up arrow acts like the left arrow,
and the down arrow acts like the right arrow.
</p>
<p>
Okay, so let's fix that too.
</p>
<pre>
<font COLOR=blue>WPARAM SwapKeys(WPARAM wParam, UINT vk1, UINT vk2)
{
  if (wParam == vk1) return vk2;
  if (wParam == vk2) return vk1;
  return wParam;
}</font>

LRESULT CALLBACK TrackbarKeyProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam,
    UINT_PTR uIdSubclass, DWORD_PTR dwRefData)
{
 if (uMsg == WM_KEYDOWN &amp;&amp; GetKeyState(VK_CONTROL) &lt; 0) {
  <font COLOR=blue>DWORD style = GetWindowStyle(hwnd);
  if (style &amp; TBS_DOWNISLEFT) {
   if (style &amp; TBS_VERT) {
    wParam = SwapKeys(wParam, VK_LEFT, VK_RIGHT);
   } else {
    wParam = SwapKeys(wParam, VK_UP, VK_DOWN);
   }
  }</font>

  int delta = 0;
  if (wParam == VK_LEFT || wParam == VK_UP) {
   delta = -1;
  } else if (wParam == VK_RIGHT || wParam == VK_DOWN) {
   delta = +1;
  }

  if (delta) {
   auto pos = SendMessage(hwnd, TBM_GETPOS, 0, 0);
   pos += delta;
   SendMessage(hwnd, TBM_SETPOS, TRUE, pos);
   FORWARD_WM_HSCROLL(GetParent(hwnd), hwnd,
    delta &lt; 0 ? TB_LINEUP : TB_LINEDOWN, 0, SendMessage);
   SendMessage(hwnd, WM_CHANGEUISTATE,
    MAKELONG(UIS_CLEAR, UISF_HIDEFOCUS), 0);
   return 0;
  }
 }
 return DefSubclassProc(hwnd, uMsg, wParam, lParam);
}
</pre>
<p>
Okay, are we done now?
</p>
<p>
Nope, you still have right-to-left languages to deal with.
In those cases, we want to flip the meanings of the left and
right arrows.
</p>
<pre>
LRESULT CALLBACK TrackbarKeyProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam,
    UINT_PTR uIdSubclass, DWORD_PTR dwRefData)
{
 if (uMsg == WM_KEYDOWN &amp;&amp; GetKeyState(VK_CONTROL) &lt; 0) {
  <font COLOR=blue>if (GetWindowExStyle(hwnd) &amp; WS_EX_LAYOUTRTL) {
   wParam = SwapKeys(wParam, VK_LEFT, VK_RIGHT);
  }</font>

  DWORD style = GetWindowStyle(hwnd);
  if (style &amp; TBS_DOWNISLEFT) {
   if (style &amp; TBS_VERT) {
    wParam = SwapKeys(wParam, VK_LEFT, VK_RIGHT);
   } else {
    wParam = SwapKeys(wParam, VK_UP, VK_DOWN);
   }
  }

  int delta = 0;
  if (wParam == VK_LEFT || wParam == VK_UP) {
   delta = -1;
  } else if (wParam == VK_RIGHT || wParam == VK_DOWN) {
   delta = +1;
  }

  if (delta) {
   auto pos = SendMessage(hwnd, TBM_GETPOS, 0, 0);
   pos += delta;
   SendMessage(hwnd, TBM_SETPOS, TRUE, pos);
   FORWARD_WM_HSCROLL(GetParent(hwnd), hwnd,
    delta &lt; 0 ? TB_LINEUP : TB_LINEDOWN, 0, SendMessage);
   SendMessage(hwnd, WM_CHANGEUISTATE,
    MAKELONG(UIS_CLEAR, UISF_HIDEFOCUS), 0);
   return 0;
  }
 }
 return DefSubclassProc(hwnd, uMsg, wParam, lParam);
}
</pre>
<p>
Okay, <i>now</i> are we done?
</p>
<p>
Maybe.
I think that covers the remaining issues,
but maybe I missed something.
</p>
<p>
Y'know, this started out as a simple fix,
but all the special cases turned it into a complicated mess.
And maybe a future version of the trackbar control will add
yet another style that introduces another special case.
What we really want to do is hook into the control after it
has decided what to do with the keyboard and before it
changes the trackbar position.
</p>
<p>
Let's work on that next time.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20181023-00/?p=100035#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://blogs.msdn.microsoft.com/oldnewthing/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="4" aria-required="true"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" /></p>
<p class="comment-form-cookies-consent"><input id="wp-comment-cookies-consent" name="wp-comment-cookies-consent" type="checkbox" value="yes" /><label for="wp-comment-cookies-consent">Save my name, email, and website in this browser for the next time I comment.</label></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit btn btn-default" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='100035' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="862f7c5955" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="173"/></p>			</form>
			</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1368605">
				<div id="div-comment-1368605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035#comment-1368605">
			October 23, 2018 at 8:13 am</a>		</div>

		<p>I found that adding hotkeys to dialog boxes was such a pain in the behind I finally gave up and added a GetMessage hook and sent the hotkeys to their handlers that way.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035&#038;replytocom=1368605#respond' onclick='return addComment.moveForm( "div-comment-1368605", "1368605", "respond", "100035" )' aria-label='Reply to Joshua'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1368625">
				<div id="div-comment-1368625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035#comment-1368625">
			October 23, 2018 at 8:28 am</a>		</div>

		<p>This looks like another excellent miniseries of things every &#8220;oldnew&#8221; developer should read, thank you.</p>
<p>I find it a bit strange that the common controls don&#8217;t all notify the parent of keystrokes, there is a common proc where they handle CCM_* where it could be added. There is NM_CHAR and NM_KEYDOWN but they are not sent by every control.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035&#038;replytocom=1368625#respond' onclick='return addComment.moveForm( "div-comment-1368625", "1368625", "respond", "100035" )' aria-label='Reply to skSdnW'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1368735">
				<div id="div-comment-1368735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035#comment-1368735">
			October 24, 2018 at 3:19 am</a>		</div>

		<p>I can think of two ways in which I would have tried to achieve this, but I don&#8217;t like either of them.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035&#038;replytocom=1368735#respond' onclick='return addComment.moveForm( "div-comment-1368735", "1368735", "respond", "100035" )' aria-label='Reply to Neil'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1368825">
				<div id="div-comment-1368825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035#comment-1368825">
			October 25, 2018 at 3:51 am</a>		</div>

		<p>The correct way has now been posted. It isn&#8217;t either of my ways because I didn&#8217;t know about that notification, but I came close by trying to use a different notification (I have no idea whether that notification I was thinking of would have worked though).</p>
<p>Out of interest, the other way I was thinking of would have been to watch for the Ctrl key state on WM_KEYDOWN messages and change the line size appropriately.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035&#038;replytocom=1368825#respond' onclick='return addComment.moveForm( "div-comment-1368825", "1368825", "respond", "100035" )' aria-label='Reply to Neil'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-3" id="comment-1368835">
				<div id="div-comment-1368835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035#comment-1368835">
			October 25, 2018 at 9:30 am</a>		</div>

		<p>Your way sounds promising too, and may even be better.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20181023-00/?p=100035&#038;replytocom=1368835#respond' onclick='return addComment.moveForm( "div-comment-1368835", "1368835", "respond", "100035" )' aria-label='Reply to Raymond Chen - MSFT'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

