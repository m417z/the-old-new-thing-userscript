<html>
<head>
<title>Decoding the parameters of a thrown C++ exception (0xE06D7363), revisited</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Decoding the parameters of a thrown C++ exception (0xE06D7363), revisited</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 15, 2016 / year-entry #196</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The mysterious second parameter.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
When I explained
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20100730-00/?p=13273">
how to decode the parameters of a thrown C++ exception</a>,
I noted that the mysterious second parameter at index 1
"is a pointer to the object being thrown (sort of)."
</p>
<p>
I've since learned more about that mysterious second parameter at index 1:
It really is a pointer to the object being thrown, no header or anything.
I was faked out because in the crash dumps I looked at,
the object being thrown was a pointer to a stack object,
so we had two things on the stack (the pointer being thrown, and the
object being pointed to),
and therefore I could dump my way from one to the other.
</p>
<p>
Basically, I got lucky.
</p>
<p>
So that's the story of the second parameter.
It's a pointer to the object being thrown, but if the object
being thrown is itself a pointer,
then you'll have to perform another indirection to find the underlying object.
</p>
<p>
Here's an example from a <code>throw E_FAIL</code>:
</p>
<pre>
0:000&gt; .exr 02e0f704
ExceptionAddress: 75dd4878 (KERNELBASE!RaiseException+0x00000048)
   ExceptionCode: e06d7363 (C++ EH exception)
  ExceptionFlags: 00000001
NumberParameters: 3
   Parameter[0]: 19930520
   Parameter[1]: 02e0fc6c
   Parameter[2]: 00d1263c
0:000&gt; dd 02e0fc6c l1
02e0fc6c  80004005 // the thing being thrown is value
</pre>
<p>
And here's <code>throw "oops"</code>:
</p>
<pre>
0:000&gt; .exr 02a6f3e4
ExceptionAddress: 75dd4878 (KERNELBASE!RaiseException+0x00000048)
   ExceptionCode: e06d7363 (C++ EH exception)
  ExceptionFlags: 00000001
NumberParameters: 3
   Parameter[0]: 19930520
   Parameter[1]: 02a6f944
   Parameter[2]: 008d22b0
0:000&gt; dd 02a6f944 l1
02a6f944  008d10e0
// since the thing being thrown is a pointer, we dump what it points to.
0:000&gt; da 008d10e0
008d10e0  "oops" // what it points to
</pre>
<p>
<b>Bonus chatter</b>:
The layout of the mysterious third parameter (index 2)
is explained in the <code>ehdata.h</code> header file
that comes with Visual Studio.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-mndos even thread-even depth-1 parent" id="comment-1264995">
				<div id="div-comment-1264995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MacIn173' rel='external nofollow' class='url'>MacIn173</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1264995">
			September 15, 2016 at 10:40 am</a>		</div>

		<p>How some can determine, whether it is a code or object address? (80004005 looks like a NTSTATUS with medium severity, but code could be of smaller value, couldn&#8217;t it?)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1265005">
				<div id="div-comment-1265005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1265005">
			September 15, 2016 at 10:46 am</a>		</div>

		<p>IsBadReadPtr</p>
<p>Seriously, the code is correctly designed; you know the difference by looking at the format in the linked article.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mndos even depth-3 parent" id="comment-1265015">
				<div id="div-comment-1265015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MacIn173' rel='external nofollow' class='url'>MacIn173</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1265015">
			September 15, 2016 at 11:02 am</a>		</div>

		<p>&#8220;IsBadReadPtr&#8221;<br />
What I&#8217;m asking here is basically if code stuffed in structure instead of object address can be one of valid memory addresses. If so, then IsBadReadPtr is no use.</p>
<p>&#8220;you know the difference by looking at the format in the linked article&#8221;<br />
Not a chance, the linked article is all about exception object, while I&#8217;m asking about code.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip odd alt depth-4 parent" id="comment-1265035">
				<div id="div-comment-1265035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1265035">
			September 15, 2016 at 1:33 pm</a>		</div>

		<p>The type information is part of that third parameter, that entire parameter is all about describing what type was thrown.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mndos even depth-5" id="comment-1265085">
				<div id="div-comment-1265085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MacIn173' rel='external nofollow' class='url'>MacIn173</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1265085">
			September 16, 2016 at 10:35 am</a>		</div>

		<p>Ok, this was the missing part. Thank you.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1265045">
				<div id="div-comment-1265045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Douglas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1265045">
			September 15, 2016 at 1:49 pm</a>		</div>

		<p>Well, I checked a list of &#8220;common HRESULT values&#8221;: <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa378137(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa378137(v=vs.85)</a>.aspx<br />
I note that all of them are uint32 (or similar). I also note there&#8217;re two (kinds of) values that matter. There&#8217;s S_OK, which is zero. So someone threw a null pointer, or threw S_OK (&#8230; which makes no sense when you think about it). All error values are negative.</p>
<p>In (old) 32 bit land, were those pointers, they would be in the higher half, so usermode code has no business with them (I think).</p>
<p>With LargeAddressAware (or 64 bit), that doesn&#8217;t help you. Although in x64 (currently) addresses are 48 bits and sign extended, so anything 0x0001&#8230;0000 or higher is garbage. I don&#8217;t know if the high half of the pointer would be left as garbage or not, though.</p>
<p>That only helps sometimes, not always.</p>
<p>I&#8217;d also look at the alignment (if you act as though it were a pointer). &#8220;Object allocated on an odd address? Hmm&#8230; I don&#8217;t think so.&#8221;</p>
<p>Naturally, because you&#8217;re debugging your (or your coworker&#8217;s) own code (right?), you have a code address and a map file (you did keep the map file, right?), so you can load that in the debugger. It then points you to frobnicator/dofrob.cpp:183 (which you have, right?) and when you check it you find &#8220;throw foo-&gt;favorite_error;&#8221; or something like that. Then you (should) know the type, so you go back to the debugger to look at the values, etc. etc.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mndos even depth-3" id="comment-1265095">
				<div id="div-comment-1265095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MacIn173' rel='external nofollow' class='url'>MacIn173</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1265095">
			September 16, 2016 at 10:39 am</a>		</div>

		<p>&#8220;All error values are negative&#8221;<br />
E_FAIL is NTSTATUS kind of value with &#8216;warning&#8217; severity. My concern was that some can craft one of &#8216;informational&#8217; severity, that means code would begin with 0x4&#8230; which could be a readable address as well.</p>
<p>&#8220;“Object allocated on an odd address? Hmm… I don’t think so.”&#8221;<br />
Let&#8217;s say, the code is 0x401000E0. And this is both valid address/inf code.</p>
<p>&#8220;Naturally, because you’re debugging your (or your coworker’s) own code (right?)&#8221;<br />
I should have formulated it better, I guess. &#8220;How some could determine&#8221; = &#8220;what algorithm machine should use to determine&#8221;, eg I was thinking from CPU&#8217;s point of view.<br />
But one way or another, answer above ^^^ declares, that 3rd par has details.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip odd alt thread-odd thread-alt depth-1" id="comment-1265025">
				<div id="div-comment-1265025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1265025">
			September 15, 2016 at 1:23 pm</a>		</div>

		<p>Well, tbh, I can&#8217;t find the ehdata.h file in the VC2015 sources.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1265065">
				<div id="div-comment-1265065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160915-00/?p=94316#comment-1265065">
			September 15, 2016 at 7:12 pm</a>		</div>

		<p>Oddly enough I was struggling with a rash of 0xE06D7363 errors only a day or two ago. I knew what the cause was though, the tools I was using didn&#8217;t like dealing with 150MB of text being dumped on them. (Lots and lots of SQL statements.) Also Word&#8217;s Replace All behaviour is surprisingly wonky when faced with a file of that size, even though it didn&#8217;t give me an error. </p>
<p>Fortunately I found a better way to deal with the problem and I don&#8217;t have to repeat the exercise when we get updated versions of the data.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

