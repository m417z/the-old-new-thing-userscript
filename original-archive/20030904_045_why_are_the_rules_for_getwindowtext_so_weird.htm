<html>
<head>
<title>Why are the rules for GetWindowText so weird?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why are the rules for <CODE>GetWindowText</CODE> so weird?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 4, 2003 / year-entry #46</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Set the wayback machine to 1983.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
        <a href="http://www.joelonsoftware.com/">Joel Spolsky</a> rightly points out that <a href="http://www.joelonsoftware.com/items/2003/08/22.html">the
        rules for <code>GetWindowText</code> exhibit abstraction leakage</a>. Why are the
        rules for <code>GetWindowText</code> so weird? 
    </p>
<p>
        Set the wayback machine to 1983. Your typical PC had an 8086 processor running at
        a whopping 4.7MHz, two 360K 5&frac14;-inch floppy drives (or if you were really loaded, one
        floppy drive and a 10MB hard drive), and 256KB of memory. [<i>Original entry said
        256MB - oops. Thanks to 
<a HREF=http://www.eightypercent.net/>Joe Beda</a> for pointing this out.</i>] 
    </p>
<p>
        This was the world of Windows 1.0. 
    </p>
<p>
        Windows 1.0 was a co&ouml;peratively-multitasked system. No pre-emptive multitasking here.
        When your program got control, it had control for as long as it wanted it. Only when
        you called a function like <code>PeekMessage</code> or <code>GetMessage</code> did
        you release control to other applications. 
    </p>
<p>
        This was important, because in the absence of a hardware memory manager, you really
        had to make sure that your memory didn't get ripped out from under you. 
    </p>
<p>
        One important consequence of co&ouml;perative multitasking is that if your program is running,
        not only do you know that no other program is running, but you also know that <strong>every
        window is responding to messages</strong>. Why? Because if they were hung, they wouldn't
        have released control to you! 
    </p>
<p>
        This means that it is <strong>always</strong> safe to send a message. You never had
        to worry about the possibility of sending a message to a hung window, since you knew
        that no windows were hung. 
    </p>
<p>
        In this simpler world, <code>GetWindowText</code> was a straightforward function: 
    </p>
<pre>int WINAPI
GetWindowText(HWND hwnd, LPSTR pchBuf, int cch)
{
    // ah for the simpler days
    return SendMessage(hwnd, WM_GETTEXT, (WPARAM)cch, (LPARAM)pchBuf);
}
</pre>
<p>
        This worked for all windows, all the time. No special handling of windows in a different
        process. 
    </p>
<p>
        It was the transition to Win32 and pre-emptive multitasking that forced the change
        in the rules, because for the first time, there was the possibility that (gasp) the
        window you were trying to communicate with was not responding to messages. 
    </p>
<p>
        Now you have the backwards compatibility problem. As I described <a href="https://blogs.msdn.microsoft.com/oldnewthing/20030821-00/?p=42833">in
        my original article</a>, many parts of the system and many programs rely on the ability
        to retrieve window text without hanging. So how do you make it possible to retrieve
        window text without hanging, while still giving controls like the edit control the
        ability to do their own window text management? 
    </p>
<p>
        The Win32 rules on <code>GetWindowText</code> are the result of this attempt to reconcile
        conflicting goals. 
    </p>
<p>
        (This same story, with slight changes, also works as a discussion of why DDE works
        the way it does. But fewer people use DDE nowadays, so the effect is not as dramatic.) 
    </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-123273">
				<div id="div-comment-123273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eightypercent.net' rel='external nofollow' class='url'>Joe Beda</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663#comment-123273">
			September 4, 2003 at 11:25 am</a>		</div>

		<p>Hey Raymond,</p>
<p>256MB?  Do you mean KB?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-123283">
				<div id="div-comment-123283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dotsql.dyndns.org:8674/weblog/' rel='external nofollow' class='url'>Damit</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663#comment-123283">
			September 4, 2003 at 12:31 pm</a>		</div>

		<p>Even 256KB would be quite a lot&#8230; how much memory could the 8086 support anyway? (I recall it was somewhere near 1MB, but you couldn&#8217;t use that much)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-123293">
				<div id="div-comment-123293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MartinJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663#comment-123293">
			September 4, 2003 at 12:38 pm</a>		</div>

		<p>An 80&#215;86 can handle 640KB in real mode (that&#8217;s 16 bit).  Even though addresses were handled in 32 bits, the system addressing was overlapped (multiply the upper 16 bits by 16 and add the lower 16 bits).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-123303">
				<div id="div-comment-123303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Blake</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663#comment-123303">
			September 4, 2003 at 2:44 pm</a>		</div>

		<p>Martin:  It&#8217;s more complicated than that.  The 8086 which is what&#8217;s Damit was asking about had 20 address pins.  2^20 results in 1MB of address space.  The IBM PC developers decided that of that 1MB, 384K should be reserved for mapping in devices and 640K should be available to address main memory.  The 640K limitation is a PC thing, not a x86 thing.  And of course then it gets even more complicated, if you look at the 286 and 386 (and perhaps 186 but I can&#8217;t remember) where there were more than 20 address pins you could actually address that extra 64K beyond 1MB that became known as the High Memory Area and was used by DOS 5 and QEMM and such.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-123313">
				<div id="div-comment-123313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.wirewd.com/wh/' rel='external nofollow' class='url'>w.h.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663#comment-123313">
			September 5, 2003 at 11:07 am</a>		</div>

		<p>I always loved how the 65816 (the 16 bit version of the 6502) went from 16 bit addresses to 24-bit addresses without really obnoxious segment registers.  The segment register was 8 bits slapped on the side without any of the usual funkieness.</p>
<p>Although, the segment registers like that did prevent a few tricks that were useful when you were doing graphics, i.e. setting the segment register to the beginning of a bitmap and using the 16 bit addresses.</p>
<p>I love the history of computing. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-123323">
				<div id="div-comment-123323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663#comment-123323">
			September 6, 2003 at 1:01 pm</a>		</div>

		<p>&quot;co&#246;peratively.&quot;  &quot;pre&#235;mptive.&quot;  I thought only The New Yorker rose to that level of pr&#235;t&#235;ns&#239;&#246;n.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-123333">
				<div id="div-comment-123333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.diku.dk/hjemmesider/studerende/firefly' rel='external nofollow' class='url'>Peter Lund</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663#comment-123333">
			September 24, 2003 at 7:51 pm</a>		</div>

		<p>That would be 8088 and 4.77 MHz, wouldn&#8217;t it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-548333">
				<div id="div-comment-548333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/09/11/4857870.aspx' rel='external nofollow' class='url'>The Old New Thing : What's the difference between EM_UNDO and WM_UNDO?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030904-00/?p=42663#comment-548333">
			September 11, 2007 at 11:07 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2007/09/11/4857870.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/09/11/4857870.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

