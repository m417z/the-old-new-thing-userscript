<html>
<head>
<title>There can be more than one (or zero): Converting a process to a window</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>There can be more than one (or zero): Converting a process to a window</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 20, 2008 / year-entry #59</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>37</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A common question I see is "How do I find the window that corresponds to an HINSTANCE?" This question comes pre-loaded with the assumption that there is only one window that corresponds to an HINSTANCE, which is true for only the most rudimentary of Win32 programs. Even a simple program like Notepad has more than...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A common question I see is "How do I find the window that corresponds to an <code>HINSTANCE</code>?"</p>
<p> This question comes pre-loaded with the assumption that there is only one window that corresponds to an <code>HINSTANCE</code>, which is true for only the most rudimentary of Win32 programs. Even a simple program like Notepad has more than one window with the same <code>HINSTANCE</code>, as Spy quickly reveals. </p>
<p> But when I hear this question, I smell something suspicious. First, instance handles are meaningful only when you specify which process you're referring to, since an instance handle in Win32 is the base address of a module, and different processes can have different DLLs loaded at the same base address (thanks to separate address spaces). Second, I can't think of any normal scenarios where you'd even care about finding all the windows that have a particular instance handle, especially since <a href="http://blogs.msdn.com/oldnewthing/archive/2005/04/18/409205.aspx"> the instance handle is ignored if the window belongs to a global class</a>, and global classes are typically the only classes you are interested in anyway when you go snooping into another process. (After all, if it's not your process, you don't really know much of anything about its private classes.) </p>
<p> But you probably already know that the person asking the question is asking the wrong question. They almost certainly launched a program with the <code>ShellExecute</code> function and now want to locate its window so they can do, um, <i>something</i> with it. But you already know that <a href="http://blogs.msdn.com/oldnewthing/archive/2006/05/05/590749.aspx"> you can't do anything meaningful with the <code>HINSTANCE</code> returned by the <code>ShellExecute</code> function</a> <a href="http://blogs.msdn.com/oldnewthing/archive/2006/11/08/1035971.aspx"> aside from compare it against the number 32</a>, since it's not really an instance handle on Win32. That the return value is of type <code>HINSTANCE</code> is just a carry-over from 16-bit Windows. </p>
<p> But the person who asked the question never got that far in reading the documentation and just said, "Well, I've got an <code>HINSTANCE</code> and I need a window, so can somebody help me convert this <code>HINSTANCE</code> to a window?" without understanding what's really going on. They need&nbsp;Y, but have&nbsp;X (a fake&nbsp;X, but still), so obviously the thing they need next is a way to convert your X to a Y. </p>
<p> Even if it doesn't make sense. </p>
<p> It's like asking for double-strength placebos. </p>
<p> Okay, so you get past the initial disconnect of asking for the wrong thing. Say you have a process ID or a thread ID and you want to find the window for that process or thread. </p>
<p> Again, there can be more than one, and there might be zero. If it's a process you're after, you can enumerate the windows on the desktop and use the <code>GetWindowThreadProcessId</code> function to determine what thread and process they belong to. If you are interested in the windows that belong to a thread, you can use the <code>EnumThreadWindows</code> function. Your next task is deciding which of those windows is the one you want. </p>
<p> When you try to explain this to people, you sometimes get stuck in the <i>Why won't you answer my question?</i> cycle. </p>
<p> "I have a thread ID. How do I get the corresponding window?" </p>
<p> <i>You can use the <code>EnumThreadWindows</code> function to get all the windows on the thread.</i> </p>
<p> "Yes, I know about <code>EnumThreadWindows</code>, but how do I get the window that I want?" </p>
<p> <i>Well, you haven't said what you wanted yet.</i> </p>
<p> "I want the window that corresponds to the thread." </p>
<p> <i>But which one? How will you decide among all the windows?</i> </p>
<p> "That's what I'm asking you!" </p>
<p> <i>But you haven't yet described what you want.</i> </p>
<p> "I want the window corresponding to the thread. Why won't you answer my question?" </p>
<p> Note that saying, "I am looking for the top-level unowned window" is a step forward, but it still doesn't uniquely identify a window. There can be multiple top-level unowned windows in a process. For example, Explorer typically has lots of top-level unowned windows. There's the desktop, the taskbar, your open folder windows, and property sheets. If you ask for "the" top-level unowned window of Explorer, which one do you want? </p>
<p> Perhaps people are getting the idea that there is a way to uniquely specify "the" window for a process because the <code>System.Diagnostics.Process</code> object has a property called <a href="http://msdn2.microsoft.com/en-us/library/system.diagnostics.process.mainwindowhandle.aspx"> <code>MainWindowHandle</code></a>. The documentation for that property doesn't do anything to dispel the notion, either. I have no idea how that property decides among multiple top-level unowned windows. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (37)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-602583">
				<div id="div-comment-602583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602583">
			February 20, 2008 at 10:29 am</a>		</div>

		<p>I never knew Notepad had a status bar. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-602623">
				<div id="div-comment-602623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602623">
			February 20, 2008 at 10:33 am</a>		</div>

		<p>&quot;I have a thread ID. How do I get the corresponding window?&quot;</p>
<p>You can use the EnumThreadWindows function to get all the windows on the thread.</p>
<p>&quot;Yes, I know about EnumThreadWindows, but how do I get the window that I want?&quot;</p>
<p>It&#8217;ll be the first window returned from EnumThreadWindows.</p>
<p>;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-602653">
				<div id="div-comment-602653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ma-yaa.blogspot.com' rel='external nofollow' class='url'>Anton Tykhyy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602653">
			February 20, 2008 at 10:45 am</a>		</div>

		<p>Taking a look at the actual code behind the MainWindowHandle property (through Reflector) reveals that the first time you read this property, it returns the first top-level unowned visible window matching the process&#8217; id, as enumerated by the EnumWindows function. This rings the alarm bells already, because the enumeration order is unspecified. If no window satisfies all these criteria, the property&#8217;s value is 0. And now for the funniest part: subsequent reads of the MainWindowHandle property yield the same value which was returned on the first call, even if it is no longer a valid window handle or the actual main window has changed in the meantime. &nbsp;System.Diagnostics.Process.Refresh() resets the &quot;have main window&quot; flag, so you can call it before every read of the MainWindowHandle property to have it repeat the search, but this does not solve the more-than-one-&quot;main window&quot; problem and anyway there is a race between using the value of MainWindowHandle and the destruction/change of the &quot;main window&quot;.</p>
<p>All of this makes the MainWindowHandle property obviously dangerous except for the simplest target processes, but I suppose it&#8217;s better to make all .NET programs share the same main-window-finding bug than force each program to write its own main window finder, introducing an unknown number of different bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-602663">
				<div id="div-comment-602663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ma-yaa.blogspot.com' rel='external nofollow' class='url'>Anton Tykhyy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602663">
			February 20, 2008 at 10:58 am</a>		</div>

		<p>A correction — the race I mentioned is, of course, not a .NET artifact but is inherent in the Win32 API. Of course, back in the days of 16-bit Windows this race did not exist since your thread could not be pre-empted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-602683">
				<div id="div-comment-602683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602683">
			February 20, 2008 at 11:04 am</a>		</div>

		<p>Anton: The bug you described is actually desired behavior. &nbsp;Querying processes, especially if done repeatedly, can cause your program to eat up lots of CPU time. &nbsp;So the Process object caches its results until you explicitly tell it to reload with .Refresh. &nbsp;The &quot;problem&quot; you mention occurs with all properties on Process, not just MainWindowHandle. &nbsp;If you create a Process object, and then end the process it points to, you will still be able to access all the projecties in the Process object even though the process no longer exists (IIRC). &nbsp;Only when you call Refresh will the Process object realize the process has ended.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-602703">
				<div id="div-comment-602703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://en.wikipedia.org/wiki/Christopher_Walken' rel='external nofollow' class='url'>Christopher Walken</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602703">
			February 20, 2008 at 11:12 am</a>		</div>

		<p>Raymond,</p>
<p>Who is asking you these questions? From time to time it seems you receive questions from people that seem pretty low in the food chain.</p>
<p>Thanks,</p>
<p>Chris</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-602713">
				<div id="div-comment-602713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ma-yaa.blogspot.com' rel='external nofollow' class='url'>Anton Tykhyy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602713">
			February 20, 2008 at 11:16 am</a>		</div>

		<p>Dan: This is very true. I understand the need for caching, but the user of MainWindowHandle still needs to understand the issues involved, including this caching behaviour. MSDN&#8217;s page on MainWindowHandle does not mention these problems explicitly and the page on Refresh() is somewhat vague, because at least the &quot;main window&quot; handle is recalculated when it is queried and not by the Refresh() call, as the documentation seems to imply.</p>
<p>Also I&#8217;d like to correct &quot;bug&quot; to &quot;particular behaviour&quot; in my original post to avoid further discussion of whether the described behaviour is actually a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-602793">
				<div id="div-comment-602793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Lyon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602793">
			February 20, 2008 at 12:54 pm</a>		</div>

		<p>Sounds like Raymond is stuck in an infinite loop of:</p>
<p>&nbsp;Q: (dumb question).</p>
<p>&nbsp;A: Your question is malformed. Try again.</p>
<p>Depending on circumstances, I find one of the following responses to be more effective:</p>
<p>&nbsp;A: Your question is malformed. Go away until you get a clue.</p>
<p>or</p>
<p>&nbsp;A: Your question is malformed. Tell me what you&#8217;re really trying to do so that I can help you reach a resolution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-602853">
				<div id="div-comment-602853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ma-yaa.blogspot.com' rel='external nofollow' class='url'>Anton Tykhyy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602853">
			February 20, 2008 at 2:14 pm</a>		</div>

		<p>Ray: MainWindowHandle doesn&#8217;t use EnumThreadWindows unless EnumWindows uses it internally, see above. And the actual code in System.dll does not support the statement that MainWindowHandle returns the first window created by the process. The simplest counterexample is if the first window the process creates is always invisible (e.g. a message-target window). And the documentation for MainWindowHandle is misleading to say the least:</p>
<p>&#8212;</p>
<p>The main window is the window that is created when the process is started. After initialization, other windows may be opened, including the Modal and TopLevel windows, but the first window associated with the process remains the main window.</p>
<p>&#8212;</p>
<p>In conjunction with Reflector, this paragraph does make one scratch one&#8217;s head.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-602913">
				<div id="div-comment-602913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602913">
			February 20, 2008 at 5:14 pm</a>		</div>

		<p>Isn&#8217;t the main window the one whose message loop is run by the first (and thus the main) thread of a newly created process?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-602943">
				<div id="div-comment-602943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602943">
			February 20, 2008 at 5:30 pm</a>		</div>

		<p>&quot;</p>
<p>Isn&#8217;t the main window the one whose message loop is run by the first (and thus the main) thread of a newly created process?</p>
<p>&quot;</p>
<p>There are typically several windows owned by the same thread.</p>
<p>BTW: A window isn&#8217;t bound to &quot;a message loop&quot; (whatever this means).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-602823">
				<div id="div-comment-602823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602823">
			February 20, 2008 at 1:23 pm</a>		</div>

		<p>This question falls in to a category of questions I also encounter quite often.</p>
<p>Imagine that someone is driving to the Microsoft campus in Redmond and several miles out they come to a fork in the road. The left road goes directly to Microsoft HQ, while the right road is unnavigable after a mile due to a missing bridge over a huge river.</p>
<p>Sane people would do one of two things:</p>
<p> * Pick a road, and if it turns out to be the wrong road drive back and take the other one.</p>
<p> * Stop at the fork and phone up Raymond and ask him which road to choose. (He doesn&#8217;t know, but he can guess!)</p>
<p>The sort of person who asks the question Raymond&#8217;s discussing today would take the wrong road and then after a mile call up Raymond and ask him &quot;How do you convert a car into a boat?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-602843">
				<div id="div-comment-602843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Trent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602843">
			February 20, 2008 at 1:43 pm</a>		</div>

		<p>Interestingly, there *are* different strengths of placebo you can order (so the doctor has something to give when the patient says &quot;this isn&#8217;t working well enough&quot;, believe it or not). Look up &quot;Cebocap&quot; here: <a rel="nofollow" target="_new" href="http://www.walgreens.com/library/finddrug/druginfo.jsp?particularDrug=Cebocap" rel="nofollow">http://www.walgreens.com/library/finddrug/druginfo.jsp?particularDrug=Cebocap</a>.</p>
<p>Anyway, the MainWindowHandle is documented to be the *first* window created by the process, which implies that probably EnumThreadWindows&#8217; order may end up being frozen for unintentional backwards compatibility reasons :-).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-602993">
				<div id="div-comment-602993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602993">
			February 20, 2008 at 10:50 pm</a>		</div>

		<p>&quot;What, you mean like GetProcessId?&quot;</p>
<p>Pwned :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603003">
				<div id="div-comment-603003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603003">
			February 20, 2008 at 10:53 pm</a>		</div>

		<blockquote><p>
  &gt;BTW: A window isn&#8217;t bound to &quot;a message loop&quot; (whatever this means).&lt;&lt;
</p></blockquote>
<p>You mean that poor window doesn&#8217;t know about his window procedure which is running his message loop?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-602963">
				<div id="div-comment-602963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B&amp;D-OS-fan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602963">
			February 20, 2008 at 6:15 pm</a>		</div>

		<p>Successful mockery, grats.</p>
<p>Now, I&#8217;d like to rephrase the question those poor people, who innocently didn&#8217;t know how annoying lack of sensible and useful (or even, gasp, well-organized?) documentation can be really, meant to ask:</p>
<p>&quot;The child process is safeguarded against multiple execution and has exactly *one* window.</p>
<p>I used ShellExecute**EX** and presumably got a HANDLE hProcess. How do I go from this HANDLE to the ProcessID, so I can match it against all the open windows?&quot;</p>
<p>I can surely OpenProcess all the ProcessIDs across all Windows, but that seems wasteful and noisy and I&#8217;ll still have to somehow match the process behind OpenProcess with the one behind ShellExecuteEx-&gt;ShellExecuteInfo.hProcess, unless of course OpenProcess always yields the same HANDLE for the same ProcessID, which again I cannot believe given there&#8217;s DuplicateHandle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-602973">
				<div id="div-comment-602973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-602973">
			February 20, 2008 at 7:21 pm</a>		</div>

		<p>&quot;I used ShellExecute**EX** and presumably got a HANDLE hProcess. How do I go from this HANDLE to the ProcessID, so I can match it against all the open windows?&quot;</p>
<p>What, you mean like GetProcessId?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603053">
				<div id="div-comment-603053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ma-yaa.blogspot.com' rel='external nofollow' class='url'>Anton Tykhyy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603053">
			February 21, 2008 at 3:48 am</a>		</div>

		<p>Lucas: I quoted this same paragraph above, but that&#8217;s not what the MainWindowHandle code does.</p>
<p>Medinoc: yes, a splash screen is a good example.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603063">
				<div id="div-comment-603063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Cohn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603063">
			February 21, 2008 at 4:13 am</a>		</div>

		<p>in MFC, you can ask for AfxGetApp()-&gt;m_pMainWnd</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603073">
				<div id="div-comment-603073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603073">
			February 21, 2008 at 4:50 am</a>		</div>

		<p>&quot;You mean that poor window doesn&#8217;t know about his window procedure which is running his message loop?&quot;</p>
<p>The window proc doesn&#8217;t run the message loop.</p>
<p>The message loop runs the window proc.</p>
<p>A window is bound to a message queue so that messages sent to the window are queued on the message queue.</p>
<p>Every thread has a message queue which all its windows are bound to.</p>
<p>A message loop is a piece of code that gets message from the queue of a thread, dispatch them to the window procedures and loop.</p>
<p>Messages don&#8217;t need to be dispatched in message loops, but typically are.</p>
<p>For example, the MessageBox and DialogBox functions include a message loop.</p>
<p>So, when you call MessageBox, all the windows of your thread gets their messages handled by the message loop of MessageBox.</p>
<p>If you call MessageBox while you&#8217;re handling a message in a window procedure, there will be TWO message loops running at once.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603013">
				<div id="div-comment-603013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lucas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603013">
			February 20, 2008 at 11:08 pm</a>		</div>

		<p>As for &nbsp;the System.Diagnostics.Process.MainWindowHandle property, the documentation yes:</p>
<p>&quot;The main window is the window that is created when the process is started. After initialization, other windows may be opened, including the Modal and TopLevel windows, but the *first* window associated with the process remains the main window.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603083">
				<div id="div-comment-603083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603083">
			February 21, 2008 at 7:30 am</a>		</div>

		<p>Using the excellent Reflector program to poke around in .NET, it would seem that the MainWindowHandle property of System.Diagnostics.Process called EnumThreadWindows, then uses the following logic to determine which of the values returned is the &#8216;correct&#8217; one:</p>
<p>private bool IsMainWindow(IntPtr handle)</p>
<p>{</p>
<p>&nbsp; &nbsp;return (!(NativeMethods.GetWindow(new HandleRef(this, handle), 4) != IntPtr.Zero) &amp;&amp; NativeMethods.IsWindowVisible(new HandleRef(this, handle)));</p>
<p>}</p>
<p>Which looks to me like the first non-zero, visible window handle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603093">
				<div id="div-comment-603093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603093">
			February 21, 2008 at 7:33 am</a>		</div>

		<p>Actually, the first visible window which has GW_OWNER set.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603123">
				<div id="div-comment-603123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mancomb.livejournal.com' rel='external nofollow' class='url'>Ryan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603123">
			February 21, 2008 at 8:07 am</a>		</div>

		<p>@Alex: I forget my MFC but isn&#8217;t m_pMainWnd set by an application at runtime?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603133">
				<div id="div-comment-603133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zorba the geek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603133">
			February 21, 2008 at 8:07 am</a>		</div>

		<p>&quot;in MFC, you can ask for AfxGetApp()-&gt;m_pMainWnd&quot;</p>
<p>In MFC, you need to initialize m_pMainWnd yourself in InitInstance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603173">
				<div id="div-comment-603173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ma-yaa.blogspot.com' rel='external nofollow' class='url'>Anton Tykhyy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603173">
			February 21, 2008 at 9:22 am</a>		</div>

		<p>Geh. Matt, did you read the comments before posting? MainWindowHandle uses EnumWindows, not EnumThreadWindows. And that&#8217;s not a non-zero-handle window, but an unowned window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603183">
				<div id="div-comment-603183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B&amp;D-OS-fan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603183">
			February 21, 2008 at 9:45 am</a>		</div>

		<blockquote><p>
  And as for GetProcessId(), it&#8217;s a shame it requires Windows XP SP1 or superior.
</p></blockquote>
<p>/signed. (Didn&#8217;t find it in my MSVC6.0 doc therefore.)</p>
<blockquote><p>
  How could the Win2000 users do?
</p></blockquote>
<p>Usually by &quot;an alternative means&quot;, stupid stuff like having the other process write its Window handle somewhere, or giving it a Window handle to send its own Windows handle to.</p>
<p>Unfortunately, this works not at all if the target process is not in source available&#8230;</p>
<p>Anyways, I guess I&#8217;m out of luck as this feature only took about a decade to manifest, woohoo! Now, the function &quot;GetHandleInfo(hSpecial, &amp;HandleType, &amp;HandleDataSize, &amp;HandleData)&quot; should be ready right after easter 2017, I presume&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603043">
				<div id="div-comment-603043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603043">
			February 21, 2008 at 3:27 am</a>		</div>

		<p>So, if the process displays a splash screen before opening its main window, the property becomes useless ?</p>
<p>I think the first *overlapped* window would be a better choice&#8230;</p>
<p>And as for GetProcessId(), it&#8217;s a shame it requires Windows XP SP1 or superior. How could the Win2000 users do ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603253">
				<div id="div-comment-603253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603253">
			February 21, 2008 at 12:29 pm</a>		</div>

		<p>&quot;Usually by &quot;an alternative means&quot;, stupid stuff like having the other process write its Window handle somewhere.&quot;</p>
<p>Much simplier: Using a specific window class name so that the other process can use FindWindow.</p>
<p>&quot;</p>
<p>Unfortunately, this works not at all if the target process is not in source available&#8230;</p>
<p>&quot;</p>
<p>FindWindow might &quot;work&quot; even if the target process source code isn&#8217;t available.</p>
<p>Of course, it&#8217;s a ugly hack that may fail with any new release of the software.</p>
<p>But, for personal use, that might make sense, sometimes.</p>
<p>And, of course, it&#8217;s not a generic solution. It must be specially coded for a specific application.</p>
<p>Anyway, I think that a &quot;generic&quot; MainWindowHandle function doesn&#8217;t make sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603293">
				<div id="div-comment-603293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603293">
			February 21, 2008 at 1:06 pm</a>		</div>

		<blockquote><p>
  DLL Hell .Net is worse than DLL Hell Classic.
</p></blockquote>
<p>Well, you see, it is like Plug and Play (PnP).</p>
<p>Wonderful when it works, a pain to fix if it doesn&#8217;t. That is why people have called it &quot;Plug and Pray&quot;. BTW, how does that sound as an analogy, Raymond?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603353">
				<div id="div-comment-603353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">???</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603353">
			February 21, 2008 at 2:59 pm</a>		</div>

		<p>@Yuhong Bao</p>
<p>What the heck are you talking about?</p>
<p>Are you even discussing this topic?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603363">
				<div id="div-comment-603363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603363">
			February 21, 2008 at 3:10 pm</a>		</div>

		<p>I was talking about one of the comments in this:</p>
<p><a href="http://blogs.msdn.com/oldnewthing/archive/2007/04/12/2093090.aspx" target=_new rel=nofollow rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/04/12/2093090.aspx</a></p>
<div class=post>[<i>In other words, &#8220;No, I&#8217;m not even talking about the topic.&#8221; You have a pattern of going off topic. That&#8217;s one of the reasons why I delete most of your comments. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603393">
				<div id="div-comment-603393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">name re-choired</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603393">
			February 21, 2008 at 8:55 pm</a>		</div>

		<p>Medinoc wrote: &quot;How could the Win2000 users do ?&quot;</p>
<p>Pretty sure you can:</p>
<p>&nbsp; #include &lt;process.h&gt;</p>
<p>and then:</p>
<p>&nbsp; int pid = _getpid();</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603453">
				<div id="div-comment-603453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603453">
			February 22, 2008 at 8:57 am</a>		</div>

		<p>@name re-choired:</p>
<p>How does that help?</p>
<p>We don&#8217;t want to get the process id of the current process, but of a process for which we&#8217;ve got a handle.</p>
<p>GetProcessId != GetCurrentProcessId.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603513">
				<div id="div-comment-603513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KenW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603513">
			February 22, 2008 at 11:53 am</a>		</div>

		<p>Yuhong Bao has obviously adopted this strategy to get around the &quot;Post is locked and accepts no new comments&quot; issue. Bad Yuhong Bao! Please stop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-603633">
				<div id="div-comment-603633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-603633">
			February 22, 2008 at 5:01 pm</a>		</div>

		<p>The window that has neither a parent or owner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-604633">
				<div id="div-comment-604633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080220-00/?p=23383#comment-604633">
			February 26, 2008 at 5:00 pm</a>		</div>

		<p>Ian Boyd: No, you need to re-read the last part of the article. &nbsp;Specifically:</p>
<p>&gt; There can be multiple top-level unowned windows in a process.</p>
<p>Since these windows are top-level, they have no parent. &nbsp;Since they&#8217;re unowned, they have no owner. &nbsp;That matches your criteria, but there can be more than one of these windows in a process (Raymond&#8217;s example: Explorer). &nbsp;So your method of mapping from a process to a window is still flawed.</p>
<p>(Hint: Your process can call CreateWindow as many times as you want [well, within reason, but certainly more than once], with whichever parameters you want. &nbsp;There is therefore *no way* to go from a process to a (single) window that&#8217;s always going to work. &nbsp;Any check you propose can be broken by certain sequences of calls to CreateWindow.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

