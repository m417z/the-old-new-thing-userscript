<html>
<head>
<title>Why did every Windows 3.0 DLL have an exported function called WEP?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why did every Windows 3.0 DLL have an exported function called WEP?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 19, 2018 / year-entry #213</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The Windows Exit Procedure.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
One of the quirks of Windows 3.0 was this
function called WEP,
which was exported by every DLL.
And yet if you looked at every DLL,
you'd see that the function did nothing
but return.
</p>
<p>
What's the deal with this function that everybody
has, but which does nothing?
</p>
<p>
WEP stands for Windows Exit Procedure.
Starting in Windows 3.0,
Windows would call a DLL's WEP function
with a single boolean parameter.
It called the WEP function with <code>FALSE</code>
immediately before unloading the DLL from memory,
and it called the WEP function with <code>TRUE</code>
immediately before shutting down.
Of course, the DLL's WEP function was called only
once per instance, because once you're unloaded,
you're not going to be around to receive
the shutdown notification.
</p>
<p>
Since the WEP function was called as part of the
unload or shutdown process,
you were extremely limited in what you could do.
The function itself had to be in a non-moveable
segment,
and the import entry needed to be in the
resident name table.
You can't call any function that might result
in a call to <code>Load&shy;Module</code>.
You can't call into another DLL at shutdown,
because the other DLL might have already
run its shutdown code.
</p>
<p>
In practice, everybody just returned without
doing anything.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20180919-00/?p=99775#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://blogs.msdn.microsoft.com/oldnewthing/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="4" aria-required="true"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" /></p>
<p class="comment-form-cookies-consent"><input id="wp-comment-cookies-consent" name="wp-comment-cookies-consent" type="checkbox" value="yes" /><label for="wp-comment-cookies-consent">Save my name, email, and website in this browser for the next time I comment.</label></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit btn btn-default" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='99775' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="a7e9620d69" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="65"/></p>			</form>
			</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-matteo even thread-even depth-1 parent" id="comment-1362205">
				<div id="div-comment-1362205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362205">
			September 19, 2018 at 7:36 am</a>		</div>

		<p>So essentially it was an ancestor of DllMain? Or was it already present and this was just to cover extra cases (which I guess it&#8217;s just &#8220;unload due to Windows exiting&#8221;)?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362205#respond' onclick='return addComment.moveForm( "div-comment-1362205", "1362205", "respond", "99775" )' aria-label='Reply to Matteo Italia'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip odd alt depth-2" id="comment-1362315">
				<div id="div-comment-1362315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362315">
			September 19, 2018 at 12:25 pm</a>		</div>

		<p>There was no DllMain, the 16 bit LibMain was simpler and it wasn&#8217;t called on unload. So by the looks of it, WEP was the equivalent of DllMain with DLL_PROCESS_DETACH.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362315#respond' onclick='return addComment.moveForm( "div-comment-1362315", "1362315", "respond", "99775" )' aria-label='Reply to Darran Rowe'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1362245">
				<div id="div-comment-1362245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362245">
			September 19, 2018 at 8:28 am</a>		</div>

		<p>Was there any example of a DLL that did something, and it was justified ?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362245#respond' onclick='return addComment.moveForm( "div-comment-1362245", "1362245", "respond", "99775" )' aria-label='Reply to xcomcmdr'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kirbyfcf2 odd alt thread-even depth-1 parent" id="comment-1362255">
				<div id="div-comment-1362255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Kirby+FC' rel='external nofollow' class='url'>Kirby FC</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362255">
			September 19, 2018 at 10:10 am</a>		</div>

		<p>&#8220;In practice, everybody just returned without doing anything.&#8221;</p>
<p>So, what was the purpose of this function?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362255#respond' onclick='return addComment.moveForm( "div-comment-1362255", "1362255", "respond", "99775" )' aria-label='Reply to Kirby FC'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1362265">
				<div id="div-comment-1362265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362265">
			September 19, 2018 at 10:18 am</a>		</div>

		<p>Some well intentioned attempt at giving a cleanup capability I am sure</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362265#respond' onclick='return addComment.moveForm( "div-comment-1362265", "1362265", "respond", "99775" )' aria-label='Reply to Yukkuri'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1362275">
				<div id="div-comment-1362275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362275">
			September 19, 2018 at 10:47 am</a>		</div>

		<p>It is much better to have a hook that you don&#8217;t need, than to lack a hook that you do need.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362275#respond' onclick='return addComment.moveForm( "div-comment-1362275", "1362275", "respond", "99775" )' aria-label='Reply to Kevin'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000300000b508c8a even depth-2" id="comment-1362285">
				<div id="div-comment-1362285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Cool.Boy' rel='external nofollow' class='url'>Cool.Boy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362285">
			September 19, 2018 at 10:54 am</a>		</div>

		<p>It seems initial intention was *noble* (to allow DLLs to do some cleanup before shutdown), as the limitations made it mostly unusable.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362285#respond' onclick='return addComment.moveForm( "div-comment-1362285", "1362285", "respond", "99775" )' aria-label='Reply to Cool.Boy'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip odd alt depth-2" id="comment-1362295">
				<div id="div-comment-1362295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362295">
			September 19, 2018 at 12:21 pm</a>		</div>

		<p>By the looks of it, it was the precursor DLL_PROCESS_DETACH part of the modern DllMain.<br />
From the SDK along with VC1.52, the DLL entrypoint was:<br />
BOOL CALLBACK LibMain(HINSTANCE hinst, UINT wDS, UINT cbHeap, DWORD unused);<br />
There wasn&#8217;t a DllMain as we know it.<br />
But even with a modern DllMain, you rarely put anything in the DLL_PROCESS_DETACH handler. It is there if you want something to happen during the DLL unload, but most of the time the defaults are good enough.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362295#respond' onclick='return addComment.moveForm( "div-comment-1362295", "1362295", "respond", "99775" )' aria-label='Reply to Darran Rowe'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1362305">
				<div id="div-comment-1362305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362305">
			September 19, 2018 at 12:23 pm</a>		</div>

		<p>Long time ago I planned on doing things like freeing icons and bitmaps there.</p>
<p>The documentation for Windows 3.0 said the stack was too short to call into USER. :(</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362305#respond' onclick='return addComment.moveForm( "div-comment-1362305", "1362305", "respond", "99775" )' aria-label='Reply to Joshua'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1 parent" id="comment-1362345">
				<div id="div-comment-1362345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362345">
			September 19, 2018 at 12:37 pm</a>		</div>

		<p>Trivia: in Windows 3.0, WEP was called with a small stack. In Windows 3.1 the stack was made much larger.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362345#respond' onclick='return addComment.moveForm( "div-comment-1362345", "1362345", "respond", "99775" )' aria-label='Reply to Yuhong Bao'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-yuhong-bao even depth-2" id="comment-1362565">
				<div id="div-comment-1362565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775#comment-1362565">
			September 20, 2018 at 2:03 pm</a>		</div>

		<p>Thinking about it, I wonder if part of why WEP was called on a small stack was real mode Windows that was limited to 640K.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180919-00/?p=99775&#038;replytocom=1362565#respond' onclick='return addComment.moveForm( "div-comment-1362565", "1362565", "respond", "99775" )' aria-label='Reply to Yuhong Bao'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

