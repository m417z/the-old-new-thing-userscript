<html>
<head>
<title>TEXT vs. _TEXT vs. _T, and UNICODE vs. _UNICODE</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>TEXT vs. _TEXT vs. _T, and UNICODE vs. _UNICODE</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 12, 2004 / year-entry #58</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>40</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">So what's with all these different ways of saying the same thing? There's actually a method behind the madness. The plain versions without the underscore affect the character set the Windows header files treat as default. So if you define UNICODE, then GetWindowText will map to GetWindowTextW instead of GetWindowTextA, for example. Similarly, the TEXT...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>So what's with all these different ways of saying the same thing?</p>
<p> There's actually a method behind the madness. </p>
<p> The plain versions without the underscore affect the character set the Windows header files treat as default.  So if you define UNICODE, then GetWindowText will map to GetWindowTextW instead of GetWindowTextA, for example. Similarly, the TEXT macro will map to L"..." instead of "...". </p>
<p> The versions with the underscore affect the character set the C runtime header files treat as default.  So if you define _UNICODE, then _tcslen will map to wcslen instead of strlen, for example. Similarly, the _TEXT macro will map to L"..." instead of "...". </p>
<p> What about _T?  Okay, I don't know about that one. Maybe it was just to save somebody some typing. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (40)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-142723">
				<div id="div-comment-142723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.atrevido.net' rel='external nofollow' class='url'>Michael Giagnocavo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142723">
			February 12, 2004 at 7:48 am</a>		</div>

		<p>Not related to this post in particular, but damn, your blog rocks.  Just thought I&#8217;d let you know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142743">
				<div id="div-comment-142743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142743">
			February 12, 2004 at 10:33 am</a>		</div>

		<p>Interesting&#8230; I didn&#8217;t actually know about the existence of the underscore _TEXT(), though I have a feeling that stuff I do defines both UNICODE and _UNICODE (so in the end it makes no difference, even if it is slightly incorrect).</p>
<p>I could be wrong (and it could well be a different ball game there &#8212; it often is) but I think MS stuff written for WinCE (sample/OEM-customisable sources) just uses TEXT() unilaterally. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142763">
				<div id="div-comment-142763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dotavery.com/blog' rel='external nofollow' class='url'>James Avery</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142763">
			February 12, 2004 at 11:01 am</a>		</div>

		<p>What about .Text? :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142783">
				<div id="div-comment-142783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142783">
			February 12, 2004 at 2:38 pm</a>		</div>

		<p>Don&#8217;t forget TCHAR vs. _TCHAR<br />
<br />And __T and __TEXT </p>
<p>I for one am glad for _T because it causes the least noise in the code. TEXT() is just too long for something that does so little. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142793">
				<div id="div-comment-142793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shane King</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142793">
			February 12, 2004 at 3:47 pm</a>		</div>

		<p>I personally loathe the way this is necessary in C and C++. Everything looks awful if all your strings have to have a L in front of them, and converting between narrow/wide strings is a mess.</p>
<p>I understand why it has to be that way, but damn, it&#8217;s not nice to work with.</p>
<p>The Delphi model is so much better. You just declare your string variables as being narrow or wide, and the compiler deals with the details. I consider that to also be superior to the Java and .NET model which says your strings will be wide whether you need it or not. I don&#8217;t speak any languages other than English, and hence most of the time my strings don&#8217;t need to either. ;)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142813">
				<div id="div-comment-142813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142813">
			February 12, 2004 at 4:02 pm</a>		</div>

		<p>.text is a section in your executable and object files which contains your executable code (under normal circumstances), and has nothing to do with string constants, which are store elsewhere. Just to be confusing.</p>
<p>Although I have a sneaking feeling that you know this already, judging by the smiley ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142823">
				<div id="div-comment-142823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142823">
			February 12, 2004 at 4:04 pm</a>		</div>

		<p>Shane: If C figured this out for you, it wouldn&#8217;t be C anymore. I noticed another blogs.msdn.com post on this very subject today, in fact (should be pretty easy to find).</p>
<p>C is C because it requires you to be explicit in many cases where other languages &quot;just figure it out&quot;. C programmers tend to like the fact that C compilers *have to be told* instead of just guessing.</p>
<p>That said, if you ignore most C compiler warnings, C is suddenly worse in this respect than anything else&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142853">
				<div id="div-comment-142853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eeye.com/html/Research/Upcoming/index.html' rel='external nofollow' class='url'>An appreciative reader</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142853">
			February 12, 2004 at 5:03 pm</a>		</div>

		<p>You really should have explained this with reference to &quot;the standard&quot; which you mentioned a few days ago: the runtime library mustn&#8217;t define a name that conflicts with user-space identifiers and the Windows headers cannot use a reserved name.</p>
<p>Before now, I&#8217;d not realised the difference and not seen it documented, instead assuming that the people employed by Microsoft were ignorant fools: that&#8217;s an easy assumption to make of a company that&#8217;s kicking out products like Win95 and VC6&#8230; of course, since those days, the company has made a dramatic turn-around on the C++ front, but other standards are still lacking and the intrinsic security of its products is pathetic: see <a target="_new" href="http://www.eeye.com/html/Research/Upcoming/index.html" rel="nofollow">http://www.eeye.com/html/Research/Upcoming/index.html</a> for todays revelation.</p>
<p>No wonder MS made front-page news in the UK with its last round of patching.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142863">
				<div id="div-comment-142863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142863">
			February 12, 2004 at 5:55 pm</a>		</div>

		<p>If you &quot;let the compiler decide&quot; then you no longer have C++. C++ is strongly typed for a reason, it prevents errors. If you want DWIM*, use Perl ;)</p>
<p>* Do What I Mean</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142883">
				<div id="div-comment-142883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Causey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142883">
			February 12, 2004 at 8:39 pm</a>		</div>

		<p>To say that the intrinsic security of Microsoft products is &quot;pathetic&quot; is unfounded; Linux products release more patches every year than the MS operating systems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142893">
				<div id="div-comment-142893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shane King</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142893">
			February 12, 2004 at 9:57 pm</a>		</div>

		<p>I said I know why C does what it does. I&#8217;m saying that I don&#8217;t like having to work with it. </p>
<p>With Delphi, there&#8217;s actually no guesswork involed. If you assign to a narrow string, generate a narrow string constant. Likewise for a wide string constant. If assigning narrow to wide, or wide to narrow, do the conversion. The compiler doesn&#8217;t guess anything, it follows a set of well defined rules. The program controls the decision, the compiler implements the busywork. As it should be!</p>
<p>My comment was more along the lines of wondering why .NET takes a step backwards from languages like Delphi. Delphi is an example of how narrow and wide strings can live together at no inconvenience to the programmer, unlike the inconvenience in C. That&#8217;s not a criticism of C. C doesn&#8217;t even have a string type, so it wouldn&#8217;t make much sense to have automatic string conversion. :)</p>
<p>As far the strongly typed comment, C++ isn&#8217;t strongly typed. A strongly typed language does&#8217;t allow an object to be forcibly cast to a type it&#8217;s not. It is however statically typed, which is what I assume you mean. It&#8217;s still an open question as to whether static typing is helpful or harmful to error prevention.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142903">
				<div id="div-comment-142903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142903">
			February 12, 2004 at 10:13 pm</a>		</div>

		<p>I think the theory behind .NET supporting only unicode is to make it impossible to write a program that cannot be internationalized.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142913">
				<div id="div-comment-142913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Serge Wautier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142913">
			February 13, 2004 at 12:38 am</a>		</div>

		<p>I get you Raymond, but I can&#8217;t resist to reply that using Unicode strings is only one among many steps to make your app world-ready.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142923">
				<div id="div-comment-142923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JimT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142923">
			February 13, 2004 at 12:48 am</a>		</div>

		<p>Not exactly comparing like for like there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142933">
				<div id="div-comment-142933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mayhoff [MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142933">
			February 13, 2004 at 2:51 am</a>		</div>

		<p>C++ ahh the language that became a language of cludges and fixes for crapy compilers and libraries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142943">
				<div id="div-comment-142943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142943">
			February 13, 2004 at 3:09 am</a>		</div>

		<p>Jim:</p>
<p>This is straying somewhat off-topic, but I&#8217;ll follow-up anyway&#8230;</p>
<p>The number of patches per year is a ludicrous metric to use to measure the security of a system. It could be argued either way that more patches ultimately means increased security.</p>
<p>In reality, there&#8217;s two metrics which actually matter: the time taken from problem report to public patch release, and the time between an exploit being released and public patch release.</p>
<p>I don&#8217;t know about the first metric in the Windows world, but judging by the fact that exploits are often already in the wild before patches are available (the second metric), it doesn&#8217;t look good. I&#8217;m not going to try and push an open vs. closed source debate, because this isn&#8217;t remotely the right forum for it, but one of the advantages of having so many disparate pairs of eyes looking over the sources is that problems get found quickly. It&#8217;s worth looking at the speed at which, for example, the Debian or FreeBSD security teams get fixes out after an issue is discovered. Times are typically measured in *hours*. The ASN.1 bug, in contrast, was (apparently) reported some time last year. Nobody can claim that this is acceptable.</p>
<p>This isn&#8217;t an anti-Microsoft bash, in case it appears as one. Everyone can do more to improve security, but a patch for a non-disclosed exploit needs to be out within 7 days, *at most*. As soon as that problem is exploited by someone with nefarious intent, you&#8217;ve got a problem, and you need to have the patches *already out there* by that point.</p>
<p>That is why people say that Linux and the BSDs are so secure compared to Windows. It has absolutely nothing to do with the sheer number of patches.</p>
<p>(Also, bear in mind that a Linux distribution often contains all the applications that you&#8217;d ever want to run on it &#8211; so the number of patches released over the course of a year is going to be huge compared to those released for an OS and a few associated applets)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142953">
				<div id="div-comment-142953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142953">
			February 13, 2004 at 3:27 am</a>		</div>

		<p>Shane King wrote:<br />
<br />&gt;I don&#8217;t speak any languages other than English,<br />
<br />&gt;and hence most of the time my strings don&#8217;t need<br />
<br />&gt;to either.</p>
<p>Your literal strings might not, but you never know what the user may want to enter. And then you will end up either (1) converting wide user input into (1a) local ANSI encoding, (1b) local OEM encoding, (1c) some hardcoded encoding like 1250, or (2) converting your narrow format string into a wide format. Neither of these alternatives looks good.</p>
<p>I have been working in Delphi. The fact that the whole VCL is ANSI, makes it nearly impossible to produce an application that will allow the user to enter text in any language of his choice.</p>
<p>Conversion from wide to narrow must not be done implicitly as it loses information. The original string may contain such pairs of characters (a, b) that for every narrow encoding E in the world at least one of {a, b} is not representable in E. Or the user might want to use an encoding different from the system default ANSI encoding. For example, in Russia the ANSI encoding is windows-1251, but it is considered bad style to send mail in windows-1251. Instead, mail is to be encoded in koi8-r (aka CP20866).</p>
<p>Conversion from narrow to wide also cannot be done implicitly as it requires additional information as to which encoding the original narrow string uses. It may (or may not) be the default ANSI encoding, if the string came from the GUI. It may (or may not) be the default OEM encoding, if the string came from console input. It may be any other encoding if the string came from a socket or a file.</p>
<p>Encodings are a pain in the backend, it’s time we all moved to one unified encoding (like UTF-8) for default, and formats that specify the encoding explicitly (like &lt;?xml version=&quot;1.0&quot; encoding=&quot;koi8-r&quot;?&gt;) for advanced uses where, for example, it would reduce network traffic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-142963">
				<div id="div-comment-142963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dimmick.demon.co.uk' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142963">
			February 13, 2004 at 3:36 am</a>		</div>

		<p>I&#8217;ll apply the counter-argument: ASN.1 is critical to protocols used by Exchange and Windows (2000 and later) domains, such as X.400, X.500, LDAP, and many others. A patch which caused these protocols to fail would wreck the IT infrastructure for many businesses. Therefore it&#8217;s more important to ensure that the patch is correct than for it to be released as soon as it&#8217;s complete. As long as the patch release is _timely_, I don&#8217;t care how long it takes to test.</p>
<p>I&#8217;m guessing here, but I suspect that the patch was _code-complete_ a long time ago. If an exploit _had_ been published, the patch could have been released at that time.</p>
<p>As we&#8217;ve seen recently, the publication of a patch seems to _lead_ to exploits in the Windows world.</p>
<p>I&#8217;ll admit that it sounds a lot like a game of chicken, but I believe it&#8217;s better to ensure that the software functions correctly for everybody when used in-spec, rather than to protect a small number of possible exploits. I&#8217;m not saying &#8216;don&#8217;t patch it&#8217; but I _am_ saying that both sides need to be considered and weighed carefully.</p>
<p>Oh yes, and the &#8216;many eyes&#8217; fallacy. Many eyes are only of value if those eyes are trained, and if they even exist &#8211; I&#8217;m not convinced that they do. I prefer my patches to be produced by trained, experienced developers who are familiar with the source code and its conventions, who are employed to produce the patches. I don&#8217;t care for J Random Hacker producing a claimed patch which breaks functionality I rely upon _and doesn&#8217;t fix the hole_.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142983">
				<div id="div-comment-142983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mayhoff [MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-142983">
			February 13, 2004 at 6:41 am</a>		</div>

		<p>C/C++, its no longer a language, its a MACRO programming language these days. How much of the code do you write is preprocessor? Alot I bet.</p>
<p>Thats whats wrong with the language and why the rest of the world moved on to better languages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-143003">
				<div id="div-comment-143003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Causey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-143003">
			February 13, 2004 at 7:18 am</a>		</div>

		<p>Mo:</p>
<p>By the second metric you mention, Windows is just fine.  Every (correct me if you can find data, please) major incident of Windows OS or tool hacking, including worms, in the past few years have taken advantage of an exploit for which patches were already available.  Period.  The fact that these patches were not deployed everywhere speaks to the difficulty of managing patches in Windows as well sa the ignorance of sysadmins, not to the quality of the underlying product.</p>
<p>As for &quot;patches for every concievable application&quot;, this sounds not unlike the criticisms people level at Microsoft for enabling too many products and features in their releases.</p>
<p>Jim (not an MS employee)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-143013">
				<div id="div-comment-143013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-143013">
			February 13, 2004 at 7:35 am</a>		</div>

		<p>&quot;Jack&quot;: I very much appreciate your comments but please change your handle and please remove &quot;MSFT&quot; since you aren&#8217;t actually a Microsoft employee as far as I can determine. This is your second warning.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-143043">
				<div id="div-comment-143043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-143043">
			February 13, 2004 at 8:09 am</a>		</div>

		<p>Jim:</p>
<p>My point was simply that the &quot;Linux vendors release more patches than Microsoft do, therefore Linux is more insecure&quot; metric is downright stupid, because it fails to take into account any reasons why there would, even with a minimal number of incidents, be significantly more patches released for one than the other.</p>
<p>Mike:</p>
<p>Then don&#8217;t deploy the patch. It&#8217;s then up to *you* to decide, and *you* can review the code of the patch (or pay somebody else to that you trust) if you want. Personally, I want patches from Microsoft as soon as they&#8217;re complete, *I* want to be in the position to decide whether it&#8217;s safe to install a patch on my system, I don&#8217;t want somebody else saying &quot;uh, well, we wrote the code months ago, but we&#8217;re not sure if it works yet&quot;.</p>
<p>Also, given the sheer amount of resources Microsoft have (and claim to have thrown at security), do you really think sitting on a buffer overrun fix for six months is justifiable?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-143083">
				<div id="div-comment-143083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Causey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-143083">
			February 13, 2004 at 8:57 am</a>		</div>

		<p>Mo:</p>
<p>I agree that the patch count metric is stupid, and I apologize for implying anything else.  My actual belief is that neither Linux/BSD/UNIX nor MS products are as secure as they can be, and that MS products take more than their share of the heat.</p>
<p>Microsoft is also in a tough position when it comes to releasing patches; if you attended the PDC in October, you know Microsoft is catching MASSIVE amounts of flack for releasing patches TOO often, and God help MS when a patch they releases breaks a production system.</p>
<p>I actually do think it&#8217;s justifiable to sit on a fix when it&#8217;s as fundamental as ASF.1; the sheer number of vectors by which this could be attacked demands it.  What if Microsoft released the patch as soon as somebody cranked it out, but the patch didn&#8217;t actually cover all vectors (due to insufficient testing)?  The announcement of the vulnerability would lead within days to exploits that would hurt even people that are patched.</p>
<p>I know people should test patches before deployment; I know people should stay patched.  MS can do more to make patches easier to apply and manage, but they can&#8217;t make their customers do the right thing.</p>
<p>Jim (not an MS employee)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-143353">
				<div id="div-comment-143353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-143353">
			February 13, 2004 at 4:24 pm</a>		</div>

		<p>Jim:</p>
<p>I agree with you almost 100% (wow)</p>
<p>Yes, they all suck. Personally, I mostly get sick of &quot;X is more secure than Y&quot; arguments, but this one bugged me for some reason.</p>
<p>I too think it&#8217;s justifiable to sit on a fix when it&#8217;s as fundamental as ASN.1, except for the fact that:</p>
<p>&#8211; Certain other platforms had remarkably similar vulnerabilities (which were patched) last year. The smart money would be on nefarious folks trying similar exploits against Windows, too.</p>
<p>&#8211; This was reported in July 2003. It&#8217;s now February 2004 &#8211; there&#8217;s &quot;sitting on&quot; a patch and there&#8217;s *sitting on a patch*. 7 months is just far too damned long!</p>
<p>Personally, I think the whinging about the number of patches MS are releasing is silly; although I suspect a certain proportion actually mean to complain about the number of problems that are having to be fixed, rather than the fixes themselves :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-143413">
				<div id="div-comment-143413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fuggles</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-143413">
			February 14, 2004 at 9:43 am</a>		</div>

		<p>How&#8217;s this?</p>
<p>// File 1.<br />
<br />#define UNICODE<br />
<br />#include &lt;windows.h&gt;<br />
<br />#include &lt;tchar.h&gt;</p>
<p>// TCHAR defined in &lt;windows.h&gt; based<br />
<br />// on UNICODE.<br />
<br />// sizeof(TCHAR) == 2</p>
<p>// File 2.<br />
<br />#define UNICODE<br />
<br />#include &lt;tchar.h&gt;<br />
<br />#include &lt;windows.h&gt;</p>
<p>// TCHAR defined in &lt;tchar.h&gt; based<br />
<br />// on _UNICODE.<br />
<br />// sizeof(TCHAR) == 1</p>
<p>So just changing the order of common includes can introduce hard to find bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-144893">
				<div id="div-comment-144893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jasondoucette.com/books/pw5/pw5errata.html' rel='external nofollow' class='url'>Anonymous</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-144893">
			February 16, 2004 at 9:05 pm</a>		</div>

		<p>Remarks on Chapter 2 &#8211; An Introduction to Unicode</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146073">
				<div id="div-comment-146073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://themnd.blogspot.com/2004_02_01_themnd_archive.html#107714064607491590' rel='external nofollow' class='url'>Anonymous</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-146073">
			February 18, 2004 at 2:55 pm</a>		</div>

		<p>The project have UNICODE defined so when today I reviewed this piece of code it looked wrong because the Find method as a character parameter that is not treated really as an unicode character. However it did compile well (and work too) under Visual C++ 6.  I still doesn&#8217;t understand why it didn&#8217;t require the L (or TEXT or _T) macro.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-149413">
				<div id="div-comment-149413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-149413">
			March 2, 2004 at 8:35 pm</a>		</div>

		<p>2/18/2004 2:55 PM Pingback/TrackBack:</p>
<p>&gt; I still doesn&#8217;t understand why it didn&#8217;t<br />
<br />&gt; require the L (or TEXT or _T) macro.</p>
<p>Me too.  So I looked at MSDN pages, and they&#8217;re broken too.  Both October 2001 since you mentioned VC++ 6, and October 2003.</p>
<p>October 2003, page CStringT::Find<br />
<br />ms-help://MS.MSDNQTR.2003OCT.1033/vclib/html/vclrfCStringTFind.htm</p>
<p>&gt; //typedef CStringT&lt; TCHAR, StrTraitATL&lt; TCHAR &gt; &gt; CAtlString;<br />
<br />&gt;<br />
<br />&gt; CAtlString s( &quot;abcdef&quot; );<br />
<br />&gt; _ASSERT( s.Find( &#8216;c&#8217; ) == 2 );<br />
<br />&gt; _ASSERT( s.Find( &quot;de&quot; ) == 3 );<br />
<br />&gt;<br />
<br />&gt; CAtlString str(&quot;The waves are still&quot;);<br />
<br />&gt; int n = str.Find(&#8216;e&#8217;, 5);<br />
<br />&gt; _ASSERT(n == 7);</p>
<p>Not a _T() to be seen.</p>
<p>October 2001, page CString::Find</p>
<p>&gt; // First example demonstrating<br />
<br />&gt; // CString::Find ( TCHAR ch )<br />
<br />&gt; CString s( &quot;abcdef&quot; );<br />
<br />&gt; ASSERT( s.Find( &#8216;c&#8217; ) == 2 );<br />
<br />&gt; ASSERT( s.Find( &quot;de&quot; ) == 3 );<br />
<br />&gt;<br />
<br />&gt; // Second example demonstrating<br />
<br />&gt; // CString::Find( TCHAR ch, int nStart )<br />
<br />&gt; CString str(&quot;The stars are aligned&quot;);<br />
<br />&gt; int n = str.Find(&#8216;e&#8217;, 5);<br />
<br />&gt; ASSERT(n == 12);</p>
<p>Not for all the _T() in China.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-149433">
				<div id="div-comment-149433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-149433">
			March 2, 2004 at 9:17 pm</a>		</div>

		<p>Because the numerical value of &#8216;x&#8217; is equal to the numerical value of L&#8217;x&#8217; so you get away with it.  This works only for characters below 0x80 though.</p>
<p>I suspect in the second and third cases that the program was compiled in ANSI, so _T() is the same as not saying anything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-149443">
				<div id="div-comment-149443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-149443">
			March 2, 2004 at 9:46 pm</a>		</div>

		<p>The cited MSDN pages recommend the use of TCHAR, to work regardless of Unicode vs. ANSI options, even though the example code puts it in comments instead of actual code.  It looks like MSDN is recommending that the arguments to the Find method be coded that way too, to work regardless of Unicode vs. ANSI options.  That is why the cited pages are broken.</p>
<p>You and I both suspect that the second and third cases, and I suspect the first case too, were only compiled in ANSI by MSDN&#8217;s testers/proofreaders.  This does not lessen the breakage in the cited MSDN pages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-149453">
				<div id="div-comment-149453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-149453">
			March 2, 2004 at 10:10 pm</a>		</div>

		<p>Okay I&#8217;m not familiar with this class so I went to look at the documentation and lo, this class supports constructing from either character set.  You don&#8217;t have to construct it from the character set of the underlying string.</p>
<p><a target="_new" href="http://msdn.microsoft.com/library/en-us/vclib/html/vclrfCStringTCStringT.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/vclib/html/vclrfCStringTCStringT.asp</a></p>
<p>CStringT(<br />
<br />   LPCWSTR pszSrc<br />
<br />);</p>
<p>CStringT(<br />
<br />   LPCSTR pszSrc<br />
<br />);</p>
<p>So there&#8217;s no bug. The code will compile fine either ANSI or UNICODE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-149753">
				<div id="div-comment-149753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-149753">
			March 3, 2004 at 5:27 pm</a>		</div>

		<p>OK, it looks like the bug was fixed in Visual Studio .NET.  But the examples still fail in Visual Studio 6, which is used by Pingback/Trackback and (except for personal experiments) myself.  MSDN editions which addressed Visual Studio 6 were defective in this way, though current MSDN editions which have the same example code can be considered valid for Visual Studio .NET.</p>
<p>On the other hand, it seems that a new bug was added in Visual Studio .NET.  According to the MSDN page which you cited, CStringT can construct a string from a single wide character:<br />
<br />&gt; CStringT(<br />
<br />&gt;    wchar_t ch,<br />
<br />&gt;    int nLength = 1<br />
<br />&gt; );<br />
<br />but cannot construct a string from a single ANSI character.  Visual Studio 6 went through a minor contortion to enable constructing a CString from a single char regardless of whether the compilation environment was ANSI or UNICODE.  (Though Visual Studio 6 couldn&#8217;t construct a CString from a single wide character in an ANSI compilation environment.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-149763">
				<div id="div-comment-149763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-149763">
			March 3, 2004 at 5:43 pm</a>		</div>

		<p>This is all very fascinating but note that I have no influence over what Visual Studio does. If you can find a blogger from the VS team maybe they can do something about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-149833">
				<div id="div-comment-149833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-149833">
			March 3, 2004 at 10:39 pm</a>		</div>

		<p>3/3/2004 5:43 PM Raymond Chen:<br />
<br />&gt; This is all very fascinating but note that I<br />
<br />&gt; have no influence over what Visual Studio<br />
<br />&gt; does.</p>
<p>You had said that you had interest and contacts in fixing the MSDN library, which in some circumstances would include the issue raised by Pingback/Trackback (for Visual Studio 6).  You investigated code in Visual Studio .NET and found a fix, which made the example code in MSDN become accurate.  The example code in MSDN at the time of Visual Studio 6 was inaccurate at the time of publication and remains that way, which I guess doesn&#8217;t interest you, it simply remains that way.</p>
<p>&gt; If you can find a blogger from the VS team<br />
<br />&gt; maybe they can do something about it. </p>
<p>Hmm, good idea.  By the way, about two months ago I reported a more immediately obvious bug in VS .NET, Microsoft&#8217;s PSS replied that localized versions of VS .NET 2003 English are different from North American versions of VS .NET 2003 English (I&#8217;m not sure which English or English version I have since it came in MSDN), and then PSS replied that MS does not honor the printed warranties which it distributes with MSDN subscriptions.  So you are right, a blog has a better chance.  By any chance can you point me to one?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-149843">
				<div id="div-comment-149843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-149843">
			March 3, 2004 at 11:08 pm</a>		</div>

		<p>My focus is on the core Platform SDK. I have influence over that. I do not have influence over other parts of MSDN, like the Visual Studio or .NET Framework documentation. A list of Microsoft bloggers with areas of expertise can be found on <a target="_new" href="http://blogs.gotdotnet.com/" rel="nofollow">http://blogs.gotdotnet.com/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-157993">
				<div id="div-comment-157993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ptbrunet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-157993">
			March 26, 2004 at 12:24 pm</a>		</div>

		<p>How do I get the CStringT doc for vc6 vs vc7 which is all I can find on msdn.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-195783">
				<div id="div-comment-195783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-195783">
			July 15, 2004 at 10:16 pm</a>		</div>

		<p>Commenting closes after two weeks. </p>
<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/02/21/77681.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/02/21/77681.aspx</a> </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-274943">
				<div id="div-comment-274943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/05/10/415991.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-274943">
			May 10, 2005 at 9:03 am</a>		</div>

		<p>Sucking a file off the disk while converting its character set.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453123">
				<div id="div-comment-453123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/12/14/1285437.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-453123">
			December 14, 2006 at 10:00 am</a>		</div>

		<p>This is where LVN_SETINFOTIP is used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-509943">
				<div id="div-comment-509943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.m-ri.de/index.php/2007/05/31/_unicode-versus-unicode-und-so-manches-eigentuemliche/' rel='external nofollow' class='url'>Martin&#8217;s Blog &raquo; _UNICODE versus UNICODE und so manches Eigent??mliche</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643#comment-509943">
			May 31, 2007 at 2:28 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blog.m-ri.de/index.php/2007/05/31/_unicode-versus-unicode-und-so-manches-eigentuemliche/" rel="nofollow">http://blog.m-ri.de/index.php/2007/05/31/_unicode-versus-unicode-und-so-manches-eigentuemliche/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

