<html>
<head>
<title>Our code needs to run on multiple platforms with different rules, so we follow none of them!</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Our code needs to run on multiple platforms with different rules, so we follow none of them!</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 1, 2011 / year-entry #286</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>27</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer was encountering sporadic crashes in their 64-bit application, and upon investigation, the problem was traced to a misaligned RSP register. We saw some time ago that the Windows x64 calling convention requires the RSP register to be 16-byte aligned. The customer traced the source of the misalignment to a third-party library they were...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer was encountering sporadic crashes in their 64-bit application, and upon investigation, the problem was traced to a misaligned RSP register. <a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/01/14/58579.aspx"> We saw some time ago</a> that <a href="http://msdn.microsoft.com/library/ew5tede7.aspx"> the Windows x64 calling convention requires the RSP register to be 16-byte aligned</a>.</p>
<p> The customer traced the source of the misalignment to a third-party library they were using. They contacted the vendor, who acknowledged that they were not following <a href="http://msdn.microsoft.com/library/7kcdt6fy.aspx"> the Windows x64 calling conventions</a>, but explained that their code needs to run on multiple x64 operating systems, and since each operating system has different calling conventions, they adhere to none of them! </p>
<p> I was kind of boggled by this remark. Yes, it's frustrating that different operating systems have different calling conventions, but that doesn't mean that you are welcome to ignore them. Every region of the world has different laws regarding the operation of motorized vehicles, but that doesn't mean "My truck driver has to drive through all these different jurisdictions with different rules, so he follows none of them!" </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (27)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-luigi-bruno even thread-even depth-1" id="comment-950573">
				<div id="div-comment-950573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Luigi+Bruno' rel='external nofollow' class='url'>Luigi Bruno</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950573">
			December 1, 2011 at 7:12 am</a>		</div>

		<p>The simplest solution! :-(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950593">
				<div id="div-comment-950593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">woodswan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950593">
			December 1, 2011 at 7:40 am</a>		</div>

		<p>Lucky that they had not invented their own convention! :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950603">
				<div id="div-comment-950603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">f0dder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950603">
			December 1, 2011 at 7:46 am</a>		</div>

		<p>&quot;Lucky that they had not invented their own convention! :-)&quot;</p>
<p>Custom conventions suck, but at least they&#39;re better than NO conventions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950613">
				<div id="div-comment-950613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950613">
			December 1, 2011 at 8:09 am</a>		</div>

		<p>I wrote such x64 code that didn&#39;t keep the stack aligned internally. Upon any exit from its own code, including any API calls, it realigned the stack however.</p>
<p>BTW, the internal calling convention was a register calling convention.</p>
<div class="post">[<i>Don&#39;t forget that exceptions count as &quot;exit from its own code&quot;, so if you take an exception while the stack is misaligned, you will crash the process (if you&#39;re lucky). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-950623">
				<div id="div-comment-950623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950623">
			December 1, 2011 at 10:12 am</a>		</div>

		<p>[Don&#39;t forget that exceptions count as &quot;exit from its own code&quot;, so if you take an exception while the stack is misaligned, you will crash the process (if you&#39;re lucky). -Raymond]</p>
<p>Well, generally between instructions the stack is aligned to 8 bytes but not necesarily 16 bytes.</p>
<div class="post">[<i>The Windows ABI for x64 specifies the conditions under which the stack may be temporarily unaligned. If you misalign the stack outside those special cases, then you have violated the ABI and the behavior is undefined. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950643">
				<div id="div-comment-950643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950643">
			December 1, 2011 at 10:50 am</a>		</div>

		<p>I don&#39;t see why you&#39;re boggled by the remark. It&#39;s annoying for this customer that he&#39;ll have to write an aligning wrapper, but (depending on programming language(s) / compiler(s) involved) it may be annoying for the library developer to do something about it too. Basically they&#39;re saying &lsquo;different platforms use different aligning and that sucks, so they get what they asked for: we&#39;ll ignore them; not our problem any more.&rsquo;</p>
<p>It may not make good commercial sense if you try to sell your library, but don&#39;t say it isn&#39;t understandable. When confronted with a &lsquo;manufactured&rsquo; problem usually your first instinct is to ignore it. It allows you to get work done and is easier than solving something pointless that you didn&#39;t ask for or pushing back against the problem (which in this case wouldn&#39;t have had any effect since Microsoft won&#39;t/can&#39;t change the ABI).</p>
<div class="post">[<i>In which case the vendor needs to stop advertising their library as Windows-compatible, because it isn&#39;t. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950653">
				<div id="div-comment-950653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950653">
			December 1, 2011 at 10:54 am</a>		</div>

		<p>[&#8230; so if you take an exception&#8230;. -Raymond]</p>
<p>I will not. All conditions that can fail are checked beforehand, including guard page.</p>
<p>Of course, if someone can inject an exception into another thread it will crash, but I don&#39;t think that&#39;s possible.</p>
<div class="post">[<i>Hardware interrupt? Intrusive profiling? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950663">
				<div id="div-comment-950663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/billy.oneal_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>billy.oneal@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950663">
			December 1, 2011 at 11:04 am</a>		</div>

		<p>@Joshua: Most SEH exceptions are raised by programming errors. I doubt that there is any way for you to check every possible exception handling case before hand. Obviously things like EXCEPTION_BREAKPOINT isn&#39;t something you can test for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950673">
				<div id="div-comment-950673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950673">
			December 1, 2011 at 11:31 am</a>		</div>

		<p>[In which case the vendor needs to stop advertising their library as Windows-compatible, because it isn&#39;t. -Raymond]</p>
<p>Wasn&#39;t mentioned in the story, and because of the no-brand-names policy there was no way to know. Even so, if it can be made to work using a wrapper (even if only in theory) it will be difficult to prove fraud in court. I think the customer should either switch to a different library or suck it up and start coding that wrapper. Or maybe send the cutest employee they can find out to plead with the library developer to do something about it.</p>
<p>In any case, your bogglement still boggles me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-950683">
				<div id="div-comment-950683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950683">
			December 1, 2011 at 11:34 am</a>		</div>

		<p>[Hardware interrupt? Intrusive profiling? -Raymond]</p>
<p>My understanding is that 16 byte alignment is only required for structured exception handling of non-leaf functions. Any intermediate RSP must be aligned. Hardware interrupts are not structured exceptions. Debugger breakpoints intercepted by an external debugger are not. Normal page faults are not, either. Only those page faults that are reflected back to the user mode as a C0000005 exception will invoke stack unwind procedure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950693">
				<div id="div-comment-950693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950693">
			December 1, 2011 at 11:37 am</a>		</div>

		<p>If I were the customer of that library, I would start thinking to myself, &quot;If they can&#39;t be bothered to get this right, what other problems am I going to find with this library?&quot; This would lead to other questions like, &quot;Are there any other libraries that do this properly?&quot;</p>
<p>If this were occurring because the customer was using an oddball language/platform, I wouldn&#39;t expect them to support it, but this is a major OS (and the customer is probably using a C derivative.) It&#39;s not a great idea for a vendor to basically tell the customer that they&#39;re too lazy to do things properly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950703">
				<div id="div-comment-950703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950703">
			December 1, 2011 at 12:04 pm</a>		</div>

		<p>@Anonymous Coward</p>
<p>If the vendor didn&#39;t claim that the library was Windows-compatible, then their response would have been &quot;We do not follow the Windows x64 calling convention because we do not support Windows&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950723">
				<div id="div-comment-950723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil (SM)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950723">
			December 1, 2011 at 12:21 pm</a>		</div>

		<p>&quot;Our code needs to be compatible with many x64 platforms. &nbsp;Therefore, it isn&#39;t!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-950733">
				<div id="div-comment-950733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950733">
			December 1, 2011 at 12:46 pm</a>		</div>

		<p>Certain requirements, like 16-byte, alignment, don&#39;t cause problems when they are followed if they don&#39;t have to be. &nbsp;If they have to be followed but aren&#39;t, that&#39;s a real problem. &nbsp;In other words, if there&#39;s a set of calling conventions that the library could folow, that would be great. &nbsp;It sounds like they didn&#39;t care enough to figure it out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950743">
				<div id="div-comment-950743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MikeCaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950743">
			December 1, 2011 at 2:49 pm</a>		</div>

		<p>Isn&#39;t this the sort of thing that you let the compiler figure out? Of course, if the problem exists in their hand-crafted assembly code, then having a well-behaving compiler won&#39;t help; you would need to get a well-behaving programmer too.</p>
<p>@Anonymous Coward: This isn&#39;t about fraud, it&#39;s about how computers have rules you need to follow when writing programs for them. If there does not exist a super-set of rules that satisfies each platform you wish to support, then you can either drop the offending platform, or create two versions.</p>
<p>(I am a .NET programmer, so I have no idea if there exists such a superset.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950783">
				<div id="div-comment-950783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950783">
			December 1, 2011 at 3:59 pm</a>		</div>

		<p>So the question is who actually compiled the library, the 3rd party vendor or the user? Did the user choose to use a source code library and compile it themselves on Win64 even though the vendor never specifically claimed compatibility?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950793">
				<div id="div-comment-950793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Hosken</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950793">
			December 1, 2011 at 4:20 pm</a>		</div>

		<p>The simile has an obvious workaround: drive the truck in international waters. Problem solved!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950803">
				<div id="div-comment-950803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950803">
			December 1, 2011 at 5:06 pm</a>		</div>

		<p>@alegr1</p>
<p>You are assuming here that the library vendor was only letting the stack get unaligned in leaf functions. Given the topic in general, and how humans are capable of amazing levels of stupidity, it is likely that a non leaf function was unaligned. At some point, an exception was thrown in a leaf function and caused the whole mess to die because the vendor wasn&#39;t following the Windows x64 ABI.</p>
<p>If it was a leaf function that was unaligned then there wouldn&#39;t be an entry about a certain vendor not following the ABI because that is explicitly allowed, so it had to be something much more stupid.</p>
<div class="post">[<i>As I recall, they had a non-aligned stack in a non-leaf function, and then a leaf function took an alignment fault. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-950823">
				<div id="div-comment-950823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950823">
			December 1, 2011 at 6:41 pm</a>		</div>

		<p>@Larry Hosken: Even if you drive in international waters, you&#39;re still subject to the law of country that your &quot;truck&quot; has registration at.</p>
<p>For all others talking about replacing the library, note that not all libraries have alternatives. Even libraries providing similarly functions may have subtle difference that are not quite obvious in the beginning, makes it really painful to move to the competitors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950833">
				<div id="div-comment-950833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh [msft]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950833">
			December 1, 2011 at 7:57 pm</a>		</div>

		<p>They probably have bigger problems than just alignment if they&#39;re writing x64 ASM code. You also have to use the correct prologue directives and epilogue forms if you want your code to unwind correctly in the event of a stackwalk or exception.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-950843">
				<div id="div-comment-950843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950843">
			December 1, 2011 at 7:57 pm</a>		</div>

		<p>Another horrible thing people do with x64 SEH:</p>
<p><a rel="nofollow" target="_new" href="http://factor-language.blogspot.com/2010/04/frame-based-structured-exception.html" rel="nofollow">factor-language.blogspot.com/&#8230;/frame-based-structured-exception.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950853">
				<div id="div-comment-950853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shan't say my name</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950853">
			December 1, 2011 at 8:37 pm</a>		</div>

		<p>Neil&#39;s comment was just perfect. &nbsp;I laughed out loud.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950963">
				<div id="div-comment-950963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950963">
			December 3, 2011 at 8:52 am</a>		</div>

		<p>It would be interesting to know why this &quot;invention&quot; was introduced in 64-bit windows when no other OS require it. It&#39;s neither a hardware restriction.</p>
<div class="post">[<i>Um, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/09/14/229387.aspx" rel="nofollow">x86 is the weirdo</a>. All non-x86 processors use table-based structured exception handling dispatch. It was introduced in 1992 for Alpha AXP, MIPS, and PowerPC. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950983">
				<div id="div-comment-950983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-950983">
			December 3, 2011 at 9:32 am</a>		</div>

		<p>@640k</p>
<p>The exception handling they chose for x64? While the setup is more awkward for it, it is easier to do at runtime and less likely to break by fpo or buffer overruns on the stack. It esentially has a list of stuff that you do to prepare for executing the function, so if it reverses the list then the stack and registers should be in the exact same state when exiting the function via an exception as it was in when it entered the function. (This assumes of course that nothing moronic was done in the function itself.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-951013">
				<div id="div-comment-951013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-951013">
			December 3, 2011 at 2:58 pm</a>		</div>

		<p>So does this third party library work on Windows x64 at all? &nbsp;Did the third party vendor test it on Windows x64, and did it work &quot;normally&quot; most of the time? &nbsp;Does it only crash under &quot;special&quot; conditions?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-951023">
				<div id="div-comment-951023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gechurch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-951023">
			December 3, 2011 at 9:49 pm</a>		</div>

		<p>@Neil SM &#8211; &quot;Our code needs to be compatible with many x64 platforms. &nbsp;Therefore, it isn&#39;t!&quot;</p>
<p>Lovely summary!</p>
<p>@Anonymous Coward</p>
<p>&quot;When confronted with a ‘manufactured’ problem usually your first instinct is to ignore it. It allows you to get work done and is easier than solving something pointless that you didn&#39;t ask for&#8230;&quot;</p>
<p>You&#39;ve got some boggling statements yourself! If your first instinct when you run into a problem is to ignore it, then I sincerely hope you&#39;re not a programmer. Or a builder. Or an engineer. Or architect, child-carer, miner, accountant&#8230; heck, I&#39;m hard-pressed to think of a single profession where your attitude doesn&#39;t scare the hell out of me. And do you honestly think it&#39;s acceptable for a vendor writing a code library to knowingly write out-of-spec code because it&#39;s just all too hard?</p>
<p>&quot;&#8230;it may be annoying for the library developer to do something about it too.&quot;</p>
<p>Programming is full of annoying problems. So are most jobs in fact&#8230; that&#39;s why people pay you for it.</p>
<p>&quot;&#8230;if it can be made to work using a wrapper (even if only in theory) it will be difficult to prove fraud in court.&quot;</p>
<p>Ignoring the fact that no-one is talking about fraud here, I find that an interesting point of view. If I buy a heater that doesn&#39;t meet the appropriate standards because it likes to randomly catch alight, are you saying that if I can (even in theory) rewire it to fix the problem that the maker of the heater is not liable for the problem? What about if it was a car instead of a heater? A plane? Do I, as a passenger on the flight, have the responsibility in your eyes to check over the engine to make sure it is safe before I board? Of course not&#8230; the responsibility lies with the manufacturer, just as it does in this code library case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-951143">
				<div id="div-comment-951143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff Davis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111201-00/?p=8993#comment-951143">
			December 5, 2011 at 8:25 am</a>		</div>

		<p>I am pretty sure there are many truck drivers who do exactly that.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

