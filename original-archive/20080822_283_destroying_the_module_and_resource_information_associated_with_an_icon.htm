<html>
<head>
<title>Destroying the module and resource information associated with an icon</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Destroying the module and resource information associated with an icon</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 22, 2008 / year-entry #284</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080822-00/?p=21133</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>0</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">We've seen that icons and cursors know where they came from, and the window manager uses this information when you ask it to change the size of an icon. But not all icons carry this information, only icons created by passing a HINSTANCE and a resource name. You can use this to your advantage if...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
We've seen that
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2008/08/20/8880062.aspx">
icons and cursors know where they came from</a>,
and the window manager uses this information when you ask it
to change the size of an icon.
But not all icons carry this information,
only icons created by passing a <code>HINSTANCE</code> and
a resource name.
</p>
<p>
You can use this to your advantage if you want to destroy
the module and resource information associated with an icon.
For example, the <code>CreateIconIndirect</code> function
creates an icon from raw bitmap information without reference
to an <code>HINSTANCE</code> or a resource name.
This allows you to create icons at runtime, but it also allows
you to create an icon that "throws away" the bonus information.
</p>
<pre>
HICON CopyIconWithoutResourceInfo(HICON hicoSrc)
{
  ICONINFO ii;
  HICON hico = NULL;
  if (GetIconInfo(hicoSrc, &amp;ii)) {
    hico = CreateIconIndirect(&amp;ii);
    if (ii.hbmMask) DeleteObject(ii.hbmMask);
    if (ii.hbmColor) DeleteObject(ii.hbmColor);
  }
  return hico;
}
</pre>
<p>
Now, throwing away this information is a desperation move,
because it prevents the window manager from using the original
resource information when resizing an icon,
resulting in ugly stretched icons.
</p>
<p>
You might even be throwing this information away by mistake.
For example, if your program is asked to produce an icon,
it's best if you load the icon with a function like
<code>LoadImage</code> because that records the bonus information;
if the caller decides to resize the icon, it can do so with the
<code>CopyImage</code> function while retaining full fidelity.
On the other hand, if you use a function like
<code>ExtractIcon</code> or <code>CreateIconFromResource</code>,
that will not have the bonus information, and any icon stretching
that takes place will end up looking pretty ugly.
</p>
<p>
[Raymond is currently away; this message was pre-recorded.]</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

