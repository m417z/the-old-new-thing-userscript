<html>
<head>
<title>Why an object cannot be its own enumerator</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why an object cannot be its own enumerator</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 22, 2004 / year-entry #110</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040322-00/?p=40143</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>3</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">I've seen people using the following cheat when forced to implement an enumerator: class MyClass : public IDataObject, public IEnumFORMATETC, ... { ... HRESULT EnumFormatEtc(DWORD dwDirection, IEnumFORMATETC** ppenumOut) { _dwDirection = dwDirection; Reset(); *ppenumOut = this; AddRef(); return S_OK; } }; Why create a separate enumerator object when you can just be your own enumerator?...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>I've seen people using the following cheat when
forced to implement an enumerator:</p>
<pre>
class MyClass :
  public IDataObject, public IEnumFORMATETC, ...
{
  ...
  HRESULT EnumFormatEtc(DWORD dwDirection,
                 IEnumFORMATETC** ppenumOut)
  {
    _dwDirection = dwDirection;
    Reset();
    *ppenumOut = this;
    AddRef();
    return S_OK;
  }
};
</pre>
<p>
Why create a separate enumerator object when you can
just be your own enumerator?  It's so much easier.
</p>
<p>
And it's wrong.
</p>
<p>
Consider what happens if two people try to enumerate
your formats at the same time:  The two enumerators
are really the same enumerator, so operations on one
will interfere with the other.
For example, consider this odd code fragment
(error checking deleted for expository purposes)
which looks to see if the data object exposes
the same data under multiple aspects:
</p>
<pre>
IDataObject *pdto = &lt;MyClass instance&gt;;

// Obtain two enumerators since we will run
// each one independently.

IEnumFORMATETC* penum1;
IEnumFORMATETC* penum2;
pdto-&gt;EnumFormatEtc(DATADIR_GET, &penum1);
pdto-&gt;EnumFormatEtc(DATADIR_GET, &penum2);

FORMATETC fe1, fe2;
while (penum1-&gt;Next(1, &fe1, NULL) == S_OK) {
  penum2-&gt;Reset(); // start a new pass
  while (penum2-&gt;Next(1, &fe2, NULL) == S_OK) {
    if (fe1.cfFormat == fe2.cfFormat &&
        cf1.dwAspect != cf2.dwAspect) {
        // found it!
    }
  }
}
penum1-&gt;Release();
penum2-&gt;Release();
</pre>
<p>
When the code does a <code>penum2-&gt;Reset()</code>, this also
inadvertently resets the first enumerator.
The loop runs through penum2 (which therefore also
runs through penum1), and when it's done, the enumerator
is left at the end of the list.
</p>
<p>
Then we loop back and call <code>penum1-&gt;Next()</code>,
which immediately returns failure since the inner loop
ran it to completion.
</p>
<p>Result: The loop fails to find anything
because the second enumerator corrupted the first.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-156843">
				<div id="div-comment-156843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dmitriy Zaslavskiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040322-00/?p=40143#comment-156843">
			March 22, 2004 at 2:51 pm</a>		</div>

		<p>Same issue pertains to .NET</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-156743">
				<div id="div-comment-156743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040322-00/?p=40143#comment-156743">
			March 22, 2004 at 7:16 am</a>		</div>

		<p>This mistake was made in the original OPC (OLE for Process Control) standard.  It didn&#8217;t cause too many problem since every client was given their own server instance.  However, it made it impossible for the same client to have more than one enumeration.  The work around was to create multiple server objects when a client needed multiple enums.</p>
<p>*sigh*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-156893">
				<div id="div-comment-156893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040322-00/?p=40143#comment-156893">
			March 22, 2004 at 9:41 pm</a>		</div>

		<p>One word: Whoops :)  Guess I&#8217;ve got to rewrite that class :)</p>
<p>Thanks Raymond.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

