<html>
<head>
<title>How do I preload a chunk of memory into a memory-mapped file?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I preload a chunk of memory into a memory-mapped file?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 25, 2016 / year-entry #43</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">PrefetchVirtualMemory will do this.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had a moderate-sized memory-mapped file (a few dozen
megabytes),
and they wanted to preload the entire file into memory
because their program accesses the contents of the file
non-sequentially, which means
the normal prefetcher cannot anticipate which page to preload.
They are forcing the pages to be preloaded by manually
walking through the file and touching every page.
They wanted to know if there was a better way of accomplishing this.
</p>
<p>
Windows 8 introduces the
<a HREF="https://msdn.microsoft.com/en-us/library/hh780543(v=vs.85).aspx">
<code>Prefetch&shy;Virtual&shy;Memory</code></a> function.
It allows you to request that specific sections of your application's
virtual address space be preloaded from disk.
By submitting a prefetch request,
the memory manager can issue block I/O reads in order to satisfy
the request, which is more efficient than reading each page one at a time
as you touch them.
</p>
<p>
Note that prefetching virtual memory is purely advisory.
The memory manager is free to ignore your request,
or to honor only parts of it.
</p>
<p>
The customer wrote back that
<code>Prefetch&shy;Virtual&shy;Memory</code></a> was
exactly what they needed.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-iboyd even thread-even depth-1 parent" id="comment-1228114">
				<div id="div-comment-1228114" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228114">
			February 25, 2016 at 7:07 am</a>		</div>

		<p>This is the kind of function that i wrack my brain trying to find a case where i can use it; just because its neat.</p>
<p>Premature optimization notwithstanding.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-2 parent" id="comment-1228171">
				<div id="div-comment-1228171" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228171">
			February 25, 2016 at 9:09 am</a>		</div>

		<p>A foxy browser reads some of its files in a background thread at startup to improve performance.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-3" id="comment-1228251">
				<div id="div-comment-1228251" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228251">
			February 25, 2016 at 7:46 pm</a>		</div>

		<p>A SQL server loads your most frequently used tables on start if the data size is bigger than the memory available to it.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1 parent" id="comment-1228121">
				<div id="div-comment-1228121" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228121">
			February 25, 2016 at 7:21 am</a>		</div>

		<p>With so many large corporate enterprises still on / planning to be on Windows 7 for a while, I hope the customer isn&#8217;t a building a business-line application.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1228141">
				<div id="div-comment-1228141" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PetriL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228141">
			February 25, 2016 at 7:52 am</a>		</div>

		<p>Since the function is purely a performance hint, calling it conditionally on Windows 8+ should have no functional difference, just a perf gain on newer systems. Of course there&#8217;s the test cost, but that would seem pretty minor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1228151">
				<div id="div-comment-1228151" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228151">
			February 25, 2016 at 8:25 am</a>		</div>

		<p>I guess there aren&#8217;t many business line applications that take performance seriously. Yes, performance is sometimes in the requirements (specially if you are replacing an older, sluggish application), but most of the times it is so low in the list you have to dig to find it. And if you try to justify a design decision basing it on performance, you either get a &#8220;who cares?&#8221; or a &#8220;spend your time in doing real work!&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dwalker-wk even depth-3 parent" id="comment-1228162">
				<div id="div-comment-1228162" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228162">
			February 25, 2016 at 9:07 am</a>		</div>

		<p>If you deliver a line-of-business application that performs horribly, the customer will very likely be unhappy.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-kirbyfcf2 odd alt depth-4" id="comment-1228191">
				<div id="div-comment-1228191" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Kirby+FC' rel='external nofollow' class='url'>Kirby FC</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228191">
			February 25, 2016 at 10:09 am</a>		</div>

		<p>Unfortunately, there are too many people who don&#8217;t care if the customer is unhappy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-4" id="comment-1228261">
				<div id="div-comment-1228261" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228261">
			February 25, 2016 at 11:44 pm</a>		</div>

		<p>The customer won&#8217;t usually be the one using the software, they usually don&#8217;t have too much respect for the lowly end users.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-4" id="comment-1228761">
				<div id="div-comment-1228761" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228761">
			March 2, 2016 at 5:11 am</a>		</div>

		<p>If you deliver a business line of application that performs horribly, the customer may have no alternative to go to.  I am amazed at how poor quality business software tends to be.  I used to think that software that cost six figures would be the best ever.  But, I found out that it&#8217;s usually actually worse quality than common off the shelf software.  I guess all that extra money goes into marketing and executive bonuses.  With little or no competition, these vendors have captive audiences.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1228181">
				<div id="div-comment-1228181" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228181">
			February 25, 2016 at 9:11 am</a>		</div>

		<p>It&#8217;s probably a server app.  We&#8217;re still on Win7 on the desktop, but we moved all our server apps to Server 2012r2 last year as part of our Server 2003 migration (we didn&#8217;t just move the Win2k3 stuff, we moved *everything* &#8211; so much fun).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1228201">
				<div id="div-comment-1228201" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">McBucket</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228201">
			February 25, 2016 at 11:11 am</a>		</div>

		<p>OK, so the customer does what developers do and have done since time immemorial: use the new way when you can (in this case, Win 8 and beyond) and use the old way when you must, Raymond said that the new way was better that the old way, but never said that the old way didn&#8217;t work.</p>
<p>But more to the point: &#8220;the customer wrote back that Prefetch¬≠Virtual¬≠Memory was exactly what they needed&#8221;, which means to me that they are targeting Win 8 and beyond.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1228232">
				<div id="div-comment-1228232" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160225-00/?p=93091#comment-1228232">
			February 25, 2016 at 6:13 pm</a>		</div>

		<p>Related functionality is MEM_RESET with VirtualAlloc.  Combined with PrefetchVirtualMemory, these give most of the functionality of POSIX madvise.</p>
<p>Windows has its own feature that POSIX doesn&#8217;t in the form of MEM_RESET_UNDO.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

