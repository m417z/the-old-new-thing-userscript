<html>
<head>
<title>The dialog manager, part 9: Custom accelerators in dialog boxes</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The dialog manager, part 9: Custom accelerators in dialog boxes</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 8, 2005 / year-entry #89</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050408-41/?p=35943</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>2</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Along lines similar to last time, you can also add custom accelerators to your dialog box. (In a sense, this is a generalization of custom navigation, since you can make your navigation keys be accelerators.) So let's use accelerators to navigate instead of picking off the keys manually. Our accelerator table might look like this:...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Along lines similar to
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/04/07/406012.aspx">
last time</a>,
you can also add custom accelerators to your
dialog box.  (In a sense, this is a generalization
of custom navigation, since you can make your
navigation keys be accelerators.)</p>
<p>
So let's use accelerators to navigate instead of picking
off the keys manually.
Our accelerator table might look like this:
</p>
<pre>
IDA_PROPSHEET ACCELERATORS
BEGIN
    VK_TAB      ,IDC_NEXTPAGE       ,VIRTKEY,CONTROL
    VK_TAB      ,IDC_PREVPAGE       ,VIRTKEY,CONTROL,SHIFT
END
</pre>
<p>
Here you can see my comma placement convention for tables.
I like to put commas at the far end of the field rather than
jamming it up against the last word in the column.
Doing this makes cut/paste a lot easier, since
you can cut a column and paste it somewhere else
without having to go back and twiddle all the commas.
</p>
<p>
Assuming you've loaded this accelerator table into
the variable "hacc", you can use that table in your
custom dialog loop:
</p>
<pre>
while (&lt;dialog still active&gt; &amp;&amp;
       GetMessage(&amp;msg, NULL, 0, 0, 0)) {
 <font COLOR=blue>if (!TranslateAccelerator(hdlg, hacc, &amp;msg) &amp;&amp;</font>
     !IsDialogMessage(hdlg, &amp;msg)) {
  TranslateMessage(&amp;msg);
  DispatchMessage(&amp;msg);
 }
}
</pre>
<p>
<a HREF="http://msdn.microsoft.com/library/en-us/winui/WinUI/WindowsUserInterface/UserInput/KeyboardAccelerators/KeyboardAcceleratorReference/KeyboardAcceleratorFunctions/TranslateAccelerator.asp">
The <code>TranslateAccelerator</code> function</a>
checks if the message matches any entries in the accelerator
table. If so, then it posts a <code>WM_COMMAND</code> message
to the window passed as its first parameter.
In our case, we pass the dialog box handle.
Not shown above is the <code>WM_COMMAND</code> handler in the
dialog box that responds to <code>IDC_NEXTPAGE</code>
and <code>IDC_PREVPAGE</code> by performing a navigation.
</p>
<p>
The same as last time, if you think there might be modeless
dialogs owned by this message loop, you will have to do
filtering so that you don't pick off somebody else's
navigation keys.
</p>
<pre>
while (&lt;dialog still active&gt; &amp;&amp;
       GetMessage(&amp;msg, NULL, 0, 0, 0)) {
 if (<font COLOR=blue>!((hdlg == msg.hwnd || IsChild(hdlg, msg.hwnd)) &amp;&amp;</font>
       !TranslateAccelerator(hdlg, hacc, &amp;msg)<font COLOR=blue>)</font> &amp;&amp;
     !IsDialogMessage(hdlg, &amp;msg)) {
  TranslateMessage(&amp;msg);
  DispatchMessage(&amp;msg);
 }
}
</pre>
<p>
Okay, I think that's enough of dialog boxes for now.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (2)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-269513">
				<div id="div-comment-269513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fran√ßois</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050408-41/?p=35943#comment-269513">
			April 9, 2005 at 2:55 pm</a>		</div>

		<p>My head certainly hurts. However I have one question (I hope this is not off topic) : what should we do about APCs in modal loops ? I have sometimes wanted to do something like what follows, but I do not have enough experience to decide if this is suicide or not.</p>
<p>//CTor<br />
<br />    m_hDummy = ::CreateEvent(NULL, FALSE, FALSE, NULL);</p>
<p>//Message loop :<br />
<br />while (&lt;dialog still active&gt;)<br />
<br />{<br />
<br />    //alertable wait on dummy handle until there are messages to process<br />
<br />    while(WAIT_IO_COMPLETION == ::MsgWaitForMultipleObjectsEx(1, &amp;m_hDummy, INFINITE, QS_ALLINPUT, MWMO_ALERTABLE))<br />
<br />    {<br />
<br />        //Process APCs and go back to sleep.<br />
<br />    }</p>
<p>    //Message handling.<br />
<br />    if(GetMessage(&amp;msg, NULL, 0, 0, 0)))<br />
<br />    {<br />
<br />        //Do your stuff<br />
<br />    }<br />
<br />}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269523">
				<div id="div-comment-269523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050408-41/?p=35943#comment-269523">
			April 10, 2005 at 11:51 pm</a>		</div>

		<p>Fracois, you definitely can do that.  Just be sure to structure your loop to pump messages while waiting on that handle. </p>
<p>while (-1 != (iRet = PeekMessage(..)))<br />
<br />{<br />
<br />  if (iRet)<br />
<br />  {<br />
<br />     // translate, dispatch, etc<br />
<br />  }<br />
<br />  else<br />
<br />  {<br />
<br />     MsgWaitForMultipleObjectsEx(&#8230;)<br />
<br />     // process here if the handle woke us up.<br />
<br />     // otherwise fall through to the PeekMessage<br />
<br />  }<br />
<br />}</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

