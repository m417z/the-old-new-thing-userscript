<html>
<head>
<title>Why doesn't Win32 give you the option of ignoring failures in DLL import resolution?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why doesn&#8217;t Win32 give you the option of ignoring failures in DLL import resolution?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 13, 2010 / year-entry #256</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Yuhong Bao asked, via the Suggestion Box, "Why not implement delay-loading by having a flag in the import entry specifying that Windows should mimic the Windows 3.1 behavior for resolving that import?" Okay, first we have to clear up the false assumptions in the question. The question assumes that Windows 3.1 had delay-loading functionality in the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Yuhong Bao asked, via the Suggestion Box, "<a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#1749702">Why not implement delay-loading by having a flag in the import entry specifying that Windows should mimic the Windows 3.1 behavior for resolving that import</a>?"</p>
<p> Okay, first we have to clear up the false assumptions in the question. </p>
<p> The question assumes that Windows&nbsp;3.1 had delay-loading functionality in the first place (functionality that Yuhong Bao would like added to Win32). Actually, Windows&nbsp;3.1 behavior did not have any delay-load functionality. If your module imported from another DLL in its import table, the target DLL was loaded when your module was loaded. There was no delay. The target DLL loaded at the same time your module did. </p>
<p> So there is no Windows&nbsp;3.1 delay-load behavior to mimic in the first place. </p>
<p> Okay, maybe the question really was, "Instead of failing to load the module, why not just let the module load, but <a href="http://blogs.msdn.com/oldnewthing/archive/2006/07/17/668284.aspx"> set the imported function pointers to a stub function that raises an error if you try to call it</a>, just like Windows&nbsp;3.1 did?" </p>
<p> Because it turns out that the Windows&nbsp;3.1 behavior <a href="http://blogs.msdn.com/oldnewthing/archive/2003/09/16/54938.aspx"> resulted in data loss and mystery crashes</a>. The Win32 design solved this problem by making failed imports fatal up front (a design principle known as <i>fail fast</i>), so you knew ahead of time that your program was not going to work rather than letting you run along and then watch it stop working at the worst possible time, and probably in a situation where the root cause is much harder to identify. (Mind you, it may stop working at the worst possible time for reasons the loader could not predict, but at least it stopped what it could.) </p>
<p> In other words, this was a situation the Win32 people thought about and made an explicit design decision that this is a situation they would actively not support. </p>
<p> Okay, but when Visual Studio was looking at how to add delay-load functionality, why didn't they implement it by changing the Win32 loader so that failed imports could be optionally marked as non-fatal? </p>
<p> Well, um, because the Visual Studio team doesn't work on Windows? </p>
<p> There's this feature you want to add. You can either add it to the linker so that all programs can take advantage of the feature on all versions of Windows, or you can add it to the operating system kernel, so that it works only on newer versions of Windows. If the feature had been added to the loader rather than the linker, application vendors would say, "Stupid Microsoft. I can't take advantage of this new feature because a large percentage of my customer base is still running the older operating system. Why couldn't they have added this feature to the linker, so it would work on all operating systems?" (You hear this complaint a lot. Any time a new version of Windows adds a feature, everybody demands that it be ported downlevel.) </p>
<p> Another way of looking at this is realizing that you're adding a feature to the operating system which applications can already do for themselves. Suppose you say, "Okay, when you call a function whose import could not be resolved, we will display a fatal application error." The response is going to be "But I don't want my application to display a fatal application error. I want you to call this error handler function instead, and the error handler will decide what to do about the error." Great, now you have to design an extensibility mechanism. And what if two DLLs each try to install different failed-imported-function handlers? </p>
<p> When you start at <a href="http://blogs.msdn.com/ericgu/archive/2004/01/12/57985.aspx"> minus 100 points</a>, saying, "Oh, this is not essential functionality. Applications can simulate it on their own just as easily, and with greater flexibility" does nothing to get you out of the hole. If anything, it digs you deeper into it. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-860423">
				<div id="div-comment-860423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The Doc.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860423">
			September 13, 2010 at 8:05 am</a>		</div>

		<p>And to implement this, use: LoadLibraryEx &amp; GetProcAddress.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-860443">
				<div id="div-comment-860443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860443">
			September 13, 2010 at 8:12 am</a>		</div>

		<p>What, you never heard of an application using a custom loader? &lt;ducks&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-860463">
				<div id="div-comment-860463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.koroirc.com/' rel='external nofollow' class='url'>Koro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860463">
			September 13, 2010 at 9:10 am</a>		</div>

		<p>If it had been added to the operating system by the first time delay-loading was thought of, sure, it would not have been usable for those who wants to be compatible with older OSes, but, as time passed, by now, it would be useable on all &quot;downlevels&quot; operating systems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-860493">
				<div id="div-comment-860493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860493">
			September 13, 2010 at 9:53 am</a>		</div>

		<p>Having done delay loading of dlls before Visual Studio added support for it, I have no sympathy for this guy. A base class to handle loading a DLL at first use is almost trivial and you get complete control over what happens when an import isn&#39;t found.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-860523">
				<div id="div-comment-860523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860523">
			September 13, 2010 at 10:08 am</a>		</div>

		<p>@Rob: You&#39;re right that it is simple if you&#39;re allowed to make source code modifications. &nbsp;With C++0x decltype it becomes almost trivial. &nbsp;The Visual Studio loader is, of course, much more complicated because it has to load only the functions actually called and do all its magic at link time or later so it works with third-party static libraries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-860533">
				<div id="div-comment-860533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860533">
			September 13, 2010 at 10:20 am</a>		</div>

		<p>I just wish that the system would give a more direct diagnostic of what the problem is when it fails to start a process due to a missing DLL import. Sometimes you do get a decent enough error message, but my recollection (dusty as it is, since this doesn&#39;t really happen too often) is that I&#39;d usually have to jump through some hoops to figure out which DLL and/or import was causing the problem &#8211; or that the problem was because of a missing DLL or import.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-860543">
				<div id="div-comment-860543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860543">
			September 13, 2010 at 11:25 am</a>		</div>

		<p>Interestingly .net is rather fault tolerant, similar to the Win 3.1 behavior. But I&#39;m not sure if this is by contract, or just an implementation detail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-860573">
				<div id="div-comment-860573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860573">
			September 13, 2010 at 1:26 pm</a>		</div>

		<p>BTW, I later found out about weak-linking on the Mac, which is pretty much exactly this, but as an option that is not enabled by default. Programs would test weak-linked procedure addresses to ensure they are not zero before calling them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-860603">
				<div id="div-comment-860603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860603">
			September 13, 2010 at 4:20 pm</a>		</div>

		<p>GLEW for OpenGL is a nice example of a mechanism for handling &quot;soft failure&quot; dyanmic loading. No special features needed in the Win32 loader or VC++ linker at all&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-860633">
				<div id="div-comment-860633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sukru</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860633">
			September 13, 2010 at 5:15 pm</a>		</div>

		<p>@W .Net does not load assemblies (.DLLs) unless they are actually used. (And it does not JIT a method until it&#39;s used either). That&#39;s a very good optimization on both loading time and memory used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-860643">
				<div id="div-comment-860643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Retro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860643">
			September 13, 2010 at 10:22 pm</a>		</div>

		<p>@Sukru &#8211; not if they are strongly-named (and not in the assembly cache) as far as I remember..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-860673">
				<div id="div-comment-860673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860673">
			September 14, 2010 at 3:28 am</a>		</div>

		<p>Why was Fred App even allowed to start on Windows 3.0? Surely if it needed functions only available on Windows 3.1 it should have been marked as requiring Windows 3.1 and then the problem would never have arisen.</p>
<div class="post">[<i>What an odd question. &quot;Why not stop making bugs?&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-860683">
				<div id="div-comment-860683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860683">
			September 14, 2010 at 3:42 am</a>		</div>

		<p>&quot;(You hear this complaint a lot. Any time a new version of Windows adds a feature, everybody demands that it be ported downlevel.)&quot;</p>
<p>This one is recent and funny:</p>
<p><a rel="nofollow" target="_new" href="http://tech.slashdot.org/story/10/09/12/2018229/IE9-Team-Says-Our-GPU-Acceleration-Is-Better-Than-Yours" rel="nofollow">tech.slashdot.org/&#8230;/IE9-Team-Says-Our-GPU-Acceleration-Is-Better-Than-Yours</a></p>
<p>If you read the comments on Slashdot and on the blog, the complaints range from &quot;why isn&#39;t this in XP?&quot; to &quot;Microsoft is destroying the web which should be platform-independent but this DirectX-acceleration doesn&#39;t work on Linux&quot;. As if it makes a difference for the web-designer if someday his pages will be rendered through DirectX.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-860663">
				<div id="div-comment-860663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100913-00/?p=12893#comment-860663">
			September 14, 2010 at 1:40 am</a>		</div>

		<p>Uhm&#8230; I though failed delay-loads *were* non-fatal in Win32&#8230; They raise a Win32 exception that can be caught and handled, or one can even use a callback function instead&#8230;</p>
<p>IIRC, only immediate loads are fail-fast.</p>
<div class="post">[<i>I think you missed the point of the article: Delay-loads are implemented by the linker, not the operating system. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

